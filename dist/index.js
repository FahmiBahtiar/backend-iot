var __create = Object.create;
var __getProtoOf = Object.getPrototypeOf;
var __defProp = Object.defineProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __toESM = (mod, isNodeMode, target) => {
  target = mod != null ? __create(__getProtoOf(mod)) : {};
  const to = isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target;
  for (let key of __getOwnPropNames(mod))
    if (!__hasOwnProp.call(to, key))
      __defProp(to, key, {
        get: () => mod[key],
        enumerable: true
      });
  return to;
};
var __commonJS = (cb, mod) => () => (mod || cb((mod = { exports: {} }).exports, mod), mod.exports);
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {
      get: all[name],
      enumerable: true,
      configurable: true,
      set: (newValue) => all[name] = () => newValue
    });
};

// node_modules/eventemitter3/index.js
var require_eventemitter3 = __commonJS((exports, module) => {
  var has = Object.prototype.hasOwnProperty;
  var prefix = "~";
  function Events() {
  }
  if (Object.create) {
    Events.prototype = Object.create(null);
    if (!new Events().__proto__)
      prefix = false;
  }
  function EE(fn, context, once) {
    this.fn = fn;
    this.context = context;
    this.once = once || false;
  }
  function addListener(emitter, event, fn, context, once) {
    if (typeof fn !== "function") {
      throw new TypeError("The listener must be a function");
    }
    var listener = new EE(fn, context || emitter, once), evt = prefix ? prefix + event : event;
    if (!emitter._events[evt])
      emitter._events[evt] = listener, emitter._eventsCount++;
    else if (!emitter._events[evt].fn)
      emitter._events[evt].push(listener);
    else
      emitter._events[evt] = [emitter._events[evt], listener];
    return emitter;
  }
  function clearEvent(emitter, evt) {
    if (--emitter._eventsCount === 0)
      emitter._events = new Events;
    else
      delete emitter._events[evt];
  }
  function EventEmitter() {
    this._events = new Events;
    this._eventsCount = 0;
  }
  EventEmitter.prototype.eventNames = function eventNames() {
    var names = [], events, name;
    if (this._eventsCount === 0)
      return names;
    for (name in events = this._events) {
      if (has.call(events, name))
        names.push(prefix ? name.slice(1) : name);
    }
    if (Object.getOwnPropertySymbols) {
      return names.concat(Object.getOwnPropertySymbols(events));
    }
    return names;
  };
  EventEmitter.prototype.listeners = function listeners(event) {
    var evt = prefix ? prefix + event : event, handlers = this._events[evt];
    if (!handlers)
      return [];
    if (handlers.fn)
      return [handlers.fn];
    for (var i = 0, l = handlers.length, ee = new Array(l);i < l; i++) {
      ee[i] = handlers[i].fn;
    }
    return ee;
  };
  EventEmitter.prototype.listenerCount = function listenerCount(event) {
    var evt = prefix ? prefix + event : event, listeners = this._events[evt];
    if (!listeners)
      return 0;
    if (listeners.fn)
      return 1;
    return listeners.length;
  };
  EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
    var evt = prefix ? prefix + event : event;
    if (!this._events[evt])
      return false;
    var listeners = this._events[evt], len = arguments.length, args, i;
    if (listeners.fn) {
      if (listeners.once)
        this.removeListener(event, listeners.fn, undefined, true);
      switch (len) {
        case 1:
          return listeners.fn.call(listeners.context), true;
        case 2:
          return listeners.fn.call(listeners.context, a1), true;
        case 3:
          return listeners.fn.call(listeners.context, a1, a2), true;
        case 4:
          return listeners.fn.call(listeners.context, a1, a2, a3), true;
        case 5:
          return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
        case 6:
          return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
      }
      for (i = 1, args = new Array(len - 1);i < len; i++) {
        args[i - 1] = arguments[i];
      }
      listeners.fn.apply(listeners.context, args);
    } else {
      var length = listeners.length, j;
      for (i = 0;i < length; i++) {
        if (listeners[i].once)
          this.removeListener(event, listeners[i].fn, undefined, true);
        switch (len) {
          case 1:
            listeners[i].fn.call(listeners[i].context);
            break;
          case 2:
            listeners[i].fn.call(listeners[i].context, a1);
            break;
          case 3:
            listeners[i].fn.call(listeners[i].context, a1, a2);
            break;
          case 4:
            listeners[i].fn.call(listeners[i].context, a1, a2, a3);
            break;
          default:
            if (!args)
              for (j = 1, args = new Array(len - 1);j < len; j++) {
                args[j - 1] = arguments[j];
              }
            listeners[i].fn.apply(listeners[i].context, args);
        }
      }
    }
    return true;
  };
  EventEmitter.prototype.on = function on(event, fn, context) {
    return addListener(this, event, fn, context, false);
  };
  EventEmitter.prototype.once = function once(event, fn, context) {
    return addListener(this, event, fn, context, true);
  };
  EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
    var evt = prefix ? prefix + event : event;
    if (!this._events[evt])
      return this;
    if (!fn) {
      clearEvent(this, evt);
      return this;
    }
    var listeners = this._events[evt];
    if (listeners.fn) {
      if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) {
        clearEvent(this, evt);
      }
    } else {
      for (var i = 0, events = [], length = listeners.length;i < length; i++) {
        if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) {
          events.push(listeners[i]);
        }
      }
      if (events.length)
        this._events[evt] = events.length === 1 ? events[0] : events;
      else
        clearEvent(this, evt);
    }
    return this;
  };
  EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
    var evt;
    if (event) {
      evt = prefix ? prefix + event : event;
      if (this._events[evt])
        clearEvent(this, evt);
    } else {
      this._events = new Events;
      this._eventsCount = 0;
    }
    return this;
  };
  EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
  EventEmitter.prototype.addListener = EventEmitter.prototype.on;
  EventEmitter.prefixed = prefix;
  EventEmitter.EventEmitter = EventEmitter;
  if (typeof module !== "undefined") {
    module.exports = EventEmitter;
  }
});

// node_modules/fast-decode-uri-component/index.js
var require_fast_decode_uri_component = __commonJS((exports, module) => {
  var UTF8_ACCEPT = 12;
  var UTF8_REJECT = 0;
  var UTF8_DATA = [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    4,
    4,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    6,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    8,
    7,
    7,
    10,
    9,
    9,
    9,
    11,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    12,
    0,
    0,
    0,
    0,
    24,
    36,
    48,
    60,
    72,
    84,
    96,
    0,
    12,
    12,
    12,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    24,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    24,
    24,
    24,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    24,
    24,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    48,
    48,
    48,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    48,
    48,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    48,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    127,
    63,
    63,
    63,
    0,
    31,
    15,
    15,
    15,
    7,
    7,
    7
  ];
  function decodeURIComponent2(uri) {
    var percentPosition = uri.indexOf("%");
    if (percentPosition === -1)
      return uri;
    var length = uri.length;
    var decoded = "";
    var last = 0;
    var codepoint = 0;
    var startOfOctets = percentPosition;
    var state = UTF8_ACCEPT;
    while (percentPosition > -1 && percentPosition < length) {
      var high = hexCodeToInt(uri[percentPosition + 1], 4);
      var low = hexCodeToInt(uri[percentPosition + 2], 0);
      var byte = high | low;
      var type3 = UTF8_DATA[byte];
      state = UTF8_DATA[256 + state + type3];
      codepoint = codepoint << 6 | byte & UTF8_DATA[364 + type3];
      if (state === UTF8_ACCEPT) {
        decoded += uri.slice(last, startOfOctets);
        decoded += codepoint <= 65535 ? String.fromCharCode(codepoint) : String.fromCharCode(55232 + (codepoint >> 10), 56320 + (codepoint & 1023));
        codepoint = 0;
        last = percentPosition + 3;
        percentPosition = startOfOctets = uri.indexOf("%", last);
      } else if (state === UTF8_REJECT) {
        return null;
      } else {
        percentPosition += 3;
        if (percentPosition < length && uri.charCodeAt(percentPosition) === 37)
          continue;
        return null;
      }
    }
    return decoded + uri.slice(last);
  }
  var HEX = {
    "0": 0,
    "1": 1,
    "2": 2,
    "3": 3,
    "4": 4,
    "5": 5,
    "6": 6,
    "7": 7,
    "8": 8,
    "9": 9,
    a: 10,
    A: 10,
    b: 11,
    B: 11,
    c: 12,
    C: 12,
    d: 13,
    D: 13,
    e: 14,
    E: 14,
    f: 15,
    F: 15
  };
  function hexCodeToInt(c, shift) {
    var i = HEX[c];
    return i === undefined ? 255 : i << shift;
  }
  module.exports = decodeURIComponent2;
});

// node_modules/fast-querystring/lib/parse.js
var require_parse = __commonJS((exports, module) => {
  var fastDecode = require_fast_decode_uri_component();
  var plusRegex = /\+/g;
  var Empty = function() {
  };
  Empty.prototype = Object.create(null);
  function parse3(input) {
    const result = new Empty;
    if (typeof input !== "string") {
      return result;
    }
    let inputLength = input.length;
    let key = "";
    let value2 = "";
    let startingIndex = -1;
    let equalityIndex = -1;
    let shouldDecodeKey = false;
    let shouldDecodeValue = false;
    let keyHasPlus = false;
    let valueHasPlus = false;
    let hasBothKeyValuePair = false;
    let c = 0;
    for (let i = 0;i < inputLength + 1; i++) {
      c = i !== inputLength ? input.charCodeAt(i) : 38;
      if (c === 38) {
        hasBothKeyValuePair = equalityIndex > startingIndex;
        if (!hasBothKeyValuePair) {
          equalityIndex = i;
        }
        key = input.slice(startingIndex + 1, equalityIndex);
        if (hasBothKeyValuePair || key.length > 0) {
          if (keyHasPlus) {
            key = key.replace(plusRegex, " ");
          }
          if (shouldDecodeKey) {
            key = fastDecode(key) || key;
          }
          if (hasBothKeyValuePair) {
            value2 = input.slice(equalityIndex + 1, i);
            if (valueHasPlus) {
              value2 = value2.replace(plusRegex, " ");
            }
            if (shouldDecodeValue) {
              value2 = fastDecode(value2) || value2;
            }
          }
          const currentValue = result[key];
          if (currentValue === undefined) {
            result[key] = value2;
          } else {
            if (currentValue.pop) {
              currentValue.push(value2);
            } else {
              result[key] = [currentValue, value2];
            }
          }
        }
        value2 = "";
        startingIndex = i;
        equalityIndex = i;
        shouldDecodeKey = false;
        shouldDecodeValue = false;
        keyHasPlus = false;
        valueHasPlus = false;
      } else if (c === 61) {
        if (equalityIndex <= startingIndex) {
          equalityIndex = i;
        } else {
          shouldDecodeValue = true;
        }
      } else if (c === 43) {
        if (equalityIndex > startingIndex) {
          valueHasPlus = true;
        } else {
          keyHasPlus = true;
        }
      } else if (c === 37) {
        if (equalityIndex > startingIndex) {
          shouldDecodeValue = true;
        } else {
          shouldDecodeKey = true;
        }
      }
    }
    return result;
  }
  module.exports = parse3;
});

// node_modules/fast-querystring/lib/internals/querystring.js
var require_querystring = __commonJS((exports, module) => {
  var hexTable = Array.from({ length: 256 }, (_, i) => "%" + ((i < 16 ? "0" : "") + i.toString(16)).toUpperCase());
  var noEscape = new Int8Array([
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    0,
    0,
    1,
    1,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    1,
    0
  ]);
  function encodeString(str) {
    const len = str.length;
    if (len === 0)
      return "";
    let out = "";
    let lastPos = 0;
    let i = 0;
    outer:
      for (;i < len; i++) {
        let c = str.charCodeAt(i);
        while (c < 128) {
          if (noEscape[c] !== 1) {
            if (lastPos < i)
              out += str.slice(lastPos, i);
            lastPos = i + 1;
            out += hexTable[c];
          }
          if (++i === len)
            break outer;
          c = str.charCodeAt(i);
        }
        if (lastPos < i)
          out += str.slice(lastPos, i);
        if (c < 2048) {
          lastPos = i + 1;
          out += hexTable[192 | c >> 6] + hexTable[128 | c & 63];
          continue;
        }
        if (c < 55296 || c >= 57344) {
          lastPos = i + 1;
          out += hexTable[224 | c >> 12] + hexTable[128 | c >> 6 & 63] + hexTable[128 | c & 63];
          continue;
        }
        ++i;
        if (i >= len) {
          throw new Error("URI malformed");
        }
        const c2 = str.charCodeAt(i) & 1023;
        lastPos = i + 1;
        c = 65536 + ((c & 1023) << 10 | c2);
        out += hexTable[240 | c >> 18] + hexTable[128 | c >> 12 & 63] + hexTable[128 | c >> 6 & 63] + hexTable[128 | c & 63];
      }
    if (lastPos === 0)
      return str;
    if (lastPos < len)
      return out + str.slice(lastPos);
    return out;
  }
  module.exports = { encodeString };
});

// node_modules/fast-querystring/lib/stringify.js
var require_stringify = __commonJS((exports, module) => {
  var { encodeString } = require_querystring();
  function getAsPrimitive(value2) {
    const type3 = typeof value2;
    if (type3 === "string") {
      return encodeString(value2);
    } else if (type3 === "bigint") {
      return value2.toString();
    } else if (type3 === "boolean") {
      return value2 ? "true" : "false";
    } else if (type3 === "number" && Number.isFinite(value2)) {
      return value2 < 1000000000000000000000 ? "" + value2 : encodeString("" + value2);
    }
    return "";
  }
  function stringify(input) {
    let result = "";
    if (input === null || typeof input !== "object") {
      return result;
    }
    const separator = "&";
    const keys = Object.keys(input);
    const keyLength = keys.length;
    let valueLength = 0;
    for (let i = 0;i < keyLength; i++) {
      const key = keys[i];
      const value2 = input[key];
      const encodedKey = encodeString(key) + "=";
      if (i) {
        result += separator;
      }
      if (Array.isArray(value2)) {
        valueLength = value2.length;
        for (let j = 0;j < valueLength; j++) {
          if (j) {
            result += separator;
          }
          result += encodedKey;
          result += getAsPrimitive(value2[j]);
        }
      } else {
        result += encodedKey;
        result += getAsPrimitive(value2);
      }
    }
    return result;
  }
  module.exports = stringify;
});

// node_modules/fast-querystring/lib/index.js
var require_lib = __commonJS((exports, module) => {
  var parse3 = require_parse();
  var stringify = require_stringify();
  var fastQuerystring = {
    parse: parse3,
    stringify
  };
  module.exports = fastQuerystring;
  module.exports.default = fastQuerystring;
  module.exports.parse = parse3;
  module.exports.stringify = stringify;
});

// node_modules/lodash.clonedeep/index.js
var require_lodash = __commonJS((exports, module) => {
  var LARGE_ARRAY_SIZE = 200;
  var HASH_UNDEFINED = "__lodash_hash_undefined__";
  var MAX_SAFE_INTEGER = 9007199254740991;
  var argsTag = "[object Arguments]";
  var arrayTag = "[object Array]";
  var boolTag = "[object Boolean]";
  var dateTag = "[object Date]";
  var errorTag = "[object Error]";
  var funcTag = "[object Function]";
  var genTag = "[object GeneratorFunction]";
  var mapTag = "[object Map]";
  var numberTag = "[object Number]";
  var objectTag = "[object Object]";
  var promiseTag = "[object Promise]";
  var regexpTag = "[object RegExp]";
  var setTag = "[object Set]";
  var stringTag = "[object String]";
  var symbolTag = "[object Symbol]";
  var weakMapTag = "[object WeakMap]";
  var arrayBufferTag = "[object ArrayBuffer]";
  var dataViewTag = "[object DataView]";
  var float32Tag = "[object Float32Array]";
  var float64Tag = "[object Float64Array]";
  var int8Tag = "[object Int8Array]";
  var int16Tag = "[object Int16Array]";
  var int32Tag = "[object Int32Array]";
  var uint8Tag = "[object Uint8Array]";
  var uint8ClampedTag = "[object Uint8ClampedArray]";
  var uint16Tag = "[object Uint16Array]";
  var uint32Tag = "[object Uint32Array]";
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
  var reFlags = /\w*$/;
  var reIsHostCtor = /^\[object .+?Constructor\]$/;
  var reIsUint = /^(?:0|[1-9]\d*)$/;
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
  var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
  var freeSelf = typeof self == "object" && self && self.Object === Object && self;
  var root = freeGlobal || freeSelf || Function("return this")();
  var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
  var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  function addMapEntry(map3, pair) {
    map3.set(pair[0], pair[1]);
    return map3;
  }
  function addSetEntry(set2, value2) {
    set2.add(value2);
    return set2;
  }
  function arrayEach(array3, iteratee) {
    var index = -1, length = array3 ? array3.length : 0;
    while (++index < length) {
      if (iteratee(array3[index], index, array3) === false) {
        break;
      }
    }
    return array3;
  }
  function arrayPush(array3, values) {
    var index = -1, length = values.length, offset = array3.length;
    while (++index < length) {
      array3[offset + index] = values[index];
    }
    return array3;
  }
  function arrayReduce(array3, iteratee, accumulator, initAccum) {
    var index = -1, length = array3 ? array3.length : 0;
    if (initAccum && length) {
      accumulator = array3[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array3[index], index, array3);
    }
    return accumulator;
  }
  function baseTimes(n, iteratee) {
    var index = -1, result = Array(n);
    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }
  function getValue(object3, key) {
    return object3 == null ? undefined : object3[key];
  }
  function isHostObject(value2) {
    var result = false;
    if (value2 != null && typeof value2.toString != "function") {
      try {
        result = !!(value2 + "");
      } catch (e) {
      }
    }
    return result;
  }
  function mapToArray(map3) {
    var index = -1, result = Array(map3.size);
    map3.forEach(function(value2, key) {
      result[++index] = [key, value2];
    });
    return result;
  }
  function overArg(func, transform4) {
    return function(arg) {
      return func(transform4(arg));
    };
  }
  function setToArray(set2) {
    var index = -1, result = Array(set2.size);
    set2.forEach(function(value2) {
      result[++index] = value2;
    });
    return result;
  }
  var arrayProto = Array.prototype;
  var funcProto = Function.prototype;
  var objectProto = Object.prototype;
  var coreJsData = root["__core-js_shared__"];
  var maskSrcKey = function() {
    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
    return uid ? "Symbol(src)_1." + uid : "";
  }();
  var funcToString = funcProto.toString;
  var hasOwnProperty = objectProto.hasOwnProperty;
  var objectToString = objectProto.toString;
  var reIsNative = RegExp("^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
  var Buffer2 = moduleExports ? root.Buffer : undefined;
  var Symbol3 = root.Symbol;
  var Uint8Array3 = root.Uint8Array;
  var getPrototype = overArg(Object.getPrototypeOf, Object);
  var objectCreate = Object.create;
  var propertyIsEnumerable = objectProto.propertyIsEnumerable;
  var splice = arrayProto.splice;
  var nativeGetSymbols = Object.getOwnPropertySymbols;
  var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : undefined;
  var nativeKeys = overArg(Object.keys, Object);
  var DataView2 = getNative(root, "DataView");
  var Map2 = getNative(root, "Map");
  var Promise3 = getNative(root, "Promise");
  var Set5 = getNative(root, "Set");
  var WeakMap2 = getNative(root, "WeakMap");
  var nativeCreate = getNative(Object, "create");
  var dataViewCtorString = toSource(DataView2);
  var mapCtorString = toSource(Map2);
  var promiseCtorString = toSource(Promise3);
  var setCtorString = toSource(Set5);
  var weakMapCtorString = toSource(WeakMap2);
  var symbolProto = Symbol3 ? Symbol3.prototype : undefined;
  var symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
  function Hash3(entries) {
    var index = -1, length = entries ? entries.length : 0;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }
  function hashClear() {
    this.__data__ = nativeCreate ? nativeCreate(null) : {};
  }
  function hashDelete(key) {
    return this.has(key) && delete this.__data__[key];
  }
  function hashGet(key) {
    var data = this.__data__;
    if (nativeCreate) {
      var result = data[key];
      return result === HASH_UNDEFINED ? undefined : result;
    }
    return hasOwnProperty.call(data, key) ? data[key] : undefined;
  }
  function hashHas(key) {
    var data = this.__data__;
    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
  }
  function hashSet(key, value2) {
    var data = this.__data__;
    data[key] = nativeCreate && value2 === undefined ? HASH_UNDEFINED : value2;
    return this;
  }
  Hash3.prototype.clear = hashClear;
  Hash3.prototype["delete"] = hashDelete;
  Hash3.prototype.get = hashGet;
  Hash3.prototype.has = hashHas;
  Hash3.prototype.set = hashSet;
  function ListCache(entries) {
    var index = -1, length = entries ? entries.length : 0;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }
  function listCacheClear() {
    this.__data__ = [];
  }
  function listCacheDelete(key) {
    var data = this.__data__, index = assocIndexOf(data, key);
    if (index < 0) {
      return false;
    }
    var lastIndex = data.length - 1;
    if (index == lastIndex) {
      data.pop();
    } else {
      splice.call(data, index, 1);
    }
    return true;
  }
  function listCacheGet(key) {
    var data = this.__data__, index = assocIndexOf(data, key);
    return index < 0 ? undefined : data[index][1];
  }
  function listCacheHas(key) {
    return assocIndexOf(this.__data__, key) > -1;
  }
  function listCacheSet(key, value2) {
    var data = this.__data__, index = assocIndexOf(data, key);
    if (index < 0) {
      data.push([key, value2]);
    } else {
      data[index][1] = value2;
    }
    return this;
  }
  ListCache.prototype.clear = listCacheClear;
  ListCache.prototype["delete"] = listCacheDelete;
  ListCache.prototype.get = listCacheGet;
  ListCache.prototype.has = listCacheHas;
  ListCache.prototype.set = listCacheSet;
  function MapCache(entries) {
    var index = -1, length = entries ? entries.length : 0;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }
  function mapCacheClear() {
    this.__data__ = {
      hash: new Hash3,
      map: new (Map2 || ListCache),
      string: new Hash3
    };
  }
  function mapCacheDelete(key) {
    return getMapData(this, key)["delete"](key);
  }
  function mapCacheGet(key) {
    return getMapData(this, key).get(key);
  }
  function mapCacheHas(key) {
    return getMapData(this, key).has(key);
  }
  function mapCacheSet(key, value2) {
    getMapData(this, key).set(key, value2);
    return this;
  }
  MapCache.prototype.clear = mapCacheClear;
  MapCache.prototype["delete"] = mapCacheDelete;
  MapCache.prototype.get = mapCacheGet;
  MapCache.prototype.has = mapCacheHas;
  MapCache.prototype.set = mapCacheSet;
  function Stack(entries) {
    this.__data__ = new ListCache(entries);
  }
  function stackClear() {
    this.__data__ = new ListCache;
  }
  function stackDelete(key) {
    return this.__data__["delete"](key);
  }
  function stackGet(key) {
    return this.__data__.get(key);
  }
  function stackHas(key) {
    return this.__data__.has(key);
  }
  function stackSet(key, value2) {
    var cache = this.__data__;
    if (cache instanceof ListCache) {
      var pairs = cache.__data__;
      if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
        pairs.push([key, value2]);
        return this;
      }
      cache = this.__data__ = new MapCache(pairs);
    }
    cache.set(key, value2);
    return this;
  }
  Stack.prototype.clear = stackClear;
  Stack.prototype["delete"] = stackDelete;
  Stack.prototype.get = stackGet;
  Stack.prototype.has = stackHas;
  Stack.prototype.set = stackSet;
  function arrayLikeKeys(value2, inherited) {
    var result = isArray(value2) || isArguments(value2) ? baseTimes(value2.length, String) : [];
    var length = result.length, skipIndexes = !!length;
    for (var key in value2) {
      if ((inherited || hasOwnProperty.call(value2, key)) && !(skipIndexes && (key == "length" || isIndex(key, length)))) {
        result.push(key);
      }
    }
    return result;
  }
  function assignValue(object3, key, value2) {
    var objValue = object3[key];
    if (!(hasOwnProperty.call(object3, key) && eq(objValue, value2)) || value2 === undefined && !(key in object3)) {
      object3[key] = value2;
    }
  }
  function assocIndexOf(array3, key) {
    var length = array3.length;
    while (length--) {
      if (eq(array3[length][0], key)) {
        return length;
      }
    }
    return -1;
  }
  function baseAssign(object3, source) {
    return object3 && copyObject(source, keys(source), object3);
  }
  function baseClone(value2, isDeep, isFull, customizer, key, object3, stack) {
    var result;
    if (customizer) {
      result = object3 ? customizer(value2, key, object3, stack) : customizer(value2);
    }
    if (result !== undefined) {
      return result;
    }
    if (!isObject2(value2)) {
      return value2;
    }
    var isArr = isArray(value2);
    if (isArr) {
      result = initCloneArray(value2);
      if (!isDeep) {
        return copyArray(value2, result);
      }
    } else {
      var tag = getTag(value2), isFunc = tag == funcTag || tag == genTag;
      if (isBuffer(value2)) {
        return cloneBuffer(value2, isDeep);
      }
      if (tag == objectTag || tag == argsTag || isFunc && !object3) {
        if (isHostObject(value2)) {
          return object3 ? value2 : {};
        }
        result = initCloneObject(isFunc ? {} : value2);
        if (!isDeep) {
          return copySymbols(value2, baseAssign(result, value2));
        }
      } else {
        if (!cloneableTags[tag]) {
          return object3 ? value2 : {};
        }
        result = initCloneByTag(value2, tag, baseClone, isDeep);
      }
    }
    stack || (stack = new Stack);
    var stacked = stack.get(value2);
    if (stacked) {
      return stacked;
    }
    stack.set(value2, result);
    if (!isArr) {
      var props = isFull ? getAllKeys(value2) : keys(value2);
    }
    arrayEach(props || value2, function(subValue, key2) {
      if (props) {
        key2 = subValue;
        subValue = value2[key2];
      }
      assignValue(result, key2, baseClone(subValue, isDeep, isFull, customizer, key2, value2, stack));
    });
    return result;
  }
  function baseCreate(proto) {
    return isObject2(proto) ? objectCreate(proto) : {};
  }
  function baseGetAllKeys(object3, keysFunc, symbolsFunc) {
    var result = keysFunc(object3);
    return isArray(object3) ? result : arrayPush(result, symbolsFunc(object3));
  }
  function baseGetTag(value2) {
    return objectToString.call(value2);
  }
  function baseIsNative(value2) {
    if (!isObject2(value2) || isMasked(value2)) {
      return false;
    }
    var pattern2 = isFunction(value2) || isHostObject(value2) ? reIsNative : reIsHostCtor;
    return pattern2.test(toSource(value2));
  }
  function baseKeys(object3) {
    if (!isPrototype(object3)) {
      return nativeKeys(object3);
    }
    var result = [];
    for (var key in Object(object3)) {
      if (hasOwnProperty.call(object3, key) && key != "constructor") {
        result.push(key);
      }
    }
    return result;
  }
  function cloneBuffer(buffer, isDeep) {
    if (isDeep) {
      return buffer.slice();
    }
    var result = new buffer.constructor(buffer.length);
    buffer.copy(result);
    return result;
  }
  function cloneArrayBuffer(arrayBuffer) {
    var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
    new Uint8Array3(result).set(new Uint8Array3(arrayBuffer));
    return result;
  }
  function cloneDataView(dataView, isDeep) {
    var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
    return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
  }
  function cloneMap(map3, isDeep, cloneFunc) {
    var array3 = isDeep ? cloneFunc(mapToArray(map3), true) : mapToArray(map3);
    return arrayReduce(array3, addMapEntry, new map3.constructor);
  }
  function cloneRegExp(regexp3) {
    var result = new regexp3.constructor(regexp3.source, reFlags.exec(regexp3));
    result.lastIndex = regexp3.lastIndex;
    return result;
  }
  function cloneSet(set2, isDeep, cloneFunc) {
    var array3 = isDeep ? cloneFunc(setToArray(set2), true) : setToArray(set2);
    return arrayReduce(array3, addSetEntry, new set2.constructor);
  }
  function cloneSymbol(symbol3) {
    return symbolValueOf ? Object(symbolValueOf.call(symbol3)) : {};
  }
  function cloneTypedArray(typedArray, isDeep) {
    var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
    return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
  }
  function copyArray(source, array3) {
    var index = -1, length = source.length;
    array3 || (array3 = Array(length));
    while (++index < length) {
      array3[index] = source[index];
    }
    return array3;
  }
  function copyObject(source, props, object3, customizer) {
    object3 || (object3 = {});
    var index = -1, length = props.length;
    while (++index < length) {
      var key = props[index];
      var newValue = customizer ? customizer(object3[key], source[key], key, object3, source) : undefined;
      assignValue(object3, key, newValue === undefined ? source[key] : newValue);
    }
    return object3;
  }
  function copySymbols(source, object3) {
    return copyObject(source, getSymbols(source), object3);
  }
  function getAllKeys(object3) {
    return baseGetAllKeys(object3, keys, getSymbols);
  }
  function getMapData(map3, key) {
    var data = map3.__data__;
    return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
  }
  function getNative(object3, key) {
    var value2 = getValue(object3, key);
    return baseIsNative(value2) ? value2 : undefined;
  }
  var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;
  var getTag = baseGetTag;
  if (DataView2 && getTag(new DataView2(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2) != mapTag || Promise3 && getTag(Promise3.resolve()) != promiseTag || Set5 && getTag(new Set5) != setTag || WeakMap2 && getTag(new WeakMap2) != weakMapTag) {
    getTag = function(value2) {
      var result = objectToString.call(value2), Ctor = result == objectTag ? value2.constructor : undefined, ctorString = Ctor ? toSource(Ctor) : undefined;
      if (ctorString) {
        switch (ctorString) {
          case dataViewCtorString:
            return dataViewTag;
          case mapCtorString:
            return mapTag;
          case promiseCtorString:
            return promiseTag;
          case setCtorString:
            return setTag;
          case weakMapCtorString:
            return weakMapTag;
        }
      }
      return result;
    };
  }
  function initCloneArray(array3) {
    var length = array3.length, result = array3.constructor(length);
    if (length && typeof array3[0] == "string" && hasOwnProperty.call(array3, "index")) {
      result.index = array3.index;
      result.input = array3.input;
    }
    return result;
  }
  function initCloneObject(object3) {
    return typeof object3.constructor == "function" && !isPrototype(object3) ? baseCreate(getPrototype(object3)) : {};
  }
  function initCloneByTag(object3, tag, cloneFunc, isDeep) {
    var Ctor = object3.constructor;
    switch (tag) {
      case arrayBufferTag:
        return cloneArrayBuffer(object3);
      case boolTag:
      case dateTag:
        return new Ctor(+object3);
      case dataViewTag:
        return cloneDataView(object3, isDeep);
      case float32Tag:
      case float64Tag:
      case int8Tag:
      case int16Tag:
      case int32Tag:
      case uint8Tag:
      case uint8ClampedTag:
      case uint16Tag:
      case uint32Tag:
        return cloneTypedArray(object3, isDeep);
      case mapTag:
        return cloneMap(object3, isDeep, cloneFunc);
      case numberTag:
      case stringTag:
        return new Ctor(object3);
      case regexpTag:
        return cloneRegExp(object3);
      case setTag:
        return cloneSet(object3, isDeep, cloneFunc);
      case symbolTag:
        return cloneSymbol(object3);
    }
  }
  function isIndex(value2, length) {
    length = length == null ? MAX_SAFE_INTEGER : length;
    return !!length && (typeof value2 == "number" || reIsUint.test(value2)) && (value2 > -1 && value2 % 1 == 0 && value2 < length);
  }
  function isKeyable(value2) {
    var type3 = typeof value2;
    return type3 == "string" || type3 == "number" || type3 == "symbol" || type3 == "boolean" ? value2 !== "__proto__" : value2 === null;
  }
  function isMasked(func) {
    return !!maskSrcKey && maskSrcKey in func;
  }
  function isPrototype(value2) {
    var Ctor = value2 && value2.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
    return value2 === proto;
  }
  function toSource(func) {
    if (func != null) {
      try {
        return funcToString.call(func);
      } catch (e) {
      }
      try {
        return func + "";
      } catch (e) {
      }
    }
    return "";
  }
  function cloneDeep(value2) {
    return baseClone(value2, true, true);
  }
  function eq(value2, other) {
    return value2 === other || value2 !== value2 && other !== other;
  }
  function isArguments(value2) {
    return isArrayLikeObject(value2) && hasOwnProperty.call(value2, "callee") && (!propertyIsEnumerable.call(value2, "callee") || objectToString.call(value2) == argsTag);
  }
  var isArray = Array.isArray;
  function isArrayLike(value2) {
    return value2 != null && isLength(value2.length) && !isFunction(value2);
  }
  function isArrayLikeObject(value2) {
    return isObjectLike(value2) && isArrayLike(value2);
  }
  var isBuffer = nativeIsBuffer || stubFalse;
  function isFunction(value2) {
    var tag = isObject2(value2) ? objectToString.call(value2) : "";
    return tag == funcTag || tag == genTag;
  }
  function isLength(value2) {
    return typeof value2 == "number" && value2 > -1 && value2 % 1 == 0 && value2 <= MAX_SAFE_INTEGER;
  }
  function isObject2(value2) {
    var type3 = typeof value2;
    return !!value2 && (type3 == "object" || type3 == "function");
  }
  function isObjectLike(value2) {
    return !!value2 && typeof value2 == "object";
  }
  function keys(object3) {
    return isArrayLike(object3) ? arrayLikeKeys(object3) : baseKeys(object3);
  }
  function stubArray() {
    return [];
  }
  function stubFalse() {
    return false;
  }
  module.exports = cloneDeep;
});

// node_modules/mongoose/dist/browser.umd.js
var require_browser_umd = __commonJS((exports, module) => {
  /*! For license information please see browser.umd.js.LICENSE.txt */
  (function(t2, e) {
    typeof exports == "object" && typeof module == "object" ? module.exports = e() : typeof define == "function" && define.amd ? define([], e) : typeof exports == "object" ? exports.mongoose = e() : t2.mongoose = e();
  })(typeof self != "undefined" ? self : exports, () => (() => {
    var t2 = { 4986: (t3, e2, r2) => {
      t3.exports = r2(254);
    }, 254: (t3, e2, r2) => {
      var n = r2(5832).Buffer;
      function i(t4) {
        return i = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, i(t4);
      }
      function o() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (o = function() {
          return !!t4;
        })();
      }
      function a(t4) {
        return a = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, a(t4);
      }
      function s(t4, e3) {
        return s = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, s(t4, e3);
      }
      r2(8582).set(r2(5221));
      var c = r2(3300);
      c.setBrowser(true), e2.Error = r2(9507), e2.Schema = r2(9703), e2.Types = r2(1148), e2.VirtualType = r2(5165), e2.SchemaType = r2(2319), e2.utils = r2(335), e2.Document = c(), e2.model = function(t4, r3) {
        var n2 = function(t5) {
          function e3(t6, n4) {
            return function(t7, e4) {
              if (!(t7 instanceof e4))
                throw new TypeError("Cannot call a class as a function");
            }(this, e3), function(t7, e4, r4) {
              return e4 = a(e4), function(t8, e5) {
                if (e5 && (i(e5) == "object" || typeof e5 == "function"))
                  return e5;
                if (e5 !== undefined)
                  throw new TypeError("Derived constructors may only return object or undefined");
                return function(t9) {
                  if (t9 === undefined)
                    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return t9;
                }(t8);
              }(t7, o() ? Reflect.construct(e4, r4 || [], a(t7).constructor) : e4.apply(t7, r4));
            }(this, e3, [t6, r3, n4]);
          }
          return function(t6, e4) {
            if (typeof e4 != "function" && e4 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t6.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t6, writable: true, configurable: true } }), Object.defineProperty(t6, "prototype", { writable: false }), e4 && s(t6, e4);
          }(e3, t5), n3 = e3, Object.defineProperty(n3, "prototype", { writable: false }), n3;
          var n3;
        }(e2.Document);
        return n2.modelName = t4, n2;
      }, typeof window != "undefined" && (window.mongoose = t3.exports, window.Buffer = n);
    }, 6024: (t3, e2, r2) => {
      var n = r2(3293), i = r2(3550).EventEmitter, o = r2(9507), a = r2(9703), s = r2(6704), c = o.ValidationError, u = r2(8892), f = r2(4797);
      function l(t4, e3, r3, i2, c2) {
        if (!(this instanceof l))
          return new l(t4, e3, r3, i2, c2);
        if (f(e3) && !e3.instanceOfSchema && (e3 = new a(e3)), e3 = this.schema || e3, !this.schema && e3.options._id && (t4 = t4 || {})._id === undefined && (t4._id = new s), !e3)
          throw new o.MissingSchemaError;
        for (var h in this.$__setSchema(e3), n.call(this, t4, r3, i2, c2), u(this, e3, { decorateDoc: true }), e3.methods)
          this[h] = e3.methods[h];
        for (var p in e3.statics)
          this[p] = e3.statics[p];
      }
      l.prototype = Object.create(n.prototype), l.prototype.constructor = l, l.events = new i, l.$emitter = new i, ["on", "once", "emit", "listeners", "removeListener", "setMaxListeners", "removeAllListeners", "addListener"].forEach(function(t4) {
        l[t4] = function() {
          return l.$emitter[t4].apply(l.$emitter, arguments);
        };
      }), l.ValidationError = c, t3.exports = l;
    }, 8447: (t3, e2, r2) => {
      function n(t4, e3) {
        var r3 = typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
        if (!r3) {
          if (Array.isArray(t4) || (r3 = function(t5, e4) {
            if (t5) {
              if (typeof t5 == "string")
                return i(t5, e4);
              var r4 = {}.toString.call(t5).slice(8, -1);
              return r4 === "Object" && t5.constructor && (r4 = t5.constructor.name), r4 === "Map" || r4 === "Set" ? Array.from(t5) : r4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4) ? i(t5, e4) : undefined;
            }
          }(t4)) || e3 && t4 && typeof t4.length == "number") {
            r3 && (t4 = r3);
            var n2 = 0, o2 = function() {
            };
            return { s: o2, n: function() {
              return n2 >= t4.length ? { done: true } : { done: false, value: t4[n2++] };
            }, e: function(t5) {
              throw t5;
            }, f: o2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var a2, s2 = true, c2 = false;
        return { s: function() {
          r3 = r3.call(t4);
        }, n: function() {
          var t5 = r3.next();
          return s2 = t5.done, t5;
        }, e: function(t5) {
          c2 = true, a2 = t5;
        }, f: function() {
          try {
            s2 || r3.return == null || r3.return();
          } finally {
            if (c2)
              throw a2;
          }
        } };
      }
      function i(t4, e3) {
        (e3 == null || e3 > t4.length) && (e3 = t4.length);
        for (var r3 = 0, n2 = Array(e3);r3 < e3; r3++)
          n2[r3] = t4[r3];
        return n2;
      }
      function o(t4) {
        return o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, o(t4);
      }
      var a = r2(6148), s = r2(6166), c = r2(2176), u = r2(8385), f = r2(8471), l = r2(2503), h = r2(5132), p = r2(1654), d = r2(499), y = r2(7352), b = r2(4797), m = r2(6504), v = r2(335), g = ["Polygon", "MultiPolygon"];
      function _(t4, e3, r3) {
        if (Array.isArray(t4))
          t4.forEach(function(n3, i3) {
            if (Array.isArray(n3) || b(n3))
              return _(n3, e3, r3);
            t4[i3] = e3.castForQuery(null, n3, r3);
          });
        else
          for (var n2 = Object.keys(t4), i2 = n2.length;i2--; ) {
            var o2 = n2[i2], a2 = t4[o2];
            Array.isArray(a2) || b(a2) ? (_(a2, e3, r3), t4[o2] = a2) : t4[o2] = e3.castForQuery({ val: a2, context: r3 });
          }
      }
      function w(t4, e3, r3, n2) {
        if ("strictQuery" in t4)
          return t4.strictQuery;
        if ("strictQuery" in e3)
          return e3.strictQuery;
        var i2 = n2 && n2.mongooseCollection && n2.mongooseCollection.conn && n2.mongooseCollection.conn.base && n2.mongooseCollection.conn.base.options;
        return i2 && "strictQuery" in i2 ? i2.strictQuery : r3.strictQuery;
      }
      t3.exports = function t(e3, r3, i2, S) {
        if (Array.isArray(r3))
          throw new Error("Query filter must be an object, got an array ", y.inspect(r3));
        if (r3 == null)
          return r3;
        e3 != null && e3.discriminators != null && r3[e3.options.discriminatorKey] != null && (e3 = p(e3, r3[e3.options.discriminatorKey]) || e3);
        var O, j, $, A, E, x, P = Object.keys(r3), k = P.length;
        for (i2 = i2 || {};k--; )
          if (x = r3[A = P[k]], A === "$or" || A === "$nor" || A === "$and") {
            if (!Array.isArray(x))
              throw new a("Array", x, A);
            for (var M = x.length - 1;M >= 0; M--) {
              if (x[M] == null || o(x[M]) !== "object")
                throw new a("Object", x[M], A + "." + M);
              var I = Object.keys(x[M]).length, T = x[M][e3.options.discriminatorKey];
              if (T == null)
                x[M] = t(e3, x[M], i2, S);
              else {
                var B = p(S.schema, T);
                x[M] = t(B || e3, x[M], i2, S);
              }
              Object.keys(x[M]).length === 0 && I !== 0 && x.splice(M, 1);
            }
            x.length === 0 && delete r3[A];
          } else {
            if (A === "$where") {
              if ((E = o(x)) !== "string" && E !== "function")
                throw new Error("Must have a string or function for $where");
              E === "function" && (r3[A] = x.toString());
              continue;
            }
            if (A === "$expr") {
              x = u(x, e3);
              continue;
            }
            if (A === "$elemMatch")
              x = t(e3, x, i2, S);
            else if (A === "$text")
              x = l(x, A);
            else if (A !== "$comment" || e3.paths.hasOwnProperty("$comment")) {
              if (!e3)
                continue;
              if (!(j = e3.path(A)))
                for (var R = A.split("."), N = R.length;N--; ) {
                  var D = R.slice(0, N).join("."), L = R.slice(N).join("."), C = e3.path(D), U = C && C.schema && C.schema.options && C.schema.options.discriminatorKey;
                  if (C != null && (C.schema && C.schema.discriminators) != null && U != null && L !== U) {
                    var q = h(r3, D + "." + U), F = C.schema.discriminators;
                    typeof q == "string" && F[q] != null ? j = F[q].path(L) : q != null && Object.keys(q).length === 1 && Array.isArray(q.$in) && q.$in.length === 1 && typeof q.$in[0] == "string" && F[q.$in[0]] != null && (j = F[q.$in[0]].path(L));
                  }
                }
              if (j) {
                if (x == null)
                  continue;
                if (v.isPOJO(x))
                  if (Object.keys(x).some(d))
                    for (var V = Object.keys(x), z = undefined, K = V.length;K--; )
                      if ($ = x[z = V[K]], z === "$elemMatch")
                        $ && j != null && j.schema != null ? t(j.schema, $, i2, S) : $ && j != null && j.$isMongooseArray && (v.isPOJO($) && $.$not != null ? t(e3, $, i2, S) : x[z] = j.castForQuery(z, $, S));
                      else if (z === "$not") {
                        if ($ && j) {
                          if ((O = Object.keys($)).length && d(O[0]))
                            for (var H in $)
                              $[H] = j.castForQuery(H, $[H], S);
                          else
                            x[z] = j.castForQuery(z, $, S);
                          continue;
                        }
                      } else
                        x[z] = j.castForQuery(z, $, S);
                  else
                    r3[A] = j.castForQuery(null, x, S);
                else if (Array.isArray(x) && ["Buffer", "Array"].indexOf(j.instance) === -1) {
                  var W, J = [], G = n(x);
                  try {
                    for (G.s();!(W = G.n()).done; ) {
                      var Y = W.value;
                      J.push(j.castForQuery(null, Y, S));
                    }
                  } catch (t4) {
                    G.e(t4);
                  } finally {
                    G.f();
                  }
                  r3[A] = { $in: J };
                } else
                  r3[A] = j.castForQuery(null, x, S);
              } else {
                for (var Q = A.split("."), X = Q.length, Z = undefined, tt = undefined, et = undefined;X-- && (Z = Q.slice(0, X).join("."), !(j = e3.path(Z))); )
                  ;
                if (j) {
                  if (j.caster && j.caster.schema) {
                    (et = {})[tt = Q.slice(X).join(".")] = x;
                    var rt = t(j.caster.schema, et, i2, S)[tt];
                    rt === undefined ? delete r3[A] : r3[A] = rt;
                  } else
                    r3[A] = x;
                  continue;
                }
                if (b(x)) {
                  var nt = "";
                  if (x.$near ? nt = "$near" : x.$nearSphere ? nt = "$nearSphere" : x.$within ? nt = "$within" : x.$geoIntersects ? nt = "$geoIntersects" : x.$geoWithin && (nt = "$geoWithin"), nt) {
                    var it = new c.Number("__QueryCasting__"), ot = x[nt];
                    if (x.$maxDistance != null && (x.$maxDistance = it.castForQuery(null, x.$maxDistance, S)), x.$minDistance != null && (x.$minDistance = it.castForQuery(null, x.$minDistance, S)), nt === "$within") {
                      var at = ot.$center || ot.$centerSphere || ot.$box || ot.$polygon;
                      if (!at)
                        throw new Error("Bad $within parameter: " + JSON.stringify(x));
                      ot = at;
                    } else if (nt === "$near" && typeof ot.type == "string" && Array.isArray(ot.coordinates))
                      ot = ot.coordinates;
                    else if ((nt === "$near" || nt === "$nearSphere" || nt === "$geoIntersects") && ot.$geometry && typeof ot.$geometry.type == "string" && Array.isArray(ot.$geometry.coordinates))
                      ot.$maxDistance != null && (ot.$maxDistance = it.castForQuery(null, ot.$maxDistance, S)), ot.$minDistance != null && (ot.$minDistance = it.castForQuery(null, ot.$minDistance, S)), m(ot.$geometry) && (ot.$geometry = ot.$geometry.toObject({ transform: false, virtuals: false })), ot = ot.$geometry.coordinates;
                    else if (nt === "$geoWithin")
                      if (ot.$geometry) {
                        m(ot.$geometry) && (ot.$geometry = ot.$geometry.toObject({ virtuals: false }));
                        var st = ot.$geometry.type;
                        if (g.indexOf(st) === -1)
                          throw new Error('Invalid geoJSON type for $geoWithin "' + st + '", must be "Polygon" or "MultiPolygon"');
                        ot = ot.$geometry.coordinates;
                      } else
                        ot = ot.$box || ot.$polygon || ot.$center || ot.$centerSphere, m(ot) && (ot = ot.toObject({ virtuals: false }));
                    _(ot, it, S);
                    continue;
                  }
                }
                if (e3.nested[A])
                  continue;
                var ct = "strict" in i2 ? i2.strict : e3.options.strict, ut = w(i2, e3._userProvidedOptions, e3.options, S);
                if (i2.upsert && ct) {
                  if (ct === "throw")
                    throw new s(A);
                  throw new s(A, 'Path "' + A + '" is not in schema, strict mode is `true`, and upsert is `true`.');
                }
                if (ut === "throw")
                  throw new s(A, 'Path "' + A + "\" is not in schema and strictQuery is 'throw'.");
                ut && delete r3[A];
              }
            } else
              x = f(x, A), r3[A] = x;
          }
        return r3;
      };
    }, 6237: (t3, e2, r2) => {
      var n = r2(2402), i = r2(3633).Long;
      t3.exports = function(t4) {
        return t4 == null ? t4 : t4 === "" ? null : typeof t4 == "bigint" ? t4 : t4 instanceof i ? t4.toBigInt() : typeof t4 == "string" || typeof t4 == "number" ? BigInt(t4) : void n.ok(false);
      };
    }, 7092: (t3, e2, r2) => {
      var n = r2(6148);
      t3.exports = function(e3, r3) {
        if (t3.exports.convertToTrue.has(e3))
          return true;
        if (t3.exports.convertToFalse.has(e3))
          return false;
        if (e3 == null)
          return e3;
        throw new n("boolean", e3, r3);
      }, t3.exports.convertToTrue = new Set([true, "true", 1, "1", "yes"]), t3.exports.convertToFalse = new Set([false, "false", 0, "0", "no"]);
    }, 9973: (t3, e2, r2) => {
      var n = r2(2402);
      t3.exports = function(t4) {
        return t4 == null || t4 === "" ? null : t4 instanceof Date ? (n.ok(!isNaN(t4.valueOf())), t4) : (n.ok(typeof t4 != "boolean"), e3 = t4 instanceof Number || typeof t4 == "number" ? new Date(t4) : typeof t4 == "string" && !isNaN(Number(t4)) && (Number(t4) >= 275761 || Number(t4) < -271820) ? new Date(Number(t4)) : typeof t4.valueOf == "function" ? new Date(t4.valueOf()) : new Date(t4), isNaN(e3.valueOf()) ? void n.ok(false) : e3);
        var e3;
      };
    }, 3854: (t3, e2, r2) => {
      var n = r2(5832).Buffer;
      function i(t4) {
        return i = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, i(t4);
      }
      var o = r2(9394), a = r2(2402);
      t3.exports = function(t4) {
        return t4 == null ? t4 : i(t4) === "object" && typeof t4.$numberDecimal == "string" ? o.fromString(t4.$numberDecimal) : t4 instanceof o ? t4 : typeof t4 == "string" ? o.fromString(t4) : typeof n == "function" && n.isBuffer(t4) || typeof Uint8Array == "function" && t4 instanceof Uint8Array ? new o(t4) : typeof t4 == "number" ? o.fromString(String(t4)) : typeof t4.valueOf == "function" && typeof t4.valueOf() == "string" ? o.fromString(t4.valueOf()) : void a.ok(false);
      };
    }, 247: (t3, e2, r2) => {
      var n = r2(2402);
      t3.exports = function(t4) {
        return t4 == null ? t4 : t4 === "" ? null : (typeof t4 != "string" && typeof t4 != "boolean" || (t4 = Number(t4)), n.ok(!isNaN(t4)), t4 instanceof Number ? t4.valueOf() : typeof t4 == "number" ? t4 : Array.isArray(t4) || typeof t4.valueOf != "function" ? t4.toString && !Array.isArray(t4) && t4.toString() == Number(t4) ? Number(t4) : void n.ok(false) : Number(t4.valueOf()));
      };
    }, 8092: (t3, e2, r2) => {
      var n = r2(2128), i = r2(6704);
      t3.exports = function(t4) {
        if (t4 == null)
          return t4;
        if (n(t4, "ObjectId"))
          return t4;
        if (t4._id) {
          if (n(t4._id, "ObjectId"))
            return t4._id;
          if (t4._id.toString instanceof Function)
            return new i(t4._id.toString());
        }
        return t4.toString instanceof Function ? new i(t4.toString()) : new i(t4);
      };
    }, 8471: (t3, e2, r2) => {
      var n = r2(6148);
      t3.exports = function(t4, e3) {
        if (t4 == null)
          return t4;
        if (t4._id && typeof t4._id == "string")
          return t4._id;
        if (t4.toString && t4.toString !== Object.prototype.toString && !Array.isArray(t4))
          return t4.toString();
        throw new n("string", t4, e3);
      };
    }, 991: (t3, e2) => {
      var r2 = Object.freeze(["countDocuments", "distinct", "estimatedDocumentCount", "find", "findOne", "findOneAndReplace", "findOneAndUpdate", "replaceOne", "updateMany", "updateOne", "deleteMany", "deleteOne", "findOneAndDelete"]).concat(["validate"]);
      e2.Ut = r2;
    }, 3293: (t3, e2, r2) => {
      var n = r2(5832).Buffer;
      function i(t4) {
        return function(t5) {
          if (Array.isArray(t5))
            return p(t5);
        }(t4) || function(t5) {
          if (typeof Symbol != "undefined" && t5[Symbol.iterator] != null || t5["@@iterator"] != null)
            return Array.from(t5);
        }(t4) || h(t4) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }
      function o() {
        o = function() {
          return e3;
        };
        var t4, e3 = {}, r3 = Object.prototype, n2 = r3.hasOwnProperty, i2 = Object.defineProperty || function(t5, e4, r4) {
          t5[e4] = r4.value;
        }, a2 = typeof Symbol == "function" ? Symbol : {}, s2 = a2.iterator || "@@iterator", c2 = a2.asyncIterator || "@@asyncIterator", u2 = a2.toStringTag || "@@toStringTag";
        function f2(t5, e4, r4) {
          return Object.defineProperty(t5, e4, { value: r4, enumerable: true, configurable: true, writable: true }), t5[e4];
        }
        try {
          f2({}, "");
        } catch (t5) {
          f2 = function(t6, e4, r4) {
            return t6[e4] = r4;
          };
        }
        function l2(t5, e4, r4, n3) {
          var o2 = e4 && e4.prototype instanceof g2 ? e4 : g2, a3 = Object.create(o2.prototype), s3 = new I2(n3 || []);
          return i2(a3, "_invoke", { value: x2(t5, r4, s3) }), a3;
        }
        function h2(t5, e4, r4) {
          try {
            return { type: "normal", arg: t5.call(e4, r4) };
          } catch (t6) {
            return { type: "throw", arg: t6 };
          }
        }
        e3.wrap = l2;
        var p2 = "suspendedStart", y2 = "suspendedYield", b2 = "executing", m2 = "completed", v2 = {};
        function g2() {
        }
        function _2() {
        }
        function w2() {
        }
        var S2 = {};
        f2(S2, s2, function() {
          return this;
        });
        var O2 = Object.getPrototypeOf, j2 = O2 && O2(O2(T2([])));
        j2 && j2 !== r3 && n2.call(j2, s2) && (S2 = j2);
        var $2 = w2.prototype = g2.prototype = Object.create(S2);
        function A2(t5) {
          ["next", "throw", "return"].forEach(function(e4) {
            f2(t5, e4, function(t6) {
              return this._invoke(e4, t6);
            });
          });
        }
        function E2(t5, e4) {
          function r4(i3, o3, a3, s3) {
            var c3 = h2(t5[i3], t5, o3);
            if (c3.type !== "throw") {
              var u3 = c3.arg, f3 = u3.value;
              return f3 && d(f3) == "object" && n2.call(f3, "__await") ? e4.resolve(f3.__await).then(function(t6) {
                r4("next", t6, a3, s3);
              }, function(t6) {
                r4("throw", t6, a3, s3);
              }) : e4.resolve(f3).then(function(t6) {
                u3.value = t6, a3(u3);
              }, function(t6) {
                return r4("throw", t6, a3, s3);
              });
            }
            s3(c3.arg);
          }
          var o2;
          i2(this, "_invoke", { value: function(t6, n3) {
            function i3() {
              return new e4(function(e5, i4) {
                r4(t6, n3, e5, i4);
              });
            }
            return o2 = o2 ? o2.then(i3, i3) : i3();
          } });
        }
        function x2(e4, r4, n3) {
          var i3 = p2;
          return function(o2, a3) {
            if (i3 === b2)
              throw Error("Generator is already running");
            if (i3 === m2) {
              if (o2 === "throw")
                throw a3;
              return { value: t4, done: true };
            }
            for (n3.method = o2, n3.arg = a3;; ) {
              var s3 = n3.delegate;
              if (s3) {
                var c3 = P2(s3, n3);
                if (c3) {
                  if (c3 === v2)
                    continue;
                  return c3;
                }
              }
              if (n3.method === "next")
                n3.sent = n3._sent = n3.arg;
              else if (n3.method === "throw") {
                if (i3 === p2)
                  throw i3 = m2, n3.arg;
                n3.dispatchException(n3.arg);
              } else
                n3.method === "return" && n3.abrupt("return", n3.arg);
              i3 = b2;
              var u3 = h2(e4, r4, n3);
              if (u3.type === "normal") {
                if (i3 = n3.done ? m2 : y2, u3.arg === v2)
                  continue;
                return { value: u3.arg, done: n3.done };
              }
              u3.type === "throw" && (i3 = m2, n3.method = "throw", n3.arg = u3.arg);
            }
          };
        }
        function P2(e4, r4) {
          var n3 = r4.method, i3 = e4.iterator[n3];
          if (i3 === t4)
            return r4.delegate = null, n3 === "throw" && e4.iterator.return && (r4.method = "return", r4.arg = t4, P2(e4, r4), r4.method === "throw") || n3 !== "return" && (r4.method = "throw", r4.arg = new TypeError("The iterator does not provide a '" + n3 + "' method")), v2;
          var o2 = h2(i3, e4.iterator, r4.arg);
          if (o2.type === "throw")
            return r4.method = "throw", r4.arg = o2.arg, r4.delegate = null, v2;
          var a3 = o2.arg;
          return a3 ? a3.done ? (r4[e4.resultName] = a3.value, r4.next = e4.nextLoc, r4.method !== "return" && (r4.method = "next", r4.arg = t4), r4.delegate = null, v2) : a3 : (r4.method = "throw", r4.arg = new TypeError("iterator result is not an object"), r4.delegate = null, v2);
        }
        function k2(t5) {
          var e4 = { tryLoc: t5[0] };
          1 in t5 && (e4.catchLoc = t5[1]), 2 in t5 && (e4.finallyLoc = t5[2], e4.afterLoc = t5[3]), this.tryEntries.push(e4);
        }
        function M2(t5) {
          var e4 = t5.completion || {};
          e4.type = "normal", delete e4.arg, t5.completion = e4;
        }
        function I2(t5) {
          this.tryEntries = [{ tryLoc: "root" }], t5.forEach(k2, this), this.reset(true);
        }
        function T2(e4) {
          if (e4 || e4 === "") {
            var r4 = e4[s2];
            if (r4)
              return r4.call(e4);
            if (typeof e4.next == "function")
              return e4;
            if (!isNaN(e4.length)) {
              var i3 = -1, o2 = function r() {
                for (;++i3 < e4.length; )
                  if (n2.call(e4, i3))
                    return r.value = e4[i3], r.done = false, r;
                return r.value = t4, r.done = true, r;
              };
              return o2.next = o2;
            }
          }
          throw new TypeError(d(e4) + " is not iterable");
        }
        return _2.prototype = w2, i2($2, "constructor", { value: w2, configurable: true }), i2(w2, "constructor", { value: _2, configurable: true }), _2.displayName = f2(w2, u2, "GeneratorFunction"), e3.isGeneratorFunction = function(t5) {
          var e4 = typeof t5 == "function" && t5.constructor;
          return !!e4 && (e4 === _2 || (e4.displayName || e4.name) === "GeneratorFunction");
        }, e3.mark = function(t5) {
          return Object.setPrototypeOf ? Object.setPrototypeOf(t5, w2) : (t5.__proto__ = w2, f2(t5, u2, "GeneratorFunction")), t5.prototype = Object.create($2), t5;
        }, e3.awrap = function(t5) {
          return { __await: t5 };
        }, A2(E2.prototype), f2(E2.prototype, c2, function() {
          return this;
        }), e3.AsyncIterator = E2, e3.async = function(t5, r4, n3, i3, o2) {
          o2 === undefined && (o2 = Promise);
          var a3 = new E2(l2(t5, r4, n3, i3), o2);
          return e3.isGeneratorFunction(r4) ? a3 : a3.next().then(function(t6) {
            return t6.done ? t6.value : a3.next();
          });
        }, A2($2), f2($2, u2, "Generator"), f2($2, s2, function() {
          return this;
        }), f2($2, "toString", function() {
          return "[object Generator]";
        }), e3.keys = function(t5) {
          var e4 = Object(t5), r4 = [];
          for (var n3 in e4)
            r4.push(n3);
          return r4.reverse(), function t() {
            for (;r4.length; ) {
              var n4 = r4.pop();
              if (n4 in e4)
                return t.value = n4, t.done = false, t;
            }
            return t.done = true, t;
          };
        }, e3.values = T2, I2.prototype = { constructor: I2, reset: function(e4) {
          if (this.prev = 0, this.next = 0, this.sent = this._sent = t4, this.done = false, this.delegate = null, this.method = "next", this.arg = t4, this.tryEntries.forEach(M2), !e4)
            for (var r4 in this)
              r4.charAt(0) === "t" && n2.call(this, r4) && !isNaN(+r4.slice(1)) && (this[r4] = t4);
        }, stop: function() {
          this.done = true;
          var t5 = this.tryEntries[0].completion;
          if (t5.type === "throw")
            throw t5.arg;
          return this.rval;
        }, dispatchException: function(e4) {
          if (this.done)
            throw e4;
          var r4 = this;
          function i3(n3, i4) {
            return s3.type = "throw", s3.arg = e4, r4.next = n3, i4 && (r4.method = "next", r4.arg = t4), !!i4;
          }
          for (var o2 = this.tryEntries.length - 1;o2 >= 0; --o2) {
            var a3 = this.tryEntries[o2], s3 = a3.completion;
            if (a3.tryLoc === "root")
              return i3("end");
            if (a3.tryLoc <= this.prev) {
              var c3 = n2.call(a3, "catchLoc"), u3 = n2.call(a3, "finallyLoc");
              if (c3 && u3) {
                if (this.prev < a3.catchLoc)
                  return i3(a3.catchLoc, true);
                if (this.prev < a3.finallyLoc)
                  return i3(a3.finallyLoc);
              } else if (c3) {
                if (this.prev < a3.catchLoc)
                  return i3(a3.catchLoc, true);
              } else {
                if (!u3)
                  throw Error("try statement without catch or finally");
                if (this.prev < a3.finallyLoc)
                  return i3(a3.finallyLoc);
              }
            }
          }
        }, abrupt: function(t5, e4) {
          for (var r4 = this.tryEntries.length - 1;r4 >= 0; --r4) {
            var i3 = this.tryEntries[r4];
            if (i3.tryLoc <= this.prev && n2.call(i3, "finallyLoc") && this.prev < i3.finallyLoc) {
              var o2 = i3;
              break;
            }
          }
          o2 && (t5 === "break" || t5 === "continue") && o2.tryLoc <= e4 && e4 <= o2.finallyLoc && (o2 = null);
          var a3 = o2 ? o2.completion : {};
          return a3.type = t5, a3.arg = e4, o2 ? (this.method = "next", this.next = o2.finallyLoc, v2) : this.complete(a3);
        }, complete: function(t5, e4) {
          if (t5.type === "throw")
            throw t5.arg;
          return t5.type === "break" || t5.type === "continue" ? this.next = t5.arg : t5.type === "return" ? (this.rval = this.arg = t5.arg, this.method = "return", this.next = "end") : t5.type === "normal" && e4 && (this.next = e4), v2;
        }, finish: function(t5) {
          for (var e4 = this.tryEntries.length - 1;e4 >= 0; --e4) {
            var r4 = this.tryEntries[e4];
            if (r4.finallyLoc === t5)
              return this.complete(r4.completion, r4.afterLoc), M2(r4), v2;
          }
        }, catch: function(t5) {
          for (var e4 = this.tryEntries.length - 1;e4 >= 0; --e4) {
            var r4 = this.tryEntries[e4];
            if (r4.tryLoc === t5) {
              var n3 = r4.completion;
              if (n3.type === "throw") {
                var i3 = n3.arg;
                M2(r4);
              }
              return i3;
            }
          }
          throw Error("illegal catch attempt");
        }, delegateYield: function(e4, r4, n3) {
          return this.delegate = { iterator: T2(e4), resultName: r4, nextLoc: n3 }, this.method === "next" && (this.arg = t4), v2;
        } }, e3;
      }
      function a(t4, e3, r3, n2, i2, o2, a2) {
        try {
          var s2 = t4[o2](a2), c2 = s2.value;
        } catch (t5) {
          return void r3(t5);
        }
        s2.done ? e3(c2) : Promise.resolve(c2).then(n2, i2);
      }
      function s(t4) {
        return function() {
          var e3 = this, r3 = arguments;
          return new Promise(function(n2, i2) {
            var o2 = t4.apply(e3, r3);
            function s2(t5) {
              a(o2, n2, i2, s2, c2, "next", t5);
            }
            function c2(t5) {
              a(o2, n2, i2, s2, c2, "throw", t5);
            }
            s2(undefined);
          });
        };
      }
      function c(t4, e3) {
        var r3 = Object.keys(t4);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(t4);
          e3 && (n2 = n2.filter(function(e4) {
            return Object.getOwnPropertyDescriptor(t4, e4).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function u(t4) {
        for (var e3 = 1;e3 < arguments.length; e3++) {
          var r3 = arguments[e3] != null ? arguments[e3] : {};
          e3 % 2 ? c(Object(r3), true).forEach(function(e4) {
            f(t4, e4, r3[e4]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(r3)) : c(Object(r3)).forEach(function(e4) {
            Object.defineProperty(t4, e4, Object.getOwnPropertyDescriptor(r3, e4));
          });
        }
        return t4;
      }
      function f(t4, e3, r3) {
        return (e3 = function(t5) {
          var e4 = function(t6) {
            if (d(t6) != "object" || !t6)
              return t6;
            var e5 = t6[Symbol.toPrimitive];
            if (e5 !== undefined) {
              var r4 = e5.call(t6, "string");
              if (d(r4) != "object")
                return r4;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t6);
          }(t5);
          return d(e4) == "symbol" ? e4 : e4 + "";
        }(e3)) in t4 ? Object.defineProperty(t4, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t4[e3] = r3, t4;
      }
      function l(t4, e3) {
        var r3 = typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
        if (!r3) {
          if (Array.isArray(t4) || (r3 = h(t4)) || e3 && t4 && typeof t4.length == "number") {
            r3 && (t4 = r3);
            var n2 = 0, i2 = function() {
            };
            return { s: i2, n: function() {
              return n2 >= t4.length ? { done: true } : { done: false, value: t4[n2++] };
            }, e: function(t5) {
              throw t5;
            }, f: i2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var o2, a2 = true, s2 = false;
        return { s: function() {
          r3 = r3.call(t4);
        }, n: function() {
          var t5 = r3.next();
          return a2 = t5.done, t5;
        }, e: function(t5) {
          s2 = true, o2 = t5;
        }, f: function() {
          try {
            a2 || r3.return == null || r3.return();
          } finally {
            if (s2)
              throw o2;
          }
        } };
      }
      function h(t4, e3) {
        if (t4) {
          if (typeof t4 == "string")
            return p(t4, e3);
          var r3 = {}.toString.call(t4).slice(8, -1);
          return r3 === "Object" && t4.constructor && (r3 = t4.constructor.name), r3 === "Map" || r3 === "Set" ? Array.from(t4) : r3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r3) ? p(t4, e3) : undefined;
        }
      }
      function p(t4, e3) {
        (e3 == null || e3 > t4.length) && (e3 = t4.length);
        for (var r3 = 0, n2 = Array(e3);r3 < e3; r3++)
          n2[r3] = t4[r3];
        return n2;
      }
      function d(t4) {
        return d = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, d(t4);
      }
      var y, b, m, v = r2(6432), g = r2(3550).EventEmitter, _ = r2(641), w = r2(9820), S = r2(9507), O = r2(1895), j = r2(7283), $ = r2(2260), A = r2(1857), E = r2(3810), x = r2(9703), P = r2(6166), k = r2(5368), M = r2(8393), I = r2(8279), T = r2(6690), B = r2(8208), R = r2(1829), N = r2(9725).w, D = r2(9725).X, L = r2(5575), C = r2(9563).B, U = r2(8239), q = r2(4051), F = r2(8825), V = r2(8145), z = r2(3933), K = r2(2128), H = r2(6239), W = r2(1384), J = r2(2243), G = r2(7352).inspect, Y = r2(3920)._, Q = r2(1096), X = r2(6470), Z = r2(5678), tt = r2(4094), et = r2(2205), rt = r2(335), nt = r2(3165), it = rt.deepEqual, ot = rt.isMongooseObject, at = r2(5625).arrayAtomicsBackupSymbol, st = r2(5625).arrayAtomicsSymbol, ct = r2(5625).documentArrayParent, ut = r2(5625).documentIsModified, ft = r2(5625).documentModifiedPaths, lt = r2(5625).documentSchemaSymbol, ht = r2(5625).getSymbol, pt = r2(5625).populateModelSymbol, dt = r2(5625).scopeSymbol, yt = r2(3089).schemaMixedSymbol, bt = r2(2609), mt = r2(5625).sessionNewDocuments, vt = rt.specialProperties;
      function gt(t4, e3, r3, n2) {
        if (d(r3) === "object" && r3 != null && (r3 = (n2 = r3).skipId), n2 = Object.assign({}, n2), this.$__schema == null) {
          var i2 = rt.isObject(e3) && !e3.instanceOfSchema ? new x(e3) : e3;
          this.$__setSchema(i2), e3 = r3, r3 = n2, n2 = arguments[4] || {};
        }
        if (this.$__ = new _, n2.isNew != null && n2.isNew !== true && (this.$isNew = n2.isNew), n2.priorDoc != null && (this.$__.priorDoc = n2.priorDoc), r3 && (this.$__.skipId = r3), t4 != null && d(t4) !== "object")
          throw new A(t4, "obj", "Document");
        var o2 = true;
        n2.defaults !== undefined && (this.$__.defaults = n2.defaults, o2 = n2.defaults);
        var a2 = this.$__schema;
        typeof e3 == "boolean" || e3 === "throw" ? (e3 !== true && (this.$__.strictMode = e3), e3 = undefined) : a2.options.strict !== true && (this.$__.strictMode = a2.options.strict);
        var s2, c2 = l(a2.requiredPaths(true));
        try {
          for (c2.s();!(s2 = c2.n()).done; ) {
            var u2 = s2.value;
            this.$__.activePaths.require(u2);
          }
        } catch (t5) {
          c2.e(t5);
        } finally {
          c2.f();
        }
        var f2 = null;
        rt.isPOJO(e3) && Object.keys(e3).length > 0 && (f2 = W(e3), this.$__.selected = e3, this.$__.exclude = f2);
        var h2 = f2 === false && e3 ? I(e3) : null;
        if (this._doc == null && (this.$__buildDoc(t4, e3, r3, f2, h2, false), o2 && T(this, e3, f2, h2, true, null, { skipParentChangeTracking: true })), t4 && (this.$__original_set ? this.$__original_set(t4, undefined, true, n2) : this.$set(t4, undefined, true, n2), t4 instanceof gt && (this.$isNew = t4.$isNew)), n2.willInit && o2 ? n2.skipDefaults && (this.$__.skipDefaults = n2.skipDefaults) : o2 && T(this, e3, f2, h2, false, n2.skipDefaults), !this.$__.strictMode && t4) {
          var p2 = this;
          Object.keys(this._doc).forEach(function(t5) {
            t5 in a2.tree || t5 in a2.methods || t5 in a2.virtuals || t5.startsWith("$") || D({ prop: t5, subprops: null, prototype: p2 });
          });
        }
        (function(t5) {
          var e4 = t5.$__schema && t5.$__schema.callQueue;
          if (e4.length) {
            var r4, n3 = l(e4);
            try {
              for (n3.s();!(r4 = n3.n()).done; ) {
                var i3 = r4.value;
                i3[0] !== "pre" && i3[0] !== "post" && i3[0] !== "on" && t5[i3[0]].apply(t5, i3[1]);
              }
            } catch (t6) {
              n3.e(t6);
            } finally {
              n3.f();
            }
          }
        })(this);
      }
      for (var _t in gt.prototype.$isMongooseDocumentPrototype = true, Object.defineProperty(gt.prototype, "isNew", { get: function() {
        return this.$isNew;
      }, set: function(t4) {
        this.$isNew = t4;
      } }), Object.defineProperty(gt.prototype, "errors", { get: function() {
        return this.$errors;
      }, set: function(t4) {
        this.$errors = t4;
      } }), gt.prototype.$isNew = true, rt.each(["on", "once", "emit", "listeners", "removeListener", "setMaxListeners", "removeAllListeners", "addListener"], function(t4) {
        gt.prototype[t4] = function() {
          if (!this.$__.emitter) {
            if (t4 === "emit")
              return;
            this.$__.emitter = new g, this.$__.emitter.setMaxListeners(0);
          }
          return this.$__.emitter[t4].apply(this.$__.emitter, arguments);
        }, gt.prototype["$".concat(t4)] = gt.prototype[t4];
      }), gt.prototype.constructor = gt, g.prototype)
        gt[_t] = g.prototype[_t];
      function wt(t4, e3, r3) {
        if (t4 != null)
          for (var n2 = Object.keys(r3.$__schema.paths), i2 = n2.length, o2 = e3.indexOf(".") === -1 ? [e3] : e3.split("."), a2 = 0;a2 < i2; ++a2) {
            var s2 = "", c2 = n2[a2];
            if (c2.startsWith(e3 + ".")) {
              var u2 = r3.$__schema.paths[c2], f2 = u2.splitPath().slice(o2.length), l2 = f2.length;
              if (u2.defaultValue !== undefined)
                for (var h2 = t4, p2 = 0;p2 < l2 && h2 != null; ++p2) {
                  var d2 = f2[p2];
                  if (p2 === l2 - 1) {
                    if (h2[d2] !== undefined)
                      break;
                    try {
                      var y2 = u2.getDefault(r3, false);
                      y2 !== undefined && (h2[d2] = y2);
                    } catch (t5) {
                      r3.invalidate(e3 + "." + s2, t5);
                      break;
                    }
                    break;
                  }
                  s2 += (s2.length ? "." : "") + d2, h2[d2] = h2[d2] || {}, h2 = h2[d2];
                }
            }
          }
      }
      function St(t4, e3, r3, n2, i2) {
        i2 = i2 || "", e3.$__ != null && (e3 = e3._doc);
        for (var o2, a2, s2, c2 = Object.keys(e3), u2 = c2.length, f2 = 0, l2 = t4.$__.strictMode, h2 = t4.$__schema;f2 < u2; )
          p2(f2++);
        function p2(u3) {
          if ((s2 = c2[u3]) !== "__proto__" && s2 !== "constructor" && (a2 = i2 ? i2 + s2 : s2, o2 = h2.path(a2), !h2.$isRootDiscriminator || t4.$__isSelected(a2))) {
            var f3 = e3[s2];
            if (!o2 && rt.isPOJO(f3))
              r3[s2] || (r3[s2] = {}, l2 || (s2 in h2.tree) || (s2 in h2.methods) || (s2 in h2.virtuals) || (t4[s2] = r3[s2])), St(t4, f3, r3[s2], n2, a2 + ".");
            else if (o2) {
              if (r3.hasOwnProperty(s2) && f3 !== undefined && !n2.hydratedPopulatedDocs && delete r3[s2], f3 === null)
                r3[s2] = o2._castNullish(null);
              else if (f3 !== undefined) {
                var p3 = f3.$__ == null ? null : f3.$__.wasPopulated;
                if (!o2 || p3 || n2.hydratedPopulatedDocs)
                  r3[s2] = f3;
                else
                  try {
                    n2 && n2.setters ? r3[s2] = o2.applySetters(f3, t4, false) : r3[s2] = o2.cast(f3, t4, true);
                  } catch (e4) {
                    t4.invalidate(e4.path, new M({ path: e4.path, message: e4.message, type: "cast", value: e4.value, reason: e4 }));
                  }
              }
              t4.$isModified(a2) || t4.$__.activePaths.init(a2);
            } else
              r3[s2] = f3, l2 || i2 || (t4[s2] = f3);
          }
        }
      }
      function Ot(t4) {
        if (t4 == null)
          return true;
        if (d(t4) !== "object" || Array.isArray(t4))
          return false;
        for (var e3 = 0, r3 = Object.keys(t4);e3 < r3.length; e3++)
          if (!Ot(t4[r3[e3]]))
            return false;
        return true;
      }
      function jt(t4, e3, r3, n2) {
        var i2 = {};
        (function(t5) {
          var e4 = Object.keys(t5.$__.activePaths.getStatePaths("require")), r4 = 0, n3 = e4.length;
          for (r4 = 0;r4 < n3; ++r4) {
            var i3 = e4[r4], o3 = t5.$__schema.path(i3);
            if (o3 != null && typeof o3.originalRequiredValue == "function") {
              t5.$__.cachedRequired = t5.$__.cachedRequired || {};
              try {
                t5.$__.cachedRequired[i3] = o3.originalRequiredValue.call(t5, t5);
              } catch (e5) {
                t5.invalidate(i3, e5);
              }
            }
          }
        })(t4);
        var o2 = new Set(Object.keys(t4.$__.activePaths.getStatePaths("require")).filter(function(e4) {
          return !(!t4.$__isSelected(e4) && !t4.$isModified(e4)) && (t4.$__.cachedRequired == null || !(e4 in t4.$__.cachedRequired) || t4.$__.cachedRequired[e4]);
        }));
        function a2(t5) {
          o2.add(t5);
        }
        if (Object.keys(t4.$__.activePaths.getStatePaths("init")).forEach(a2), Object.keys(t4.$__.activePaths.getStatePaths("modify")).forEach(a2), Object.keys(t4.$__.activePaths.getStatePaths("default")).forEach(a2), !n2) {
          var s2, c2 = t4.$getAllSubdocs(), u2 = t4.modifiedPaths(), f2 = l(c2);
          try {
            for (f2.s();!(s2 = f2.n()).done; ) {
              var h2 = s2.value;
              if (h2.$basePath) {
                var p2, d2 = h2.$isSingleNested ? h2.$__pathRelativeToParent() : h2.$__fullPathWithIndexes(), y2 = l(h2.modifiedPaths());
                try {
                  for (y2.s();!(p2 = y2.n()).done; ) {
                    var b2 = p2.value;
                    o2.delete(d2 + "." + b2);
                  }
                } catch (t5) {
                  y2.e(t5);
                } finally {
                  y2.f();
                }
                !t4.$isModified(d2, null, u2) || t4.$__.activePaths.getStatePaths("modify").hasOwnProperty(d2) || t4.$isDefault(d2) || (o2.add(d2), t4.$__.pathsToScopes == null && (t4.$__.pathsToScopes = {}), t4.$__.pathsToScopes[d2] = h2.$isDocumentArrayElement ? h2.__parentArray : h2.$parent(), i2[d2] = { skipSchemaValidators: true }, h2.$isDocumentArrayElement && h2.__index != null && (i2[d2].index = h2.__index));
              }
            }
          } catch (t5) {
            f2.e(t5);
          } finally {
            f2.f();
          }
        }
        var m2, v2 = l(o2);
        try {
          for (v2.s();!(m2 = v2.n()).done; ) {
            var g2 = m2.value, _2 = t4.$__schema.path(g2);
            if (_2) {
              if (_2.$isMongooseDocumentArray) {
                var w2, S2 = l(o2);
                try {
                  for (S2.s();!(w2 = S2.n()).done; ) {
                    var O2 = w2.value;
                    (O2 == null || O2.startsWith(_2.path + ".")) && o2.delete(O2);
                  }
                } catch (t5) {
                  S2.e(t5);
                } finally {
                  S2.f();
                }
              }
              (_2.caster || _2.validators.length !== 0 || _2.$parentSchemaDocArray) && (!_2.$isMongooseArray || _2.$isMongooseDocumentArray || _2.$embeddedSchemaType.$isMongooseArray || _2.validators.length !== 0 || _2.$embeddedSchemaType.validators.length !== 0) || o2.delete(g2);
            }
          }
        } catch (t5) {
          v2.e(t5);
        } finally {
          v2.f();
        }
        Array.isArray(e3) ? o2 = function(t5, e4) {
          var r4, n3 = new Set(e4), i3 = new Map([]), o3 = l(e4);
          try {
            for (o3.s();!(r4 = o3.n()).done; ) {
              var a3 = r4.value;
              if (a3.indexOf(".") !== -1)
                for (var s3 = a3.split("."), c3 = s3[0], u3 = 1;u3 < s3.length; ++u3)
                  i3.set(c3, a3), c3 = c3 + "." + s3[u3];
            }
          } catch (t6) {
            o3.e(t6);
          } finally {
            o3.f();
          }
          var f3, h3 = new Set, p3 = l(t5);
          try {
            for (p3.s();!(f3 = p3.n()).done; ) {
              var d3 = f3.value;
              n3.has(d3) ? h3.add(d3) : i3.has(d3) && h3.add(i3.get(d3));
            }
          } catch (t6) {
            p3.e(t6);
          } finally {
            p3.f();
          }
          return h3;
        }(o2, e3) : Array.isArray(r3) && (o2 = function(t5, e4) {
          return e4 = new Set(e4), t5 = Array.from(t5).filter(function(t6) {
            return !e4.has(t6);
          }), new Set(t5);
        }(o2, r3)), function(t5, e4) {
          var r4, n3 = l(e4);
          try {
            for (n3.s();!(r4 = n3.n()).done; ) {
              var i3 = r4.value, o3 = t5.$__schema.path(i3);
              o3 && o3.$isMongooseArray && (Array.isArray(o3) || !o3.$isMongooseDocumentArray || o3 && o3.schemaOptions && o3.schemaOptions.required) && (!o3.$isMongooseArray || o3.$isMongooseDocumentArray || o3.$embeddedSchemaType.$isMongooseArray || o3.$embeddedSchemaType.validators.length !== 0) && $t(t5.$__getValue(i3), e4, i3);
            }
          } catch (t6) {
            n3.e(t6);
          } finally {
            n3.f();
          }
        }(t4, o2);
        var j2, $2 = { skipArrays: true }, A2 = l(o2);
        try {
          for (A2.s();!(j2 = A2.n()).done; ) {
            var E2 = j2.value;
            if (t4.$__schema.nested[E2]) {
              var x2 = t4.$__getValue(E2);
              ot(x2) && (x2 = x2.toObject({ transform: false }));
              var P2 = C(x2, E2, $2, t4.$__schema);
              Object.keys(P2).filter(function(e4) {
                return !t4.$__schema.singleNestedPaths.hasOwnProperty(e4);
              }).forEach(a2);
            }
          }
        } catch (t5) {
          A2.e(t5);
        } finally {
          A2.f();
        }
        var k2, M2 = l(o2);
        try {
          for (M2.s();!(k2 = M2.n()).done; ) {
            var I2 = k2.value, T2 = t4.$__schema.path(I2);
            if (T2 && (T2.$parentSchemaDocArray && typeof T2.$parentSchemaDocArray.path == "string" && o2.add(T2.$parentSchemaDocArray.path), T2.$isSchemaMap)) {
              var B2 = t4.$__getValue(I2);
              if (B2 != null) {
                var R2, N2 = l(B2.keys());
                try {
                  for (N2.s();!(R2 = N2.n()).done; ) {
                    var D2 = R2.value;
                    o2.add(I2 + "." + D2);
                  }
                } catch (t5) {
                  N2.e(t5);
                } finally {
                  N2.f();
                }
              }
            }
          }
        } catch (t5) {
          M2.e(t5);
        } finally {
          M2.f();
        }
        return [o2 = Array.from(o2), i2];
      }
      function $t(t4, e3, r3) {
        if (t4 != null)
          for (var n2 = t4.length, i2 = 0;i2 < n2; ++i2)
            Array.isArray(t4[i2]) ? $t(t4[i2], e3, r3 + "." + i2) : e3.add(r3 + "." + i2);
      }
      function At(t4, e3, r3, n2) {
        var i2, o2, a2, s2 = t4.$__schema, c2 = s2.virtuals, u2 = Object.keys(c2), f2 = u2.length, l2 = f2, h2 = t4._doc, p2 = typeof (n2 && n2.aliases) != "boolean" || n2.aliases;
        r3 = r3 || {};
        var d2 = null;
        if (Array.isArray(r3.virtuals))
          d2 = new Set(r3.virtuals);
        else if (r3.virtuals && r3.virtuals.pathsToSkip) {
          d2 = new Set(u2);
          for (var y2 = 0;y2 < r3.virtuals.pathsToSkip.length; y2++)
            d2.has(r3.virtuals.pathsToSkip[y2]) && d2.delete(r3.virtuals.pathsToSkip[y2]);
        }
        if (!h2)
          return e3;
        for (f2 = 0;f2 < l2; ++f2)
          if (i2 = u2[f2], (d2 == null || d2.has(i2)) && (p2 || !s2.aliases.hasOwnProperty(i2))) {
            if (o2 = i2, r3.path != null) {
              if (!i2.startsWith(r3.path + "."))
                continue;
              o2 = i2.substring(r3.path.length + 1);
            }
            if (o2.indexOf(".") !== -1 || o2 !== i2) {
              var b2 = o2.split(".");
              if ((a2 = R(t4.get(i2), r3)) !== undefined) {
                var m2 = b2.length;
                h2 = e3;
                for (var v2 = 0;v2 < m2 - 1; ++v2)
                  h2[b2[v2]] = h2[b2[v2]] || {}, h2 = h2[b2[v2]];
                h2[b2[m2 - 1]] = a2;
              }
            } else {
              if ((a2 = c2[i2].applyGetters(undefined, t4)) === undefined)
                continue;
              a2 = R(a2, r3), e3[o2] = a2;
            }
          }
        return e3;
      }
      function Et(t4, e3) {
        if (nt(e3))
          throw new Error("`transform` function must be synchronous, but the transform on path `" + t4 + "` returned a promise.");
      }
      function xt(t4, e3, r3) {
        var n2 = t4.$populated(e3, true);
        if (!n2 && t4.$__.selected) {
          var i2 = e3.split(".")[0];
          if (t4.$__.selected[i2 + ".$"])
            return i2;
        }
        if (n2 && rt.isMongooseArray(r3) && (n2.options.match || n2.options.options && rt.object.hasOwnProperty(n2.options.options, "limit") || n2.options.options && n2.options.options.skip || n2.options.select && (n2.options.select._id === 0 || /\s?-_id\s?/.test(n2.options.select)))) {
          var o2 = r3[st];
          if (Object.keys(o2).length === 0 || o2.$set || o2.$pop)
            return e3;
        }
      }
      function Pt(t4, e3, r3, n2, i2, o2) {
        if (o2 || (o2 = "$set"), r3[o2] || (r3[o2] = {}), r3[o2][n2.path] = i2, t4.$__schema.options.versionKey !== false && !function(t5, e4) {
          var r4 = t5.$__schema.options.skipVersioning;
          return !!r4 && r4[e4 = e4.replace(/\.\d+\./, ".")];
        }(t4, n2.path) && 3 & ~t4.$__.version && !t4.$__schema.options.optimisticConcurrency) {
          switch (o2) {
            case "$set":
            case "$unset":
            case "$pop":
            case "$pull":
            case "$pullAll":
            case "$push":
            case "$addToSet":
            case "$inc":
              break;
            default:
              return;
          }
          o2 === "$push" || o2 === "$addToSet" || o2 === "$pullAll" || o2 === "$pull" ? /\.\d+\.|\.\d+$/.test(n2.path) ? t4.$__.version = 3 : t4.$__.version = 2 : /^\$p/.test(o2) || Array.isArray(i2) ? t4.$__.version = 3 : /\.\d+\.|\.\d+$/.test(n2.path) && (t4.$__.version = 1);
        }
      }
      function kt(t4, e3, r3, n2, i2) {
        if (!r3.$set || !r3.$set[n2.path])
          if (typeof i2.$__getAtomics != "function") {
            var o2, a2, s2 = i2[st], c2 = Object.keys(s2), u2 = c2.length;
            if (u2 === 0)
              return rt.isMongooseObject(i2) ? i2 = i2.toObject({ depopulate: 1, _isNested: true }) : i2.valueOf && (i2 = i2.valueOf()), Pt(t4, 0, r3, n2, i2);
            for (;u2--; )
              o2 = s2[a2 = c2[u2]], rt.isMongooseObject(o2) ? o2 = o2.toObject({ depopulate: true, transform: false, _isNested: true }) : Array.isArray(o2) ? o2 = o2.map(f2) : o2.valueOf && (o2 = o2.valueOf()), a2 === "$addToSet" && (o2 = { $each: o2 }), Pt(t4, 0, r3, n2, o2, a2);
          } else
            i2.$__getAtomics().forEach(function(e4) {
              var i3 = e4[0], o3 = e4[1];
              Pt(t4, 0, r3, n2, o3, i3);
            });
        function f2(t5) {
          return rt.isMongooseObject(t5) ? t5.toObject({ depopulate: 1, _isNested: true }) : t5;
        }
      }
      gt.prototype.$__schema, gt.prototype.schema, Object.defineProperty(gt.prototype, "$locals", { configurable: false, enumerable: false, get: function() {
        return this.$__.locals == null && (this.$__.locals = {}), this.$__.locals;
      }, set: function(t4) {
        this.$__.locals = t4;
      } }), gt.prototype.isNew, Object.defineProperty(gt.prototype, "$where", { configurable: false, enumerable: false, writable: true }), gt.prototype.id, gt.prototype.$errors, Object.defineProperty(gt.prototype, "$op", { get: function() {
        return this.$__.op || null;
      }, set: function(t4) {
        this.$__.op = t4;
      } }), gt.prototype.$__buildDoc = function(t4, e3, r3, n2, i2) {
        for (var o2 = {}, a2 = Object.keys(this.$__schema.paths).filter(function(t5) {
          return !t5.includes("$*");
        }), s2 = a2.length, c2 = 0;c2 < s2; ++c2) {
          var u2 = a2[c2];
          if (u2 === "_id") {
            if (r3)
              continue;
            if (t4 && "_id" in t4)
              continue;
          }
          for (var f2 = this.$__schema.paths[u2].splitPath(), l2 = f2.length, h2 = l2 - 1, p2 = "", d2 = o2, y2 = false, b2 = 0;b2 < l2; ++b2) {
            var m2 = f2[b2];
            if (p2.length ? p2 += "." + m2 : p2 = m2, n2 === true) {
              if (p2 in e3)
                break;
            } else if (n2 === false && e3 && !y2) {
              if (p2 in e3)
                y2 = true;
              else if (!i2[p2])
                break;
            }
            b2 < h2 && (d2 = d2[m2] || (d2[m2] = {}));
          }
        }
        this._doc = o2;
      }, gt.prototype.toBSON = function() {
        return this.toObject(Y);
      }, gt.prototype.init = function(t4, e3, r3) {
        return typeof e3 == "function" && (r3 = e3, e3 = null), this.$__init(t4, e3), r3 && r3(null, this), this;
      }, gt.prototype.$init = function() {
        return this.constructor.prototype.init.apply(this, arguments);
      }, gt.prototype.$__init = function(t4, e3) {
        if (this.$isNew = false, e3 = e3 || {}, t4._id != null && e3.populated && e3.populated.length) {
          var r3, n2 = String(t4._id), i2 = l(e3.populated);
          try {
            for (i2.s();!(r3 = i2.n()).done; ) {
              var o2 = r3.value;
              if (o2.isVirtual ? this.$populated(o2.path, rt.getValue(o2.path, t4), o2) : this.$populated(o2.path, o2._docs[n2], o2), o2._childDocs != null) {
                var a2, s2 = l(o2._childDocs);
                try {
                  for (s2.s();!(a2 = s2.n()).done; ) {
                    var c2 = a2.value;
                    c2 != null && c2.$__ != null && (c2.$__.parent = this);
                  }
                } catch (t5) {
                  s2.e(t5);
                } finally {
                  s2.f();
                }
                o2._childDocs = [];
              }
            }
          } catch (t5) {
            i2.e(t5);
          } finally {
            i2.f();
          }
        }
        St(this, t4, this._doc, e3), Q(this, e3.populated), this.$emit("init", this), this.constructor.emit("init", this);
        var u2 = this.$__.exclude === false && this.$__.selected ? I(this.$__.selected) : null;
        return T(this, this.$__.selected, this.$__.exclude, u2, false, this.$__.skipDefaults), this;
      }, gt.prototype.updateOne = function(t4, e3, r3) {
        var n2 = this.constructor.updateOne({ _id: this._doc._id }, t4, e3), i2 = this;
        return n2.pre(function(t5) {
          i2.constructor._middleware.execPre("updateOne", i2, [i2], t5);
        }), n2.post(function(t5) {
          i2.constructor._middleware.execPost("updateOne", i2, [i2], {}, t5);
        }), this.$session() != null && (("session" in n2.options) || (n2.options.session = this.$session())), r3 != null ? n2.exec(r3) : n2;
      }, gt.prototype.replaceOne = function() {
        var t4 = Array.prototype.slice.call(arguments);
        return t4.unshift({ _id: this._doc._id }), this.constructor.replaceOne.apply(this.constructor, t4);
      }, gt.prototype.$session = function(t4) {
        if (arguments.length === 0)
          return this.$__.session != null && this.$__.session.hasEnded ? (this.$__.session = null, null) : this.$__.session;
        if (t4 != null && t4.hasEnded)
          throw new S("Cannot set a document's session to a session that has ended. Make sure you haven't called `endSession()` on the session you are passing to `$session()`.");
        if (t4 != null || this.$__.session != null) {
          if (this.$__.session = t4, !this.$isSubdocument) {
            var e3, r3 = l(this.$getAllSubdocs());
            try {
              for (r3.s();!(e3 = r3.n()).done; )
                e3.value.$session(t4);
            } catch (t5) {
              r3.e(t5);
            } finally {
              r3.f();
            }
          }
          return t4;
        }
      }, gt.prototype.$timestamps = function(t4) {
        return arguments.length === 0 ? this.$__.timestamps != null ? this.$__.timestamps : this.$__schema ? this.$__schema.options.timestamps : undefined : (t4 !== this.$timestamps() && (this.$__.timestamps = t4), this);
      }, gt.prototype.overwrite = function(t4) {
        for (var e3 = 0, r3 = Array.from(new Set(Object.keys(this._doc).concat(Object.keys(t4))));e3 < r3.length; e3++) {
          var n2 = r3[e3];
          n2 !== "_id" && (this.$__schema.options.versionKey && n2 === this.$__schema.options.versionKey || this.$__schema.options.discriminatorKey && n2 === this.$__schema.options.discriminatorKey || this.$set(n2, t4[n2]));
        }
        return this;
      }, gt.prototype.$set = function(t4, e3, r3, n2) {
        var i2 = this;
        rt.isPOJO(r3) && (n2 = r3, r3 = undefined);
        var o2, a2, s2, c2, h2 = n2 && n2.merge, p2 = r3 && r3 !== true, y2 = r3 === true, b2 = 0, m2 = n2 && "strict" in n2, v2 = m2 ? n2.strict : this.$__.strictMode;
        if (p2 && ((this.$__.adhocPaths || (this.$__.adhocPaths = {}))[t4] = this.$__schema.interpretAsType(t4, r3, this.$__schema.options)), t4 == null) {
          var g2 = [e3, t4];
          t4 = g2[0], e3 = g2[1];
        } else if (typeof t4 != "string") {
          if (t4 instanceof gt && (t4 = t4.$__isNested ? t4.toObject() : t4.$__schema === this.$__schema ? At(t4, u({}, t4._doc)) : t4._doc), t4 == null) {
            var _2 = [e3, t4];
            t4 = _2[0], e3 = _2[1];
          }
          c2 = e3 ? e3 + "." : "";
          var w2 = (o2 = q(this.$__schema, t4)).length, j2 = n2 && n2._skipMinimizeTopLevel || false;
          if (w2 === 0 && j2)
            return delete n2._skipMinimizeTopLevel, e3 && this.$set(e3, {}), this;
          n2 = Object.assign({}, n2, { _skipMinimizeTopLevel: false });
          for (var A2 = 0;A2 < w2; ++A2) {
            s2 = o2[A2];
            var E2 = c2 ? c2 + s2 : s2;
            a2 = this.$__schema.pathType(E2);
            var x2 = t4[s2];
            if (r3 !== true || c2 || x2 == null || a2 !== "nested" || this._doc[s2] == null || delete this._doc[s2], rt.isNonBuiltinObject(x2) && a2 === "nested")
              this.$set(E2, x2, y2, Object.assign({}, n2, { _skipMarkModified: true })), wt(this.$get(E2), E2, this);
            else if (v2) {
              if (y2 && x2 === undefined && this.$get(E2) !== undefined)
                continue;
              if (a2 === "adhocOrUndefined" && (a2 = U(this, E2, { typeOnly: true })), a2 === "real" || a2 === "virtual")
                this.$set(E2, x2, y2, n2);
              else if (a2 === "nested" && x2 instanceof gt)
                this.$set(E2, x2.toObject({ transform: false }), y2, n2);
              else {
                if (v2 === "throw")
                  throw a2 === "nested" ? new $(s2, x2) : new P(s2);
                a2 === "nested" && x2 == null && this.$set(E2, x2, y2, n2);
              }
            } else
              x2 !== undefined && this.$set(E2, x2, y2, n2);
          }
          for (var k2 = {}, M2 = Object.keys(this.$__schema.tree), I2 = 0, T2 = M2.length;I2 < T2; ++I2)
            (s2 = M2[I2]) && this._doc.hasOwnProperty(s2) && (k2[s2] = undefined);
          return this._doc = Object.assign(k2, this._doc), this;
        }
        var R2 = this.$__schema.pathType(t4), N2 = null;
        if (R2 === "adhocOrUndefined" && (N2 = t4.indexOf(".") === -1 ? [t4] : t4.split("."), R2 = U(this, N2, { typeOnly: true })), R2 === "adhocOrUndefined" && !m2) {
          N2 == null && (N2 = t4.indexOf(".") === -1 ? [t4] : t4.split("."));
          var D2 = F(this.$__schema, N2);
          D2 !== undefined && (v2 = D2);
        }
        e3 = V(e3, true);
        var L2, C2 = i2.$__.priorDoc != null ? i2.$__.priorDoc.$__getValue(t4) : y2 ? undefined : i2.$__getValue(t4);
        if (R2 === "nested" && e3) {
          if (d(e3) === "object" && e3 != null) {
            if (e3.$__ != null && (e3 = e3.toObject(Y)), e3 == null)
              return this.invalidate(t4, new S.CastError("Object", e3, t4)), this;
            var z2 = this.$isModified(t4), K2 = this.$__.savedState != null && this.$__.savedState.hasOwnProperty(t4);
            if (this.$__.savedState != null && !this.$isNew && !this.$__.savedState.hasOwnProperty(t4)) {
              var H2 = this.$__getValue(t4);
              this.$__.savedState[t4] = H2;
              for (var W2 = 0, J2 = Object.keys(H2 || {});W2 < J2.length; W2++) {
                var G2 = J2[W2];
                this.$__.savedState[t4 + "." + G2] = H2[G2];
              }
            }
            if (h2)
              return this.$set(e3, t4, y2, n2);
            this.$__setValue(t4, null), B(this, t4);
            var Q2 = q(this.$__schema, e3, t4);
            this.$__setValue(t4, {});
            var X2, tt2 = l(Q2);
            try {
              for (tt2.s();!(X2 = tt2.n()).done; ) {
                var et2 = X2.value;
                this.$set(t4 + "." + et2, e3[et2], y2, u(u({}, n2), {}, { _skipMarkModified: true }));
              }
            } catch (t5) {
              tt2.e(t5);
            } finally {
              tt2.f();
            }
            return C2 == null || z2 && !K2 || !rt.deepEqual(K2 ? this.$__.savedState[t4] : C2, e3) ? this.markModified(t4) : this.unmarkModified(t4), this;
          }
          return this.invalidate(t4, new S.CastError("Object", e3, t4)), this;
        }
        if (N2 == null && (N2 = t4.indexOf(".") === -1 ? [t4] : t4.split(".")), typeof this.$__schema.aliases[N2[0]] == "string" && (N2[0] = this.$__schema.aliases[N2[0]]), R2 === "adhocOrUndefined" && v2) {
          var nt2;
          for (b2 = 0;b2 < N2.length; ++b2) {
            var it2 = N2.slice(0, b2 + 1).join(".");
            if (b2 + 1 < N2.length && this.$__schema.pathType(it2) === "virtual")
              return Z.set(t4, e3, this), this;
            if ((L2 = this.$__schema.path(it2)) != null) {
              if (L2 instanceof O) {
                nt2 = true;
                break;
              }
              if (L2.$isSchemaMap && L2.$__schemaType instanceof O && b2 < N2.length - 1) {
                nt2 = true, L2 = L2.$__schemaType;
                break;
              }
            }
          }
          if (L2 == null && (L2 = U(this, t4)), !nt2 && !L2) {
            if (v2 === "throw")
              throw new P(t4);
            return this;
          }
        } else {
          if (R2 === "virtual")
            return (L2 = this.$__schema.virtualpath(t4)).applySetters(e3, this), this;
          L2 = this.$__path(t4);
        }
        var ot2, at2 = this._doc, st2 = "";
        for (b2 = 0;b2 < N2.length - 1; ++b2)
          at2 = at2[N2[b2]], st2 += (st2.length !== 0 ? "." : "") + N2[b2], at2 || (this.$set(st2, {}), this.$__isSelected(st2) || this.unmarkModified(st2), at2 = this.$__getValue(st2));
        if (N2.length <= 1)
          ot2 = t4;
        else {
          var ct2 = N2.length;
          for (b2 = 0;b2 < ct2; ++b2) {
            var ut2 = N2.slice(0, b2 + 1).join(".");
            if (this.$get(ut2, null, { getters: false }) === null) {
              ot2 = ut2;
              break;
            }
          }
          ot2 || (ot2 = t4);
        }
        if (!L2)
          return this.$__set(ot2, t4, n2, y2, N2, L2, e3, C2), R2 === "nested" && e3 == null && B(this, t4), this;
        if ((L2.$isSingleNested || L2.$isMongooseArray) && function(t5, e4) {
          if (t5.$__.validationError) {
            for (var r4 = 0, n3 = Object.keys(t5.$__.validationError.errors);r4 < n3.length; r4++) {
              var i3 = n3[r4];
              i3.startsWith(e4 + ".") && delete t5.$__.validationError.errors[i3];
            }
            Object.keys(t5.$__.validationError.errors).length === 0 && (t5.$__.validationError = null);
          }
        }(this, t4), e3 != null && h2 && L2.$isSingleNested) {
          e3 instanceof gt && (e3 = e3.toObject({ virtuals: false, transform: false }));
          for (var ft2 = 0, lt2 = Object.keys(e3);ft2 < lt2.length; ft2++) {
            var ht2 = lt2[ft2];
            this.$set(t4 + "." + ht2, e3[ht2], y2, n2);
          }
          return this;
        }
        var dt2 = true;
        try {
          var yt2, vt2 = function() {
            if (L2.options == null)
              return false;
            if (!(e3 instanceof gt))
              return false;
            var t5 = e3.constructor, r4 = L2.options.ref;
            if (r4 != null && (r4 === t5.modelName || r4 === t5.baseModelName))
              return true;
            var n3 = L2.options.refPath;
            if (n3 == null)
              return false;
            var i3 = e3.get(n3);
            return i3 === t5.modelName || i3 === t5.baseModelName;
          }(), _t2 = false;
          if (vt2 && e3 instanceof gt && (!e3.$__.wasPopulated || rt.deepEqual(e3.$__.wasPopulated.value, e3._doc._id))) {
            var St2 = L2 && L2.$isSingleNested ? L2.cast(e3, this) : e3._doc._id;
            this.$populated(t4, St2, f({}, pt, e3.constructor)), e3.$__.wasPopulated = { value: St2 }, _t2 = true;
          }
          var Ot2 = this.$__schema.options.typeKey;
          if (L2.options && Array.isArray(L2.options[Ot2]) && L2.options[Ot2].length && L2.options[Ot2][0] && L2.options[Ot2][0].ref && function(t5, e4) {
            if (!Array.isArray(t5))
              return false;
            if (t5.length === 0)
              return false;
            var r4, n3 = l(t5);
            try {
              for (n3.s();!(r4 = n3.n()).done; ) {
                var i3 = r4.value;
                if (!(i3 instanceof gt))
                  return false;
                if (i3.constructor.modelName == null)
                  return false;
                if (i3.constructor.modelName != e4 && i3.constructor.baseModelName != e4)
                  return false;
              }
            } catch (t6) {
              n3.e(t6);
            } finally {
              n3.f();
            }
            return true;
          }(e3, L2.options[Ot2][0].ref)) {
            yt2 = f({}, pt, e3[0].constructor), this.$populated(t4, e3.map(function(t5) {
              return t5._doc._id;
            }), yt2);
            var jt2, $t2 = l(e3);
            try {
              for ($t2.s();!(jt2 = $t2.n()).done; ) {
                var Et2 = jt2.value;
                Et2.$__.wasPopulated = { value: Et2._doc._id };
              }
            } catch (t5) {
              $t2.e(t5);
            } finally {
              $t2.f();
            }
            _t2 = true;
          }
          if (!vt2 || !L2.$isSingleNested || !e3.$__) {
            var xt2 = this;
            this.$__schema.singleNestedPaths[t4] != null && N2.length > 1 && (xt2 = bt(this, N2, this.schema)), e3 = n2 != null && n2.overwriteImmutable ? L2.applySetters(e3, xt2, false, C2, { overwriteImmutable: true }) : L2.applySetters(e3, xt2, false, C2);
          }
          if (Array.isArray(e3) && !Array.isArray(L2) && L2.$isMongooseDocumentArray && e3.length !== 0 && e3[0] != null && e3[0].$__ != null && e3[0].$__.populated != null) {
            for (var Pt2 = Object.keys(e3[0].$__.populated), kt2 = function() {
              var r4 = It[Mt];
              i2.$populated(t4 + "." + r4, e3.map(function(t5) {
                return t5.$populated(r4);
              }), e3[0].$__.populated[r4].options);
            }, Mt = 0, It = Pt2;Mt < It.length; Mt++)
              kt2();
            _t2 = true;
          }
          if (!_t2 && this.$__.populated) {
            if (Array.isArray(e3) && this.$__.populated[t4])
              for (var Tt = 0;Tt < e3.length; ++Tt)
                e3[Tt] instanceof gt && e3.set(Tt, e3[Tt]._doc._id, true);
            delete this.$__.populated[t4];
          }
          e3 != null && L2.$isSingleNested && function(t5, e4, r4) {
            var n3 = e4.schema;
            if (n3 != null)
              for (var i3 = 0, o3 = Object.keys(n3.paths);i3 < o3.length; i3++) {
                var a3 = o3[i3], s3 = n3.paths[a3];
                if (s3.$immutableSetter != null) {
                  var c3 = r4 == null ? undefined : r4.$__getValue(a3);
                  s3.$immutableSetter.call(t5, c3);
                }
              }
          }(e3, L2, C2), this.$markValid(t4);
        } catch (r4) {
          r4 instanceof S.StrictModeError && r4.isImmutableError ? this.invalidate(t4, r4) : r4 instanceof S.CastError ? (this.invalidate(r4.path, r4), r4.$originalErrorPath && this.invalidate(t4, new S.CastError(L2.instance, e3, t4, r4.$originalErrorPath))) : this.invalidate(t4, new S.CastError(L2.instance, e3, t4, r4)), dt2 = false;
        }
        if (dt2) {
          var Bt, Rt = null, Nt = null;
          if (!y2) {
            var Dt = this.$isSubdocument ? this.ownerDocument() : this;
            Rt = Dt.$__.savedState, Nt = this.$isSubdocument ? this.$__.fullPath + "." + t4 : t4, Dt.$__saveInitialState(Nt);
          }
          this.$__set(ot2, t4, n2, y2, N2, L2, e3, C2);
          var Lt = !((Bt = this.$__.session) === null || Bt === undefined || !Bt.transaction), Ct = this.$__.session && this.$__.session[mt] && this.$__.session[mt].has(this) && this.$__.session[mt].get(this).modifiedPaths && !this.$__.session[mt].get(this).modifiedPaths.has(Nt);
          Rt != null && Rt.hasOwnProperty(Nt) && (!Lt || Ct) && rt.deepEqual(e3, Rt[Nt]) && this.unmarkModified(t4);
        }
        return L2.$isSingleNested && (this.isDirectModified(t4) || e3 == null) && B(this, t4), this;
      }, gt.prototype.set = gt.prototype.$set, gt.prototype.$__shouldModify = function(t4, e3, r3, n2, i2, o2, a2, s2) {
        return !(r3 && r3._skipMarkModified || !this.$isNew && !(e3 in this.$__.activePaths.getStatePaths("modify")) && (a2 !== undefined || this.$__isSelected(e3)) && (a2 === undefined && (e3 in this.$__.activePaths.getStatePaths("default")) || this.$populated(e3) && a2 instanceof gt && it(a2._doc._id, s2) || it(a2, s2 !== undefined ? s2 : rt.getValue(e3, this)) && (n2 || a2 == null || !(e3 in this.$__.activePaths.getStatePaths("default")) || !it(a2, o2.getDefault(this, n2)))));
      }, gt.prototype.$__set = function(t4, e3, n2, i2, o2, a2, s2, c2) {
        m = m || r2(8578);
        var u2 = this.$__shouldModify(t4, e3, n2, i2, o2, a2, s2, c2);
        u2 ? (this.$__.primitiveAtomics && this.$__.primitiveAtomics[e3] && (delete this.$__.primitiveAtomics[e3], Object.keys(this.$__.primitiveAtomics).length === 0 && delete this.$__.primitiveAtomics), this.markModified(t4), b || (b = r2(2918)), s2 && rt.isMongooseArray(s2) && (s2._registerAtomic("$set", s2), rt.isMongooseDocumentArray(s2) && s2.forEach(function(t5) {
          t5 && t5.__parentArray && (t5.__parentArray = s2);
        }))) : Array.isArray(s2) && Array.isArray(c2) && rt.isMongooseArray(s2) && rt.isMongooseArray(c2) && (s2[st] = c2[st], s2[at] = c2[at], rt.isMongooseDocumentArray(s2) && s2.forEach(function(t5) {
          t5 != null && (t5.$isNew = false);
        }));
        for (var f2 = this._doc, l2 = 0, h2 = o2.length, p2 = "";l2 < h2; l2++) {
          var d2 = l2 + 1 === h2;
          if (p2 += p2 ? "." + o2[l2] : o2[l2], vt.has(o2[l2]))
            return;
          if (d2)
            f2 instanceof Map ? f2.set(o2[l2], s2) : f2.$isSingleNested ? ((o2[l2] in f2) || (f2[o2[l2]] = s2), f2._doc[o2[l2]] = s2, u2 && f2.markModified(o2[l2])) : f2[o2[l2]] = s2;
          else {
            var y2 = f2 instanceof Map, v2 = y2 ? f2.get(o2[l2]) : f2[o2[l2]];
            rt.isPOJO(v2) || v2 && v2 instanceof m || v2 && !Array.isArray(v2) && v2.$isSingleNested || v2 && Array.isArray(v2) ? f2 = v2 : v2 == null ? (v2 = {}, y2 ? f2.set(o2[l2], v2) : f2[o2[l2]] = v2, f2 = v2) : f2 = v2;
          }
        }
      }, gt.prototype.$__getValue = function(t4) {
        return rt.getValue(t4, this._doc);
      }, gt.prototype.$inc = function(t4, e3) {
        var r3 = this;
        if (e3 == null && (e3 = 1), Array.isArray(t4))
          return t4.forEach(function(t5) {
            return r3.$inc(t5, e3);
          }), this;
        var n2 = this.$__path(t4);
        if (n2 == null) {
          if (this.$__.strictMode === "throw")
            throw new P(t4);
          if (this.$__.strictMode === true)
            return this;
        } else if (n2.instance !== "Number")
          return this.invalidate(t4, new S.CastError(n2.instance, e3, t4)), this;
        var i2 = this.$__getValue(t4) || 0, o2 = false, a2 = null, s2 = e3;
        try {
          e3 = n2.cast(e3), s2 = (a2 = n2.applySetters(i2 + e3, this)) - i2, o2 = true;
        } catch (r4) {
          this.invalidate(t4, new S.CastError("number", e3, t4, r4));
        }
        return o2 && (this.$__.primitiveAtomics = this.$__.primitiveAtomics || {}, this.$__.primitiveAtomics[t4] == null ? this.$__.primitiveAtomics[t4] = { $inc: s2 } : this.$__.primitiveAtomics[t4].$inc += s2, this.markModified(t4), this.$__setValue(t4, a2)), this;
      }, gt.prototype.$__setValue = function(t4, e3) {
        return rt.setValue(t4, e3, this._doc), this;
      }, gt.prototype.get = function(t4, e3, r3) {
        var n2;
        r3 == null && (r3 = {}), e3 && (n2 = this.$__schema.interpretAsType(t4, e3, this.$__schema.options));
        var i2 = r3.noDottedPath, o2 = i2 ? this.$__schema.paths[t4] : this.$__path(t4);
        if (o2 == null && (o2 = this.$__schema.virtualpath(t4)) != null)
          return o2.applyGetters(undefined, this);
        if (i2) {
          var a2 = this._doc[t4];
          return n2 && (a2 = n2.cast(a2)), o2 != null && r3.getters !== false ? o2.applyGetters(a2, this) : a2;
        }
        if (o2 != null && o2.instance === "Mixed") {
          var s2 = this.$__schema.virtualpath(t4);
          s2 != null && (o2 = s2);
        }
        var c2 = t4.indexOf(".") !== -1, u2 = this._doc, f2 = c2 ? t4.split(".") : [t4];
        typeof this.$__schema.aliases[f2[0]] == "string" && (f2[0] = this.$__schema.aliases[f2[0]]);
        for (var l2 = 0, h2 = f2.length;l2 < h2; l2++)
          u2 && u2._doc && (u2 = u2._doc), u2 = u2 == null ? undefined : u2 instanceof Map ? u2.get(f2[l2], { getters: false }) : l2 === h2 - 1 ? rt.getValue(f2[l2], u2) : u2[f2[l2]];
        if (n2 && (u2 = n2.cast(u2)), o2 != null && r3.getters !== false)
          u2 = o2.applyGetters(u2, this);
        else if (this.$__schema.nested[t4] && r3.virtuals)
          return At(this, R(u2) || {}, { path: t4 });
        return u2;
      }, gt.prototype[ht] = gt.prototype.get, gt.prototype.$get = gt.prototype.get, gt.prototype.$__path = function(t4) {
        var e3 = this.$__.adhocPaths;
        return (e3 && e3.hasOwnProperty(t4) ? e3[t4] : null) || this.$__schema.path(t4);
      }, gt.prototype.markModified = function(t4, e3) {
        this.$__saveInitialState(t4), this.$__.activePaths.modify(t4), e3 == null || this.$isSubdocument || (this.$__.pathsToScopes = this.$__pathsToScopes || {}, this.$__.pathsToScopes[t4] = e3);
      }, gt.prototype.$__saveInitialState = function(t4) {
        var e3 = this.$__.savedState, r3 = t4;
        if (e3 != null) {
          var n2 = r3.indexOf("."), i2 = n2 === -1 ? r3 : r3.slice(0, n2);
          e3.hasOwnProperty(i2) || (e3[i2] = R(this.$__getValue(i2)));
        }
      }, gt.prototype.unmarkModified = function(t4) {
        this.$__.activePaths.init(t4), this.$__.pathsToScopes != null && delete this.$__.pathsToScopes[t4];
      }, gt.prototype.$ignore = function(t4) {
        this.$__.activePaths.ignore(t4);
      }, gt.prototype.directModifiedPaths = function() {
        return Object.keys(this.$__.activePaths.getStatePaths("modify"));
      }, gt.prototype.$isEmpty = function(t4) {
        var e3 = { minimize: true, virtuals: false, getters: false, transform: false };
        if (arguments.length !== 0) {
          var r3 = this.$get(t4);
          return r3 == null || d(r3) === "object" && (rt.isPOJO(r3) ? Ot(r3) : Object.keys(r3.toObject(e3)).length === 0);
        }
        return Object.keys(this.toObject(e3)).length === 0;
      }, gt.prototype.modifiedPaths = function(t4) {
        t4 = t4 || {};
        var e3 = Object.keys(this.$__.activePaths.getStatePaths("modify")), r3 = new Set, n2 = 0, i2 = 0, o2 = e3.length;
        for (n2 = 0;n2 < o2; ++n2) {
          var a2 = e3[n2], s2 = tt(a2), c2 = s2.length;
          for (i2 = 0;i2 < c2; ++i2)
            r3.add(s2[i2]);
          if (t4.includeChildren) {
            var u2 = 0, f2 = this.$get(a2);
            if (d(f2) === "object" && f2 !== null) {
              f2._doc && (f2 = f2._doc);
              var l2 = f2.length;
              if (Array.isArray(f2))
                for (u2 = 0;u2 < l2; ++u2) {
                  var h2 = a2 + "." + u2;
                  if (!r3.has(h2) && (r3.add(h2), f2[u2] != null && f2[u2].$__)) {
                    var p2 = f2[u2].modifiedPaths(), y2 = 0, b2 = p2.length;
                    for (y2 = 0;y2 < b2; ++y2)
                      r3.add(h2 + "." + p2[y2]);
                  }
                }
              else {
                var m2 = Object.keys(f2), v2 = 0, g2 = m2.length;
                for (v2 = 0;v2 < g2; ++v2)
                  r3.add(a2 + "." + m2[v2]);
              }
            }
          }
        }
        return Array.from(r3);
      }, gt.prototype[ft] = gt.prototype.modifiedPaths, gt.prototype.isModified = function(t4, e3, r3) {
        var n2 = this;
        if (t4) {
          var i2 = e3 && e3.ignoreAtomics, o2 = this.$__.activePaths.states.modify;
          if (o2 == null)
            return false;
          typeof t4 == "string" && (t4 = t4.indexOf(" ") === -1 ? [t4] : t4.split(" "));
          var a2, s2 = l(t4);
          try {
            for (s2.s();!(a2 = s2.n()).done; )
              if (o2[a2.value] != null)
                return true;
          } catch (t5) {
            s2.e(t5);
          } finally {
            s2.f();
          }
          var c2 = r3 || this[ft](), u2 = t4.some(function(t5) {
            return !!~c2.indexOf(t5);
          }), f2 = Object.keys(o2);
          return i2 && (f2 = f2.filter(function(t5) {
            var e4 = n2.$__getValue(t5);
            return e4 == null || e4[st] == null || e4[st].$set !== undefined;
          })), u2 || t4.some(function(t5) {
            return f2.some(function(e4) {
              return e4 === t5 || t5.startsWith(e4 + ".");
            });
          });
        }
        return this.$__.activePaths.some("modify");
      }, gt.prototype.$isModified = gt.prototype.isModified, gt.prototype[ut] = gt.prototype.isModified, gt.prototype.$isDefault = function(t4) {
        var e3 = this;
        if (t4 == null)
          return this.$__.activePaths.some("default");
        if (typeof t4 == "string" && t4.indexOf(" ") === -1)
          return this.$__.activePaths.getStatePaths("default").hasOwnProperty(t4);
        var r3 = t4;
        return Array.isArray(r3) || (r3 = r3.split(" ")), r3.some(function(t5) {
          return e3.$__.activePaths.getStatePaths("default").hasOwnProperty(t5);
        });
      }, gt.prototype.$isDeleted = function(t4) {
        return arguments.length === 0 ? !!this.$__.isDeleted : (this.$__.isDeleted = !!t4, this);
      }, gt.prototype.isDirectModified = function(t4) {
        var e3 = this;
        if (t4 == null)
          return this.$__.activePaths.some("modify");
        if (typeof t4 == "string" && t4.indexOf(" ") === -1) {
          var r3 = this.$__.activePaths.getStatePaths("modify").hasOwnProperty(t4);
          if (r3 || t4.indexOf(".") === -1)
            return r3;
          for (var n2 = t4.split("."), i2 = 0;i2 < n2.length - 1; ++i2) {
            var o2 = n2.slice(0, i2 + 1).join("."), a2 = this.$get(o2);
            if (a2 != null && a2.$__ != null && a2.isDirectModified(n2.slice(i2 + 1).join(".")))
              return true;
          }
          return false;
        }
        var s2 = t4;
        return typeof s2 == "string" && (s2 = s2.split(" ")), s2.some(function(t5) {
          return e3.isDirectModified(t5);
        });
      }, gt.prototype.isInit = function(t4) {
        var e3 = this;
        if (t4 == null)
          return this.$__.activePaths.some("init");
        if (typeof t4 == "string" && t4.indexOf(" ") === -1)
          return this.$__.activePaths.getStatePaths("init").hasOwnProperty(t4);
        var r3 = t4;
        return Array.isArray(r3) || (r3 = r3.split(" ")), r3.some(function(t5) {
          return e3.$__.activePaths.getStatePaths("init").hasOwnProperty(t5);
        });
      }, gt.prototype.isSelected = function(t4) {
        var e3 = this;
        if (this.$__.selected == null)
          return true;
        if (!t4)
          return false;
        if (t4 === "_id")
          return this.$__.selected._id !== 0;
        if (t4.indexOf(" ") !== -1 && (t4 = t4.split(" ")), Array.isArray(t4))
          return t4.some(function(t5) {
            return e3.$__isSelected(t5);
          });
        var r3 = Object.keys(this.$__.selected), n2 = null;
        if (r3.length === 1 && r3[0] === "_id")
          return this.$__.selected._id === 0;
        for (var i2 = 0, o2 = r3;i2 < o2.length; i2++) {
          var a2 = o2[i2];
          if (a2 !== "_id" && H(this.$__.selected[a2])) {
            n2 = !!this.$__.selected[a2];
            break;
          }
        }
        if (n2 === null)
          return true;
        if (t4 in this.$__.selected)
          return n2;
        for (var s2 = t4 + ".", c2 = 0, u2 = r3;c2 < u2.length; c2++) {
          var f2 = u2[c2];
          if (f2 !== "_id") {
            if (f2.startsWith(s2))
              return n2 || f2 !== s2;
            if (s2.startsWith(f2 + "."))
              return n2;
          }
        }
        return !n2;
      }, gt.prototype.$__isSelected = gt.prototype.isSelected, gt.prototype.isDirectSelected = function(t4) {
        var e3 = this;
        if (this.$__.selected == null)
          return true;
        if (t4 === "_id")
          return this.$__.selected._id !== 0;
        if (t4.indexOf(" ") !== -1 && (t4 = t4.split(" ")), Array.isArray(t4))
          return t4.some(function(t5) {
            return e3.isDirectSelected(t5);
          });
        var r3 = Object.keys(this.$__.selected), n2 = null;
        if (r3.length === 1 && r3[0] === "_id")
          return this.$__.selected._id === 0;
        for (var i2 = 0, o2 = r3;i2 < o2.length; i2++) {
          var a2 = o2[i2];
          if (a2 !== "_id" && H(this.$__.selected[a2])) {
            n2 = !!this.$__.selected[a2];
            break;
          }
        }
        return n2 === null || (this.$__.selected.hasOwnProperty(t4) ? n2 : !n2);
      }, gt.prototype.validate = function() {
        var t4 = s(o().mark(function t(e3, r3) {
          var n2, i2, a2, s2 = this, c2 = arguments;
          return o().wrap(function(t5) {
            for (;; )
              switch (t5.prev = t5.next) {
                case 0:
                  if (typeof e3 != "function" && typeof r3 != "function" && typeof c2[2] != "function") {
                    t5.next = 2;
                    break;
                  }
                  throw new S("Document.prototype.validate() no longer accepts a callback");
                case 2:
                  if (this.$op = "validate", c2.length === 1 && (d(c2[0]) !== "object" || Array.isArray(c2[0]) || (r3 = c2[0], e3 = null)), r3 && typeof r3.pathsToSkip == "string" && (i2 = r3.pathsToSkip.indexOf(" ") === -1, r3.pathsToSkip = i2 ? [r3.pathsToSkip] : r3.pathsToSkip.split(" ")), a2 = r3 && r3._skipParallelValidateCheck, this.$isSubdocument != null || (this.$__.validating && !a2 ? n2 = new E(this, { parentStack: r3 && r3.parentStack, conflictStack: this.$__.validating.stack }) : a2 || (this.$__.validating = new E(this, { parentStack: r3 && r3.parentStack }))), n2 == null) {
                    t5.next = 9;
                    break;
                  }
                  throw n2;
                case 9:
                  return t5.abrupt("return", new Promise(function(t6, n3) {
                    s2.$__validate(e3, r3, function(e4) {
                      if (s2.$op = null, s2.$__.validating = null, e4 != null)
                        return n3(e4);
                      t6();
                    });
                  }));
                case 10:
                case "end":
                  return t5.stop();
              }
          }, t, this);
        }));
        return function(e3, r3) {
          return t4.apply(this, arguments);
        };
      }(), gt.prototype.$validate = gt.prototype.validate, gt.prototype.$__validate = function(t4, e3, r3) {
        var n2, o2 = this;
        this.$__.saveOptions && this.$__.saveOptions.pathsToSave && !t4 ? t4 = i(this.$__.saveOptions.pathsToSave) : typeof t4 == "function" ? (r3 = t4, e3 = null, t4 = null) : typeof e3 == "function" && (r3 = e3, e3 = null);
        var a2, s2 = e3 && d(e3) === "object" && "validateModifiedOnly" in e3, c2 = e3 && e3.pathsToSkip || null;
        a2 = s2 ? !!e3.validateModifiedOnly : this.$__schema.options.validateModifiedOnly;
        var f2 = e3 && e3.validateAllPaths;
        if (f2) {
          if (c2)
            throw new TypeError("Cannot set both `validateAllPaths` and `pathsToSkip`");
          if (t4)
            throw new TypeError("Cannot set both `validateAllPaths` and `pathsToValidate`");
          if (s2 && a2)
            throw new TypeError("Cannot set both `validateAllPaths` and `validateModifiedOnly`");
        }
        var h2, p2, y2 = this, b2 = function() {
          var t5 = o2.$__.validationError;
          if (o2.$__.validationError = null, o2.$__.validating = null, a2 && t5 != null) {
            for (var e4 = 0, r4 = Object.keys(t5.errors);e4 < r4.length; e4++) {
              var n3 = r4[e4];
              o2.$isModified(n3) || delete t5.errors[n3];
            }
            Object.keys(t5.errors).length === 0 && (t5 = undefined);
          }
          if (o2.$__.cachedRequired = {}, o2.$emit("validate", y2), o2.constructor.emit("validate", y2), t5) {
            for (var i2 in t5.errors)
              !o2[ct] && t5.errors[i2] instanceof S.CastError && o2.invalidate(i2, t5.errors[i2]);
            return t5;
          }
        };
        if (f2) {
          var m2, v2 = l(h2 = new Set(Object.keys(this.$__schema.paths)));
          try {
            for (v2.s();!(m2 = v2.n()).done; ) {
              var g2 = m2.value, _2 = this.$__schema.path(g2);
              if (_2 && _2.$isMongooseArray) {
                var w2 = this.$__getValue(g2);
                w2 && $t(w2, h2, g2);
              }
            }
          } catch (t5) {
            v2.e(t5);
          } finally {
            v2.f();
          }
          h2 = i(h2), p2 = {};
        } else {
          var O2 = jt(this, t4, c2, e3 && e3._nestedValidate);
          h2 = a2 ? O2[0].filter(function(t5) {
            return o2.$isModified(t5);
          }) : O2[0], p2 = O2[1];
        }
        if (typeof t4 == "string" && (t4 = t4.split(" ")), h2.length === 0)
          return z(function() {
            var t5 = b2();
            if (t5)
              return y2.$__schema.s.hooks.execPost("validate:error", y2, [y2], { error: t5 }, function(t6) {
                r3(t6);
              });
            r3(null, y2);
          });
        var j2 = {}, $2 = 0, A2 = (n2 = this.$__.saveOptions) === null || n2 === undefined ? undefined : n2.pathsToSave;
        if (Array.isArray(A2)) {
          A2 = new Set(A2);
          var E2, x2 = l(h2);
          try {
            for (x2.s();!(E2 = x2.n()).done; ) {
              var P2 = E2.value;
              A2.has(P2) && T2(P2);
            }
          } catch (t5) {
            x2.e(t5);
          } finally {
            x2.f();
          }
        } else {
          var M2, I2 = l(h2);
          try {
            for (I2.s();!(M2 = I2.n()).done; )
              T2(M2.value);
          } catch (t5) {
            I2.e(t5);
          } finally {
            I2.f();
          }
        }
        function T2(t5) {
          t5 == null || j2[t5] || (j2[t5] = true, $2++, z(function() {
            var e4 = y2.$__schema.path(t5);
            if (!e4)
              return --$2 || B2();
            if (y2.$isValid(t5)) {
              if (e4[yt] != null && t5 !== e4.path)
                return --$2 || B2();
              var r4, n3 = y2.$__getValue(t5);
              (r4 = y2.$populated(t5)) ? n3 = r4 : n3 != null && n3.$__ != null && n3.$__.wasPopulated && (n3 = n3._doc._id);
              var i2 = y2.$__.pathsToScopes != null && t5 in y2.$__.pathsToScopes ? y2.$__.pathsToScopes[t5] : y2, o3 = u(u({}, p2[t5]), {}, { path: t5, validateAllPaths: f2, _nestedValidate: true });
              e4.doValidate(n3, function(r5) {
                if (r5) {
                  if ((e4.$isSingleNested || e4.$isArraySubdocument || e4.$isMongooseDocumentArray) && r5 instanceof k)
                    return --$2 || B2();
                  y2.invalidate(t5, r5, undefined, true);
                }
                --$2 || B2();
              }, i2, o3);
            } else
              --$2 || B2();
          }));
        }
        function B2() {
          var t5 = b2();
          if (t5)
            return y2.$__schema.s.hooks.execPost("validate:error", y2, [y2], { error: t5 }, function(t6) {
              r3(t6);
            });
          r3(null, y2);
        }
      }, gt.prototype.validateSync = function(t4, e3) {
        var r3, n2 = this, o2 = this;
        arguments.length !== 1 || d(arguments[0]) !== "object" || Array.isArray(arguments[0]) || (e3 = arguments[0], t4 = null), r3 = e3 && d(e3) === "object" && "validateModifiedOnly" in e3 ? !!e3.validateModifiedOnly : this.$__schema.options.validateModifiedOnly;
        var a2, s2, c2 = e3 && e3.pathsToSkip, u2 = e3 && e3.validateAllPaths;
        if (u2) {
          if (c2)
            throw new TypeError("Cannot set both `validateAllPaths` and `pathsToSkip`");
          if (t4)
            throw new TypeError("Cannot set both `validateAllPaths` and `pathsToValidate`");
        }
        if (typeof t4 == "string") {
          var f2 = t4.indexOf(" ") === -1;
          t4 = f2 ? [t4] : t4.split(" ");
        } else
          typeof c2 == "string" && c2.indexOf(" ") !== -1 && (c2 = c2.split(" "));
        if (u2) {
          var h2, p2 = l(a2 = new Set(Object.keys(this.$__schema.paths)));
          try {
            for (p2.s();!(h2 = p2.n()).done; ) {
              var y2 = h2.value, b2 = this.$__schema.path(y2);
              if (b2 && b2.$isMongooseArray) {
                var m2 = this.$__getValue(y2);
                m2 && $t(m2, a2, y2);
              }
            }
          } catch (E3) {
            p2.e(E3);
          } finally {
            p2.f();
          }
          a2 = i(a2), s2 = {};
        } else {
          var v2 = jt(this, t4, c2);
          a2 = r3 ? v2[0].filter(function(t5) {
            return n2.$isModified(t5);
          }) : v2[0], s2 = v2[1];
        }
        for (var g2 = {}, _2 = 0, w2 = a2.length;_2 < w2; ++_2) {
          var O2 = a2[_2];
          if (!g2[O2]) {
            g2[O2] = true;
            var j2 = o2.$__schema.path(O2);
            if (j2 && o2.$isValid(O2)) {
              var $2 = o2.$__getValue(O2), A2 = j2.doValidateSync($2, o2, { skipSchemaValidators: s2[O2], path: O2, validateModifiedOnly: r3, validateAllPaths: u2 });
              if (A2) {
                if ((j2.$isSingleNested || j2.$isArraySubdocument || j2.$isMongooseDocumentArray) && A2 instanceof k)
                  continue;
                o2.invalidate(O2, A2, undefined, true);
              }
            }
          }
        }
        var E2 = o2.$__.validationError;
        if (o2.$__.validationError = undefined, o2.$emit("validate", o2), o2.constructor.emit("validate", o2), E2)
          for (var x2 in E2.errors)
            E2.errors[x2] instanceof S.CastError && o2.invalidate(x2, E2.errors[x2]);
        return E2;
      }, gt.prototype.invalidate = function(t4, e3, r3, n2) {
        if (this.$__.validationError || (this.$__.validationError = new k(this)), !this.$__.validationError.errors[t4])
          return e3 && typeof e3 != "string" || (e3 = new M({ path: t4, message: e3, type: n2 || "user defined", value: r3 })), this.$__.validationError === e3 || this.$__.validationError.addError(t4, e3), this.$__.validationError;
      }, gt.prototype.$markValid = function(t4) {
        this.$__.validationError && this.$__.validationError.errors[t4] && (delete this.$__.validationError.errors[t4], Object.keys(this.$__.validationError.errors).length === 0 && (this.$__.validationError = null));
      }, gt.prototype.$isValid = function(t4) {
        var e3 = this;
        return this.$__.validationError == null || Object.keys(this.$__.validationError.errors).length === 0 || t4 != null && (t4.indexOf(" ") !== -1 && (t4 = t4.split(" ")), Array.isArray(t4) ? t4.some(function(t5) {
          return e3.$__.validationError.errors[t5] == null;
        }) : this.$__.validationError.errors[t4] == null);
      }, gt.prototype.$__reset = function() {
        var t4, e3 = this.$isSubdocument ? null : this.$getAllSubdocs();
        if (e3 && e3.length > 0) {
          var r3, n2 = l(e3);
          try {
            for (n2.s();!(r3 = n2.n()).done; )
              r3.value.$__reset();
          } catch (t5) {
            n2.e(t5);
          } finally {
            n2.f();
          }
        }
        return this.$__dirty().forEach(function(t5) {
          var e4 = t5.value;
          e4 && e4[st] && (e4[at] = e4[st], e4[st] = {});
        }), this.$__.backup = {}, this.$__.backup.activePaths = { modify: Object.assign({}, this.$__.activePaths.getStatePaths("modify")), default: Object.assign({}, this.$__.activePaths.getStatePaths("default")) }, this.$__.backup.validationError = this.$__.validationError, this.$__.backup.errors = this.$errors, this.$__.activePaths.clear("modify"), this.$__.activePaths.clear("default"), this.$__.validationError = undefined, this.$errors = undefined, t4 = this, this.$__schema.requiredPaths().forEach(function(e4) {
          t4.$__.activePaths.require(e4);
        }), this;
      }, gt.prototype.$__undoReset = function() {
        if (this.$__.backup != null && this.$__.backup.activePaths != null) {
          this.$__.activePaths.states.modify = this.$__.backup.activePaths.modify, this.$__.activePaths.states.default = this.$__.backup.activePaths.default, this.$__.validationError = this.$__.backup.validationError, this.$errors = this.$__.backup.errors;
          var t4, e3 = l(this.$__dirty());
          try {
            for (e3.s();!(t4 = e3.n()).done; ) {
              var r3 = t4.value.value;
              r3 && r3[st] && r3[at] && (r3[st] = r3[at]);
            }
          } catch (t5) {
            e3.e(t5);
          } finally {
            e3.f();
          }
          var n2, i2 = l(this.$getAllSubdocs());
          try {
            for (i2.s();!(n2 = i2.n()).done; )
              n2.value.$__undoReset();
          } catch (t5) {
            i2.e(t5);
          } finally {
            i2.f();
          }
        }
      }, gt.prototype.$__dirty = function() {
        var t4 = this, e3 = this.$__.activePaths.map("modify", function(e4) {
          return { path: e4, value: t4.$__getValue(e4), schema: t4.$__path(e4) };
        });
        e3 = e3.concat(this.$__.activePaths.map("default", function(e4) {
          if (e4 !== "_id" && t4.$__getValue(e4) != null)
            return { path: e4, value: t4.$__getValue(e4), schema: t4.$__path(e4) };
        }));
        var r3 = new Map(e3.filter(function(t5) {
          return t5 != null;
        }).map(function(t5) {
          return [t5.path, t5.value];
        })), n2 = [];
        return e3.forEach(function(t5) {
          if (t5) {
            for (var e4 = null, i2 = tt(t5.path), o2 = 0;o2 < i2.length - 1; o2++)
              if (r3.has(i2[o2])) {
                e4 = r3.get(i2[o2]);
                break;
              }
            e4 == null ? n2.push(t5) : e4 != null && e4[st] != null && e4.hasAtomics() && (e4[st] = {}, e4[st].$set = e4);
          }
        }), n2;
      }, gt.prototype.$__setSchema = function(t4) {
        N(t4.tree, this, undefined, t4.options);
        for (var e3 = 0, r3 = Object.keys(t4.virtuals);e3 < r3.length; e3++) {
          var n2 = r3[e3];
          t4.virtuals[n2]._applyDefaultGetters();
        }
        t4.path("schema") == null && (this.schema = t4), this.$__schema = t4, this[lt] = t4;
      }, gt.prototype.$__getArrayPathsToValidate = function() {
        return y || (y = r2(4941)), this.$__.activePaths.map("init", "modify", function(t4) {
          return this.$__getValue(t4);
        }.bind(this)).filter(function(t4) {
          return t4 && Array.isArray(t4) && rt.isMongooseDocumentArray(t4) && t4.length;
        }).reduce(function(t4, e3) {
          return t4.concat(e3);
        }, []).filter(function(t4) {
          return t4;
        });
      }, gt.prototype.$getAllSubdocs = function() {
        function t4(e4, r3, n3) {
          var i3 = e4, o2 = false;
          if (n3 && (e4 instanceof gt && e4[lt].paths[n3] ? i3 = e4._doc[n3] : e4 instanceof gt && e4[lt].nested[n3] ? (i3 = e4._doc[n3], o2 = true) : i3 = e4[n3]), i3 instanceof m)
            r3.push(i3);
          else if (i3 instanceof Map)
            r3 = Array.from(i3.keys()).reduce(function(e5, r4) {
              return t4(i3.get(r4), e5, null);
            }, r3);
          else if (i3 && !Array.isArray(i3) && i3.$isSingleNested)
            r3 = Object.keys(i3._doc).reduce(function(e5, r4) {
              return t4(i3, e5, r4);
            }, r3), r3.push(i3);
          else if (i3 && rt.isMongooseDocumentArray(i3))
            i3.forEach(function(e5) {
              e5 && e5._doc && (r3 = Object.keys(e5._doc).reduce(function(r4, n4) {
                return t4(e5._doc, r4, n4);
              }, r3), e5 instanceof m && r3.push(e5));
            });
          else if (o2 && i3 != null)
            for (var a2 = 0, s2 = Object.keys(i3);a2 < s2.length; a2++) {
              var c2 = s2[a2];
              t4(i3, r3, c2);
            }
          return r3;
        }
        y || (y = r2(4941)), m = m || r2(8578);
        for (var e3 = [], n2 = 0, i2 = Object.keys(this._doc);n2 < i2.length; n2++)
          t4(this, e3, i2[n2]);
        return e3;
      }, gt.prototype.$__handleReject = function(t4) {
        this.$listeners("error").length ? this.$emit("error", t4) : this.constructor.listeners && this.constructor.listeners("error").length && this.constructor.emit("error", t4);
      }, gt.prototype.$toObject = function(t4, e3) {
        var r3, n2, i2, o2, a2, s2, c2, f2, l2, h2, p2, y2 = this.$__schema._defaultToObjectOptions(e3), b2 = this.$__hasOnlyPrimitiveValues();
        (t4 = rt.isPOJO(t4) ? u({}, t4) : {})._calledWithOptions = t4._calledWithOptions || u({}, t4), p2 = t4._calledWithOptions.minimize != null ? t4.minimize : y2 != null && y2.minimize != null ? y2.minimize : this.$__schema.options.minimize, t4.minimize = p2, b2 || (t4._seen = t4._seen || new Map);
        var m2 = (r3 = (n2 = (i2 = t4._calledWithOptions.depopulate) !== null && i2 !== undefined ? i2 : y2 == null ? undefined : y2.depopulate) !== null && n2 !== undefined ? n2 : t4.depopulate) !== null && r3 !== undefined && r3;
        if (m2 && t4._isNested && this.$__.wasPopulated)
          return R(this.$__.wasPopulated.value || this._doc._id, t4);
        if (m2 && (t4.depopulate = true), y2 != null)
          for (var v2 = 0, g2 = Object.keys(y2);v2 < g2.length; v2++) {
            var _2 = g2[v2];
            t4[_2] == null && (t4[_2] = y2[_2]);
          }
        t4._isNested = true, t4.json = e3, t4.minimize = p2;
        var w2, S2 = t4._parentOptions;
        t4._parentOptions = this.$isSubdocument ? t4 : null, w2 = b2 && !t4.flattenObjectIds ? this.$__toObjectShallow() : R(this._doc, t4) || {};
        var O2 = (o2 = (a2 = (s2 = t4._calledWithOptions.getters) !== null && s2 !== undefined ? s2 : t4.getters) !== null && a2 !== undefined ? a2 : y2.getters) !== null && o2 !== undefined && o2;
        O2 && (function(t5, e4) {
          var r4, n3, i3 = t5.$__schema, o3 = Object.keys(i3.paths), a3 = o3.length, s3 = t5._doc;
          if (!s3)
            return e4;
          for (;a3--; ) {
            var c3 = (r4 = o3[a3]).split("."), u2 = c3.length, f3 = u2 - 1, l3 = e4, h3 = undefined;
            if (s3 = t5._doc, t5.$__isSelected(r4))
              for (var p3 = 0;p3 < u2 && (n3 = s3[h3 = c3[p3]], l3 == null || d(l3) === "object"); ++p3) {
                if (p3 === f3) {
                  if (l3[h3] = i3.paths[r4].applyGetters(l3[h3], t5), Array.isArray(l3[h3]) && i3.paths[r4].$embeddedSchemaType)
                    for (var y3 = 0;y3 < l3[h3].length; ++y3)
                      l3[h3][y3] = i3.paths[r4].$embeddedSchemaType.applyGetters(l3[h3][y3], t5);
                } else {
                  if (n3 == null) {
                    h3 in s3 && (l3[h3] = n3);
                    break;
                  }
                  l3 = l3[h3] || (l3[h3] = {});
                }
                s3 = n3;
              }
          }
        }(this, w2), t4.minimize && (w2 = X(w2) || {}));
        var j2 = (c2 = (f2 = (l2 = t4._calledWithOptions.virtuals) !== null && l2 !== undefined ? l2 : y2.virtuals) !== null && f2 !== undefined ? f2 : S2 == null ? undefined : S2.virtuals) !== null && c2 !== undefined ? c2 : undefined;
        (j2 || O2 && j2 !== false) && At(this, w2, t4, t4), t4.versionKey === false && this.$__schema.options.versionKey && delete w2[this.$__schema.options.versionKey];
        var $2 = (h2 = t4._calledWithOptions.transform) === null || h2 === undefined || h2, A2 = undefined;
        if ($2 === true ? A2 = y2.transform : typeof $2 == "function" && (A2 = $2), $2 && function(t5, e4) {
          var r4 = t5.$__schema, n3 = Object.keys(r4.paths || {});
          if (!t5._doc)
            return e4;
          for (var i3 = 0, o3 = n3;i3 < o3.length; i3++) {
            var a3 = o3[i3], s3 = r4.paths[a3];
            if (typeof s3.options.transform == "function") {
              var c3 = t5.$get(a3);
              if (c3 === undefined)
                continue;
              var u2 = s3.options.transform.call(t5, c3);
              Et(a3, u2), rt.setValue(a3, u2, e4);
            } else if (s3.$embeddedSchemaType != null && typeof s3.$embeddedSchemaType.options.transform == "function") {
              var f3 = t5.$get(a3);
              if (f3 === undefined)
                continue;
              for (var l3 = [].concat(f3), h3 = s3.$embeddedSchemaType.options.transform, p3 = 0;p3 < l3.length; ++p3) {
                var d2 = h3.call(t5, l3[p3]);
                l3[p3] = d2, Et(a3, d2);
              }
              e4[a3] = l3;
            }
          }
        }(this, w2), t4.useProjection && function(t5, e4) {
          var r4 = t5.$__schema, n3 = Object.keys(r4.paths || {});
          if (!t5._doc)
            return e4;
          var i3 = t5.$__.selected;
          if (i3 === undefined && (i3 = {}, et.applyPaths(i3, r4)), i3 == null || Object.keys(i3).length === 0)
            return e4;
          for (var o3 = 0, a3 = n3;o3 < a3.length; o3++) {
            var s3 = a3[o3];
            i3[s3] == null || i3[s3] || delete e4[s3];
          }
        }(this, w2), typeof A2 == "function") {
          var E2 = A2(this, w2, t4);
          E2 !== undefined && (w2 = E2);
        }
        return w2;
      }, gt.prototype.$__toObjectShallow = function() {
        var t4 = {};
        if (this._doc != null)
          for (var e3 = 0, r3 = Object.keys(this._doc);e3 < r3.length; e3++) {
            var n2 = r3[e3], i2 = this._doc[n2];
            i2 instanceof Date ? t4[n2] = new Date(i2) : i2 !== undefined && (t4[n2] = i2);
          }
        return t4;
      }, gt.prototype.toObject = function(t4) {
        return this.$toObject(t4);
      }, gt.prototype.toJSON = function(t4) {
        return this.$toObject(t4, true);
      }, gt.prototype.ownerDocument = function() {
        return this;
      }, gt.prototype.parent = function() {
        return this.$isSubdocument || this.$__.wasPopulated ? this.$__.parent : this;
      }, gt.prototype.$parent = gt.prototype.parent, gt.prototype.inspect = function(t4) {
        var e3;
        rt.isPOJO(t4) && ((e3 = t4).minimize = false);
        var r3 = arguments.length > 0 ? this.toObject(e3) : this.toObject();
        return r3 == null ? "MongooseDocument { " + r3 + " }" : r3;
      }, G.custom && (gt.prototype[G.custom] = gt.prototype.inspect), gt.prototype.toString = function() {
        var t4 = this.inspect();
        return typeof t4 == "string" ? t4 : G(t4);
      }, gt.prototype.equals = function(t4) {
        if (!t4)
          return false;
        var e3 = this.$__getValue("_id"), r3 = t4.$__ != null ? t4.$__getValue("_id") : t4;
        return e3 || r3 ? e3 && e3.equals ? e3.equals(r3) : e3 === r3 : it(this, t4);
      }, gt.prototype.populate = function() {
        var t4 = s(o().mark(function t() {
          var e3, r3, n2, i2, a2, s2, c2, u2, f2, h2, p2 = arguments;
          return o().wrap(function(t5) {
            for (;; )
              switch (t5.prev = t5.next) {
                case 0:
                  if (e3 = {}, typeof (r3 = Array.prototype.slice.call(p2))[r3.length - 1] != "function") {
                    t5.next = 4;
                    break;
                  }
                  throw new S("Document.prototype.populate() no longer accepts a callback");
                case 4:
                  if (r3.length !== 0) {
                    n2 = rt.populate.apply(null, r3), i2 = l(n2);
                    try {
                      for (i2.s();!(a2 = i2.n()).done; )
                        s2 = a2.value, e3[s2.path] = s2;
                    } catch (t6) {
                      i2.e(t6);
                    } finally {
                      i2.f();
                    }
                  }
                  return c2 = rt.object.vals(e3), u2 = this.constructor, this.$__isNested && (u2 = this.$__[dt].constructor, f2 = this.$__.nestedPath, c2.forEach(function(t6) {
                    t6.path = f2 + "." + t6.path;
                  })), this.$session() != null && (h2 = this.$session(), c2.forEach(function(t6) {
                    t6.options != null ? "session" in t6.options || (t6.options.session = h2) : t6.options = { session: h2 };
                  })), c2.forEach(function(t6) {
                    t6._localModel = u2;
                  }), t5.abrupt("return", u2.populate(this, c2));
                case 11:
                case "end":
                  return t5.stop();
              }
          }, t, this);
        }));
        return function() {
          return t4.apply(this, arguments);
        };
      }(), gt.prototype.$getPopulatedDocs = function() {
        var t4 = [];
        this.$__.populated != null && (t4 = t4.concat(Object.keys(this.$__.populated)));
        var e3, r3 = [], n2 = l(t4);
        try {
          for (n2.s();!(e3 = n2.n()).done; ) {
            var i2 = e3.value, o2 = this.$get(i2);
            Array.isArray(o2) ? r3 = r3.concat(o2) : o2 instanceof gt && r3.push(o2);
          }
        } catch (t5) {
          n2.e(t5);
        } finally {
          n2.f();
        }
        return r3;
      }, gt.prototype.populated = function(t4, e3, r3) {
        if (e3 == null || e3 === true) {
          if (!this.$__.populated)
            return;
          if (typeof t4 != "string")
            return;
          var n2 = t4.endsWith(".$*") ? t4.replace(/\.\$\*$/, "") : t4, i2 = this.$__.populated[n2];
          return i2 ? e3 === true ? i2 : i2.value : undefined;
        }
        this.$__.populated || (this.$__.populated = {}), this.$__.populated[t4] = { value: e3, options: r3 };
        for (var o2 = t4.split("."), a2 = 0;a2 < o2.length - 1; ++a2) {
          var s2 = o2.slice(0, a2 + 1).join("."), c2 = this.$get(s2);
          if (c2 != null && c2.$__ != null && this.$populated(s2)) {
            var u2 = o2.slice(a2 + 1).join(".");
            c2.$populated(u2, e3, r3);
            break;
          }
        }
        return e3;
      }, gt.prototype.$populated = gt.prototype.populated, gt.prototype.$assertPopulated = function(t4, e3) {
        var r3 = this;
        if (Array.isArray(t4))
          return t4.forEach(function(t5) {
            return r3.$assertPopulated(t5, e3);
          }), this;
        if (arguments.length > 1 && this.$set(e3), !this.$populated(t4))
          throw new S('Expected path "'.concat(t4, '" to be populated'));
        return this;
      }, gt.prototype.depopulate = function(t4) {
        var e3;
        typeof t4 == "string" && (t4 = t4.indexOf(" ") === -1 ? [t4] : t4.split(" "));
        var r3 = this.$$populatedVirtuals ? Object.keys(this.$$populatedVirtuals) : [], n2 = this.$__ && this.$__.populated || {};
        if (arguments.length === 0) {
          var i2, o2 = l(r3);
          try {
            for (o2.s();!(i2 = o2.n()).done; ) {
              var a2 = i2.value;
              delete this.$$populatedVirtuals[a2], delete this._doc[a2], delete n2[a2];
            }
          } catch (t5) {
            o2.e(t5);
          } finally {
            o2.f();
          }
          for (var s2 = 0, c2 = Object.keys(n2);s2 < c2.length; s2++) {
            var u2 = c2[s2];
            if (e3 = this.$populated(u2))
              if (delete n2[u2], Array.isArray(e3)) {
                var f2 = rt.getValue(u2, this._doc);
                if (f2.isMongooseArray)
                  for (var h2 = f2.__array, p2 = 0;p2 < h2.length; ++p2) {
                    var d2 = h2[p2];
                    d2 != null && (h2[p2] = d2 instanceof gt ? d2._doc._id : d2._id);
                  }
                else
                  rt.setValue(u2, e3, this._doc);
              } else
                rt.setValue(u2, e3, this._doc);
          }
          return this;
        }
        var y2, b2 = l(t4);
        try {
          for (b2.s();!(y2 = b2.n()).done; ) {
            var m2 = y2.value;
            if (e3 = this.$populated(m2), delete n2[m2], r3.indexOf(m2) !== -1)
              delete this.$$populatedVirtuals[m2], delete this._doc[m2];
            else if (e3)
              if (Array.isArray(e3)) {
                var v2 = rt.getValue(m2, this._doc);
                if (v2.isMongooseArray)
                  for (var g2 = v2.__array, _2 = 0;_2 < g2.length; ++_2) {
                    var w2 = g2[_2];
                    w2 != null && (g2[_2] = w2 instanceof gt ? w2._doc._id : w2._id);
                  }
                else
                  rt.setValue(m2, e3, this._doc);
              } else
                rt.setValue(m2, e3, this._doc);
          }
        } catch (t5) {
          b2.e(t5);
        } finally {
          b2.f();
        }
        return this;
      }, gt.prototype.$__fullPath = function(t4) {
        return t4 || "";
      }, gt.prototype.getChanges = function() {
        var t4 = this.$__delta();
        return t4 ? t4[1] : {};
      }, gt.prototype.$__delta = function() {
        var t4 = this, e3 = this.$__dirty(), r3 = this.$__schema.options.optimisticConcurrency;
        if (r3)
          if (Array.isArray(r3)) {
            var i2 = new Set(r3);
            this.modifiedPaths().find(function(t5) {
              return i2.has(t5);
            }) && (this.$__.version = e3.length ? 3 : 1);
          } else
            this.$__.version = e3.length ? 3 : 1;
        if (e3.length || this.$__.version === 3) {
          var o2 = {}, a2 = {}, s2 = e3.length, c2 = [], u2 = 0;
          for (o2._id = this._doc._id, (o2 && o2._id && o2._id.$__ || null) != null && (o2._id = o2._id.toObject({ transform: false, depopulate: true }));u2 < s2; ++u2) {
            var f2 = e3[u2], l2 = f2.value, h2 = xt(this, f2.path, l2);
            if (h2)
              c2.push(h2);
            else {
              if (!this.$populated(f2.path, true) && this.$__.selected) {
                var p2 = f2.path.split("."), d2 = p2[0];
                if (this.$__.selected[d2] && this.$__.selected[d2].$elemMatch) {
                  if (!(p2.length > 1 && p2[1] == 0 && o2[d2] === undefined)) {
                    c2.push(f2.path);
                    continue;
                  }
                  o2[d2] = this.$__.selected[d2], p2[1] = "$", f2.path = p2.join(".");
                }
              }
              if (this.$isDefault(f2.path) && this.$__.selected) {
                if (f2.path.indexOf(".") === -1 && J(this.$__.selected, f2.path))
                  continue;
                if (tt(f2.path).find(function(e4) {
                  return J(t4.$__.isSelected, e4);
                }))
                  continue;
              }
              if (!c2.length)
                if (l2 === undefined)
                  Pt(this, 0, a2, f2, 1, "$unset");
                else if (l2 === null)
                  Pt(this, 0, a2, f2, null);
                else if (rt.isMongooseArray(l2) && l2.$path() && l2[st])
                  kt(this, 0, a2, f2, l2);
                else if (l2[w.pathSymbol] && n.isBuffer(l2))
                  Pt(this, 0, a2, f2, l2 = l2.toObject());
                else if (this.$__.primitiveAtomics && this.$__.primitiveAtomics[f2.path] != null) {
                  var y2 = this.$__.primitiveAtomics[f2.path], b2 = L(y2);
                  Pt(this, 0, a2, f2, y2[b2], b2);
                } else
                  Pt(this, 0, a2, f2, l2 = R(l2, { depopulate: true, transform: false, virtuals: false, getters: false, omitUndefined: true, _isNested: true }));
            }
          }
          return c2.length ? new v(c2) : (this.$__.version && this.$__version(o2, a2), Object.keys(a2).length === 0 ? [o2, null] : [o2, a2]);
        }
      }, gt.prototype.$clone = function() {
        var t4 = new (0, this.constructor);
        if (t4.$isNew = this.$isNew, this._doc && (t4._doc = R(this._doc, { retainDocuments: true })), this.$__) {
          var e3, r3 = new (0, this.$__.constructor), n2 = l(Object.getOwnPropertyNames(this.$__));
          try {
            for (n2.s();!(e3 = n2.n()).done; ) {
              var i2 = e3.value;
              i2 !== "activePaths" && (r3[i2] = R(this.$__[i2]));
            }
          } catch (t5) {
            n2.e(t5);
          } finally {
            n2.f();
          }
          Object.assign(r3.activePaths, R(u({}, this.$__.activePaths))), t4.$__ = r3;
        }
        return t4;
      }, gt.prototype.$createModifiedPathsSnapshot = function() {
        var t4 = new WeakMap;
        if (!this.$isSubdocument) {
          var e3, r3 = l(this.$getAllSubdocs());
          try {
            for (r3.s();!(e3 = r3.n()).done; ) {
              var n2 = e3.value;
              t4.set(n2, n2.$__.activePaths.clone());
            }
          } catch (t5) {
            r3.e(t5);
          } finally {
            r3.f();
          }
        }
        return new j(t4, this.$__.activePaths.clone(), this.$__.version);
      }, gt.prototype.$restoreModifiedPathsSnapshot = function(t4) {
        if (this.$__.activePaths = t4.activePaths.clone(), this.$__.version = t4.version, !this.$isSubdocument) {
          var e3, r3 = l(this.$getAllSubdocs());
          try {
            for (r3.s();!(e3 = r3.n()).done; ) {
              var n2 = e3.value;
              t4.subdocSnapshot.has(n2) && (n2.$__.activePaths = t4.subdocSnapshot.get(n2));
            }
          } catch (t5) {
            r3.e(t5);
          } finally {
            r3.f();
          }
        }
        return this;
      }, gt.prototype.$clearModifiedPaths = function() {
        if (this.$__.activePaths.clear("modify"), this.$__.activePaths.clear("init"), this.$__.version = 0, !this.$isSubdocument) {
          var t4, e3 = l(this.$getAllSubdocs());
          try {
            for (e3.s();!(t4 = e3.n()).done; )
              t4.value.$clearModifiedPaths();
          } catch (t5) {
            e3.e(t5);
          } finally {
            e3.f();
          }
        }
        return this;
      }, gt.prototype.$__hasOnlyPrimitiveValues = function() {
        return !this.$__.populated && !this.$__.wasPopulated && (this._doc == null || Object.values(this._doc).every(function(t4) {
          return t4 == null || d(t4) !== "object" || rt.isNativeObject(t4) && !Array.isArray(t4) || K(t4, "ObjectId") || K(t4, "Decimal128");
        }));
      }, gt.VERSION_WHERE = 1, gt.VERSION_INC = 2, gt.VERSION_ALL = 3, gt.ValidationError = k, t3.exports = gt;
    }, 3300: (t3, e2, r2) => {
      var n = r2(3293), i = r2(6024), o = false;
      t3.exports = function() {
        return o ? i : n;
      }, t3.exports.setBrowser = function(t4) {
        o = t4;
      };
    }, 8582: (t3) => {
      var e2 = null;
      t3.exports.get = function() {
        return e2;
      }, t3.exports.set = function(t4) {
        e2 = t4;
      };
    }, 5221: (t3, e2) => {
      e2.Collection = function() {
        throw new Error("Cannot create a collection from browser library");
      }, e2.Connection = function() {
        throw new Error("Cannot create a connection from browser library");
      };
    }, 6148: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4, e3) {
        for (var r3 = 0;r3 < e3.length; r3++) {
          var n2 = e3[r3];
          n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(t4, o(n2.key), n2);
        }
      }
      function o(t4) {
        var e3 = function(t5) {
          if (n(t5) != "object" || !t5)
            return t5;
          var e4 = t5[Symbol.toPrimitive];
          if (e4 !== undefined) {
            var r3 = e4.call(t5, "string");
            if (n(r3) != "object")
              return r3;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(t5);
        }(t4);
        return n(e3) == "symbol" ? e3 : e3 + "";
      }
      function a(t4, e3, r3) {
        return e3 = u(e3), function(t5, e4) {
          if (e4 && (n(e4) == "object" || typeof e4 == "function"))
            return e4;
          if (e4 !== undefined)
            throw new TypeError("Derived constructors may only return object or undefined");
          return s(t5);
        }(t4, c() ? Reflect.construct(e3, r3 || [], u(t4).constructor) : e3.apply(t4, r3));
      }
      function s(t4) {
        if (t4 === undefined)
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t4;
      }
      function c() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (c = function() {
          return !!t4;
        })();
      }
      function u(t4) {
        return u = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, u(t4);
      }
      function f(t4, e3) {
        return f = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, f(t4, e3);
      }
      var l = r2(7026), h = r2(7352), p = function(t4) {
        function e3(t5, r4, n3, i2, o2) {
          var c2;
          if (function(t6, e4) {
            if (!(t6 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, e3), arguments.length > 0) {
            var u2 = y(r4);
            (c2 = a(this, e3, [m(null, t5, r4, n3, b(o2), u2, i2)])).init(t5, r4, n3, i2, o2);
          } else
            c2 = a(this, e3, [m()]);
          return s(c2);
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && f(t5, e4);
        }(e3, t4), r3 = e3, (n2 = [{ key: "toJSON", value: function() {
          return { stringValue: this.stringValue, valueType: this.valueType, kind: this.kind, value: this.value, path: this.path, reason: this.reason, name: this.name, message: this.message };
        } }, { key: "init", value: function(t5, e4, r4, n3, i2) {
          this.stringValue = d(e4), this.messageFormat = b(i2), this.kind = t5, this.value = e4, this.path = r4, this.reason = n3, this.valueType = y(e4);
        } }, { key: "copy", value: function(t5) {
          this.messageFormat = t5.messageFormat, this.stringValue = t5.stringValue, this.kind = t5.kind, this.value = t5.value, this.path = t5.path, this.reason = t5.reason, this.message = t5.message, this.valueType = t5.valueType;
        } }, { key: "setModel", value: function(t5) {
          this.message = m(t5, this.kind, this.value, this.path, this.messageFormat, this.valueType);
        } }]) && i(r3.prototype, n2), Object.defineProperty(r3, "prototype", { writable: false }), r3;
        var r3, n2;
      }(l);
      function d(t4) {
        var e3 = h.inspect(t4);
        return (e3 = e3.replace(/^'|'$/g, '"')).startsWith('"') || (e3 = '"' + e3 + '"'), e3;
      }
      function y(t4) {
        if (t4 == null)
          return "" + t4;
        var e3 = n(t4);
        return e3 !== "object" || typeof t4.constructor != "function" ? e3 : t4.constructor.name;
      }
      function b(t4) {
        var e3 = t4 && t4._castErrorMessage || null;
        if (typeof e3 == "string" || typeof e3 == "function")
          return e3;
      }
      function m(t4, e3, r3, n2, i2, o2, a2) {
        if (typeof i2 == "string") {
          var s2 = d(r3), c2 = i2.replace("{KIND}", e3).replace("{VALUE}", s2).replace("{PATH}", n2);
          return t4 != null && (c2 = c2.replace("{MODEL}", t4.modelName)), c2;
        }
        if (typeof i2 == "function")
          return i2(r3, n2, t4, e3);
        var u2 = "Cast to " + e3 + " failed for value " + d(r3) + (o2 ? " (type " + o2 + ")" : "") + ' at path "' + n2 + '"';
        return t4 != null && (u2 += ' for model "' + t4.modelName + '"'), a2 != null && typeof a2.constructor == "function" && a2.constructor.name !== "AssertionError" && a2.constructor.name !== "Error" && (u2 += ' because of "' + a2.constructor.name + '"'), u2;
      }
      Object.defineProperty(p.prototype, "name", { value: "CastError" }), t3.exports = p;
    }, 6432: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (i = function() {
          return !!t4;
        })();
      }
      function o(t4) {
        return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, o(t4);
      }
      function a(t4, e3) {
        return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, a(t4, e3);
      }
      var s = function(t4) {
        function e3(t5) {
          return function(t6, e4) {
            if (!(t6 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, e3), function(t6, e4, r4) {
            return e4 = o(e4), function(t7, e5) {
              if (e5 && (n(e5) == "object" || typeof e5 == "function"))
                return e5;
              if (e5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t8) {
                if (t8 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t8;
              }(t7);
            }(t6, i() ? Reflect.construct(e4, r4 || [], o(t6).constructor) : e4.apply(t6, r4));
          }(this, e3, ["For your own good, using `document.save()` to update an array which was selected using an $elemMatch projection OR populated using skip, limit, query conditions, or exclusion of the _id field when the operation results in a $pop or $set of the entire array is not supported. The following path(s) would have been modified unsafely:\n  " + t5.join("\n  ") + "\nUse Model.updateOne() to update these arrays instead."]);
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && a(t5, e4);
        }(e3, t4), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
        var r3;
      }(r2(7026));
      Object.defineProperty(s.prototype, "name", { value: "DivergentArrayError" }), t3.exports = s;
    }, 9507: (t3, e2, r2) => {
      var n = r2(7026);
      t3.exports = n, n.messages = r2(467), n.Messages = n.messages, n.DocumentNotFoundError = r2(8128), n.CastError = r2(6148), n.ValidationError = r2(5368), n.ValidatorError = r2(8393), n.VersionError = r2(587), n.ParallelSaveError = r2(5597), n.OverwriteModelError = r2(2597), n.MissingSchemaError = r2(8320), n.MongooseServerSelectionError = r2(6156), n.DivergentArrayError = r2(6432), n.StrictModeError = r2(6166), n.StrictPopulateError = r2(3232);
    }, 9662: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (i = function() {
          return !!t4;
        })();
      }
      function o(t4) {
        return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, o(t4);
      }
      function a(t4, e3) {
        return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, a(t4, e3);
      }
      var s = function(t4) {
        function e3(t5, r4) {
          return function(t6, e4) {
            if (!(t6 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, e3), function(t6, e4, r5) {
            return e4 = o(e4), function(t7, e5) {
              if (e5 && (n(e5) == "object" || typeof e5 == "function"))
                return e5;
              if (e5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t8) {
                if (t8 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t8;
              }(t7);
            }(t6, i() ? Reflect.construct(e4, r5 || [], o(t6).constructor) : e4.apply(t6, r5));
          }(this, e3, ['Cannot create use schema for property "'.concat(t5, '" because the schema has the ').concat(r4, " option enabled.")]);
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && a(t5, e4);
        }(e3, t4), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
        var r3;
      }(r2(7026));
      Object.defineProperty(s.prototype, "name", { value: "InvalidSchemaOptionError" }), t3.exports = s;
    }, 467: (t3, e2) => {
      var r2 = t3.exports = {};
      r2.DocumentNotFoundError = null, r2.general = {}, r2.general.default = "Validator failed for path `{PATH}` with value `{VALUE}`", r2.general.required = "Path `{PATH}` is required.", r2.Number = {}, r2.Number.min = "Path `{PATH}` ({VALUE}) is less than minimum allowed value ({MIN}).", r2.Number.max = "Path `{PATH}` ({VALUE}) is more than maximum allowed value ({MAX}).", r2.Number.enum = "`{VALUE}` is not a valid enum value for path `{PATH}`.", r2.Date = {}, r2.Date.min = "Path `{PATH}` ({VALUE}) is before minimum allowed value ({MIN}).", r2.Date.max = "Path `{PATH}` ({VALUE}) is after maximum allowed value ({MAX}).", r2.String = {}, r2.String.enum = "`{VALUE}` is not a valid enum value for path `{PATH}`.", r2.String.match = "Path `{PATH}` is invalid ({VALUE}).", r2.String.minlength = "Path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length ({MINLENGTH}).", r2.String.maxlength = "Path `{PATH}` (`{VALUE}`) is longer than the maximum allowed length ({MAXLENGTH}).";
    }, 8320: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (i = function() {
          return !!t4;
        })();
      }
      function o(t4) {
        return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, o(t4);
      }
      function a(t4, e3) {
        return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, a(t4, e3);
      }
      var s = function(t4) {
        function e3(t5) {
          return function(t6, e4) {
            if (!(t6 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, e3), function(t6, e4, r4) {
            return e4 = o(e4), function(t7, e5) {
              if (e5 && (n(e5) == "object" || typeof e5 == "function"))
                return e5;
              if (e5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t8) {
                if (t8 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t8;
              }(t7);
            }(t6, i() ? Reflect.construct(e4, r4 || [], o(t6).constructor) : e4.apply(t6, r4));
          }(this, e3, ["Schema hasn't been registered for model \"" + t5 + '".\nUse mongoose.model(name, schema)']);
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && a(t5, e4);
        }(e3, t4), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
        var r3;
      }(r2(7026));
      Object.defineProperty(s.prototype, "name", { value: "MissingSchemaError" }), t3.exports = s;
    }, 7026: (t3) => {
      function e2(t4) {
        return e2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, e2(t4);
      }
      function r2(t4) {
        var e3 = typeof Map == "function" ? new Map : undefined;
        return r2 = function(t5) {
          if (t5 === null || !function(t6) {
            try {
              return Function.toString.call(t6).indexOf("[native code]") !== -1;
            } catch (e4) {
              return typeof t6 == "function";
            }
          }(t5))
            return t5;
          if (typeof t5 != "function")
            throw new TypeError("Super expression must either be null or a function");
          if (e3 !== undefined) {
            if (e3.has(t5))
              return e3.get(t5);
            e3.set(t5, r3);
          }
          function r3() {
            return function(t6, e4, r4) {
              if (n())
                return Reflect.construct.apply(null, arguments);
              var o2 = [null];
              o2.push.apply(o2, e4);
              var a2 = new (t6.bind.apply(t6, o2));
              return r4 && i(a2, r4.prototype), a2;
            }(t5, arguments, o(this).constructor);
          }
          return r3.prototype = Object.create(t5.prototype, { constructor: { value: r3, enumerable: false, writable: true, configurable: true } }), i(r3, t5);
        }, r2(t4);
      }
      function n() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (n = function() {
          return !!t4;
        })();
      }
      function i(t4, e3) {
        return i = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, i(t4, e3);
      }
      function o(t4) {
        return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, o(t4);
      }
      var a = function(t4) {
        function r3() {
          return function(t5, e3) {
            if (!(t5 instanceof e3))
              throw new TypeError("Cannot call a class as a function");
          }(this, r3), function(t5, r4, i2) {
            return r4 = o(r4), function(t6, r5) {
              if (r5 && (e2(r5) == "object" || typeof r5 == "function"))
                return r5;
              if (r5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t7) {
                if (t7 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t7;
              }(t6);
            }(t5, n() ? Reflect.construct(r4, i2 || [], o(t5).constructor) : r4.apply(t5, i2));
          }(this, r3, arguments);
        }
        return function(t5, e3) {
          if (typeof e3 != "function" && e3 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e3 && e3.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e3 && i(t5, e3);
        }(r3, t4), a2 = r3, Object.defineProperty(a2, "prototype", { writable: false }), a2;
        var a2;
      }(r2(Error));
      Object.defineProperty(a.prototype, "name", { value: "MongooseError" }), t3.exports = a;
    }, 8128: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (i = function() {
          return !!t4;
        })();
      }
      function o(t4) {
        return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, o(t4);
      }
      function a(t4, e3) {
        return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, a(t4, e3);
      }
      var s = r2(7026), c = r2(7352), u = function(t4) {
        function e3(t5, r4, a2, u2) {
          var f;
          (function(t6, e4) {
            if (!(t6 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          })(this, e3);
          var l = s.messages;
          return (f = function(t6, e4, r5) {
            return e4 = o(e4), function(t7, e5) {
              if (e5 && (n(e5) == "object" || typeof e5 == "function"))
                return e5;
              if (e5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t8) {
                if (t8 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t8;
              }(t7);
            }(t6, i() ? Reflect.construct(e4, r5 || [], o(t6).constructor) : e4.apply(t6, r5));
          }(this, e3, [l.DocumentNotFoundError != null ? typeof l.DocumentNotFoundError == "function" ? l.DocumentNotFoundError(t5, r4) : l.DocumentNotFoundError : 'No document found for query "' + c.inspect(t5) + '" on model "' + r4 + '"'])).result = u2, f.numAffected = a2, f.filter = t5, f.query = t5, f;
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && a(t5, e4);
        }(e3, t4), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
        var r3;
      }(s);
      Object.defineProperty(u.prototype, "name", { value: "DocumentNotFoundError" }), t3.exports = u;
    }, 2260: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (i = function() {
          return !!t4;
        })();
      }
      function o(t4) {
        return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, o(t4);
      }
      function a(t4, e3) {
        return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, a(t4, e3);
      }
      var s = function(t4) {
        function e3(t5, r4) {
          var a2;
          (function(t6, e4) {
            if (!(t6 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          })(this, e3);
          var s2 = Array.isArray(r4) ? "array" : "primitive value";
          return (a2 = function(t6, e4, r5) {
            return e4 = o(e4), function(t7, e5) {
              if (e5 && (n(e5) == "object" || typeof e5 == "function"))
                return e5;
              if (e5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t8) {
                if (t8 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t8;
              }(t7);
            }(t6, i() ? Reflect.construct(e4, r5 || [], o(t6).constructor) : e4.apply(t6, r5));
          }(this, e3, ["Tried to set nested object field `" + t5 + "` to ".concat(s2, " `") + r4 + "`"])).path = t5, a2;
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && a(t5, e4);
        }(e3, t4), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
        var r3;
      }(r2(7026));
      Object.defineProperty(s.prototype, "name", { value: "ObjectExpectedError" }), t3.exports = s;
    }, 1857: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (i = function() {
          return !!t4;
        })();
      }
      function o(t4) {
        return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, o(t4);
      }
      function a(t4, e3) {
        return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, a(t4, e3);
      }
      var s = function(t4) {
        function e3(t5, r4, a2) {
          return function(t6, e4) {
            if (!(t6 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, e3), function(t6, e4, r5) {
            return e4 = o(e4), function(t7, e5) {
              if (e5 && (n(e5) == "object" || typeof e5 == "function"))
                return e5;
              if (e5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t8) {
                if (t8 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t8;
              }(t7);
            }(t6, i() ? Reflect.construct(e4, r5 || [], o(t6).constructor) : e4.apply(t6, r5));
          }(this, e3, ['Parameter "' + r4 + '" to ' + a2 + '() must be an object, got "' + t5.toString() + '" (type ' + n(t5) + ")"]);
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && a(t5, e4);
        }(e3, t4), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
        var r3;
      }(r2(7026));
      Object.defineProperty(s.prototype, "name", { value: "ObjectParameterError" }), t3.exports = s;
    }, 2597: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (i = function() {
          return !!t4;
        })();
      }
      function o(t4) {
        return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, o(t4);
      }
      function a(t4, e3) {
        return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, a(t4, e3);
      }
      var s = function(t4) {
        function e3(t5) {
          return function(t6, e4) {
            if (!(t6 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, e3), function(t6, e4, r4) {
            return e4 = o(e4), function(t7, e5) {
              if (e5 && (n(e5) == "object" || typeof e5 == "function"))
                return e5;
              if (e5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t8) {
                if (t8 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t8;
              }(t7);
            }(t6, i() ? Reflect.construct(e4, r4 || [], o(t6).constructor) : e4.apply(t6, r4));
          }(this, e3, ["Cannot overwrite `" + t5 + "` model once compiled."]);
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && a(t5, e4);
        }(e3, t4), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
        var r3;
      }(r2(7026));
      Object.defineProperty(s.prototype, "name", { value: "OverwriteModelError" }), t3.exports = s;
    }, 5597: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (i = function() {
          return !!t4;
        })();
      }
      function o(t4) {
        return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, o(t4);
      }
      function a(t4, e3) {
        return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, a(t4, e3);
      }
      var s = function(t4) {
        function e3(t5) {
          return function(t6, e4) {
            if (!(t6 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, e3), function(t6, e4, r4) {
            return e4 = o(e4), function(t7, e5) {
              if (e5 && (n(e5) == "object" || typeof e5 == "function"))
                return e5;
              if (e5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t8) {
                if (t8 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t8;
              }(t7);
            }(t6, i() ? Reflect.construct(e4, r4 || [], o(t6).constructor) : e4.apply(t6, r4));
          }(this, e3, ["Can't save() the same doc multiple times in parallel. Document: " + t5._doc._id]);
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && a(t5, e4);
        }(e3, t4), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
        var r3;
      }(r2(7026));
      Object.defineProperty(s.prototype, "name", { value: "ParallelSaveError" }), t3.exports = s;
    }, 3810: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (i = function() {
          return !!t4;
        })();
      }
      function o(t4) {
        return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, o(t4);
      }
      function a(t4, e3) {
        return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, a(t4, e3);
      }
      var s = function(t4) {
        function e3(t5) {
          return function(t6, e4) {
            if (!(t6 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, e3), function(t6, e4, r4) {
            return e4 = o(e4), function(t7, e5) {
              if (e5 && (n(e5) == "object" || typeof e5 == "function"))
                return e5;
              if (e5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t8) {
                if (t8 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t8;
              }(t7);
            }(t6, i() ? Reflect.construct(e4, r4 || [], o(t6).constructor) : e4.apply(t6, r4));
          }(this, e3, ["Can't validate() the same doc multiple times in parallel. Document: " + t5._doc._id]);
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && a(t5, e4);
        }(e3, t4), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
        var r3;
      }(r2(7026));
      Object.defineProperty(s.prototype, "name", { value: "ParallelValidateError" }), t3.exports = s;
    }, 6156: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4, e3) {
        for (var r3 = 0;r3 < e3.length; r3++) {
          var n2 = e3[r3];
          n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(t4, o(n2.key), n2);
        }
      }
      function o(t4) {
        var e3 = function(t5) {
          if (n(t5) != "object" || !t5)
            return t5;
          var e4 = t5[Symbol.toPrimitive];
          if (e4 !== undefined) {
            var r3 = e4.call(t5, "string");
            if (n(r3) != "object")
              return r3;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(t5);
        }(t4);
        return n(e3) == "symbol" ? e3 : e3 + "";
      }
      function a() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (a = function() {
          return !!t4;
        })();
      }
      function s(t4) {
        return s = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, s(t4);
      }
      function c(t4, e3) {
        return c = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, c(t4, e3);
      }
      var u = r2(7026), f = r2(8437), l = r2(3343), h = r2(2078), p = function(t4) {
        function e3() {
          return function(t5, e4) {
            if (!(t5 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, e3), function(t5, e4, r4) {
            return e4 = s(e4), function(t6, e5) {
              if (e5 && (n(e5) == "object" || typeof e5 == "function"))
                return e5;
              if (e5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t7) {
                if (t7 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t7;
              }(t6);
            }(t5, a() ? Reflect.construct(e4, r4 || [], s(t5).constructor) : e4.apply(t5, r4));
          }(this, e3, arguments);
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && c(t5, e4);
        }(e3, t4), r3 = e3, (o2 = [{ key: "assimilateError", value: function(t5) {
          var e4 = t5.reason, r4 = l(e4) && f(e4) && t5.message.indexOf("bad auth") === -1 && t5.message.indexOf("Authentication failed") === -1;
          for (var n2 in r4 ? this.message = "Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/" : h(e4) ? this.message = "Mongoose is connecting with SSL enabled, but the server is not accepting SSL connections. Please ensure that the MongoDB server you are connecting to is configured to accept SSL connections. Learn more: https://mongoosejs.com/docs/tutorials/ssl.html" : this.message = t5.message, t5)
            n2 !== "name" && (this[n2] = t5[n2]);
          return this;
        } }]) && i(r3.prototype, o2), Object.defineProperty(r3, "prototype", { writable: false }), r3;
        var r3, o2;
      }(u);
      Object.defineProperty(p.prototype, "name", { value: "MongooseServerSelectionError" }), t3.exports = p;
    }, 6166: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (i = function() {
          return !!t4;
        })();
      }
      function o(t4) {
        return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, o(t4);
      }
      function a(t4, e3) {
        return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, a(t4, e3);
      }
      var s = function(t4) {
        function e3(t5, r4, a2) {
          var s2;
          return function(t6, e4) {
            if (!(t6 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, e3), (s2 = function(t6, e4, r5) {
            return e4 = o(e4), function(t7, e5) {
              if (e5 && (n(e5) == "object" || typeof e5 == "function"))
                return e5;
              if (e5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t8) {
                if (t8 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t8;
              }(t7);
            }(t6, i() ? Reflect.construct(e4, r5 || [], o(t6).constructor) : e4.apply(t6, r5));
          }(this, e3, [r4 = r4 || "Field `" + t5 + "` is not in schema and strict mode is set to throw."])).isImmutableError = !!a2, s2.path = t5, s2;
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && a(t5, e4);
        }(e3, t4), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
        var r3;
      }(r2(7026));
      Object.defineProperty(s.prototype, "name", { value: "StrictModeError" }), t3.exports = s;
    }, 3232: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (i = function() {
          return !!t4;
        })();
      }
      function o(t4) {
        return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, o(t4);
      }
      function a(t4, e3) {
        return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, a(t4, e3);
      }
      var s = function(t4) {
        function e3(t5, r4) {
          var a2;
          return function(t6, e4) {
            if (!(t6 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, e3), (a2 = function(t6, e4, r5) {
            return e4 = o(e4), function(t7, e5) {
              if (e5 && (n(e5) == "object" || typeof e5 == "function"))
                return e5;
              if (e5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t8) {
                if (t8 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t8;
              }(t7);
            }(t6, i() ? Reflect.construct(e4, r5 || [], o(t6).constructor) : e4.apply(t6, r5));
          }(this, e3, [r4 = r4 || "Cannot populate path `" + t5 + "` because it is not in your schema. Set the `strictPopulate` option to false to override."])).path = t5, a2;
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && a(t5, e4);
        }(e3, t4), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
        var r3;
      }(r2(7026));
      Object.defineProperty(s.prototype, "name", { value: "StrictPopulateError" }), t3.exports = s;
    }, 5368: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4, e3) {
        for (var r3 = 0;r3 < e3.length; r3++) {
          var n2 = e3[r3];
          n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(t4, o(n2.key), n2);
        }
      }
      function o(t4) {
        var e3 = function(t5) {
          if (n(t5) != "object" || !t5)
            return t5;
          var e4 = t5[Symbol.toPrimitive];
          if (e4 !== undefined) {
            var r3 = e4.call(t5, "string");
            if (n(r3) != "object")
              return r3;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(t5);
        }(t4);
        return n(e3) == "symbol" ? e3 : e3 + "";
      }
      function a() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (a = function() {
          return !!t4;
        })();
      }
      function s(t4) {
        return s = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, s(t4);
      }
      function c(t4, e3) {
        return c = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, c(t4, e3);
      }
      var u = r2(7026), f = r2(5857), l = r2(7352), h = r2(1892), p = function(t4) {
        function e3(t5) {
          var r4, i2;
          return function(t6, e4) {
            if (!(t6 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, e3), (r4 = function(t6, e4, r5) {
            return e4 = s(e4), function(t7, e5) {
              if (e5 && (n(e5) == "object" || typeof e5 == "function"))
                return e5;
              if (e5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t8) {
                if (t8 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t8;
              }(t7);
            }(t6, a() ? Reflect.construct(e4, r5 || [], s(t6).constructor) : e4.apply(t6, r5));
          }(this, e3, [i2 = f(t5) === "model" ? t5.constructor.modelName + " validation failed" : "Validation failed"])).errors = {}, r4._message = i2, t5 && (t5.$errors = r4.errors), r4;
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && c(t5, e4);
        }(e3, t4), r3 = e3, (o2 = [{ key: "toString", value: function() {
          return this.name + ": " + h(this);
        } }, { key: "inspect", value: function() {
          return Object.assign(new Error(this.message), this);
        } }, { key: "addError", value: function(t5, r4) {
          if (r4 instanceof e3)
            for (var n2 = r4.errors, i2 = 0, o3 = Object.keys(n2);i2 < o3.length; i2++) {
              var a2 = o3[i2];
              this.addError("".concat(t5, ".").concat(a2), n2[a2]);
            }
          else
            this.errors[t5] = r4, this.message = this._message + ": " + h(this);
        } }]) && i(r3.prototype, o2), Object.defineProperty(r3, "prototype", { writable: false }), r3;
        var r3, o2;
      }(u);
      l.inspect.custom && (p.prototype[l.inspect.custom] = p.prototype.inspect), Object.defineProperty(p.prototype, "toJSON", { enumerable: false, writable: false, configurable: true, value: function() {
        return Object.assign({}, this, { name: this.name, message: this.message });
      } }), Object.defineProperty(p.prototype, "name", { value: "ValidationError" }), t3.exports = p;
    }, 8393: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4, e3) {
        for (var r3 = 0;r3 < e3.length; r3++) {
          var n2 = e3[r3];
          n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(t4, o(n2.key), n2);
        }
      }
      function o(t4) {
        var e3 = function(t5) {
          if (n(t5) != "object" || !t5)
            return t5;
          var e4 = t5[Symbol.toPrimitive];
          if (e4 !== undefined) {
            var r3 = e4.call(t5, "string");
            if (n(r3) != "object")
              return r3;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(t5);
        }(t4);
        return n(e3) == "symbol" ? e3 : e3 + "";
      }
      function a() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (a = function() {
          return !!t4;
        })();
      }
      function s(t4) {
        return s = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, s(t4);
      }
      function c(t4, e3) {
        return c = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, c(t4, e3);
      }
      var u = r2(7026), f = function(t4) {
        function e3(t5, r4) {
          var i2;
          (function(t6, e4) {
            if (!(t6 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          })(this, e3);
          var o3 = t5.message;
          o3 || (o3 = u.messages.general.default);
          var c2 = l(o3, t5, r4);
          return i2 = function(t6, e4, r5) {
            return e4 = s(e4), function(t7, e5) {
              if (e5 && (n(e5) == "object" || typeof e5 == "function"))
                return e5;
              if (e5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t8) {
                if (t8 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t8;
              }(t7);
            }(t6, a() ? Reflect.construct(e4, r5 || [], s(t6).constructor) : e4.apply(t6, r5));
          }(this, e3, [c2]), t5 = Object.assign({}, t5, { message: c2 }), i2.properties = t5, i2.kind = t5.type, i2.path = t5.path, i2.value = t5.value, i2.reason = t5.reason, i2;
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && c(t5, e4);
        }(e3, t4), r3 = e3, (o2 = [{ key: "toString", value: function() {
          return this.message;
        } }, { key: "toJSON", value: function() {
          return Object.assign({ name: this.name, message: this.message }, this);
        } }]) && i(r3.prototype, o2), Object.defineProperty(r3, "prototype", { writable: false }), r3;
        var r3, o2;
      }(u);
      function l(t4, e3, r3) {
        if (typeof t4 == "function")
          return t4(e3, r3);
        for (var n2 = 0, i2 = Object.keys(e3);n2 < i2.length; n2++) {
          var o2 = i2[n2];
          o2 !== "message" && (t4 = t4.replace("{" + o2.toUpperCase() + "}", e3[o2]));
        }
        return t4;
      }
      Object.defineProperty(f.prototype, "name", { value: "ValidatorError" }), Object.defineProperty(f.prototype, "properties", { enumerable: false, writable: true, value: null }), f.prototype.formatMessage = l, t3.exports = f;
    }, 587: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (i = function() {
          return !!t4;
        })();
      }
      function o(t4) {
        return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, o(t4);
      }
      function a(t4, e3) {
        return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, a(t4, e3);
      }
      var s = function(t4) {
        function e3(t5, r4, a2) {
          var s2;
          (function(t6, e4) {
            if (!(t6 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          })(this, e3);
          var c = a2.join(", ");
          return (s2 = function(t6, e4, r5) {
            return e4 = o(e4), function(t7, e5) {
              if (e5 && (n(e5) == "object" || typeof e5 == "function"))
                return e5;
              if (e5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t8) {
                if (t8 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t8;
              }(t7);
            }(t6, i() ? Reflect.construct(e4, r5 || [], o(t6).constructor) : e4.apply(t6, r5));
          }(this, e3, ['No matching document found for id "' + t5._doc._id + '" version ' + r4 + ' modifiedPaths "' + c + '"'])).version = r4, s2.modifiedPaths = a2, s2;
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && a(t5, e4);
        }(e3, t4), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
        var r3;
      }(r2(7026));
      Object.defineProperty(s.prototype, "name", { value: "VersionError" }), t3.exports = s;
    }, 3164: (t3) => {
      t3.exports = function t(e2) {
        if (!Array.isArray(e2))
          return { min: 0, max: 0, containsNonArrayItem: true };
        if (e2.length === 0)
          return { min: 1, max: 1, containsNonArrayItem: false };
        if (e2.length === 1 && !Array.isArray(e2[0]))
          return { min: 1, max: 1, containsNonArrayItem: false };
        for (var r2 = t(e2[0]), n = 1;n < e2.length; ++n) {
          var i = t(e2[n]);
          i.min < r2.min && (r2.min = i.min), i.max > r2.max && (r2.max = i.max), r2.containsNonArrayItem = r2.containsNonArrayItem || i.containsNonArrayItem;
        }
        return r2.min = r2.min + 1, r2.max = r2.max + 1, r2;
      };
    }, 1829: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      var i = r2(9394), o = r2(6704), a = r2(8150), s = r2(6504), c = r2(5515), u = r2(2128), f = r2(9240).isMongooseArray, l = r2(4797), h = r2(6288), p = r2(5625), d = r2(3692).trustedSymbol;
      function y(t4, e3, r3) {
        if (t4 == null)
          return t4;
        if (typeof t4 == "number" || typeof t4 == "string" || typeof t4 == "boolean" || typeof t4 == "bigint")
          return t4;
        if (Array.isArray(t4))
          return function(t5, e4) {
            var r4 = 0, n2 = t5.length, i2 = new Array(n2);
            for (r4 = 0;r4 < n2; ++r4)
              i2[r4] = y(t5[r4], e4, true);
            return i2;
          }(f(t4) ? t4.__array : t4, e3);
        if (s(t4)) {
          if (e3 && e3.retainDocuments && t4.$__ != null) {
            var a2 = t4.$clone();
            return t4.__index != null && (a2.__index = t4.__index), t4.__parentArray != null && (a2.__parentArray = t4.__parentArray), a2.$__parent = t4.$__parent, a2;
          }
          var d2, m = t4.$isSingleNested;
          if (h(t4) && t4.$__ != null && t4._doc != null)
            return t4._doc;
          if (d2 = e3 && e3.json && typeof t4.toJSON == "function" ? t4.toJSON(e3) : t4.toObject(e3), e3 && e3.minimize && !t4.constructor.$__required && m && Object.keys(d2).length === 0)
            return;
          return d2;
        }
        var v = t4.constructor;
        if (v)
          switch (c(v)) {
            case "Object":
              return b(t4, e3, r3);
            case "Date":
              return new v(+t4);
            case "RegExp":
              return function(t5) {
                var e4 = new RegExp(t5.source, t5.flags);
                return e4.lastIndex !== t5.lastIndex && (e4.lastIndex = t5.lastIndex), e4;
              }(t4);
          }
        return u(t4, "ObjectId") ? e3 && e3.flattenObjectIds ? t4.toJSON() : new o(t4.id) : u(t4, "Decimal128") ? e3 && e3.flattenDecimals ? t4.toJSON() : i.fromString(t4.toString()) : !v && l(t4) ? b(t4, e3, r3) : n(t4) === "object" && t4[p.schemaTypeSymbol] ? t4.clone() : e3 && e3.bson && typeof t4.toBSON == "function" ? t4 : typeof t4.valueOf == "function" ? t4.valueOf() : b(t4, e3, r3);
      }
      function b(t4, e3, r3) {
        var n2, i2 = e3 && e3.minimize, o2 = e3 && e3.omitUndefined, s2 = e3 && e3._seen, c2 = {};
        if (s2 && s2.has(t4))
          return s2.get(t4);
        s2 && s2.set(t4, c2), d in t4 && (c2[d] = t4[d]);
        for (var u2 = Object.keys(t4), f2 = u2.length, l2 = 0;l2 < f2; ++l2) {
          var h2 = u2[l2];
          if (!a.has(h2)) {
            var p2 = y(t4[h2], e3, false);
            i2 !== false && !o2 || p2 !== undefined ? i2 === true && p2 === undefined || (n2 || (n2 = true), c2[h2] = p2) : delete c2[h2];
          }
        }
        return i2 && !r3 ? n2 && c2 : c2;
      }
      t3.exports = y;
    }, 9563: (t3, e2, r2) => {
      var n = r2(5832).Buffer;
      function i(t4) {
        return i = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, i(t4);
      }
      var o = r2(3633).Binary, a = r2(2128), s = r2(6504);
      r2(9507), r2(7352);
      function c(t4) {
        return t4 && i(t4) === "object" && !(t4 instanceof Date) && !a(t4, "ObjectId") && (!Array.isArray(t4) || t4.length !== 0) && !(t4 instanceof n) && !a(t4, "Decimal128") && !(t4 instanceof o);
      }
      e2.B = function t(e3, r3, i2, o2) {
        var a2, u = (a2 = e3 && s(e3) && !n.isBuffer(e3) ? Object.keys(e3.toObject({ transform: false, virtuals: false }) || {}) : Object.keys(e3 || {})).length, f = {};
        r3 = r3 ? r3 + "." : "";
        for (var l = 0;l < u; ++l) {
          var h = a2[l], p = e3[h];
          f[r3 + h] = p;
          var d = o2 && o2.path && o2.path(r3 + h), y = o2 && o2.nested && o2.nested[r3 + h];
          if (!d || d.instance !== "Mixed") {
            if (c(p)) {
              if (i2 && i2.skipArrays && Array.isArray(p))
                continue;
              var b = t(p, r3 + h, i2, o2);
              for (var m in b)
                f[m] = b[m];
              Array.isArray(p) && (f[r3 + h] = p);
            }
            if (y)
              for (var v = 0, g = Object.keys(o2.paths);v < g.length; v++) {
                var _ = g[v];
                _.startsWith(r3 + h + ".") && !f.hasOwnProperty(_) && (f[_] = undefined);
              }
          }
        }
        return f;
      };
    }, 7603: (t3, e2, r2) => {
      var n = r2(2128);
      t3.exports = function(t4, e3) {
        return typeof t4 == "string" && typeof e3 == "string" || typeof t4 == "number" && typeof e3 == "number" ? t4 === e3 : !(!n(t4, "ObjectId") || !n(e3, "ObjectId")) && t4.toString() === e3.toString();
      };
    }, 967: (t3) => {
      t3.exports = function(t4, e2, r2, n, i) {
        var o = Object.keys(t4).reduce(function(t5, r3) {
          return t5 || r3.startsWith(e2 + ".");
        }, false), a = e2 + "." + r2.options.discriminatorKey;
        o || i.length !== 1 || i[0] !== a || n.splice(n.indexOf(a), 1);
      };
    }, 371: (t3, e2, r2) => {
      var n = r2(7785);
      t3.exports = function(t4, e3, r3) {
        var i = t4.schema.options.discriminatorKey, o = e3 != null && e3[i];
        if (o == null && (o = r3), t4.discriminators && o != null)
          if (t4.discriminators[o])
            t4 = t4.discriminators[o];
          else {
            var a = n(t4.discriminators, o);
            a && (t4 = a);
          }
        return t4;
      };
    }, 7785: (t3, e2, r2) => {
      var n = r2(7603);
      t3.exports = function(t4, e3) {
        if (t4 == null)
          return null;
        for (var r3 = 0, i = Object.keys(t4);r3 < i.length; r3++) {
          var o = t4[i[r3]];
          if (o.schema && o.schema.discriminatorMapping && n(o.schema.discriminatorMapping.value, e3))
            return o;
        }
        return null;
      };
    }, 1654: (t3, e2, r2) => {
      var n = r2(7603);
      t3.exports = function(t4, e3) {
        if (t4 == null || t4.discriminators == null)
          return null;
        for (var r3 = 0, i = Object.keys(t4.discriminators);r3 < i.length; r3++) {
          var o = i[r3], a = t4.discriminators[o];
          if (a.discriminatorMapping != null && n(a.discriminatorMapping.value, e3))
            return a;
        }
        return null;
      };
    }, 8836: (t3, e2, r2) => {
      var n = r2(5682), i = r2(8150), o = r2(2128), a = r2(6704), s = r2(4797);
      t3.exports = function t(e3, r3, c, u) {
        var f, l = Object.keys(r3), h = 0, p = l.length;
        if (c = c || "", !(u = u || new WeakSet).has(r3)) {
          for (u.add(r3);h < p; )
            if (f = l[h++], (c || f !== "discriminators" && f !== "base" && f !== "_applyDiscriminators" && f !== "_userProvidedOptions" && f !== "options" && f !== "tree") && !(c === "tree" && r3 != null && r3.instanceOfSchema || i.has(f))) {
              if (e3[f] == null)
                e3[f] = r3[f];
              else if (s(r3[f])) {
                if (s(e3[f]) || (e3[f] = {}), r3[f] != null) {
                  if (r3[f].$isSingleNested && e3[f].$isMongooseDocumentArray || r3[f].$isMongooseDocumentArray && e3[f].$isSingleNested || r3[f].$isMongooseDocumentArrayElement && e3[f].$isMongooseDocumentArrayElement)
                    continue;
                  if (r3[f].instanceOfSchema) {
                    e3[f].instanceOfSchema ? n(e3[f], r3[f].clone(), true) : e3[f] = r3[f].clone();
                    continue;
                  }
                  if (o(r3[f], "ObjectId")) {
                    e3[f] = new a(r3[f]);
                    continue;
                  }
                }
                t(e3[f], r3[f], c ? c + "." + f : f, u);
              }
            }
          r3 != null && r3.instanceOfSchema && (e3.tree = Object.assign({}, r3.tree, e3.tree));
        }
      };
    }, 6690: (t3, e2, r2) => {
      var n = r2(180);
      function i(t4, e3, r3) {
        t4.$__.activePaths.default(e3), !r3 && t4.$isSubdocument && t4.$isSingleNested && t4.$parent() != null && t4.$parent().$__.activePaths.default(t4.$__pathRelativeToParent(e3));
      }
      t3.exports = function(t4, e3, r3, o, a, s, c) {
        for (var u = Object.keys(t4.$__schema.paths), f = u.length, l = c && c.skipParentChangeTracking, h = 0;h < f; ++h) {
          var p = undefined, d = "", y = u[h];
          if (y !== "_id" || !t4.$__.skipId)
            for (var b = t4.$__schema.paths[y], m = b.splitPath(), v = m.length, g = false, _ = t4._doc, w = 0;w < v && _ != null; ++w) {
              var S = m[w];
              if (d += (d.length ? "." : "") + S, r3 === true) {
                if (d in e3)
                  break;
              } else if (r3 === false && e3 && !g) {
                var O = b.$isSingleNested || b.$isMongooseDocumentArray;
                if (d in e3 && !n(e3[d]) || w === v - 1 && O && o != null && o[d])
                  g = true;
                else if (o != null && !o[d])
                  break;
              }
              if (w === v - 1) {
                if (_[S] !== undefined)
                  break;
                if (a != null) {
                  if (typeof b.defaultValue == "function") {
                    if (!b.defaultValue.$runBeforeSetters && a)
                      break;
                    if (b.defaultValue.$runBeforeSetters && !a)
                      break;
                  } else if (!a)
                    continue;
                }
                if (s && s[d])
                  break;
                if (e3 && r3 !== null) {
                  if (r3 === true) {
                    if (y in e3)
                      continue;
                    try {
                      p = b.getDefault(t4, false);
                    } catch (e4) {
                      t4.invalidate(y, e4);
                      break;
                    }
                    p !== undefined && (_[S] = p, i(t4, y, l));
                  } else if (g) {
                    try {
                      p = b.getDefault(t4, false);
                    } catch (e4) {
                      t4.invalidate(y, e4);
                      break;
                    }
                    p !== undefined && (_[S] = p, i(t4, y, l));
                  }
                } else {
                  try {
                    p = b.getDefault(t4, false);
                  } catch (e4) {
                    t4.invalidate(y, e4);
                    break;
                  }
                  p !== undefined && (_[S] = p, i(t4, y, l));
                }
              } else
                _ = _[S];
            }
        }
      };
    }, 8208: (t3) => {
      function e2(t4, r2) {
        var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Set;
        if (n.has(t4))
          throw new Error("Infinite subdocument loop: subdoc with _id " + t4._id + " is a parent of itself");
        var i = t4.$parent(), o = t4.$__pathRelativeToParent(undefined, false) + "." + r2;
        i.$__.activePaths.clearPath(o), i.$isSubdocument && e2(i, o, n);
      }
      t3.exports = function(t4, r2, n) {
        var i = (n = n || {}).skipDocArrays, o = 0;
        if (!t4)
          return o;
        for (var a = 0, s = Object.keys(t4.$__.activePaths.getStatePaths("modify"));a < s.length; a++) {
          var c = s[a];
          if (i) {
            var u = t4.$__schema.path(c);
            if (u && u.$isMongooseDocumentArray)
              continue;
          }
          c.startsWith(r2 + ".") && (t4.$__.activePaths.clearPath(c), ++o, t4.$isSubdocument && e2(t4, c));
        }
        return o;
      };
    }, 9725: (t3, e2, r2) => {
      var n, i = r2(1829), o = r2(5625).documentSchemaSymbol, a = r2(3920)._, s = r2(335), c = r2(5625).getSymbol, u = r2(5625).scopeSymbol, f = s.isPOJO;
      e2.w = p, e2.X = d;
      var l = Object.freeze({ minimize: true, virtuals: false, getters: false, transform: false }), h = Object.freeze({ noDottedPath: true });
      function p(t4, e3, i2, o2) {
        n = n || r2(3293);
        for (var a2 = o2.typeKey, s2 = 0, c2 = Object.keys(t4);s2 < c2.length; s2++) {
          var u2 = c2[s2], l2 = t4[u2];
          d({ prop: u2, subprops: f(l2) && Object.keys(l2).length > 0 && (!l2[a2] || a2 === "type" && f(l2.type) && l2.type.type) ? l2 : null, prototype: e3, prefix: i2, options: o2 });
        }
      }
      function d(t4) {
        var { prop: e3, subprops: s2, prototype: f2, prefix: d2, options: y } = t4;
        n = n || r2(3293);
        var b = (d2 ? d2 + "." : "") + e3, m = (d2 = d2 || "") ? Object.freeze({}) : h;
        s2 ? Object.defineProperty(f2, e3, { enumerable: true, configurable: true, get: function() {
          var t5, e4, r3 = this;
          if (this.$__.getters || (this.$__.getters = {}), !this.$__.getters[b]) {
            var a2 = Object.create(n.prototype, (t5 = this, e4 = {}, Object.getOwnPropertyNames(t5).forEach(function(r4) {
              ["isNew", "$__", "$errors", "errors", "_doc", "$locals", "$op", "__parentArray", "__index", "$isDocumentArrayElement"].indexOf(r4) === -1 || (e4[r4] = Object.getOwnPropertyDescriptor(t5, r4), e4[r4].enumerable = false);
            }), e4));
            d2 || (a2.$__[u] = this), a2.$__.nestedPath = b, Object.defineProperty(a2, "schema", { enumerable: false, configurable: true, writable: false, value: f2.schema }), Object.defineProperty(a2, "$__schema", { enumerable: false, configurable: true, writable: false, value: f2.schema }), Object.defineProperty(a2, o, { enumerable: false, configurable: true, writable: false, value: f2.schema }), Object.defineProperty(a2, "toObject", { enumerable: false, configurable: true, writable: false, value: function() {
              return i(r3.get(b, null, { virtuals: this && this.schema && this.schema.options && this.schema.options.toObject && this.schema.options.toObject.virtuals || null }));
            } }), Object.defineProperty(a2, "$__get", { enumerable: false, configurable: true, writable: false, value: function() {
              return r3.get(b, null, { virtuals: this && this.schema && this.schema.options && this.schema.options.toObject && this.schema.options.toObject.virtuals || null });
            } }), Object.defineProperty(a2, "toJSON", { enumerable: false, configurable: true, writable: false, value: function() {
              return r3.get(b, null, { virtuals: this && this.schema && this.schema.options && this.schema.options.toJSON && this.schema.options.toJSON.virtuals || null });
            } }), Object.defineProperty(a2, "$__isNested", { enumerable: false, configurable: true, writable: false, value: true }), Object.defineProperty(a2, "$isEmpty", { enumerable: false, configurable: true, writable: false, value: function() {
              return Object.keys(this.get(b, null, l) || {}).length === 0;
            } }), Object.defineProperty(a2, "$__parent", { enumerable: false, configurable: true, writable: false, value: this }), p(s2, a2, b, y), this.$__.getters[b] = a2;
          }
          return this.$__.getters[b];
        }, set: function(t5) {
          t5 != null && t5.$__isNested ? t5 = t5.$__get() : t5 instanceof n && !t5.$__isNested && (t5 = t5.$toObject(a)), (this.$__[u] || this).$set(b, t5);
        } }) : Object.defineProperty(f2, e3, { enumerable: true, configurable: true, get: function() {
          return this[c].call(this.$__[u] || this, b, null, m);
        }, set: function(t5) {
          this.$set.call(this.$__[u] || this, b, t5);
        } });
      }
    }, 2609: (t3) => {
      t3.exports = function(t4, e2, r2) {
        for (var n = e2[0], i = r2, o = t4, a = 0;a < e2.length - 1; ++a) {
          var s = i.path(n);
          if (s && s.schema) {
            var c = o.get(n);
            if (i = s.schema, n = e2[a + 1], Array.isArray(c) && !isNaN(n) && (c = c[n], n = ""), c == null)
              break;
            o = c;
          } else
            n += n.length ? "." + e2[a + 1] : e2[a + 1];
        }
        return o;
      };
    }, 8239: (t3, e2, r2) => {
      var n = r2(5132), i = r2(1654);
      t3.exports = function t(e3, r3, o) {
        for (var a = (o = o || {}).typeOnly, s = Array.isArray(r3) ? r3 : r3.indexOf(".") === -1 ? [r3] : r3.split("."), c = null, u = "adhocOrUndefined", f = i(e3.schema, e3.get(e3.schema.options.discriminatorKey)) || e3.schema, l = 0;l < s.length; ++l) {
          var h = s.slice(0, l + 1).join(".");
          if ((c = f.path(h)) != null) {
            if (c.instance === "Mixed")
              return a ? "real" : c;
            if (u = f.pathType(h), (c.$isSingleNested || c.$isMongooseDocumentArrayElement) && c.schema.discriminators != null) {
              var p = c.schema.discriminators, d = e3.get(h + "." + n(c, "schema.options.discriminatorKey"));
              if (d == null || p[d] == null)
                continue;
              var y = s.slice(l + 1).join(".");
              return t(e3.get(h), y, o);
            }
          } else
            u = "adhocOrUndefined";
        }
        return a ? u : c;
      };
    }, 8145: (t3, e2, r2) => {
      function n(t4, e3) {
        var r3 = Object.keys(t4);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(t4);
          e3 && (n2 = n2.filter(function(e4) {
            return Object.getOwnPropertyDescriptor(t4, e4).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function i(t4) {
        for (var e3 = 1;e3 < arguments.length; e3++) {
          var r3 = arguments[e3] != null ? arguments[e3] : {};
          e3 % 2 ? n(Object(r3), true).forEach(function(e4) {
            o(t4, e4, r3[e4]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(r3)) : n(Object(r3)).forEach(function(e4) {
            Object.defineProperty(t4, e4, Object.getOwnPropertyDescriptor(r3, e4));
          });
        }
        return t4;
      }
      function o(t4, e3, r3) {
        return (e3 = function(t5) {
          var e4 = function(t6) {
            if (a(t6) != "object" || !t6)
              return t6;
            var e5 = t6[Symbol.toPrimitive];
            if (e5 !== undefined) {
              var r4 = e5.call(t6, "string");
              if (a(r4) != "object")
                return r4;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t6);
          }(t5);
          return a(e4) == "symbol" ? e4 : e4 + "";
        }(e3)) in t4 ? Object.defineProperty(t4, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t4[e3] = r3, t4;
      }
      function a(t4) {
        return a = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, a(t4);
      }
      var s = r2(335), c = new Set(["__index", "__parentArray", "_doc"]);
      t3.exports = function(t4, e3) {
        if (s.isPOJO(t4) && t4.$__ != null && t4._doc != null) {
          if (e3) {
            for (var r3 = {}, n2 = 0, o2 = Object.keys(t4);n2 < o2.length; n2++) {
              var u = o2[n2];
              a(u) !== "symbol" && u[0] !== "$" && (c.has(u) || (r3[u] = t4[u]));
            }
            return i(i({}, t4._doc), r3);
          }
          return t4._doc;
        }
        return t4;
      };
    }, 6343: (t3) => {
      function e2(t4, e3) {
        (e3 == null || e3 > t4.length) && (e3 = t4.length);
        for (var r2 = 0, n = Array(e3);r2 < e3; r2++)
          n[r2] = t4[r2];
        return n;
      }
      t3.exports = function(t4, r2, n) {
        if (t4.length === 0)
          return n();
        var i, o = t4.length, a = null, s = function(t5, r3) {
          var n2 = typeof Symbol != "undefined" && t5[Symbol.iterator] || t5["@@iterator"];
          if (!n2) {
            if (Array.isArray(t5) || (n2 = function(t6, r4) {
              if (t6) {
                if (typeof t6 == "string")
                  return e2(t6, r4);
                var n3 = {}.toString.call(t6).slice(8, -1);
                return n3 === "Object" && t6.constructor && (n3 = t6.constructor.name), n3 === "Map" || n3 === "Set" ? Array.from(t6) : n3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3) ? e2(t6, r4) : undefined;
              }
            }(t5)) || r3 && t5 && typeof t5.length == "number") {
              n2 && (t5 = n2);
              var i2 = 0, o2 = function() {
              };
              return { s: o2, n: function() {
                return i2 >= t5.length ? { done: true } : { done: false, value: t5[i2++] };
              }, e: function(t6) {
                throw t6;
              }, f: o2 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var a2, s2 = true, c = false;
          return { s: function() {
            n2 = n2.call(t5);
          }, n: function() {
            var t6 = n2.next();
            return s2 = t6.done, t6;
          }, e: function(t6) {
            c = true, a2 = t6;
          }, f: function() {
            try {
              s2 || n2.return == null || n2.return();
            } finally {
              if (c)
                throw a2;
            }
          } };
        }(t4);
        try {
          for (s.s();!(i = s.n()).done; )
            r2(i.value, function(t5) {
              if (a == null)
                return t5 != null ? n(a = t5) : --o <= 0 ? n() : undefined;
            });
        } catch (a2) {
          s.e(a2);
        } finally {
          s.f();
        }
      };
    }, 1892: (t3) => {
      t3.exports = function(t4) {
        for (var e2, r2 = Object.keys(t4.errors || {}), n = r2.length, i = [], o = 0;o < n; ++o)
          e2 = r2[o], t4 !== t4.errors[e2] && i.push(e2 + ": " + t4.errors[e2].message);
        return i.join(", ");
      };
    }, 5575: (t3) => {
      t3.exports = function(t4) {
        return t4 == null ? null : Object.keys(t4)[0];
      };
    }, 5132: (t3) => {
      function e2(t4, e3) {
        (e3 == null || e3 > t4.length) && (e3 = t4.length);
        for (var r3 = 0, n = Array(e3);r3 < e3; r3++)
          n[r3] = t4[r3];
        return n;
      }
      function r2(t4, e3) {
        return t4 == null ? t4 : t4 instanceof Map ? t4.get(e3) : t4[e3];
      }
      t3.exports = function(t4, n, i) {
        var o, a = false;
        if (typeof n == "string") {
          if (n.indexOf(".") === -1) {
            var s = r2(t4, n);
            return s == null ? i : s;
          }
          o = n.split(".");
        } else if (a = true, (o = n).length === 1) {
          var c = r2(t4, o[0]);
          return c == null ? i : c;
        }
        var u, f = n, l = t4, h = function(t5, r3) {
          var n2 = typeof Symbol != "undefined" && t5[Symbol.iterator] || t5["@@iterator"];
          if (!n2) {
            if (Array.isArray(t5) || (n2 = function(t6, r4) {
              if (t6) {
                if (typeof t6 == "string")
                  return e2(t6, r4);
                var n3 = {}.toString.call(t6).slice(8, -1);
                return n3 === "Object" && t6.constructor && (n3 = t6.constructor.name), n3 === "Map" || n3 === "Set" ? Array.from(t6) : n3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3) ? e2(t6, r4) : undefined;
              }
            }(t5)) || r3 && t5 && typeof t5.length == "number") {
              n2 && (t5 = n2);
              var i2 = 0, o2 = function() {
              };
              return { s: o2, n: function() {
                return i2 >= t5.length ? { done: true } : { done: false, value: t5[i2++] };
              }, e: function(t6) {
                throw t6;
              }, f: o2 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var a2, s2 = true, c2 = false;
          return { s: function() {
            n2 = n2.call(t5);
          }, n: function() {
            var t6 = n2.next();
            return s2 = t6.done, t6;
          }, e: function(t6) {
            c2 = true, a2 = t6;
          }, f: function() {
            try {
              s2 || n2.return == null || n2.return();
            } finally {
              if (c2)
                throw a2;
            }
          } };
        }(o);
        try {
          for (h.s();!(u = h.n()).done; ) {
            var p = u.value;
            if (l == null)
              return i;
            if (!a && l[f] != null)
              return l[f];
            l = r2(l, p), a || (f = f.substr(p.length + 1));
          }
        } catch (t5) {
          h.e(t5);
        } finally {
          h.f();
        }
        return l == null ? i : l;
      };
    }, 5857: (t3) => {
      t3.exports = function(t4) {
        if (t4 != null && typeof t4.constructor == "function")
          return t4.constructor.name;
      };
    }, 5515: (t3) => {
      var e2 = /^function\s*([^\s(]+)/;
      t3.exports = function(t4) {
        return t4.name || (t4.toString().trim().match(e2) || [])[1];
      };
    }, 3933: (t3) => {
      var e2 = typeof { env: {} }.nextTick == "function" ? { env: {} }.nextTick.bind({ env: {} }) : function(t4) {
        return setTimeout(t4, 0);
      };
      t3.exports = function(t4) {
        return e2(t4);
      };
    }, 9996: (t3) => {
      t3.exports = function(t4, e2) {
        var r2 = t4.discriminatorMapping && t4.discriminatorMapping.value;
        if (r2 && !("sparse" in e2)) {
          var n = t4.options.discriminatorKey;
          e2.partialFilterExpression = e2.partialFilterExpression || {}, e2.partialFilterExpression[n] = r2;
        }
        return e2;
      };
    }, 6564: (t3) => {
      t3.exports = function(t4) {
        return typeof t4 == "function" && t4.constructor && t4.constructor.name === "AsyncFunction";
      };
    }, 2128: (t3) => {
      function e2(t4) {
        return e2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, e2(t4);
      }
      t3.exports = function(t4, r2) {
        return e2(t4) === "object" && t4 !== null && t4._bsontype === r2;
      };
    }, 6504: (t3, e2, r2) => {
      var n = r2(9240).isMongooseArray;
      t3.exports = function(t4) {
        return t4 != null && (n(t4) || t4.$__ != null || t4.isMongooseBuffer || t4.$isMongooseMap);
      };
    }, 4797: (t3, e2, r2) => {
      var n = r2(5832).Buffer;
      t3.exports = function(t4) {
        return n.isBuffer(t4) || Object.prototype.toString.call(t4) === "[object Object]";
      };
    }, 6288: (t3) => {
      function e2(t4) {
        return e2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, e2(t4);
      }
      t3.exports = function(t4) {
        if (t4 == null || e2(t4) !== "object")
          return false;
        var r2 = Object.getPrototypeOf(t4);
        return !r2 || r2.constructor.name === "Object";
      };
    }, 3165: (t3) => {
      function e2(t4) {
        return e2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, e2(t4);
      }
      t3.exports = function(t4) {
        return !!t4 && (e2(t4) === "object" || typeof t4 == "function") && typeof t4.then == "function";
      };
    }, 4664: (t3) => {
      function e2(t4) {
        return e2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, e2(t4);
      }
      t3.exports = function(t4) {
        for (var r2 = Object.keys(t4), n = true, i = 0, o = r2.length;i < o; ++i)
          if (e2(t4[r2[i]]) === "object" && t4[r2[i]] !== null) {
            n = false;
            break;
          }
        return n;
      };
    }, 6470: (t3, e2, r2) => {
      var n = r2(335).isPOJO;
      t3.exports = function t(e3) {
        for (var r3, i, o, a = Object.keys(e3), s = a.length;s--; )
          o = e3[i = a[s]], n(o) && (e3[i] = t(o)), e3[i] !== undefined ? r3 = true : delete e3[i];
        return r3 ? e3 : undefined;
      };
    }, 8892: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4, e3) {
        var r3 = Object.keys(t4);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(t4);
          e3 && (n2 = n2.filter(function(e4) {
            return Object.getOwnPropertyDescriptor(t4, e4).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function o(t4) {
        for (var e3 = 1;e3 < arguments.length; e3++) {
          var r3 = arguments[e3] != null ? arguments[e3] : {};
          e3 % 2 ? i(Object(r3), true).forEach(function(e4) {
            a(t4, e4, r3[e4]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(r3)) : i(Object(r3)).forEach(function(e4) {
            Object.defineProperty(t4, e4, Object.getOwnPropertyDescriptor(r3, e4));
          });
        }
        return t4;
      }
      function a(t4, e3, r3) {
        return (e3 = function(t5) {
          var e4 = function(t6) {
            if (n(t6) != "object" || !t6)
              return t6;
            var e5 = t6[Symbol.toPrimitive];
            if (e5 !== undefined) {
              var r4 = e5.call(t6, "string");
              if (n(r4) != "object")
                return r4;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t6);
          }(t5);
          return n(e4) == "symbol" ? e4 : e4 + "";
        }(e3)) in t4 ? Object.defineProperty(t4, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t4[e3] = r3, t4;
      }
      var s = r2(3089), c = r2(8183);
      t3.exports = f, f.middlewareFunctions = ["deleteOne", "save", "validate", "remove", "updateOne", "init"];
      var u = new Set(f.middlewareFunctions.flatMap(function(t4) {
        return [t4, "$__".concat(t4)];
      }));
      function f(t4, e3, r3) {
        var n2 = { useErrorHandlers: true, numCallbackParams: 1, nullResultByDefault: true, contextParameter: true }, i2 = (r3 = r3 || {}).decorateDoc ? t4 : t4.prototype;
        t4.$appliedHooks = true;
        for (var a2 = 0, l = Object.keys(e3.paths);a2 < l.length; a2++) {
          var h = l[a2], p = e3.paths[h], d = null;
          if (p.$isSingleNested)
            d = p.caster;
          else {
            if (!p.$isMongooseDocumentArray)
              continue;
            d = p.Constructor;
          }
          if (!d.$appliedHooks && (f(d, p.schema, o(o({}, r3), {}, { isChildSchema: true })), d.discriminators != null))
            for (var y = 0, b = Object.keys(d.discriminators);y < b.length; y++) {
              var m = b[y];
              f(d.discriminators[m], d.discriminators[m].schema, r3);
            }
        }
        var v = e3.s.hooks.filter(function(t5) {
          return t5.name === "updateOne" || t5.name === "deleteOne" ? !!t5.document : t5.name === "remove" || t5.name === "init" ? t5.document == null || !!t5.document : t5.query == null && t5.document == null || t5.document !== false;
        }).filter(function(t5) {
          return !e3.methods[t5.name] || !t5.fn[s.builtInMiddleware];
        });
        t4._middleware = v, i2.$__originalValidate = i2.$__originalValidate || i2.$__validate;
        for (var g = 0, _ = r3 && r3.isChildSchema ? ["save", "validate", "deleteOne"] : ["save", "validate"];g < _.length; g++) {
          var w = _[g], S = w === "validate" ? "$__originalValidate" : "$__".concat(w), O = v.createWrapper(w, i2[S], null, n2);
          i2["$__".concat(w)] = O;
        }
        i2.$__init = v.createWrapperSync("init", i2.$__init, null, n2);
        for (var j = Object.keys(e3.methods), $ = Object.assign({}, n2, { checkForPromise: true }), A = function() {
          var e4 = x[E];
          if (u.has(e4))
            return 0;
          if (!v.hasHooks(e4))
            return 0;
          var r4 = i2[e4];
          i2[e4] = function() {
            var r5 = this, n3 = Array.prototype.slice.call(arguments), i3 = n3.slice(-1).pop(), o2 = typeof i3 == "function" ? n3.slice(0, n3.length - 1) : n3;
            return c(i3, function(t5) {
              return r5["$__".concat(e4)].apply(r5, o2.concat([t5]));
            }, t4.events);
          }, i2["$__".concat(e4)] = v.createWrapper(e4, r4, null, $);
        }, E = 0, x = j;E < x.length; E++)
          A();
      }
    }, 8650: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4, e3) {
        var r3 = Object.keys(t4);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(t4);
          e3 && (n2 = n2.filter(function(e4) {
            return Object.getOwnPropertyDescriptor(t4, e4).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function o(t4, e3, r3) {
        return (e3 = function(t5) {
          var e4 = function(t6) {
            if (n(t6) != "object" || !t6)
              return t6;
            var e5 = t6[Symbol.toPrimitive];
            if (e5 !== undefined) {
              var r4 = e5.call(t6, "string");
              if (n(r4) != "object")
                return r4;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t6);
          }(t5);
          return n(e4) == "symbol" ? e4 : e4 + "";
        }(e3)) in t4 ? Object.defineProperty(t4, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t4[e3] = r3, t4;
      }
      function a(t4, e3) {
        var r3 = typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
        if (!r3) {
          if (Array.isArray(t4) || (r3 = function(t5, e4) {
            if (t5) {
              if (typeof t5 == "string")
                return s(t5, e4);
              var r4 = {}.toString.call(t5).slice(8, -1);
              return r4 === "Object" && t5.constructor && (r4 = t5.constructor.name), r4 === "Map" || r4 === "Set" ? Array.from(t5) : r4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4) ? s(t5, e4) : undefined;
            }
          }(t4)) || e3 && t4 && typeof t4.length == "number") {
            r3 && (t4 = r3);
            var n2 = 0, i2 = function() {
            };
            return { s: i2, n: function() {
              return n2 >= t4.length ? { done: true } : { done: false, value: t4[n2++] };
            }, e: function(t5) {
              throw t5;
            }, f: i2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var o2, a2 = true, c2 = false;
        return { s: function() {
          r3 = r3.call(t4);
        }, n: function() {
          var t5 = r3.next();
          return a2 = t5.done, t5;
        }, e: function(t5) {
          c2 = true, o2 = t5;
        }, f: function() {
          try {
            a2 || r3.return == null || r3.return();
          } finally {
            if (c2)
              throw o2;
          }
        } };
      }
      function s(t4, e3) {
        (e3 == null || e3 > t4.length) && (e3 = t4.length);
        for (var r3 = 0, n2 = Array(e3);r3 < e3; r3++)
          n2[r3] = t4[r3];
        return n2;
      }
      var c = r2(1895), u = r2(7807), f = r2(1829), l = r2(9725).X, h = r2(5132), p = r2(335), d = r2(8836), y = { toJSON: true, toObject: true, _id: true, id: true, virtuals: true, methods: true };
      t3.exports = function(t4, e3, r3, n2, s2, b, m) {
        if (!r3 || !r3.instanceOfSchema)
          throw new Error("You must pass a valid discriminator Schema");
        if (b = b == null || b, t4.schema.discriminatorMapping && !t4.schema.discriminatorMapping.isRoot)
          throw new Error('Discriminator "' + e3 + '" can only be a discriminator of the root model');
        if (s2) {
          var v = h(t4.base, "options.applyPluginsToDiscriminators", false) || !b;
          t4.base._applyPlugins(r3, { skipTopLevel: !v });
        } else
          b || u(r3);
        var g = t4.schema.options.discriminatorKey, _ = t4.schema.path(g);
        if (_ != null)
          p.hasUserDefinedProperty(_.options, "select") || (_.options.select = true), _.options.$skipDiscriminatorCheck = true;
        else {
          var w = {};
          w[g] = { default: undefined, select: true, $skipDiscriminatorCheck: true }, w[g][t4.schema.options.typeKey] = String, t4.schema.add(w), l({ prop: g, prototype: t4.prototype, options: t4.schema.options });
        }
        if (r3.path(g) && r3.path(g).options.$skipDiscriminatorCheck !== true)
          throw new Error('Discriminator "' + e3 + '" cannot have field with name "' + g + '"');
        var S = e3;
        if ((typeof n2 == "string" && n2.length || n2 != null) && (S = n2), function(e4, r4) {
          e4._baseSchema = r4, r4.paths._id && r4.paths._id.options && !r4.paths._id.options.auto && e4.remove("_id");
          for (var n3 = [], u2 = 0, l2 = Object.keys(r4.paths);u2 < l2.length; u2++) {
            var h2 = l2[u2];
            if (e4.nested[h2])
              n3.push(h2);
            else if (h2.indexOf(".") !== -1) {
              var m2, v2 = "", w2 = a(h2.split(".").slice(0, -1));
              try {
                for (w2.s();!(m2 = w2.n()).done; ) {
                  var O = m2.value;
                  v2 += (v2.length ? "." : "") + O, (e4.paths[v2] instanceof c || e4.singleNestedPaths[v2] instanceof c) && n3.push(h2);
                }
              } catch (t5) {
                w2.e(t5);
              } finally {
                w2.f();
              }
            }
          }
          e4.obj = function(t5) {
            for (var e5 = 1;e5 < arguments.length; e5++) {
              var r5 = arguments[e5] != null ? arguments[e5] : {};
              e5 % 2 ? i(Object(r5), true).forEach(function(e6) {
                o(t5, e6, r5[e6]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t5, Object.getOwnPropertyDescriptors(r5)) : i(Object(r5)).forEach(function(e6) {
                Object.defineProperty(t5, e6, Object.getOwnPropertyDescriptor(r5, e6));
              });
            }
            return t5;
          }({}, e4.obj), d(e4, r4);
          for (var j = 0, $ = n3;j < $.length; j++) {
            var A = $[j];
            delete e4.paths[A];
          }
          e4.childSchemas.forEach(function(t5) {
            t5.model.prototype.$__setSchema(t5.schema);
          });
          var E = {};
          E[g] = { default: S, select: true, set: function(t5) {
            if (t5 === S || Array.isArray(S) && p.deepEqual(t5, S))
              return S;
            throw new Error("Can't set discriminator key \"" + g + '"');
          }, $skipDiscriminatorCheck: true }, E[g][e4.options.typeKey] = _ ? _.options[e4.options.typeKey] : String, e4.add(E), e4.discriminatorMapping = { key: g, value: S, isRoot: false }, r4.options.collection && (e4.options.collection = r4.options.collection);
          var x = e4.options.toJSON, P = e4.options.toObject, k = e4.options._id, M = e4.options.id, I = Object.keys(e4.options);
          e4.options.discriminatorKey = r4.options.discriminatorKey;
          for (var T = e4._userProvidedOptions, B = 0, R = I;B < R.length; B++) {
            var N = R[B];
            if (!y[N] && N in T && !p.deepEqual(e4.options[N], r4.options[N]))
              throw new Error("Can't customize discriminator option " + N + " (can only modify " + Object.keys(y).join(", ") + ")");
          }
          e4.options = f(r4.options);
          for (var D = 0, L = Object.keys(T);D < L.length; D++) {
            var C = L[D];
            e4.options[C] = T[C];
          }
          x && (e4.options.toJSON = x), P && (e4.options.toObject = P), k !== undefined && (e4.options._id = k), e4.options.id = M, b && (e4.s.hooks = t4.schema.s.hooks.merge(e4.s.hooks)), s2 && (e4.plugins = Array.prototype.slice.call(r4.plugins)), e4.callQueue = r4.callQueue.concat(e4.callQueue), delete e4._requiredpaths;
        }(r3, t4.schema), t4.discriminators || (t4.discriminators = {}), t4.schema.discriminatorMapping || (t4.schema.discriminatorMapping = { key: g, value: null, isRoot: true }), t4.schema.discriminators || (t4.schema.discriminators = {}), t4.schema.discriminators[e3] = r3, t4.discriminators[e3] && !r3.options.overwriteModels && !m)
          throw new Error('Discriminator with name "' + e3 + '" already exists');
        return r3;
      };
    }, 5679: (t3) => {
      function e2(t4) {
        return e2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, e2(t4);
      }
      t3.exports = function(t4) {
        if (t4 == null || e2(t4) !== "object")
          return t4;
        if (Array.isArray(t4))
          for (var r2 = t4.length - 1;r2 >= 0; --r2)
            t4[r2] === undefined && t4.splice(r2, 1);
        for (var n = 0, i = Object.keys(t4);n < i.length; n++) {
          var o = i[n];
          t4[o] === undefined && delete t4[o];
        }
        return t4;
      };
    }, 4094: (t3) => {
      var e2 = /\./g;
      t3.exports = function(t4) {
        if (t4.indexOf(".") === -1)
          return [t4];
        for (var r2 = t4.split(e2), n = r2.length, i = new Array(n), o = "", a = 0;a < n; ++a)
          o += o.length !== 0 ? "." + r2[a] : r2[a], i[a] = o;
        return i;
      };
    }, 5815: (t3) => {
      function e2(t4) {
        return e2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, e2(t4);
      }
      t3.exports = function(t4, r2, n) {
        if (t4 == null)
          return t4;
        if (t4._doc != null && (t4 = t4._doc), arguments.length >= 3) {
          if (e2(t4) !== "object")
            return;
          if (n === undefined)
            return;
          return t4 instanceof Map ? t4.set(r2, n) : t4[r2] = n, n;
        }
        return r2 === "$*" ? t4 instanceof Map ? Array.from(t4.values()) : Object.keys(t4).map(function(e3) {
          return t4[e3];
        }) : t4 instanceof Map ? t4.get(r2) : t4[r2];
      };
    }, 1096: (t3, e2, r2) => {
      function n(t4, e3) {
        (e3 == null || e3 > t4.length) && (e3 = t4.length);
        for (var r3 = 0, n2 = Array(e3);r3 < e3; r3++)
          n2[r3] = t4[r3];
        return n2;
      }
      var i = r2(335);
      t3.exports = function(t4, e3) {
        if (t4._doc._id != null && e3 != null && e3.length !== 0) {
          var r3, o = String(t4._doc._id), a = function(t5, e4) {
            var r4 = typeof Symbol != "undefined" && t5[Symbol.iterator] || t5["@@iterator"];
            if (!r4) {
              if (Array.isArray(t5) || (r4 = function(t6, e5) {
                if (t6) {
                  if (typeof t6 == "string")
                    return n(t6, e5);
                  var r5 = {}.toString.call(t6).slice(8, -1);
                  return r5 === "Object" && t6.constructor && (r5 = t6.constructor.name), r5 === "Map" || r5 === "Set" ? Array.from(t6) : r5 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r5) ? n(t6, e5) : undefined;
                }
              }(t5)) || e4 && t5 && typeof t5.length == "number") {
                r4 && (t5 = r4);
                var i2 = 0, o2 = function() {
                };
                return { s: o2, n: function() {
                  return i2 >= t5.length ? { done: true } : { done: false, value: t5[i2++] };
                }, e: function(t6) {
                  throw t6;
                }, f: o2 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var a2, s2 = true, c2 = false;
            return { s: function() {
              r4 = r4.call(t5);
            }, n: function() {
              var t6 = r4.next();
              return s2 = t6.done, t6;
            }, e: function(t6) {
              c2 = true, a2 = t6;
            }, f: function() {
              try {
                s2 || r4.return == null || r4.return();
              } finally {
                if (c2)
                  throw a2;
              }
            } };
          }(e3);
          try {
            for (a.s();!(r3 = a.n()).done; ) {
              var s = r3.value;
              if (!s.isVirtual)
                for (var c = s.path.split("."), u = 0;u < c.length - 1; ++u) {
                  var f = c.slice(0, u + 1).join("."), l = c.slice(u + 1).join("."), h = t4.get(f);
                  if (h != null && i.isMongooseDocumentArray(h)) {
                    for (var p = 0;p < h.length; ++p)
                      h[p] && h[p].populated(l, s._docs[o] == null ? undefined : s._docs[o][p], s);
                    break;
                  }
                }
            }
          } catch (t5) {
            a.e(t5);
          } finally {
            a.f();
          }
        }
      };
    }, 8660: (t3, e2, r2) => {
      var n = r2(7026), i = r2(2243), o = r2(5815), a = r2(5678), s = r2(7352), c = r2(335), u = /(\.\d+$|\.\d+\.)/g;
      t3.exports = function(t4, e3, r3, f, l) {
        if (t4 == null)
          return [];
        if (typeof t4 == "string" && l != null && i(l, t4))
          throw new n("refPath `" + t4 + "` must not be excluded in projection, got " + s.inspect(l));
        if (u.test(r3)) {
          var h = r3.split(u);
          if (h[h.length - 1] === "")
            throw new Error("Can't populate individual element in an array");
          for (var p = "", d = t4, y = 0;y < h.length; y += 2) {
            var b = h[y];
            if (!d.startsWith(b + ".")) {
              if (y === h.length - 1) {
                p += d, d = "";
                break;
              }
              throw new Error("Could not normalize ref path, chunk " + b + " not in populated path");
            }
            p += d.substring(0, b.length) + h[y + 1], d = d.substring(b.length + 1);
          }
          var m = a.get(p, e3, o), v = Array.isArray(m) ? m : [m];
          return c.array.flatten(v);
        }
        var g = a.get(t4, e3, o);
        return f != null && f.virtuals.hasOwnProperty(t4) ? [f.virtuals[t4].applyGetters(undefined, e3)] : Array.isArray(g) ? g : [g];
      };
    }, 5877: (t3) => {
      function e2(t4) {
        return e2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, e2(t4);
      }
      t3.exports = function(t4, r2, n, i) {
        return i.justOne || i.count ? (t4[r2] = Array.isArray(n) ? n[0] : n, e2(t4[r2]) !== "object" && (t4[r2] = i.count ? n : null)) : (t4[r2] = Array.isArray(n) ? n : n == null ? [] : [n], t4[r2] = t4[r2].filter(function(t5) {
          return t5 && e2(t5) === "object";
        })), t4[r2];
      };
    }, 6560: (t3, e2, r2) => {
      var n = r2(7026), i = r2(7352);
      t3.exports = function(t4, e3) {
        if (typeof t4 != "string" && typeof t4 != "function")
          throw new n('Invalid ref at path "' + e3 + '". Got ' + i.inspect(t4, { depth: 0 }));
      };
    }, 8279: (t3) => {
      t3.exports = function(t4) {
        for (var e2 = {}, r2 = 0, n = Object.keys(t4);r2 < n.length; r2++) {
          var i = n[r2];
          if (i.indexOf(".") !== -1)
            for (var o = i.split("."), a = o[0], s = 0;s < o.length; ++s)
              e2[a] = 1, s + 1 < o.length && (a = a + "." + o[s + 1]);
          else
            e2[i] = 1;
        }
        return e2;
      };
    }, 6239: (t3) => {
      function e2(t4) {
        return e2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, e2(t4);
      }
      t3.exports = function(t4) {
        return t4 == null || e2(t4) !== "object" || !("$meta" in t4) && !("$slice" in t4);
      };
    }, 1384: (t3, e2, r2) => {
      var n = r2(6239), i = r2(6288);
      t3.exports = function t(e3) {
        if (e3 == null)
          return null;
        var r3 = Object.keys(e3), o = null;
        if (r3.length === 1 && r3[0] === "_id")
          o = !e3._id;
        else
          for (var a = 0;a < r3.length; ++a) {
            var s, c = r3[a];
            if (c !== "_id" && n(e3[c]) && (o = i(e3[c]) ? (s = t(e3[c])) !== null && s !== undefined ? s : o : !e3[c]) != null)
              break;
          }
        return o;
      };
    }, 180: (t3) => {
      function e2(t4) {
        return e2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, e2(t4);
      }
      t3.exports = function(t4) {
        return t4 != null && e2(t4) === "object" && t4.$slice == null && t4.$elemMatch == null && t4.$meta == null && t4.$ == null;
      };
    }, 2243: (t3, e2, r2) => {
      var n = r2(6239);
      t3.exports = function(t4, e3) {
        if (t4 == null)
          return false;
        if (e3 === "_id")
          return t4._id === 0;
        for (var r3 = null, i = 0, o = Object.keys(t4);i < o.length; i++) {
          var a = o[i];
          if (n(t4[a])) {
            r3 = t4[e3] === 1 ? "inclusive" : "exclusive";
            break;
          }
        }
        return r3 === "inclusive" ? t4[e3] !== 1 : r3 === "exclusive" && t4[e3] === 0;
      };
    }, 5772: (t3) => {
      t3.exports = function(t4, e2) {
        for (var r2, n, i, o = e2.split("."), a = "", s = 0;s < o.length; ++s)
          if (t4[a += a.length ? "." : "" + o[s]]) {
            for (i = (n = Object.keys(t4)).length, r2 = 0;r2 < i; ++r2)
              n[s].indexOf(a + ".") !== 0 || n[s].indexOf(e2);
            return true;
          }
        return false;
      };
    }, 8183: (t3, e2, r2) => {
      var n = r2(3933), i = Symbol("mongoose#emitted");
      t3.exports = function(t4, e3, o, a) {
        if (typeof t4 == "function")
          try {
            return e3(function(e4) {
              if (e4 == null)
                t4.apply(this, arguments);
              else {
                o != null && o.listeners != null && o.listeners("error").length > 0 && !e4[i] && (e4[i] = true, o.emit("error", e4));
                try {
                  t4(e4);
                } catch (e5) {
                  return n(function() {
                    throw e5;
                  });
                }
              }
            });
          } catch (e4) {
            return o != null && o.listeners != null && o.listeners("error").length > 0 && !e4[i] && (e4[i] = true, o.emit("error", e4)), t4(e4);
          }
        return new (a = a || r2.g.Promise)(function(t5, r3) {
          e3(function(e4, n2) {
            return e4 != null ? (o != null && o.listeners != null && o.listeners("error").length > 0 && !e4[i] && (e4[i] = true, o.emit("error", e4)), r3(e4)) : arguments.length > 2 ? t5(Array.prototype.slice.call(arguments, 1)) : void t5(n2);
          });
        });
      };
    }, 8385: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      var i = r2(6148), o = r2(6166), a = r2(247), s = r2(5679), c = new Set(["$and", "$or"]), u = new Set(["$cmp", "$eq", "$lt", "$lte", "$gt", "$gte"]), f = new Set(["$multiply", "$divide", "$log", "$mod", "$trunc", "$avg", "$max", "$min", "$stdDevPop", "$stdDevSamp", "$sum"]), l = new Set(["$abs", "$exp", "$ceil", "$floor", "$ln", "$log10", "$sqrt", "$sin", "$cos", "$tan", "$asin", "$acos", "$atan", "$atan2", "$asinh", "$acosh", "$atanh", "$sinh", "$cosh", "$tanh", "$degreesToRadians", "$radiansToDegrees"]), h = new Set(["$arrayElemAt", "$first", "$last"]), p = new Set(["$year", "$month", "$week", "$dayOfMonth", "$dayOfYear", "$hour", "$minute", "$second", "$isoDayOfWeek", "$isoWeekYear", "$isoWeek", "$millisecond"]), d = new Set(["$not"]);
      function y(t4, e3, r3) {
        if (g(t4) || t4 === null)
          return t4;
        t4.$cond != null ? Array.isArray(t4.$cond) ? t4.$cond = t4.$cond.map(function(t5) {
          return y(t5, e3, r3);
        }) : (t4.$cond.if = y(t4.$cond.if, e3, r3), t4.$cond.then = y(t4.$cond.then, e3, r3), t4.$cond.else = y(t4.$cond.else, e3, r3)) : t4.$ifNull != null ? t4.$ifNull.map(function(t5) {
          return y(t5, e3, r3);
        }) : t4.$switch != null && (Array.isArray(t4.$switch.branches) && (t4.$switch.branches = t4.$switch.branches.map(function(t5) {
          return y(t5, e3, r3);
        })), ("default" in t4.$switch) && (t4.$switch.default = y(t4.$switch.default, e3, r3)));
        for (var n2 = 0, a2 = Object.keys(t4);n2 < a2.length; n2++) {
          var h2 = a2[n2];
          c.has(h2) ? t4[h2] = t4[h2].map(function(t5) {
            return y(t5, e3, r3);
          }) : u.has(h2) ? t4[h2] = v(t4[h2], e3, r3) : f.has(h2) ? t4[h2] = m(t4[h2]) : l.has(h2) ? t4[h2] = b(t4[h2]) : d.has(h2) && (t4[h2] = y(t4[h2], e3, r3));
        }
        if (t4.$in && (t4.$in = function(t5, e4, r4) {
          var n3 = t5[1];
          if (!g(n3))
            return t5;
          var i2 = t5[0], a3 = e4.path(n3.slice(1));
          if (a3 !== null) {
            if (!a3.$isMongooseArray)
              throw new Error("Path must be an array for $in");
            return [a3.$isMongooseDocumentArray ? a3.$embeddedSchemaType.cast(i2) : a3.caster.cast(i2), n3];
          }
          if (r4 === false)
            return t5;
          if (r4 === "throw")
            throw new o("$in");
        }(t4.$in, e3, r3)), t4.$size && (t4.$size = b(t4.$size)), t4.$round) {
          var p2 = t4.$round;
          if (!Array.isArray(p2) || p2.length < 1 || p2.length > 2)
            throw new i("Array", p2, "$round");
          t4.$round = p2.map(function(t5) {
            return b(t5);
          });
        }
        return s(t4), t4;
      }
      function b(t4) {
        if (!_(t4))
          return t4;
        try {
          return a(t4);
        } catch (e3) {
          throw new i("Number", t4);
        }
      }
      function m(t4) {
        if (!Array.isArray(t4)) {
          if (!_(t4))
            return t4;
          try {
            return a(t4);
          } catch (e3) {
            throw new i("Number", t4);
          }
        }
        return t4.map(function(t5) {
          if (!_(t5))
            return t5;
          try {
            return a(t5);
          } catch (e3) {
            throw new i("Number", t5);
          }
        });
      }
      function v(t4, e3, r3) {
        if (!Array.isArray(t4) || t4.length !== 2)
          throw new Error("Comparison operator must be an array of length 2");
        t4[0] = y(t4[0], e3, r3);
        var s2 = t4[0];
        if (_(t4[1])) {
          var c2 = null, u2 = null, f2 = null;
          if (g(s2))
            c2 = s2.slice(1), u2 = e3.path(c2);
          else if (n(s2) === "object" && s2 != null)
            for (var l2 = 0, d2 = Object.keys(s2);l2 < d2.length; l2++) {
              var b2 = d2[l2];
              p.has(b2) && g(s2[b2]) ? (c2 = s2[b2].slice(1) + "." + b2, f2 = a) : h.has(b2) && g(s2[b2]) && (c2 = s2[b2].slice(1) + "." + b2, (u2 = e3.path(s2[b2].slice(1))) != null && (u2.$isMongooseDocumentArray ? u2 = u2.$embeddedSchemaType : u2.$isMongooseArray && (u2 = u2.caster)));
            }
          var m2 = n(t4[1]) === "object" && t4[1] != null && t4[1].$literal != null;
          if (u2 != null)
            t4[1] = m2 ? { $literal: u2.cast(t4[1].$literal) } : u2.cast(t4[1]);
          else if (f2 != null)
            if (m2)
              try {
                t4[1] = { $literal: f2(t4[1].$literal) };
              } catch (e4) {
                throw new i(f2.name.replace(/^cast/, ""), t4[1], c2 + ".$literal");
              }
            else
              try {
                t4[1] = f2(t4[1]);
              } catch (e4) {
                throw new i(f2.name.replace(/^cast/, ""), t4[1], c2);
              }
          else {
            if (c2 != null && r3 === true)
              return;
            if (c2 != null && r3 === "throw")
              throw new o(c2);
          }
        } else
          t4[1] = y(t4[1]);
        return t4;
      }
      function g(t4) {
        return typeof t4 == "string" && t4[0] === "$";
      }
      function _(t4) {
        return !(typeof t4 == "string" && t4[0] === "$" || n(t4) === "object" && t4 !== null && Object.keys(t4).find(function(t5) {
          return t5[0] === "$";
        }) && t4.$literal == null);
      }
      t3.exports = function(t4, e3, r3) {
        if (n(t4) !== "object" || t4 === null)
          throw new Error("`$expr` must be an object");
        return y(t4, e3, r3);
      };
    }, 6482: (t3) => {
      t3.exports = function(t4) {
        switch (t4) {
          case "p":
            t4 = "primary";
            break;
          case "pp":
            t4 = "primaryPreferred";
            break;
          case "s":
            t4 = "secondary";
            break;
          case "sp":
            t4 = "secondaryPreferred";
            break;
          case "n":
            t4 = "nearest";
        }
        return t4;
      };
    }, 499: (t3) => {
      var e2 = new Set(["$ref", "$id", "$db"]);
      t3.exports = function(t4) {
        return t4[0] === "$" && !e2.has(t4);
      };
    }, 3692: (t3, e2) => {
      function r2(t4) {
        return r2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, r2(t4);
      }
      var n = Symbol("mongoose#trustedSymbol");
      e2.trustedSymbol = n, e2.trusted = function(t4) {
        return t4 == null || r2(t4) !== "object" || (t4[n] = true), t4;
      };
    }, 8331: (t3) => {
      t3.exports = function(t4) {
        var e2 = { _id: { auto: true } };
        e2._id[t4.options.typeKey] = "ObjectId", t4.add(e2);
      };
    }, 7807: (t3, e2, r2) => {
      var n = r2(7509);
      t3.exports = function(t4) {
        for (var e3 = 0, r3 = Object.values(n);e3 < r3.length; e3++)
          (0, r3[e3])(t4, { deduplicate: true });
        t4.plugins = Object.values(n).map(function(t5) {
          return { fn: t5, opts: { deduplicate: true } };
        }).concat(t4.plugins);
      };
    }, 8796: (t3) => {
      t3.exports = function(t4) {
        return t4.replace(/\.\$(\[[^\]]*\])?(?=\.)/g, ".0").replace(/\.\$(\[[^\]]*\])?$/g, ".0");
      };
    }, 5792: (t3, e2, r2) => {
      var n = r2(5132), i = r2(4797), o = r2(9996);
      t3.exports = function(t4) {
        var e3 = [], r3 = new WeakMap, a = t4.constructor.indexTypes, s = new Map;
        return function t(c, u, f) {
          if (!r3.has(c)) {
            r3.set(c, true), u = u || "";
            for (var l = 0, h = Object.keys(c.paths);l < h.length; l++) {
              var p = h[l], d = c.paths[p];
              if (f == null || !f.paths[p]) {
                if (d.$isMongooseDocumentArray || d.$isSingleNested) {
                  if (n(d, "options.excludeIndexes") !== true && n(d, "schemaOptions.excludeIndexes") !== true && n(d, "schema.options.excludeIndexes") !== true && t(d.schema, u + p + "."), d.schema.discriminators != null)
                    for (var y = d.schema.discriminators, b = 0, m = Object.keys(y);b < m.length; b++) {
                      t(y[m[b]], u + p + ".", d.schema);
                    }
                  if (d.$isMongooseDocumentArray)
                    continue;
                }
                var v = d._index || d.caster && d.caster._index;
                if (v !== false && v != null) {
                  var g = {}, _ = i(v), w = _ ? v : {}, S = typeof v == "string" ? v : !!_ && v.type;
                  if (S && a.indexOf(S) !== -1)
                    g[u + p] = S;
                  else if (w.text)
                    g[u + p] = "text", delete w.text;
                  else {
                    var O;
                    O = v === "descending" || v === "desc" || v !== "ascending" && v !== "asc" && Number(v) === -1, g[u + p] = O ? -1 : 1;
                  }
                  delete w.type, "background" in w || (w.background = true), c.options.autoIndex != null && (w._autoIndex = c.options.autoIndex);
                  var j = w && w.name;
                  typeof j == "string" && s.has(j) ? Object.assign(s.get(j), g) : (e3.push([g, w]), s.set(j, g));
                }
              }
            }
            r3.delete(c), u ? function(t5, r4) {
              for (var n2 = t5._indexes, i2 = n2.length, o2 = 0;o2 < i2; ++o2) {
                for (var a2 = n2[o2][0], s2 = n2[o2][1], c2 = Object.keys(a2), u2 = c2.length, f2 = {}, l2 = 0;l2 < u2; ++l2) {
                  var h2 = c2[l2];
                  f2[r4 + h2] = a2[h2];
                }
                var p2 = Object.assign({}, s2);
                if (s2 != null && s2.partialFilterExpression != null) {
                  p2.partialFilterExpression = {};
                  for (var d2 = s2.partialFilterExpression, y2 = 0, b2 = Object.keys(d2);y2 < b2.length; y2++) {
                    var m2 = b2[y2];
                    p2.partialFilterExpression[r4 + m2] = d2[m2];
                  }
                }
                e3.push([f2, p2]);
              }
            }(c, u) : (c._indexes.forEach(function(t5) {
              var e4 = t5[1];
              "background" in e4 || (e4.background = true), o(c, e4);
            }), e3 = e3.concat(c._indexes));
          }
        }(t4), e3;
      };
    }, 4051: (t3, e2, r2) => {
      function n(t4, e3) {
        var r3 = typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
        if (!r3) {
          if (Array.isArray(t4) || (r3 = function(t5, e4) {
            if (t5) {
              if (typeof t5 == "string")
                return i(t5, e4);
              var r4 = {}.toString.call(t5).slice(8, -1);
              return r4 === "Object" && t5.constructor && (r4 = t5.constructor.name), r4 === "Map" || r4 === "Set" ? Array.from(t5) : r4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4) ? i(t5, e4) : undefined;
            }
          }(t4)) || e3 && t4 && typeof t4.length == "number") {
            r3 && (t4 = r3);
            var n2 = 0, o2 = function() {
            };
            return { s: o2, n: function() {
              return n2 >= t4.length ? { done: true } : { done: false, value: t4[n2++] };
            }, e: function(t5) {
              throw t5;
            }, f: o2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var a, s = true, c = false;
        return { s: function() {
          r3 = r3.call(t4);
        }, n: function() {
          var t5 = r3.next();
          return s = t5.done, t5;
        }, e: function(t5) {
          c = true, a = t5;
        }, f: function() {
          try {
            s || r3.return == null || r3.return();
          } finally {
            if (c)
              throw a;
          }
        } };
      }
      function i(t4, e3) {
        (e3 == null || e3 > t4.length) && (e3 = t4.length);
        for (var r3 = 0, n2 = Array(e3);r3 < e3; r3++)
          n2[r3] = t4[r3];
        return n2;
      }
      var o = r2(5132);
      t3.exports = function(t4, e3, r3) {
        var i2, a = r3 != null ? Object.keys(o(t4.tree, r3, {})) : Object.keys(t4.tree), s = new Set(Object.keys(e3));
        if (s.size > 1) {
          i2 = new Set;
          var c, u = n(a);
          try {
            for (u.s();!(c = u.n()).done; ) {
              var f = c.value;
              s.has(f) && i2.add(f);
            }
          } catch (t5) {
            u.e(t5);
          } finally {
            u.f();
          }
          var l, h = n(s);
          try {
            for (h.s();!(l = h.n()).done; ) {
              var p = l.value;
              i2.has(p) || i2.add(p);
            }
          } catch (t5) {
            h.e(t5);
          } finally {
            h.f();
          }
          i2 = Array.from(i2);
        } else
          i2 = Array.from(s);
        return i2;
      };
    }, 8825: (t3) => {
      t3.exports = function(t4, e2) {
        if (e2.length !== 1) {
          for (var r2 = e2[0], n = undefined, i = 0;i < e2.length - 1; ++i) {
            var o = t4.path(r2);
            o && o.schema ? (n = o.schema.options.strict, t4 = o.schema, r2 = o.$isMongooseDocumentArray && !isNaN(e2[i + 1]) ? "" : e2[i + 1]) : r2 += r2.length ? "." + e2[i + 1] : e2[i + 1];
          }
          return n;
        }
      };
    }, 5962: (t3, e2, r2) => {
      var n = r2(8331);
      t3.exports = function(t4, e3) {
        return e3 == null || e3._id == null || (t4 = t4.clone(), e3._id ? t4.paths._id || (n(t4), t4.options._id = true) : (t4.remove("_id"), t4.options._id = false)), t4;
      };
    }, 2169: (t3) => {
      t3.exports = function(t4, e2) {
        return t4 == null ? null : typeof t4 == "boolean" ? e2 : typeof t4[e2] == "boolean" ? t4[e2] ? e2 : null : (e2 in t4) ? t4[e2] : e2;
      };
    }, 8638: (t3) => {
      function e2() {
        return this._id != null ? this._id.toString() : null;
      }
      t3.exports = function(t4) {
        return !t4.paths.id && t4.paths._id && t4.options.id ? (t4.aliases && t4.aliases.id || t4.virtual("id").get(e2), t4) : t4;
      };
    }, 5682: (t3) => {
      function e2(t4, e3) {
        (e3 == null || e3 > t4.length) && (e3 = t4.length);
        for (var r2 = 0, n = Array(e3);r2 < e3; r2++)
          n[r2] = t4[r2];
        return n;
      }
      t3.exports = function(t4, r2, n) {
        for (var i = {}, o = 0, a = Object.keys(r2.tree);o < a.length; o++) {
          var s = a[o];
          n && (t4.paths[s] || t4.nested[s] || t4.singleNestedPaths[s]) || (i[s] = r2.tree[s]);
        }
        t4.options._isMerging = true, t4.add(i, null), delete t4.options._isMerging, t4.callQueue = t4.callQueue.concat(r2.callQueue), t4.method(r2.methods), t4.static(r2.statics);
        for (var c = 0, u = Object.entries(r2._userProvidedOptions);c < u.length; c++) {
          var f = (p = u[c], d = 2, function(t5) {
            if (Array.isArray(t5))
              return t5;
          }(p) || function(t5, e3) {
            var r3 = t5 == null ? null : typeof Symbol != "undefined" && t5[Symbol.iterator] || t5["@@iterator"];
            if (r3 != null) {
              var n2, i2, o2, a2, s2 = [], c2 = true, u2 = false;
              try {
                if (o2 = (r3 = r3.call(t5)).next, e3 === 0) {
                  if (Object(r3) !== r3)
                    return;
                  c2 = false;
                } else
                  for (;!(c2 = (n2 = o2.call(r3)).done) && (s2.push(n2.value), s2.length !== e3); c2 = true)
                    ;
              } catch (t6) {
                u2 = true, i2 = t6;
              } finally {
                try {
                  if (!c2 && r3.return != null && (a2 = r3.return(), Object(a2) !== a2))
                    return;
                } finally {
                  if (u2)
                    throw i2;
                }
              }
              return s2;
            }
          }(p, d) || function(t5, r3) {
            if (t5) {
              if (typeof t5 == "string")
                return e2(t5, r3);
              var n2 = {}.toString.call(t5).slice(8, -1);
              return n2 === "Object" && t5.constructor && (n2 = t5.constructor.name), n2 === "Map" || n2 === "Set" ? Array.from(t5) : n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2) ? e2(t5, r3) : undefined;
            }
          }(p, d) || function() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }()), l = f[0], h = f[1];
          l in t4._userProvidedOptions || t4.set(l, h);
        }
        var p, d;
        for (var y in r2.query)
          t4.query[y] = r2.query[y];
        for (var b in r2.virtuals)
          t4.virtuals[b] = r2.virtuals[b].clone();
        t4._indexes = t4._indexes.concat(r2._indexes || []), t4.s.hooks.merge(r2.s.hooks, false);
      };
    }, 9012: (t3, e2, r2) => {
      var n = r2(6166);
      t3.exports = function(t4) {
        var e3, r3;
        t4.$immutable ? (t4.$immutableSetter = (e3 = t4.path, r3 = t4.options.immutable, function(t5, i, o, a) {
          if (this == null || this.$__ == null)
            return t5;
          if (this.isNew)
            return t5;
          if (a && a.overwriteImmutable)
            return t5;
          if (!(typeof r3 == "function" ? r3.call(this, this) : r3))
            return t5;
          var s = this.$__.priorDoc != null ? this.$__.priorDoc.$__getValue(e3) : this.$__getValue(e3);
          if (this.$__.strictMode === "throw" && t5 !== s)
            throw new n(e3, "Path `" + e3 + "` is immutable and strict mode is set to throw.", true);
          return s;
        }), t4.set(t4.$immutableSetter)) : t4.$immutableSetter && (t4.setters = t4.setters.filter(function(e4) {
          return e4 !== t4.$immutableSetter;
        }), delete t4.$immutableSetter);
      };
    }, 8150: (t3) => {
      t3.exports = new Set(["__proto__", "constructor", "prototype"]);
    }, 5625: (t3, e2) => {
      e2.arrayAtomicsBackupSymbol = Symbol("mongoose#Array#atomicsBackup"), e2.arrayAtomicsSymbol = Symbol("mongoose#Array#_atomics"), e2.arrayParentSymbol = Symbol("mongoose#Array#_parent"), e2.arrayPathSymbol = Symbol("mongoose#Array#_path"), e2.arraySchemaSymbol = Symbol("mongoose#Array#_schema"), e2.documentArrayParent = Symbol("mongoose#documentArrayParent"), e2.documentIsSelected = Symbol("mongoose#Document#isSelected"), e2.documentIsModified = Symbol("mongoose#Document#isModified"), e2.documentModifiedPaths = Symbol("mongoose#Document#modifiedPaths"), e2.documentSchemaSymbol = Symbol("mongoose#Document#schema"), e2.getSymbol = Symbol("mongoose#Document#get"), e2.modelSymbol = Symbol("mongoose#Model"), e2.objectIdSymbol = Symbol("mongoose#ObjectId"), e2.populateModelSymbol = Symbol("mongoose#PopulateOptions#Model"), e2.schemaTypeSymbol = Symbol("mongoose#schemaType"), e2.sessionNewDocuments = Symbol("mongoose#ClientSession#newDocuments"), e2.scopeSymbol = Symbol("mongoose#Document#scope"), e2.validatorErrorSymbol = Symbol("mongoose#validatorError");
    }, 7796: (t3) => {
      t3.exports = function(t4, e2, r2, n, i) {
        var o = e2 != null && e2.updatedAt === false, a = e2 != null && e2.createdAt === false, s = r2 != null ? r2() : t4.ownerDocument().constructor.base.now();
        if (!a && (t4.isNew || t4.$isSubdocument) && n && !t4.$__getValue(n) && t4.$__isSelected(n) && t4.$set(n, s, undefined, { overwriteImmutable: true }), !o && i && (t4.isNew || t4.$isModified())) {
          var c = s;
          t4.isNew && n != null && (c = t4.$__getValue(n)), t4.$set(i, c);
        }
      };
    }, 8644: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4, e3) {
        (e3 == null || e3 > t4.length) && (e3 = t4.length);
        for (var r3 = 0, n2 = Array(e3);r3 < e3; r3++)
          n2[r3] = t4[r3];
        return n2;
      }
      function o(t4, e3, r3) {
        return (e3 = function(t5) {
          var e4 = function(t6) {
            if (n(t6) != "object" || !t6)
              return t6;
            var e5 = t6[Symbol.toPrimitive];
            if (e5 !== undefined) {
              var r4 = e5.call(t6, "string");
              if (n(r4) != "object")
                return r4;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t6);
          }(t5);
          return n(e4) == "symbol" ? e4 : e4 + "";
        }(e3)) in t4 ? Object.defineProperty(t4, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t4[e3] = r3, t4;
      }
      var a = r2(4287), s = r2(7457), c = r2(5132), u = r2(2169), f = r2(7796), l = r2(3089), h = new Set(["replaceOne", "findOneAndReplace"]);
      t3.exports = function(t4, e3) {
        var r3 = t4.childSchemas.find(function(t5) {
          return !!t5.schema.options.timestamps;
        });
        if (e3 || r3) {
          var n2 = u(e3, "createdAt"), p = u(e3, "updatedAt"), d = e3 != null && e3.hasOwnProperty("currentTime") ? e3.currentTime : null, y = {};
          if (t4.$timestamps = { createdAt: n2, updatedAt: p }, n2 && !t4.paths[n2]) {
            var b = t4.base != null ? t4.base.get("timestamps.createdAt.immutable") : null, m = b == null || b;
            y[n2] = o(o({}, t4.options.typeKey || "type", Date), "immutable", m);
          }
          p && !t4.paths[p] && (y[p] = Date), t4.add(y), t4.pre("save", function(t5) {
            var e4 = c(this, "$__.saveOptions.timestamps");
            if (e4 === false)
              return t5();
            f(this, e4, d, n2, p), t5();
          }), t4.methods.initializeTimestamps = function() {
            var t5 = d != null ? d() : this.constructor.base.now();
            if (n2 && !this.get(n2) && this.$set(n2, t5), p && !this.get(p) && this.$set(p, t5), this.$isSubdocument)
              return this;
            var e4, r4 = function(t6, e5) {
              var r5 = typeof Symbol != "undefined" && t6[Symbol.iterator] || t6["@@iterator"];
              if (!r5) {
                if (Array.isArray(t6) || (r5 = function(t7, e6) {
                  if (t7) {
                    if (typeof t7 == "string")
                      return i(t7, e6);
                    var r6 = {}.toString.call(t7).slice(8, -1);
                    return r6 === "Object" && t7.constructor && (r6 = t7.constructor.name), r6 === "Map" || r6 === "Set" ? Array.from(t7) : r6 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r6) ? i(t7, e6) : undefined;
                  }
                }(t6)) || e5 && t6 && typeof t6.length == "number") {
                  r5 && (t6 = r5);
                  var n3 = 0, o3 = function() {
                  };
                  return { s: o3, n: function() {
                    return n3 >= t6.length ? { done: true } : { done: false, value: t6[n3++] };
                  }, e: function(t7) {
                    throw t7;
                  }, f: o3 };
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
              }
              var a2, s2 = true, c2 = false;
              return { s: function() {
                r5 = r5.call(t6);
              }, n: function() {
                var t7 = r5.next();
                return s2 = t7.done, t7;
              }, e: function(t7) {
                c2 = true, a2 = t7;
              }, f: function() {
                try {
                  s2 || r5.return == null || r5.return();
                } finally {
                  if (c2)
                    throw a2;
                }
              } };
            }(this.$getAllSubdocs());
            try {
              for (r4.s();!(e4 = r4.n()).done; ) {
                var o2 = e4.value;
                o2.initializeTimestamps && o2.initializeTimestamps();
              }
            } catch (t6) {
              r4.e(t6);
            } finally {
              r4.f();
            }
            return this;
          }, g[l.builtInMiddleware] = true;
          var v = { query: true, model: false };
          t4.pre("findOneAndReplace", v, g), t4.pre("findOneAndUpdate", v, g), t4.pre("replaceOne", v, g), t4.pre("update", v, g), t4.pre("updateOne", v, g), t4.pre("updateMany", v, g);
        }
        function g(t5) {
          var e4 = d != null ? d() : this.model.base.now();
          h.has(this.op) && this.getUpdate() == null && this.setUpdate({}), s(e4, n2, p, this.getUpdate(), this._mongooseOptions, h.has(this.op)), a(e4, this.getUpdate(), this.model.schema), t5();
        }
      };
    }, 8437: (t3, e2, r2) => {
      var n = r2(5857);
      t3.exports = function(t4) {
        if (n(t4) !== "TopologyDescription")
          return false;
        var e3 = Array.from(t4.servers.values());
        return e3.length > 0 && e3.every(function(t5) {
          return t5.type === "Unknown";
        });
      };
    }, 3343: (t3, e2, r2) => {
      function n(t4, e3) {
        (e3 == null || e3 > t4.length) && (e3 = t4.length);
        for (var r3 = 0, n2 = Array(e3);r3 < e3; r3++)
          n2[r3] = t4[r3];
        return n2;
      }
      var i = r2(5857);
      t3.exports = function(t4) {
        if (i(t4) !== "TopologyDescription")
          return false;
        if (t4.servers.size === 0)
          return false;
        var e3, r3 = function(t5, e4) {
          var r4 = typeof Symbol != "undefined" && t5[Symbol.iterator] || t5["@@iterator"];
          if (!r4) {
            if (Array.isArray(t5) || (r4 = function(t6, e5) {
              if (t6) {
                if (typeof t6 == "string")
                  return n(t6, e5);
                var r5 = {}.toString.call(t6).slice(8, -1);
                return r5 === "Object" && t6.constructor && (r5 = t6.constructor.name), r5 === "Map" || r5 === "Set" ? Array.from(t6) : r5 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r5) ? n(t6, e5) : undefined;
              }
            }(t5)) || e4 && t5 && typeof t5.length == "number") {
              r4 && (t5 = r4);
              var i2 = 0, o2 = function() {
              };
              return { s: o2, n: function() {
                return i2 >= t5.length ? { done: true } : { done: false, value: t5[i2++] };
              }, e: function(t6) {
                throw t6;
              }, f: o2 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var a, s = true, c = false;
          return { s: function() {
            r4 = r4.call(t5);
          }, n: function() {
            var t6 = r4.next();
            return s = t6.done, t6;
          }, e: function(t6) {
            c = true, a = t6;
          }, f: function() {
            try {
              s || r4.return == null || r4.return();
            } finally {
              if (c)
                throw a;
            }
          } };
        }(t4.servers.values());
        try {
          for (r3.s();!(e3 = r3.n()).done; ) {
            var o = e3.value;
            if (o.host.endsWith(".mongodb.net") === false || o.port !== 27017)
              return false;
          }
        } catch (t5) {
          r3.e(t5);
        } finally {
          r3.f();
        }
        return true;
      };
    }, 2078: (t3, e2, r2) => {
      var n = r2(5857);
      t3.exports = function(t4) {
        if (n(t4) !== "TopologyDescription")
          return false;
        var e3 = Array.from(t4.servers.values());
        return e3.length > 0 && e3.every(function(t5) {
          return t5.error && t5.error.message.indexOf("Client network socket disconnected before secure TLS connection was established") !== -1;
        });
      };
    }, 4287: (t3, e2, r2) => {
      function n(t4, e3) {
        var r3 = typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
        if (!r3) {
          if (Array.isArray(t4) || (r3 = function(t5, e4) {
            if (t5) {
              if (typeof t5 == "string")
                return i(t5, e4);
              var r4 = {}.toString.call(t5).slice(8, -1);
              return r4 === "Object" && t5.constructor && (r4 = t5.constructor.name), r4 === "Map" || r4 === "Set" ? Array.from(t5) : r4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4) ? i(t5, e4) : undefined;
            }
          }(t4)) || e3 && t4 && typeof t4.length == "number") {
            r3 && (t4 = r3);
            var n2 = 0, o2 = function() {
            };
            return { s: o2, n: function() {
              return n2 >= t4.length ? { done: true } : { done: false, value: t4[n2++] };
            }, e: function(t5) {
              throw t5;
            }, f: o2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var a2, s2 = true, c2 = false;
        return { s: function() {
          r3 = r3.call(t4);
        }, n: function() {
          var t5 = r3.next();
          return s2 = t5.done, t5;
        }, e: function(t5) {
          c2 = true, a2 = t5;
        }, f: function() {
          try {
            s2 || r3.return == null || r3.return();
          } finally {
            if (c2)
              throw a2;
          }
        } };
      }
      function i(t4, e3) {
        (e3 == null || e3 > t4.length) && (e3 = t4.length);
        for (var r3 = 0, n2 = Array(e3);r3 < e3; r3++)
          n2[r3] = t4[r3];
        return n2;
      }
      var o = r2(8796), a = r2(2169);
      function s(t4, e3, r3) {
        if (e3 != null) {
          var i2 = Object.keys(e3).some(function(t5) {
            return t5[0] === "$";
          });
          if (i2) {
            if (e3.$push && v(e3.$push), e3.$addToSet && v(e3.$addToSet), e3.$set != null)
              for (var o2 = 0, u = Object.keys(e3.$set);o2 < u.length; o2++) {
                var f = u[o2];
                c(r3, f, e3.$set, t4);
              }
            if (e3.$setOnInsert != null)
              for (var l = 0, h = Object.keys(e3.$setOnInsert);l < h.length; l++) {
                var p = h[l];
                c(r3, p, e3.$setOnInsert, t4);
              }
          }
          var d, y = Object.keys(e3).filter(function(t5) {
            return t5[0] !== "$";
          }), b = n(y);
          try {
            for (b.s();!(d = b.n()).done; ) {
              var m = d.value;
              c(r3, m, e3, t4);
            }
          } catch (t5) {
            b.e(t5);
          } finally {
            b.f();
          }
        }
        function v(e4) {
          for (var n2 = function() {
            var n3 = o3[i3], c2 = r3.path(n3.replace(/\.\$\./i, ".").replace(/.\$$/, ""));
            if (e4[n3] && c2 && c2.$isMongooseDocumentArray && c2.schema.options.timestamps) {
              var u2 = c2.schema.options.timestamps, f2 = a(u2, "createdAt"), l2 = a(u2, "updatedAt");
              e4[n3].$each ? e4[n3].$each.forEach(function(e5) {
                l2 != null && (e5[l2] = t4), f2 != null && (e5[f2] = t4), s(t4, e5, c2.schema);
              }) : (l2 != null && (e4[n3][l2] = t4), f2 != null && (e4[n3][f2] = t4), s(t4, e4[n3], c2.schema));
            }
          }, i3 = 0, o3 = Object.keys(e4);i3 < o3.length; i3++)
            n2();
        }
      }
      function c(t4, e3, r3, i2) {
        var c2 = o(e3), u = t4.path(c2);
        if (u) {
          for (var f = [], l = c2.split("."), h = l.length - 1;h > 0; --h) {
            var p = t4.path(l.slice(0, h).join("."));
            p != null && (p.$isMongooseDocumentArray || p.$isSingleNested) && f.push({ parentPath: e3.split(".").slice(0, h).join("."), parentSchemaType: p });
          }
          if (Array.isArray(r3[e3]) && u.$isMongooseDocumentArray)
            (function(t5, e4, r4) {
              var n2 = e4.schema.options.timestamps, i3 = t5.length;
              if (n2)
                for (var o2 = a(n2, "createdAt"), c3 = a(n2, "updatedAt"), u2 = 0;u2 < i3; ++u2)
                  c3 != null && (t5[u2][c3] = r4), o2 != null && (t5[u2][o2] = r4), s(r4, t5[u2], e4.schema);
              else
                for (var f2 = 0;f2 < i3; ++f2)
                  s(r4, t5[f2], e4.schema);
            })(r3[e3], u, i2);
          else if (r3[e3] && u.$isSingleNested)
            (function(t5, e4, r4) {
              var n2 = e4.schema.options.timestamps;
              if (n2) {
                var i3 = a(n2, "createdAt"), o2 = a(n2, "updatedAt");
                o2 != null && (t5[o2] = r4), i3 != null && (t5[i3] = r4), s(r4, t5, e4.schema);
              } else
                s(r4, t5, e4.schema);
            })(r3[e3], u, i2);
          else if (f.length > 0) {
            var d, y = n(f);
            try {
              for (y.s();!(d = y.n()).done; ) {
                var b = d.value, m = b.parentPath, v = b.parentSchemaType, g = v.schema.options.timestamps, _ = a(g, "updatedAt");
                if (g && _ != null) {
                  if (v.$isSingleNested)
                    r3[m + "." + _] = i2;
                  else if (v.$isMongooseDocumentArray) {
                    var w = e3.substring(m.length + 1);
                    if (/^\d+$/.test(w)) {
                      r3[m + "." + w][_] = i2;
                      continue;
                    }
                    var S = w.indexOf(".");
                    r3[m + "." + (w = S !== -1 ? w.substring(0, S) : w) + "." + _] = i2;
                  }
                }
              }
            } catch (t5) {
              y.e(t5);
            } finally {
              y.f();
            }
          } else if (u.schema != null && u.schema != t4 && r3[e3]) {
            var O = u.schema.options.timestamps, j = a(O, "createdAt"), $ = a(O, "updatedAt");
            if (!O)
              return;
            $ != null && (r3[e3][$] = i2), j != null && (r3[e3][j] = i2);
          }
        }
      }
      t3.exports = s;
    }, 7457: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      var i = r2(5132);
      t3.exports = function(t4, e3, r3, o, a, s) {
        var c = o, u = c, f = i(a, "timestamps", true);
        if (!f || c == null)
          return o;
        var l, h, p, d = f != null && f.createdAt === false, y = f != null && f.updatedAt === false;
        if (s)
          return o && o.$set && (o = o.$set, c.$set = {}, u = c.$set), y || !r3 || o[r3] || (u[r3] = t4), d || !e3 || o[e3] || (u[e3] = t4), c;
        if (o = o || {}, Array.isArray(c))
          return r3 == null || c.push({ $set: (l = {}, h = r3, p = t4, ((h = function(t5) {
            var e4 = function(t6) {
              if (n(t6) != "object" || !t6)
                return t6;
              var e5 = t6[Symbol.toPrimitive];
              if (e5 !== undefined) {
                var r4 = e5.call(t6, "string");
                if (n(r4) != "object")
                  return r4;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t6);
            }(t5);
            return n(e4) == "symbol" ? e4 : e4 + "";
          }(h)) in l) ? Object.defineProperty(l, h, { value: p, enumerable: true, configurable: true, writable: true }) : l[h] = p, l) }), c;
        if (c.$set = c.$set || {}, !y && r3 && (!o.$currentDate || !o.$currentDate[r3])) {
          var b = false;
          if (r3.indexOf(".") !== -1)
            for (var m = r3.split("."), v = 1;v < m.length; ++v) {
              var g = m.slice(-v).join("."), _ = m.slice(0, -v).join(".");
              if (o[_] != null) {
                o[_][g] = t4, b = true;
                break;
              }
              if (o.$set && o.$set[_]) {
                o.$set[_][g] = t4, b = true;
                break;
              }
            }
          b || (c.$set[r3] = t4), c.hasOwnProperty(r3) && delete c[r3];
        }
        if (!d && e3) {
          o[e3] && delete o[e3], o.$set && o.$set[e3] && delete o.$set[e3];
          var w = false;
          if (e3.indexOf(".") !== -1)
            for (var S = e3.split("."), O = 1;O < S.length; ++O) {
              var j = S.slice(-O).join("."), $ = S.slice(0, -O).join(".");
              if (o[$] != null) {
                o[$][j] = t4, w = true;
                break;
              }
              if (o.$set && o.$set[$]) {
                o.$set[$][j] = t4, w = true;
                break;
              }
            }
          w || (c.$setOnInsert = c.$setOnInsert || {}, c.$setOnInsert[e3] = t4);
        }
        return Object.keys(c.$set).length === 0 && delete c.$set, c;
      };
    }, 641: (t3, e2, r2) => {
      var n = r2(4494).ctor("require", "modify", "init", "default", "ignore");
      function i() {
        this.activePaths = new n;
      }
      t3.exports = i, i.prototype.strictMode = true, i.prototype.fullPath = undefined, i.prototype.selected = undefined, i.prototype.shardval = undefined, i.prototype.saveError = undefined, i.prototype.validationError = undefined, i.prototype.adhocPaths = undefined, i.prototype.removing = undefined, i.prototype.inserting = undefined, i.prototype.saving = undefined, i.prototype.version = undefined, i.prototype._id = undefined, i.prototype.ownerDocument = undefined, i.prototype.populate = undefined, i.prototype.populated = undefined, i.prototype.primitiveAtomics = undefined, i.prototype.wasPopulated = false, i.prototype.scope = undefined, i.prototype.session = null, i.prototype.pathsToScopes = null, i.prototype.cachedRequired = null;
    }, 7283: (t3) => {
      function e2(t4) {
        return e2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, e2(t4);
      }
      function r2(t4, e3) {
        for (var r3 = 0;r3 < e3.length; r3++) {
          var n2 = e3[r3];
          n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(t4, i(n2.key), n2);
        }
      }
      function n(t4, e3, n2) {
        return e3 && r2(t4.prototype, e3), n2 && r2(t4, n2), Object.defineProperty(t4, "prototype", { writable: false }), t4;
      }
      function i(t4) {
        var r3 = function(t5) {
          if (e2(t5) != "object" || !t5)
            return t5;
          var r4 = t5[Symbol.toPrimitive];
          if (r4 !== undefined) {
            var n2 = r4.call(t5, "string");
            if (e2(n2) != "object")
              return n2;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(t5);
        }(t4);
        return e2(r3) == "symbol" ? r3 : r3 + "";
      }
      t3.exports = n(function t(e3, r3, n2) {
        (function(t4, e4) {
          if (!(t4 instanceof e4))
            throw new TypeError("Cannot call a class as a function");
        })(this, t), this.subdocSnapshot = e3, this.activePaths = r3, this.version = n2;
      });
    }, 3920: (t3, e2) => {
      e2._ = { transform: false, virtuals: false, getters: false, _skipDepopulateTopLevel: true, depopulate: true, flattenDecimals: false, useProjection: false, versionKey: true, flattenObjectIds: false };
    }, 6591: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4, e3) {
        for (var r3 = 0;r3 < e3.length; r3++) {
          var n2 = e3[r3];
          n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(t4, a(n2.key), n2);
        }
      }
      function o(t4, e3, r3) {
        return e3 && i(t4.prototype, e3), r3 && i(t4, r3), Object.defineProperty(t4, "prototype", { writable: false }), t4;
      }
      function a(t4) {
        var e3 = function(t5) {
          if (n(t5) != "object" || !t5)
            return t5;
          var e4 = t5[Symbol.toPrimitive];
          if (e4 !== undefined) {
            var r3 = e4.call(t5, "string");
            if (n(r3) != "object")
              return r3;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(t5);
        }(t4);
        return n(e3) == "symbol" ? e3 : e3 + "";
      }
      var s = r2(1829), c = o(function t(e3) {
        if (function(t4, e4) {
          if (!(t4 instanceof e4))
            throw new TypeError("Cannot call a class as a function");
        }(this, t), this._docs = {}, this._childDocs = [], e3 != null && (e3 = s(e3), Object.assign(this, e3), n(e3.subPopulate) === "object" && (this.populate = e3.subPopulate), e3.perDocumentLimit != null && e3.limit != null))
          throw new Error("Can not use `limit` and `perDocumentLimit` at the same time. Path: `" + e3.path + "`.");
      });
      t3.exports = c;
    }, 1918: (t3) => {
      t3.exports = Object.freeze({ enumerable: true, configurable: true, writable: true, value: undefined });
    }, 2685: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (i = function() {
          return !!t4;
        })();
      }
      function o(t4) {
        return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, o(t4);
      }
      function a(t4, e3) {
        return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, a(t4, e3);
      }
      var s = function(t4) {
        function e3() {
          return function(t5, e4) {
            if (!(t5 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, e3), function(t5, e4, r4) {
            return e4 = o(e4), function(t6, e5) {
              if (e5 && (n(e5) == "object" || typeof e5 == "function"))
                return e5;
              if (e5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t7) {
                if (t7 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t7;
              }(t6);
            }(t5, i() ? Reflect.construct(e4, r4 || [], o(t5).constructor) : e4.apply(t5, r4));
          }(this, e3, arguments);
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && a(t5, e4);
        }(e3, t4), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
        var r3;
      }(r2(1000)), c = r2(1918);
      Object.defineProperty(s.prototype, "enum", c), Object.defineProperty(s.prototype, "of", c), Object.defineProperty(s.prototype, "castNonArrays", c), t3.exports = s;
    }, 3958: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (i = function() {
          return !!t4;
        })();
      }
      function o(t4) {
        return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, o(t4);
      }
      function a(t4, e3) {
        return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, a(t4, e3);
      }
      var s = function(t4) {
        function e3() {
          return function(t5, e4) {
            if (!(t5 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, e3), function(t5, e4, r4) {
            return e4 = o(e4), function(t6, e5) {
              if (e5 && (n(e5) == "object" || typeof e5 == "function"))
                return e5;
              if (e5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t7) {
                if (t7 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t7;
              }(t6);
            }(t5, i() ? Reflect.construct(e4, r4 || [], o(t5).constructor) : e4.apply(t5, r4));
          }(this, e3, arguments);
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && a(t5, e4);
        }(e3, t4), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
        var r3;
      }(r2(1000)), c = r2(1918);
      Object.defineProperty(s.prototype, "subtype", c), t3.exports = s;
    }, 7236: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (i = function() {
          return !!t4;
        })();
      }
      function o(t4) {
        return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, o(t4);
      }
      function a(t4, e3) {
        return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, a(t4, e3);
      }
      var s = function(t4) {
        function e3() {
          return function(t5, e4) {
            if (!(t5 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, e3), function(t5, e4, r4) {
            return e4 = o(e4), function(t6, e5) {
              if (e5 && (n(e5) == "object" || typeof e5 == "function"))
                return e5;
              if (e5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t7) {
                if (t7 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t7;
              }(t6);
            }(t5, i() ? Reflect.construct(e4, r4 || [], o(t5).constructor) : e4.apply(t5, r4));
          }(this, e3, arguments);
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && a(t5, e4);
        }(e3, t4), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
        var r3;
      }(r2(1000)), c = r2(1918);
      Object.defineProperty(s.prototype, "min", c), Object.defineProperty(s.prototype, "max", c), Object.defineProperty(s.prototype, "expires", c), t3.exports = s;
    }, 4172: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (i = function() {
          return !!t4;
        })();
      }
      function o(t4) {
        return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, o(t4);
      }
      function a(t4, e3) {
        return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, a(t4, e3);
      }
      var s = function(t4) {
        function e3() {
          return function(t5, e4) {
            if (!(t5 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, e3), function(t5, e4, r4) {
            return e4 = o(e4), function(t6, e5) {
              if (e5 && (n(e5) == "object" || typeof e5 == "function"))
                return e5;
              if (e5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t7) {
                if (t7 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t7;
              }(t6);
            }(t5, i() ? Reflect.construct(e4, r4 || [], o(t5).constructor) : e4.apply(t5, r4));
          }(this, e3, arguments);
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && a(t5, e4);
        }(e3, t4), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
        var r3;
      }(r2(1000)), c = r2(1918);
      Object.defineProperty(s.prototype, "excludeIndexes", c), Object.defineProperty(s.prototype, "_id", c), t3.exports = s;
    }, 7488: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (i = function() {
          return !!t4;
        })();
      }
      function o(t4) {
        return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, o(t4);
      }
      function a(t4, e3) {
        return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, a(t4, e3);
      }
      var s = function(t4) {
        function e3() {
          return function(t5, e4) {
            if (!(t5 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, e3), function(t5, e4, r4) {
            return e4 = o(e4), function(t6, e5) {
              if (e5 && (n(e5) == "object" || typeof e5 == "function"))
                return e5;
              if (e5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t7) {
                if (t7 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t7;
              }(t6);
            }(t5, i() ? Reflect.construct(e4, r4 || [], o(t5).constructor) : e4.apply(t5, r4));
          }(this, e3, arguments);
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && a(t5, e4);
        }(e3, t4), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
        var r3;
      }(r2(1000)), c = r2(1918);
      Object.defineProperty(s.prototype, "of", c), t3.exports = s;
    }, 3823: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (i = function() {
          return !!t4;
        })();
      }
      function o(t4) {
        return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, o(t4);
      }
      function a(t4, e3) {
        return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, a(t4, e3);
      }
      var s = function(t4) {
        function e3() {
          return function(t5, e4) {
            if (!(t5 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, e3), function(t5, e4, r4) {
            return e4 = o(e4), function(t6, e5) {
              if (e5 && (n(e5) == "object" || typeof e5 == "function"))
                return e5;
              if (e5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t7) {
                if (t7 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t7;
              }(t6);
            }(t5, i() ? Reflect.construct(e4, r4 || [], o(t5).constructor) : e4.apply(t5, r4));
          }(this, e3, arguments);
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && a(t5, e4);
        }(e3, t4), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
        var r3;
      }(r2(1000)), c = r2(1918);
      Object.defineProperty(s.prototype, "min", c), Object.defineProperty(s.prototype, "max", c), Object.defineProperty(s.prototype, "enum", c), Object.defineProperty(s.prototype, "populate", c), t3.exports = s;
    }, 210: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (i = function() {
          return !!t4;
        })();
      }
      function o(t4) {
        return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, o(t4);
      }
      function a(t4, e3) {
        return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, a(t4, e3);
      }
      var s = function(t4) {
        function e3() {
          return function(t5, e4) {
            if (!(t5 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, e3), function(t5, e4, r4) {
            return e4 = o(e4), function(t6, e5) {
              if (e5 && (n(e5) == "object" || typeof e5 == "function"))
                return e5;
              if (e5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t7) {
                if (t7 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t7;
              }(t6);
            }(t5, i() ? Reflect.construct(e4, r4 || [], o(t5).constructor) : e4.apply(t5, r4));
          }(this, e3, arguments);
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && a(t5, e4);
        }(e3, t4), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
        var r3;
      }(r2(1000)), c = r2(1918);
      Object.defineProperty(s.prototype, "auto", c), Object.defineProperty(s.prototype, "populate", c), t3.exports = s;
    }, 8035: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (i = function() {
          return !!t4;
        })();
      }
      function o(t4) {
        return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, o(t4);
      }
      function a(t4, e3) {
        return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, a(t4, e3);
      }
      var s = function(t4) {
        function e3() {
          return function(t5, e4) {
            if (!(t5 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, e3), function(t5, e4, r4) {
            return e4 = o(e4), function(t6, e5) {
              if (e5 && (n(e5) == "object" || typeof e5 == "function"))
                return e5;
              if (e5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t7) {
                if (t7 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t7;
              }(t6);
            }(t5, i() ? Reflect.construct(e4, r4 || [], o(t5).constructor) : e4.apply(t5, r4));
          }(this, e3, arguments);
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && a(t5, e4);
        }(e3, t4), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
        var r3;
      }(r2(1000)), c = r2(1918);
      Object.defineProperty(s.prototype, "enum", c), Object.defineProperty(s.prototype, "match", c), Object.defineProperty(s.prototype, "lowercase", c), Object.defineProperty(s.prototype, "trim", c), Object.defineProperty(s.prototype, "uppercase", c), Object.defineProperty(s.prototype, "minLength", c), Object.defineProperty(s.prototype, "minlength", c), Object.defineProperty(s.prototype, "maxLength", c), Object.defineProperty(s.prototype, "maxlength", c), Object.defineProperty(s.prototype, "populate", c), t3.exports = s;
    }, 6271: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (i = function() {
          return !!t4;
        })();
      }
      function o(t4) {
        return o = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, o(t4);
      }
      function a(t4, e3) {
        return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, a(t4, e3);
      }
      var s = function(t4) {
        function e3() {
          return function(t5, e4) {
            if (!(t5 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, e3), function(t5, e4, r4) {
            return e4 = o(e4), function(t6, e5) {
              if (e5 && (n(e5) == "object" || typeof e5 == "function"))
                return e5;
              if (e5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t7) {
                if (t7 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t7;
              }(t6);
            }(t5, i() ? Reflect.construct(e4, r4 || [], o(t5).constructor) : e4.apply(t5, r4));
          }(this, e3, arguments);
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && a(t5, e4);
        }(e3, t4), r3 = e3, Object.defineProperty(r3, "prototype", { writable: false }), r3;
        var r3;
      }(r2(1000)), c = r2(1918);
      Object.defineProperty(s.prototype, "_id", c), t3.exports = s;
    }, 1000: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4, e3) {
        for (var r3 = 0;r3 < e3.length; r3++) {
          var n2 = e3[r3];
          n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(t4, a(n2.key), n2);
        }
      }
      function o(t4, e3, r3) {
        return e3 && i(t4.prototype, e3), r3 && i(t4, r3), Object.defineProperty(t4, "prototype", { writable: false }), t4;
      }
      function a(t4) {
        var e3 = function(t5) {
          if (n(t5) != "object" || !t5)
            return t5;
          var e4 = t5[Symbol.toPrimitive];
          if (e4 !== undefined) {
            var r3 = e4.call(t5, "string");
            if (n(r3) != "object")
              return r3;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(t5);
        }(t4);
        return n(e3) == "symbol" ? e3 : e3 + "";
      }
      var s = r2(1829), c = o(function t(e3) {
        if (function(t4, e4) {
          if (!(t4 instanceof e4))
            throw new TypeError("Cannot call a class as a function");
        }(this, t), e3 == null)
          return this;
        Object.assign(this, s(e3));
      }), u = r2(1918);
      Object.defineProperty(c.prototype, "type", u), Object.defineProperty(c.prototype, "validate", u), Object.defineProperty(c.prototype, "cast", u), Object.defineProperty(c.prototype, "required", u), Object.defineProperty(c.prototype, "default", u), Object.defineProperty(c.prototype, "ref", u), Object.defineProperty(c.prototype, "refPath", u), Object.defineProperty(c.prototype, "select", u), Object.defineProperty(c.prototype, "index", u), Object.defineProperty(c.prototype, "unique", u), Object.defineProperty(c.prototype, "immutable", u), Object.defineProperty(c.prototype, "sparse", u), Object.defineProperty(c.prototype, "text", u), Object.defineProperty(c.prototype, "transform", u), t3.exports = c;
    }, 384: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4, e3) {
        for (var r3 = 0;r3 < e3.length; r3++) {
          var n2 = e3[r3];
          n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(t4, a(n2.key), n2);
        }
      }
      function o(t4, e3, r3) {
        return e3 && i(t4.prototype, e3), r3 && i(t4, r3), Object.defineProperty(t4, "prototype", { writable: false }), t4;
      }
      function a(t4) {
        var e3 = function(t5) {
          if (n(t5) != "object" || !t5)
            return t5;
          var e4 = t5[Symbol.toPrimitive];
          if (e4 !== undefined) {
            var r3 = e4.call(t5, "string");
            if (n(r3) != "object")
              return r3;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(t5);
        }(t4);
        return n(e3) == "symbol" ? e3 : e3 + "";
      }
      var s = r2(1918), c = o(function t(e3) {
        (function(t4, e4) {
          if (!(t4 instanceof e4))
            throw new TypeError("Cannot call a class as a function");
        })(this, t), Object.assign(this, e3), e3 != null && e3.options != null && (this.options = Object.assign({}, e3.options));
      });
      Object.defineProperty(c.prototype, "ref", s), Object.defineProperty(c.prototype, "refPath", s), Object.defineProperty(c.prototype, "localField", s), Object.defineProperty(c.prototype, "foreignField", s), Object.defineProperty(c.prototype, "justOne", s), Object.defineProperty(c.prototype, "count", s), Object.defineProperty(c.prototype, "match", s), Object.defineProperty(c.prototype, "options", s), Object.defineProperty(c.prototype, "skip", s), Object.defineProperty(c.prototype, "limit", s), Object.defineProperty(c.prototype, "perDocumentLimit", s), t3.exports = c;
    }, 7509: (t3, e2, r2) => {
      e2.saveSubdocs = r2(4679), e2.sharding = r2(7201), e2.trackTransaction = r2(2016), e2.validateBeforeSave = r2(377);
    }, 4679: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i() {
        i = function() {
          return e3;
        };
        var t4, e3 = {}, r3 = Object.prototype, o2 = r3.hasOwnProperty, a2 = Object.defineProperty || function(t5, e4, r4) {
          t5[e4] = r4.value;
        }, s2 = typeof Symbol == "function" ? Symbol : {}, c2 = s2.iterator || "@@iterator", u2 = s2.asyncIterator || "@@asyncIterator", f = s2.toStringTag || "@@toStringTag";
        function l(t5, e4, r4) {
          return Object.defineProperty(t5, e4, { value: r4, enumerable: true, configurable: true, writable: true }), t5[e4];
        }
        try {
          l({}, "");
        } catch (t5) {
          l = function(t6, e4, r4) {
            return t6[e4] = r4;
          };
        }
        function h(t5, e4, r4, n2) {
          var i2 = e4 && e4.prototype instanceof g ? e4 : g, o3 = Object.create(i2.prototype), s3 = new I(n2 || []);
          return a2(o3, "_invoke", { value: x(t5, r4, s3) }), o3;
        }
        function p(t5, e4, r4) {
          try {
            return { type: "normal", arg: t5.call(e4, r4) };
          } catch (t6) {
            return { type: "throw", arg: t6 };
          }
        }
        e3.wrap = h;
        var d = "suspendedStart", y = "suspendedYield", b = "executing", m = "completed", v = {};
        function g() {
        }
        function _() {
        }
        function w() {
        }
        var S = {};
        l(S, c2, function() {
          return this;
        });
        var O = Object.getPrototypeOf, j = O && O(O(T([])));
        j && j !== r3 && o2.call(j, c2) && (S = j);
        var $ = w.prototype = g.prototype = Object.create(S);
        function A(t5) {
          ["next", "throw", "return"].forEach(function(e4) {
            l(t5, e4, function(t6) {
              return this._invoke(e4, t6);
            });
          });
        }
        function E(t5, e4) {
          function r4(i3, a3, s3, c3) {
            var u3 = p(t5[i3], t5, a3);
            if (u3.type !== "throw") {
              var f2 = u3.arg, l2 = f2.value;
              return l2 && n(l2) == "object" && o2.call(l2, "__await") ? e4.resolve(l2.__await).then(function(t6) {
                r4("next", t6, s3, c3);
              }, function(t6) {
                r4("throw", t6, s3, c3);
              }) : e4.resolve(l2).then(function(t6) {
                f2.value = t6, s3(f2);
              }, function(t6) {
                return r4("throw", t6, s3, c3);
              });
            }
            c3(u3.arg);
          }
          var i2;
          a2(this, "_invoke", { value: function(t6, n2) {
            function o3() {
              return new e4(function(e5, i3) {
                r4(t6, n2, e5, i3);
              });
            }
            return i2 = i2 ? i2.then(o3, o3) : o3();
          } });
        }
        function x(e4, r4, n2) {
          var i2 = d;
          return function(o3, a3) {
            if (i2 === b)
              throw Error("Generator is already running");
            if (i2 === m) {
              if (o3 === "throw")
                throw a3;
              return { value: t4, done: true };
            }
            for (n2.method = o3, n2.arg = a3;; ) {
              var s3 = n2.delegate;
              if (s3) {
                var c3 = P(s3, n2);
                if (c3) {
                  if (c3 === v)
                    continue;
                  return c3;
                }
              }
              if (n2.method === "next")
                n2.sent = n2._sent = n2.arg;
              else if (n2.method === "throw") {
                if (i2 === d)
                  throw i2 = m, n2.arg;
                n2.dispatchException(n2.arg);
              } else
                n2.method === "return" && n2.abrupt("return", n2.arg);
              i2 = b;
              var u3 = p(e4, r4, n2);
              if (u3.type === "normal") {
                if (i2 = n2.done ? m : y, u3.arg === v)
                  continue;
                return { value: u3.arg, done: n2.done };
              }
              u3.type === "throw" && (i2 = m, n2.method = "throw", n2.arg = u3.arg);
            }
          };
        }
        function P(e4, r4) {
          var n2 = r4.method, i2 = e4.iterator[n2];
          if (i2 === t4)
            return r4.delegate = null, n2 === "throw" && e4.iterator.return && (r4.method = "return", r4.arg = t4, P(e4, r4), r4.method === "throw") || n2 !== "return" && (r4.method = "throw", r4.arg = new TypeError("The iterator does not provide a '" + n2 + "' method")), v;
          var o3 = p(i2, e4.iterator, r4.arg);
          if (o3.type === "throw")
            return r4.method = "throw", r4.arg = o3.arg, r4.delegate = null, v;
          var a3 = o3.arg;
          return a3 ? a3.done ? (r4[e4.resultName] = a3.value, r4.next = e4.nextLoc, r4.method !== "return" && (r4.method = "next", r4.arg = t4), r4.delegate = null, v) : a3 : (r4.method = "throw", r4.arg = new TypeError("iterator result is not an object"), r4.delegate = null, v);
        }
        function k(t5) {
          var e4 = { tryLoc: t5[0] };
          1 in t5 && (e4.catchLoc = t5[1]), 2 in t5 && (e4.finallyLoc = t5[2], e4.afterLoc = t5[3]), this.tryEntries.push(e4);
        }
        function M(t5) {
          var e4 = t5.completion || {};
          e4.type = "normal", delete e4.arg, t5.completion = e4;
        }
        function I(t5) {
          this.tryEntries = [{ tryLoc: "root" }], t5.forEach(k, this), this.reset(true);
        }
        function T(e4) {
          if (e4 || e4 === "") {
            var r4 = e4[c2];
            if (r4)
              return r4.call(e4);
            if (typeof e4.next == "function")
              return e4;
            if (!isNaN(e4.length)) {
              var i2 = -1, a3 = function r() {
                for (;++i2 < e4.length; )
                  if (o2.call(e4, i2))
                    return r.value = e4[i2], r.done = false, r;
                return r.value = t4, r.done = true, r;
              };
              return a3.next = a3;
            }
          }
          throw new TypeError(n(e4) + " is not iterable");
        }
        return _.prototype = w, a2($, "constructor", { value: w, configurable: true }), a2(w, "constructor", { value: _, configurable: true }), _.displayName = l(w, f, "GeneratorFunction"), e3.isGeneratorFunction = function(t5) {
          var e4 = typeof t5 == "function" && t5.constructor;
          return !!e4 && (e4 === _ || (e4.displayName || e4.name) === "GeneratorFunction");
        }, e3.mark = function(t5) {
          return Object.setPrototypeOf ? Object.setPrototypeOf(t5, w) : (t5.__proto__ = w, l(t5, f, "GeneratorFunction")), t5.prototype = Object.create($), t5;
        }, e3.awrap = function(t5) {
          return { __await: t5 };
        }, A(E.prototype), l(E.prototype, u2, function() {
          return this;
        }), e3.AsyncIterator = E, e3.async = function(t5, r4, n2, i2, o3) {
          o3 === undefined && (o3 = Promise);
          var a3 = new E(h(t5, r4, n2, i2), o3);
          return e3.isGeneratorFunction(r4) ? a3 : a3.next().then(function(t6) {
            return t6.done ? t6.value : a3.next();
          });
        }, A($), l($, f, "Generator"), l($, c2, function() {
          return this;
        }), l($, "toString", function() {
          return "[object Generator]";
        }), e3.keys = function(t5) {
          var e4 = Object(t5), r4 = [];
          for (var n2 in e4)
            r4.push(n2);
          return r4.reverse(), function t() {
            for (;r4.length; ) {
              var n3 = r4.pop();
              if (n3 in e4)
                return t.value = n3, t.done = false, t;
            }
            return t.done = true, t;
          };
        }, e3.values = T, I.prototype = { constructor: I, reset: function(e4) {
          if (this.prev = 0, this.next = 0, this.sent = this._sent = t4, this.done = false, this.delegate = null, this.method = "next", this.arg = t4, this.tryEntries.forEach(M), !e4)
            for (var r4 in this)
              r4.charAt(0) === "t" && o2.call(this, r4) && !isNaN(+r4.slice(1)) && (this[r4] = t4);
        }, stop: function() {
          this.done = true;
          var t5 = this.tryEntries[0].completion;
          if (t5.type === "throw")
            throw t5.arg;
          return this.rval;
        }, dispatchException: function(e4) {
          if (this.done)
            throw e4;
          var r4 = this;
          function n2(n3, i3) {
            return s3.type = "throw", s3.arg = e4, r4.next = n3, i3 && (r4.method = "next", r4.arg = t4), !!i3;
          }
          for (var i2 = this.tryEntries.length - 1;i2 >= 0; --i2) {
            var a3 = this.tryEntries[i2], s3 = a3.completion;
            if (a3.tryLoc === "root")
              return n2("end");
            if (a3.tryLoc <= this.prev) {
              var c3 = o2.call(a3, "catchLoc"), u3 = o2.call(a3, "finallyLoc");
              if (c3 && u3) {
                if (this.prev < a3.catchLoc)
                  return n2(a3.catchLoc, true);
                if (this.prev < a3.finallyLoc)
                  return n2(a3.finallyLoc);
              } else if (c3) {
                if (this.prev < a3.catchLoc)
                  return n2(a3.catchLoc, true);
              } else {
                if (!u3)
                  throw Error("try statement without catch or finally");
                if (this.prev < a3.finallyLoc)
                  return n2(a3.finallyLoc);
              }
            }
          }
        }, abrupt: function(t5, e4) {
          for (var r4 = this.tryEntries.length - 1;r4 >= 0; --r4) {
            var n2 = this.tryEntries[r4];
            if (n2.tryLoc <= this.prev && o2.call(n2, "finallyLoc") && this.prev < n2.finallyLoc) {
              var i2 = n2;
              break;
            }
          }
          i2 && (t5 === "break" || t5 === "continue") && i2.tryLoc <= e4 && e4 <= i2.finallyLoc && (i2 = null);
          var a3 = i2 ? i2.completion : {};
          return a3.type = t5, a3.arg = e4, i2 ? (this.method = "next", this.next = i2.finallyLoc, v) : this.complete(a3);
        }, complete: function(t5, e4) {
          if (t5.type === "throw")
            throw t5.arg;
          return t5.type === "break" || t5.type === "continue" ? this.next = t5.arg : t5.type === "return" ? (this.rval = this.arg = t5.arg, this.method = "return", this.next = "end") : t5.type === "normal" && e4 && (this.next = e4), v;
        }, finish: function(t5) {
          for (var e4 = this.tryEntries.length - 1;e4 >= 0; --e4) {
            var r4 = this.tryEntries[e4];
            if (r4.finallyLoc === t5)
              return this.complete(r4.completion, r4.afterLoc), M(r4), v;
          }
        }, catch: function(t5) {
          for (var e4 = this.tryEntries.length - 1;e4 >= 0; --e4) {
            var r4 = this.tryEntries[e4];
            if (r4.tryLoc === t5) {
              var n2 = r4.completion;
              if (n2.type === "throw") {
                var i2 = n2.arg;
                M(r4);
              }
              return i2;
            }
          }
          throw Error("illegal catch attempt");
        }, delegateYield: function(e4, r4, n2) {
          return this.delegate = { iterator: T(e4), resultName: r4, nextLoc: n2 }, this.method === "next" && (this.arg = t4), v;
        } }, e3;
      }
      function o(t4, e3) {
        var r3 = typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
        if (!r3) {
          if (Array.isArray(t4) || (r3 = function(t5, e4) {
            if (t5) {
              if (typeof t5 == "string")
                return a(t5, e4);
              var r4 = {}.toString.call(t5).slice(8, -1);
              return r4 === "Object" && t5.constructor && (r4 = t5.constructor.name), r4 === "Map" || r4 === "Set" ? Array.from(t5) : r4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4) ? a(t5, e4) : undefined;
            }
          }(t4)) || e3 && t4 && typeof t4.length == "number") {
            r3 && (t4 = r3);
            var n2 = 0, i2 = function() {
            };
            return { s: i2, n: function() {
              return n2 >= t4.length ? { done: true } : { done: false, value: t4[n2++] };
            }, e: function(t5) {
              throw t5;
            }, f: i2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var o2, s2 = true, c2 = false;
        return { s: function() {
          r3 = r3.call(t4);
        }, n: function() {
          var t5 = r3.next();
          return s2 = t5.done, t5;
        }, e: function(t5) {
          c2 = true, o2 = t5;
        }, f: function() {
          try {
            s2 || r3.return == null || r3.return();
          } finally {
            if (c2)
              throw o2;
          }
        } };
      }
      function a(t4, e3) {
        (e3 == null || e3 > t4.length) && (e3 = t4.length);
        for (var r3 = 0, n2 = Array(e3);r3 < e3; r3++)
          n2[r3] = t4[r3];
        return n2;
      }
      function s(t4, e3, r3, n2, i2, o2, a2) {
        try {
          var s2 = t4[o2](a2), c2 = s2.value;
        } catch (t5) {
          return void r3(t5);
        }
        s2.done ? e3(c2) : Promise.resolve(c2).then(n2, i2);
      }
      function c(t4) {
        return function() {
          var e3 = this, r3 = arguments;
          return new Promise(function(n2, i2) {
            var o2 = t4.apply(e3, r3);
            function a2(t5) {
              s(o2, n2, i2, a2, c2, "next", t5);
            }
            function c2(t5) {
              s(o2, n2, i2, a2, c2, "throw", t5);
            }
            a2(undefined);
          });
        };
      }
      var u = r2(6343);
      t3.exports = function(t4) {
        var e3 = true;
        t4.s.hooks.pre("save", false, function(t5) {
          if (this.$isSubdocument)
            t5();
          else {
            var e4 = this, r3 = this.$getAllSubdocs();
            r3.length ? u(r3, function(t6, e5) {
              t6.$__schema.s.hooks.execPre("save", t6, function(t7) {
                e5(t7);
              });
            }, function(r4) {
              if (r4)
                return e4.$__schema.s.hooks.execPost("save:error", e4, [e4], { error: r4 }, function(e5) {
                  t5(e5);
                });
              t5();
            }) : t5();
          }
        }, null, e3), t4.s.hooks.post("save", function() {
          var t5 = c(i().mark(function t() {
            var e4, r3, n2, a2, s2;
            return i().wrap(function(t6) {
              for (;; )
                switch (t6.prev = t6.next) {
                  case 0:
                    if ((e4 = this.$__.removedSubdocs) && e4.length) {
                      t6.next = 3;
                      break;
                    }
                    return t6.abrupt("return");
                  case 3:
                    r3 = [], n2 = o(e4), t6.prev = 5, s2 = i().mark(function t() {
                      var e5;
                      return i().wrap(function(t7) {
                        for (;; )
                          switch (t7.prev = t7.next) {
                            case 0:
                              e5 = a2.value, r3.push(new Promise(function(t8, r4) {
                                e5.$__schema.s.hooks.execPost("deleteOne", e5, [e5], function(e6) {
                                  if (e6)
                                    return r4(e6);
                                  t8();
                                });
                              }));
                            case 2:
                            case "end":
                              return t7.stop();
                          }
                      }, t);
                    }), n2.s();
                  case 8:
                    if ((a2 = n2.n()).done) {
                      t6.next = 12;
                      break;
                    }
                    return t6.delegateYield(s2(), "t0", 10);
                  case 10:
                    t6.next = 8;
                    break;
                  case 12:
                    t6.next = 17;
                    break;
                  case 14:
                    t6.prev = 14, t6.t1 = t6.catch(5), n2.e(t6.t1);
                  case 17:
                    return t6.prev = 17, n2.f(), t6.finish(17);
                  case 20:
                    return this.$__.removedSubdocs = null, t6.next = 23, Promise.all(r3);
                  case 23:
                  case "end":
                    return t6.stop();
                }
            }, t, this, [[5, 14, 17, 20]]);
          }));
          return function() {
            return t5.apply(this, arguments);
          };
        }()), t4.s.hooks.post("save", function() {
          var t5 = c(i().mark(function t() {
            var e4, r3, n2, a2, s2, c2, u2 = this;
            return i().wrap(function(t6) {
              for (;; )
                switch (t6.prev = t6.next) {
                  case 0:
                    if (!this.$isSubdocument) {
                      t6.next = 2;
                      break;
                    }
                    return t6.abrupt("return");
                  case 2:
                    if (e4 = this, (r3 = this.$getAllSubdocs()).length) {
                      t6.next = 6;
                      break;
                    }
                    return t6.abrupt("return");
                  case 6:
                    n2 = [], a2 = o(r3), t6.prev = 8, c2 = i().mark(function t() {
                      var e5;
                      return i().wrap(function(t7) {
                        for (;; )
                          switch (t7.prev = t7.next) {
                            case 0:
                              e5 = s2.value, n2.push(new Promise(function(t8, r4) {
                                e5.$__schema.s.hooks.execPost("save", e5, [e5], function(e6) {
                                  if (e6)
                                    return r4(e6);
                                  t8();
                                });
                              }));
                            case 2:
                            case "end":
                              return t7.stop();
                          }
                      }, t);
                    }), a2.s();
                  case 11:
                    if ((s2 = a2.n()).done) {
                      t6.next = 15;
                      break;
                    }
                    return t6.delegateYield(c2(), "t0", 13);
                  case 13:
                    t6.next = 11;
                    break;
                  case 15:
                    t6.next = 20;
                    break;
                  case 17:
                    t6.prev = 17, t6.t1 = t6.catch(8), a2.e(t6.t1);
                  case 20:
                    return t6.prev = 20, a2.f(), t6.finish(20);
                  case 23:
                    return t6.prev = 23, t6.next = 26, Promise.all(n2);
                  case 26:
                    t6.next = 32;
                    break;
                  case 28:
                    return t6.prev = 28, t6.t2 = t6.catch(23), t6.next = 32, new Promise(function(r4, n3) {
                      u2.$__schema.s.hooks.execPost("save:error", e4, [e4], { error: t6.t2 }, function(t7) {
                        if (t7)
                          return n3(t7);
                        r4();
                      });
                    });
                  case 32:
                  case "end":
                    return t6.stop();
                }
            }, t, this, [[8, 17, 20, 23], [23, 28]]);
          }));
          return function() {
            return t5.apply(this, arguments);
          };
        }(), null, e3);
      };
    }, 7201: (t3, e2, r2) => {
      var n = r2(5625).objectIdSymbol, i = r2(335);
      function o() {
        var t4, e3;
        if (this.$__.shardval) {
          e3 = (t4 = Object.keys(this.$__.shardval)).length, this.$where = this.$where || {};
          for (var r3 = 0;r3 < e3; ++r3)
            this.$where[t4[r3]] = this.$__.shardval[t4[r3]];
        }
      }
      function a() {
        var t4 = this.$__schema.options.shardKey || this.$__schema.options.shardkey;
        if (i.isPOJO(t4))
          for (var e3, r3 = this.$__.shardval = {}, o2 = Object.keys(t4), a2 = o2.length, s = 0;s < a2; ++s)
            (e3 = this.$__getValue(o2[s])) == null ? r3[o2[s]] = e3 : i.isMongooseObject(e3) ? r3[o2[s]] = e3.toObject({ depopulate: true, _isNested: true }) : e3 instanceof Date || e3[n] ? r3[o2[s]] = e3 : typeof e3.valueOf == "function" ? r3[o2[s]] = e3.valueOf() : r3[o2[s]] = e3;
      }
      t3.exports = function(t4) {
        t4.post("init", function() {
          return a.call(this), this;
        }), t4.pre("save", function(t5) {
          o.call(this), t5();
        }), t4.pre("remove", function(t5) {
          o.call(this), t5();
        }), t4.post("save", function() {
          a.call(this);
        });
      }, t3.exports.storeShard = a;
    }, 2016: (t3, e2, r2) => {
      function n(t4, e3) {
        var r3 = typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
        if (!r3) {
          if (Array.isArray(t4) || (r3 = i(t4)) || e3 && t4 && typeof t4.length == "number") {
            r3 && (t4 = r3);
            var n2 = 0, o2 = function() {
            };
            return { s: o2, n: function() {
              return n2 >= t4.length ? { done: true } : { done: false, value: t4[n2++] };
            }, e: function(t5) {
              throw t5;
            }, f: o2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var a2, s2 = true, c2 = false;
        return { s: function() {
          r3 = r3.call(t4);
        }, n: function() {
          var t5 = r3.next();
          return s2 = t5.done, t5;
        }, e: function(t5) {
          c2 = true, a2 = t5;
        }, f: function() {
          try {
            s2 || r3.return == null || r3.return();
          } finally {
            if (c2)
              throw a2;
          }
        } };
      }
      function i(t4, e3) {
        if (t4) {
          if (typeof t4 == "string")
            return o(t4, e3);
          var r3 = {}.toString.call(t4).slice(8, -1);
          return r3 === "Object" && t4.constructor && (r3 = t4.constructor.name), r3 === "Map" || r3 === "Set" ? Array.from(t4) : r3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r3) ? o(t4, e3) : undefined;
        }
      }
      function o(t4, e3) {
        (e3 == null || e3 > t4.length) && (e3 = t4.length);
        for (var r3 = 0, n2 = Array(e3);r3 < e3; r3++)
          n2[r3] = t4[r3];
        return n2;
      }
      var a = r2(5625).arrayAtomicsSymbol, s = r2(5625).sessionNewDocuments, c = r2(335);
      function u(t4, e3) {
        return t4 = t4 || {}, e3.$pullAll != null && (t4.$pullAll = (t4.$pullAll || []).concat(e3.$pullAll)), e3.$push != null && (t4.$push = t4.$push || {}, t4.$push.$each = (t4.$push.$each || []).concat(e3.$push.$each)), e3.$addToSet != null && (t4.$addToSet = (t4.$addToSet || []).concat(e3.$addToSet)), e3.$set != null && (t4.$set = Array.isArray(e3.$set) ? function(t5) {
          if (Array.isArray(t5))
            return o(t5);
        }(r3 = e3.$set) || function(t5) {
          if (typeof Symbol != "undefined" && t5[Symbol.iterator] != null || t5["@@iterator"] != null)
            return Array.from(t5);
        }(r3) || i(r3) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }() : Object.assign({}, e3.$set)), t4;
        var r3;
      }
      t3.exports = function(t4) {
        t4.pre("save", function() {
          var t5 = this.$session();
          if (t5 != null && t5.transaction != null && t5[s] != null && !t5[s].has(this)) {
            var e3 = {};
            this.isNew && (e3.isNew = true), this.$__schema.options.versionKey && (e3.versionKey = this.get(this.$__schema.options.versionKey)), e3.modifiedPaths = new Set(Object.keys(this.$__.activePaths.getStatePaths("modify"))), e3.atomics = function(t6, e4) {
              var r3 = new Map;
              e4 = e4 || new Map;
              var i2, o2 = n(Object.keys(t6.$__.activePaths.init).concat(Object.keys(t6.$__.activePaths.modify)));
              try {
                for (o2.s();!(i2 = o2.n()).done; ) {
                  var s2 = i2.value, f = t6.$__getValue(s2);
                  if (f != null && Array.isArray(f) && c.isMongooseDocumentArray(f) && f.length && f[a] != null && Object.keys(f[a]).length !== 0) {
                    var l = e4.get(s2) || {};
                    r3.set(s2, u(l, f[a]));
                  }
                }
              } catch (t7) {
                o2.e(t7);
              } finally {
                o2.f();
              }
              var h, p = n(t6.$__dirty());
              try {
                for (p.s();!(h = p.n()).done; ) {
                  var d = h.value, y = d.path, b = d.value;
                  if (b != null && b[a] != null && Object.keys(b[a]).length !== 0) {
                    var m = e4.get(y) || {};
                    r3.set(y, u(m, b[a]));
                  }
                }
              } catch (t7) {
                p.e(t7);
              } finally {
                p.f();
              }
              return r3;
            }(this), t5[s].set(this, e3);
          }
        });
      };
    }, 377: (t3) => {
      function e2(t4) {
        return e2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, e2(t4);
      }
      t3.exports = function(t4) {
        t4.pre("save", false, function(t5, r2) {
          var n = this, i = this;
          if (this.$isSubdocument)
            return t5();
          if (r2 && e2(r2) === "object" && "validateBeforeSave" in r2 ? r2.validateBeforeSave : this.$__schema.options.validateBeforeSave) {
            var o = r2 && e2(r2) === "object" && "validateModifiedOnly" in r2 ? { validateModifiedOnly: r2.validateModifiedOnly } : null;
            this.$validate(o).then(function() {
              n.$op = "save", t5();
            }, function(e3) {
              i.$__schema.s.hooks.execPost("save:error", i, [i], { error: e3 }, function(e4) {
                i.$op = "save", t5(e4);
              });
            });
          } else
            t5();
        }, null, true);
      };
    }, 2205: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4, e3) {
        var r3 = typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
        if (!r3) {
          if (Array.isArray(t4) || (r3 = function(t5, e4) {
            if (t5) {
              if (typeof t5 == "string")
                return o(t5, e4);
              var r4 = {}.toString.call(t5).slice(8, -1);
              return r4 === "Object" && t5.constructor && (r4 = t5.constructor.name), r4 === "Map" || r4 === "Set" ? Array.from(t5) : r4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4) ? o(t5, e4) : undefined;
            }
          }(t4)) || e3 && t4 && typeof t4.length == "number") {
            r3 && (t4 = r3);
            var n2 = 0, i2 = function() {
            };
            return { s: i2, n: function() {
              return n2 >= t4.length ? { done: true } : { done: false, value: t4[n2++] };
            }, e: function(t5) {
              throw t5;
            }, f: i2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var a2, s2 = true, c2 = false;
        return { s: function() {
          r3 = r3.call(t4);
        }, n: function() {
          var t5 = r3.next();
          return s2 = t5.done, t5;
        }, e: function(t5) {
          c2 = true, a2 = t5;
        }, f: function() {
          try {
            s2 || r3.return == null || r3.return();
          } finally {
            if (c2)
              throw a2;
          }
        } };
      }
      function o(t4, e3) {
        (e3 == null || e3 > t4.length) && (e3 = t4.length);
        for (var r3 = 0, n2 = Array(e3);r3 < e3; r3++)
          n2[r3] = t4[r3];
        return n2;
      }
      var a = r2(967), s = r2(5132), c = r2(7785), u = r2(6239), f = r2(1829), l = r2(5772);
      function h(t4) {
        return function(e3) {
          e3.options || (e3.options = {}), t4 != null && Array.isArray(t4.virtuals) && ((t4 = Object.assign({}, t4)).virtuals = t4.virtuals.filter(function(t5) {
            return typeof t5 == "string" && t5.startsWith(e3.path + ".");
          }).map(function(t5) {
            return t5.slice(e3.path.length + 1);
          })), e3.options.lean = t4;
        };
      }
      e2.preparePopulationOptions = function(t4, e3) {
        var r3 = t4.options.populate, n2 = Object.keys(r3).reduce(function(t5, e4) {
          return t5.concat([r3[e4]]);
        }, []);
        return e3.lean != null && n2.filter(function(t5) {
          return (t5 && t5.options && t5.options.lean) == null;
        }).forEach(h(e3.lean)), n2.forEach(function(e4) {
          e4._localModel = t4.model;
        }), n2;
      }, e2.preparePopulationOptionsMQ = function(t4, e3) {
        var r3 = t4._mongooseOptions.populate, n2 = Object.keys(r3).reduce(function(t5, e4) {
          return t5.concat([r3[e4]]);
        }, []);
        e3.lean != null && n2.filter(function(t5) {
          return (t5 && t5.options && t5.options.lean) == null;
        }).forEach(h(e3.lean));
        var i2 = t4 && t4.options && t4.options.session || null;
        i2 != null && n2.forEach(function(t5) {
          t5.options != null ? "session" in t5.options || (t5.options.session = i2) : t5.options = { session: i2 };
        });
        var o2 = t4._fieldsForExec();
        return n2.forEach(function(t5) {
          t5._queryProjection = o2;
        }), n2.forEach(function(e4) {
          e4._localModel = t4.model;
        }), n2;
      }, e2.createModel = function(t4, r3, n2, i2, o2) {
        t4.hooks.execPreSync("createModel", r3);
        var a2 = t4.schema ? t4.schema.discriminatorMapping : null, s2 = a2 && a2.isRoot ? a2.key : null, u2 = r3[s2];
        if (s2 && u2 && t4.discriminators) {
          var l2 = t4.discriminators[u2] || c(t4.discriminators, u2);
          if (l2) {
            var h2 = f(i2);
            return e2.applyPaths(h2, l2.schema), new l2(undefined, h2, true);
          }
        }
        var p = { skipId: true, isNew: false, willInit: true };
        return o2 != null && "defaults" in o2 && (p.defaults = o2.defaults), new t4(undefined, n2, p);
      }, e2.createModelAndInit = function(t4, r3, n2, i2, o2, a2, s2) {
        var c2 = a2 ? { populated: a2 } : undefined, u2 = e2.createModel(t4, r3, n2, i2, o2);
        try {
          u2.$init(r3, c2, s2);
        } catch (t5) {
          s2(t5, u2);
        }
      }, e2.applyPaths = function(t4, e3, r3) {
        var o2, c2, f2 = new Set;
        if (t4) {
          c2 = Object.keys(t4);
          for (var h2 = [], p = 0;p < c2.length; ++p) {
            var d = c2[p];
            c2[p][0] === "-" && (delete t4[d], d === "-_id" ? t4._id = 0 : h2.push(d.slice(1)));
          }
          c2 = Object.keys(t4);
          for (var y = 0;y < c2.length; ++y)
            if (c2[y][0] !== "+") {
              var b = t4[c2[y]];
              if (u(b) && !(c2[y] === "_id" && c2.length > 1) && (!(c2[y] === e3.options.discriminatorKey && c2.length > 1 && b != null) || b)) {
                o2 = !b;
                break;
              }
            }
          for (var m = 0, v = h2;m < v.length; m++) {
            var g = v[m], _ = e3.path(g);
            _ && _.selected && o2 === false ? _ && _.selected && o2 === false && f2.add(g) : (t4[g] = 0, o2 = true);
          }
        }
        var w = [], S = [], O = [];
        switch (function e(r4, n2) {
          if (n2 || (n2 = ""), O.indexOf(r4) !== -1)
            return [];
          O.push(r4);
          var i2 = [];
          return r4.eachPath(function(r5, s2) {
            if (n2 && (r5 = n2 + "." + r5), s2.$isSchemaMap || r5.endsWith(".$*")) {
              var c3 = t4 && "+" + r5 in t4;
              s2.options && s2.options.select === false && !c3 && S.push(r5);
            } else {
              var u2 = N(r5, s2);
              if (u2 != null || Array.isArray(s2) || !s2.$isMongooseArray || s2.$isMongooseDocumentArray || (u2 = N(r5, s2.caster)), u2 != null && i2.push(u2), s2.schema) {
                var f3 = e(s2.schema, r5);
                o2 === false && a(t4, r5, s2.schema, w, f3);
              }
            }
          }), O.pop(), i2;
        }(e3), o2) {
          case true:
            var j, $ = i(S);
            try {
              for ($.s();!(j = $.n()).done; ) {
                var A = j.value;
                t4[A] = 0;
              }
            } catch (t5) {
              $.e(t5);
            } finally {
              $.f();
            }
            break;
          case false:
            e3 && e3.paths._id && e3.paths._id.options && e3.paths._id.options.select === false && (t4._id = 0);
            var E, x = i(w);
            try {
              for (x.s();!(E = x.n()).done; ) {
                var P = E.value;
                f2.has(P) || l(t4, P) || (t4[P] = t4[P] || 1);
              }
            } catch (t5) {
              x.e(t5);
            } finally {
              x.f();
            }
            break;
          case undefined:
            if (t4 == null)
              break;
            for (var k = 0, M = Object.keys(t4 || {});k < M.length; k++) {
              var I = M[k];
              I.startsWith("+") && delete t4[I];
            }
            var T, B = i(S);
            try {
              for (B.s();!(T = B.n()).done; ) {
                var R = T.value;
                t4[R] == null && (t4[R] = 0);
              }
            } catch (t5) {
              B.e(t5);
            } finally {
              B.f();
            }
        }
        function N(i2, a2) {
          if (t4 != null && typeof a2.selected == "boolean")
            if (a2.selected === false && t4[i2])
              r3 && (t4[i2] = 0);
            else if (o2 || !a2.selected || i2 !== e3.options.discriminatorKey || t4[i2] == null || t4[i2]) {
              if (o2 !== false || !a2.selected || t4[i2] == null || t4[i2]) {
                var u2 = "+" + i2;
                if (t4 && u2 in t4)
                  return delete t4[u2], void (o2 === false && c2.length > 1 && !~c2.indexOf(i2) && !r3 ? t4[i2] = 1 : o2 == null && r3 && a2.selected === false && (t4[i2] = 0));
                for (var f3 = i2.split("."), l2 = "", h3 = 0;h3 < f3.length; ++h3)
                  if (l2 += l2.length ? "." + f3[h3] : f3[h3], S.indexOf(l2) !== -1)
                    return;
                if (!o2 && a2 && a2.options && a2.options.$skipDiscriminatorCheck)
                  for (var p2 = "", d2 = 0;d2 < f3.length; ++d2) {
                    p2 += (p2.length === 0 ? "" : ".") + f3[d2];
                    var y2 = s(t4, p2, false) || s(t4, p2 + ".$", false);
                    if (y2 && n(y2) !== "object")
                      return;
                  }
                return (a2.selected ? w : S).push(i2), i2;
              }
              delete t4[i2];
            } else
              delete t4[i2];
        }
      };
    }, 9703: (t3, e2, r2) => {
      var n = r2(5832).Buffer;
      function i(t4, e3) {
        var r3 = Object.keys(t4);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(t4);
          e3 && (n2 = n2.filter(function(e4) {
            return Object.getOwnPropertyDescriptor(t4, e4).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function o(t4) {
        for (var e3 = 1;e3 < arguments.length; e3++) {
          var r3 = arguments[e3] != null ? arguments[e3] : {};
          e3 % 2 ? i(Object(r3), true).forEach(function(e4) {
            a(t4, e4, r3[e4]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(r3)) : i(Object(r3)).forEach(function(e4) {
            Object.defineProperty(t4, e4, Object.getOwnPropertyDescriptor(r3, e4));
          });
        }
        return t4;
      }
      function a(t4, e3, r3) {
        return (e3 = function(t5) {
          var e4 = function(t6) {
            if (s(t6) != "object" || !t6)
              return t6;
            var e5 = t6[Symbol.toPrimitive];
            if (e5 !== undefined) {
              var r4 = e5.call(t6, "string");
              if (s(r4) != "object")
                return r4;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t6);
          }(t5);
          return s(e4) == "symbol" ? e4 : e4 + "";
        }(e3)) in t4 ? Object.defineProperty(t4, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t4[e3] = r3, t4;
      }
      function s(t4) {
        return s = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, s(t4);
      }
      function c(t4, e3) {
        return function(t5) {
          if (Array.isArray(t5))
            return t5;
        }(t4) || function(t5, e4) {
          var r3 = t5 == null ? null : typeof Symbol != "undefined" && t5[Symbol.iterator] || t5["@@iterator"];
          if (r3 != null) {
            var n2, i2, o2, a2, s2 = [], c2 = true, u2 = false;
            try {
              if (o2 = (r3 = r3.call(t5)).next, e4 === 0) {
                if (Object(r3) !== r3)
                  return;
                c2 = false;
              } else
                for (;!(c2 = (n2 = o2.call(r3)).done) && (s2.push(n2.value), s2.length !== e4); c2 = true)
                  ;
            } catch (t6) {
              u2 = true, i2 = t6;
            } finally {
              try {
                if (!c2 && r3.return != null && (a2 = r3.return(), Object(a2) !== a2))
                  return;
              } finally {
                if (u2)
                  throw i2;
              }
            }
            return s2;
          }
        }(t4, e3) || f(t4, e3) || function() {
          throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }
      function u(t4, e3) {
        var r3 = typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
        if (!r3) {
          if (Array.isArray(t4) || (r3 = f(t4)) || e3 && t4 && typeof t4.length == "number") {
            r3 && (t4 = r3);
            var n2 = 0, i2 = function() {
            };
            return { s: i2, n: function() {
              return n2 >= t4.length ? { done: true } : { done: false, value: t4[n2++] };
            }, e: function(t5) {
              throw t5;
            }, f: i2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var o2, a2 = true, s2 = false;
        return { s: function() {
          r3 = r3.call(t4);
        }, n: function() {
          var t5 = r3.next();
          return a2 = t5.done, t5;
        }, e: function(t5) {
          s2 = true, o2 = t5;
        }, f: function() {
          try {
            a2 || r3.return == null || r3.return();
          } finally {
            if (s2)
              throw o2;
          }
        } };
      }
      function f(t4, e3) {
        if (t4) {
          if (typeof t4 == "string")
            return l(t4, e3);
          var r3 = {}.toString.call(t4).slice(8, -1);
          return r3 === "Object" && t4.constructor && (r3 = t4.constructor.name), r3 === "Map" || r3 === "Set" ? Array.from(t4) : r3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r3) ? l(t4, e3) : undefined;
        }
      }
      function l(t4, e3) {
        (e3 == null || e3 > t4.length) && (e3 = t4.length);
        for (var r3 = 0, n2 = Array(e3);r3 < e3; r3++)
          n2[r3] = t4[r3];
        return n2;
      }
      var h, p = r2(3550).EventEmitter, d = r2(8297), y = r2(7026), b = r2(2319), m = r2(1000), v = r2(384), g = r2(5165), _ = r2(8331), w = r2(1829), S = r2(5132), O = r2(5857), j = r2(5792), $ = r2(6482), A = r2(8638), E = r2(5682), x = r2(5678), P = r2(5877), k = r2(8644), M = r2(335), I = r2(6560), T = r2(7352), B = /\.\d+(\.|$)/, R = r2(991).Ut, N = r2(8892).middlewareFunctions, D = R.concat(N).reduce(function(t4, e3) {
        return t4.add(e3);
      }, new Set), L = M.isPOJO, C = 0, U = /^\d+$/;
      function q(t4, e3) {
        if (!(this instanceof q))
          return new q(t4, e3);
        if (this.obj = t4, this.paths = {}, this.aliases = {}, this.subpaths = {}, this.virtuals = {}, this.singleNestedPaths = {}, this.nested = {}, this.inherits = {}, this.callQueue = [], this._indexes = [], this._searchIndexes = [], this.methods = e3 && e3.methods || {}, this.methodOptions = {}, this.statics = e3 && e3.statics || {}, this.tree = {}, this.query = e3 && e3.query || {}, this.childSchemas = [], this.plugins = [], this.$id = ++C, this.mapPaths = [], this.s = { hooks: new d }, this.options = this.defaultOptions(e3), Array.isArray(t4)) {
          var r3, n2 = u(t4);
          try {
            for (n2.s();!(r3 = n2.n()).done; ) {
              var i2 = r3.value;
              this.add(i2);
            }
          } catch (t5) {
            n2.e(t5);
          } finally {
            n2.f();
          }
        } else
          t4 && this.add(t4);
        if (e3 && e3.virtuals)
          for (var o2 = e3.virtuals, a2 = 0, s2 = Object.keys(o2);a2 < s2.length; a2++) {
            var c2 = s2[a2], f2 = o2[c2].options ? o2[c2].options : undefined, l2 = this.virtual(c2, f2);
            o2[c2].get && l2.get(o2[c2].get), o2[c2].set && l2.set(o2[c2].set);
          }
        var h2 = t4 && t4._id && M.isObject(t4._id);
        !this.paths._id && this.options._id && !h2 && _(this), this.setupTimestamp(this.options.timestamps);
      }
      function F(t4, e3) {
        for (var r3 = 0, n2 = Object.keys(e3);r3 < n2.length; r3++) {
          var i2 = n2[r3], o2 = null;
          if (e3[i2] != null)
            o2 = e3[i2];
          else {
            var a2 = S(t4.paths[i2], "options");
            if (a2 == null)
              continue;
            o2 = a2.alias;
          }
          if (o2) {
            var s2 = t4.paths[i2].path;
            if (Array.isArray(o2)) {
              var c2, f2 = u(o2);
              try {
                for (f2.s();!(c2 = f2.n()).done; ) {
                  var l2 = c2.value;
                  if (typeof l2 != "string")
                    throw new Error("Invalid value for alias option on " + s2 + ", got " + l2);
                  t4.aliases[l2] = s2, t4.virtual(l2).get(function(t5) {
                    return function() {
                      return typeof this.get == "function" ? this.get(t5) : this[t5];
                    };
                  }(s2)).set(function(t5) {
                    return function(e4) {
                      return this.$set(t5, e4);
                    };
                  }(s2));
                }
              } catch (t5) {
                f2.e(t5);
              } finally {
                f2.f();
              }
            } else {
              if (typeof o2 != "string")
                throw new Error("Invalid value for alias option on " + s2 + ", got " + o2);
              t4.aliases[o2] = s2, t4.virtual(o2).get(function(t5) {
                return function() {
                  return typeof this.get == "function" ? this.get(t5) : this[t5];
                };
              }(s2)).set(function(t5) {
                return function(e4) {
                  return this.$set(t5, e4);
                };
              }(s2));
            }
          }
        }
      }
      q.prototype = Object.create(p.prototype), q.prototype.constructor = q, q.prototype.instanceOfSchema = true, Object.defineProperty(q.prototype, "$schemaType", { configurable: false, enumerable: false, writable: true }), Object.defineProperty(q.prototype, "childSchemas", { configurable: false, enumerable: true, writable: true }), Object.defineProperty(q.prototype, "virtuals", { configurable: false, enumerable: true, writable: true }), q.prototype.obj, q.prototype.paths, q.prototype.tree, q.prototype.clone = function() {
        var t4 = this, e3 = this._clone();
        return e3.on("init", function(e4) {
          return t4.emit("init", e4);
        }), e3;
      }, q.prototype._clone = function(t4) {
        var e3 = new (t4 = t4 || (this.base == null ? q : this.base.Schema))({}, this._userProvidedOptions);
        e3.base = this.base, e3.obj = this.obj, e3.options = w(this.options), e3.callQueue = this.callQueue.map(function(t5) {
          return t5;
        }), e3.methods = w(this.methods), e3.methodOptions = w(this.methodOptions), e3.statics = w(this.statics), e3.query = w(this.query), e3.plugins = Array.prototype.slice.call(this.plugins), e3._indexes = w(this._indexes), e3._searchIndexes = w(this._searchIndexes), e3.s.hooks = this.s.hooks.clone(), e3.tree = w(this.tree), e3.paths = Object.fromEntries(Object.entries(this.paths).map(function(t5) {
          var e4 = c(t5, 2);
          return [e4[0], e4[1].clone()];
        })), e3.nested = w(this.nested), e3.subpaths = w(this.subpaths);
        for (var r3 = 0, n2 = Object.values(e3.paths);r3 < n2.length; r3++) {
          var i2 = n2[r3];
          if (i2.$isSingleNested) {
            for (var o2 = i2.path, a2 = 0, s2 = Object.keys(i2.schema.paths);a2 < s2.length; a2++) {
              var u2 = s2[a2];
              e3.singleNestedPaths[o2 + "." + u2] = i2.schema.paths[u2];
            }
            for (var f2 = 0, l2 = Object.keys(i2.schema.singleNestedPaths);f2 < l2.length; f2++) {
              var h2 = l2[f2];
              e3.singleNestedPaths[o2 + "." + h2] = i2.schema.singleNestedPaths[h2];
            }
            for (var p2 = 0, d2 = Object.keys(i2.schema.subpaths);p2 < d2.length; p2++) {
              var y2 = d2[p2];
              e3.singleNestedPaths[o2 + "." + y2] = i2.schema.subpaths[y2];
            }
            for (var b2 = 0, m2 = Object.keys(i2.schema.nested);b2 < m2.length; b2++) {
              var v2 = m2[b2];
              e3.singleNestedPaths[o2 + "." + v2] = "nested";
            }
          }
        }
        return e3.childSchemas = function(t5) {
          for (var e4 = [], r4 = 0, n3 = Object.keys(t5.paths);r4 < n3.length; r4++) {
            var i3 = n3[r4], o3 = t5.paths[i3];
            (o3.$isMongooseDocumentArray || o3.$isSingleNested) && e4.push({ schema: o3.schema, model: o3.caster });
          }
          return e4;
        }(e3), e3.virtuals = w(this.virtuals), e3.$globalPluginsApplied = this.$globalPluginsApplied, e3.$isRootDiscriminator = this.$isRootDiscriminator, e3.$implicitlyCreated = this.$implicitlyCreated, e3.$id = ++C, e3.$originalSchemaId = this.$id, e3.mapPaths = [].concat(this.mapPaths), this.discriminatorMapping != null && (e3.discriminatorMapping = Object.assign({}, this.discriminatorMapping)), this.discriminators != null && (e3.discriminators = Object.assign({}, this.discriminators)), this._applyDiscriminators != null && (e3._applyDiscriminators = new Map(this._applyDiscriminators)), e3.aliases = Object.assign({}, this.aliases), e3;
      }, q.prototype.pick = function(t4, e3) {
        var r3 = new q({}, e3 || this.options);
        if (!Array.isArray(t4))
          throw new y('Schema#pick() only accepts an array argument, got "' + s(t4) + '"');
        var n2, i2 = u(t4);
        try {
          for (i2.s();!(n2 = i2.n()).done; ) {
            var o2 = n2.value;
            if (this.nested[o2])
              r3.add(a({}, o2, S(this.tree, o2)));
            else {
              var c2 = this.path(o2);
              if (c2 == null)
                throw new y("Path `" + o2 + "` is not in the schema");
              r3.add(a({}, o2, c2));
            }
          }
        } catch (t5) {
          i2.e(t5);
        } finally {
          i2.f();
        }
        return r3;
      }, q.prototype.omit = function(t4, e3) {
        var r3 = new q(this, e3 || this.options);
        if (!Array.isArray(t4))
          throw new y('Schema#omit() only accepts an array argument, got "' + s(t4) + '"');
        for (var n2 in r3.remove(t4), r3.singleNestedPaths)
          t4.includes(n2) && delete r3.singleNestedPaths[n2];
        return r3;
      }, q.prototype.defaultOptions = function(t4) {
        this._userProvidedOptions = t4 == null ? {} : w(t4);
        var e3 = this.base && this.base.options || {};
        if ((t4 = o({ strict: !("strict" in e3) || e3.strict, strictQuery: "strictQuery" in e3 && e3.strictQuery, bufferCommands: true, capped: false, versionKey: "__v", optimisticConcurrency: false, minimize: true, autoIndex: null, discriminatorKey: "__t", shardKey: null, read: null, validateBeforeSave: true, validateModifiedOnly: false, _id: true, id: !("id" in e3) || e3.id, typeKey: "type" }, t4)).versionKey && typeof t4.versionKey != "string")
          throw new y("`versionKey` must be falsy or string, got `" + s(t4.versionKey) + "`");
        if (typeof t4.read == "string" ? t4.read = $(t4.read) : Array.isArray(t4.read) && typeof t4.read[0] == "string" && (t4.read = { mode: $(t4.read[0]), tags: t4.read[1] }), t4.optimisticConcurrency && !t4.versionKey)
          throw new y("Must set `versionKey` if using `optimisticConcurrency`");
        return t4;
      }, q.prototype.discriminator = function(t4, e3, r3) {
        return this._applyDiscriminators = this._applyDiscriminators || new Map, this._applyDiscriminators.set(t4, { schema: e3, options: r3 }), this;
      }, q.prototype._defaultToObjectOptions = function(t4) {
        var e3 = t4 ? "toJSON" : "toObject";
        if (this._defaultToObjectOptionsMap && this._defaultToObjectOptionsMap[e3])
          return this._defaultToObjectOptionsMap[e3];
        var r3 = this.base && this.base.options && this.base.options[e3] || {}, n2 = this.options[e3] || {}, i2 = Object.assign({}, r3, n2);
        return this._defaultToObjectOptionsMap = this._defaultToObjectOptionsMap || {}, this._defaultToObjectOptionsMap[e3] = i2, i2;
      }, q.prototype.add = function(t4, e3) {
        if (t4 instanceof q || t4 != null && t4.instanceOfSchema)
          return E(this, t4), this;
        if (t4._id === false && e3 == null && (this.options._id = false), (e3 = e3 || "") === "__proto__." || e3 === "constructor." || e3 === "prototype.")
          return this;
        for (var r3 = Object.keys(t4), n2 = this.options.typeKey, i2 = 0, o2 = r3;i2 < o2.length; i2++) {
          var u2 = o2[i2];
          if (!M.specialProperties.has(u2)) {
            var f2 = e3 + u2, l2 = t4[u2];
            if (l2 == null)
              throw new TypeError("Invalid value for schema path `" + f2 + '`, got value "' + l2 + '"');
            if (u2 !== "_id" || l2 !== false) {
              var h2 = false;
              if (typeof l2 == "string" && (h2 = (this.base != null ? this.base.Schema.Types : q.Types)[l2.charAt(0).toUpperCase() + l2.substring(1)] != null), u2 !== "_id" && (s(l2) !== "object" && typeof l2 != "function" && !h2 || l2 == null))
                throw new TypeError("Invalid schema configuration: `".concat(l2, "` is not ") + "a valid type at path `".concat(u2, "`. See ") + "https://bit.ly/mongoose-schematypes for a list of valid schema types.");
              if (l2 instanceof g || (l2.constructor && l2.constructor.name || null) === "VirtualType")
                this.virtual(l2);
              else {
                if (Array.isArray(l2) && l2.length === 1 && l2[0] == null)
                  throw new TypeError("Invalid value for schema Array path `" + f2 + '`, got value "' + l2[0] + '"');
                if (L(l2) || l2 instanceof m)
                  if (Object.keys(l2).length < 1)
                    e3 && (this.nested[e3.substring(0, e3.length - 1)] = true), this.path(f2, l2);
                  else if (!l2[n2] || n2 === "type" && L(l2.type) && l2.type.type)
                    this.nested[f2] = true, this.add(l2, f2 + ".");
                  else {
                    var p2 = l2[n2];
                    if (L(p2) && Object.keys(p2).length > 0) {
                      e3 && (this.nested[e3.substring(0, e3.length - 1)] = true);
                      var d2 = {};
                      this._userProvidedOptions.typeKey && (d2.typeKey = this._userProvidedOptions.typeKey), this._userProvidedOptions.strict != null && (d2.strict = this._userProvidedOptions.strict), this._userProvidedOptions.toObject != null && (d2.toObject = M.omit(this._userProvidedOptions.toObject, ["transform"])), this._userProvidedOptions.toJSON != null && (d2.toJSON = M.omit(this._userProvidedOptions.toJSON, ["transform"]));
                      var y2 = new q(p2, d2);
                      y2.$implicitlyCreated = true;
                      var b2 = Object.assign({}, l2, a({}, n2, y2));
                      this.path(e3 + u2, b2);
                    } else if (e3 && (this.nested[e3.substring(0, e3.length - 1)] = true), this.path(e3 + u2, l2), l2 != null && !l2.instanceOfSchema && M.isPOJO(l2.discriminators)) {
                      var v2 = this.path(e3 + u2);
                      for (var _2 in l2.discriminators)
                        v2.discriminator(_2, l2.discriminators[_2]);
                    }
                  }
                else if (e3 && (this.nested[e3.substring(0, e3.length - 1)] = true), this.path(e3 + u2, l2), l2[0] != null && !l2[0].instanceOfSchema && M.isPOJO(l2[0].discriminators)) {
                  var w2 = this.path(e3 + u2);
                  for (var S2 in l2[0].discriminators)
                    w2.discriminator(S2, l2[0].discriminators[S2]);
                }
              }
            }
          }
        }
        var O2 = Object.fromEntries(Object.entries(t4).map(function(t5) {
          var r4 = c(t5, 1)[0];
          return [e3 + r4, null];
        }));
        return F(this, O2), this;
      }, q.prototype.alias = function(t4, e3) {
        return F(this, a({}, t4, e3)), this;
      }, q.prototype.removeIndex = function(t4) {
        if (arguments.length > 1)
          throw new Error("removeIndex() takes only 1 argument");
        if (s(t4) !== "object" && typeof t4 != "string")
          throw new Error("removeIndex() may only take either an object or a string as an argument");
        if (s(t4) === "object")
          for (var e3 = this._indexes.length - 1;e3 >= 0; --e3)
            T.isDeepStrictEqual(this._indexes[e3][0], t4) && this._indexes.splice(e3, 1);
        else
          for (var r3 = this._indexes.length - 1;r3 >= 0; --r3)
            this._indexes[r3][1] != null && this._indexes[r3][1].name === t4 && this._indexes.splice(r3, 1);
        return this;
      }, q.prototype.clearIndexes = function() {
        return this._indexes.length = 0, this;
      }, q.prototype.searchIndex = function(t4) {
        return this._searchIndexes.push(t4), this;
      }, q.reserved = Object.create(null), q.prototype.reserved = q.reserved;
      var V = q.reserved;
      function z(t4) {
        return /\.\d+/.test(t4) ? t4.replace(/\.\d+\./g, ".$.").replace(/\.\d+$/, ".$") : t4;
      }
      function K(t4, e3) {
        if (t4.mapPaths.length === 0)
          return null;
        var r3, n2 = u(t4.mapPaths);
        try {
          for (n2.s();!(r3 = n2.n()).done; ) {
            var i2 = r3.value.path;
            if (new RegExp("^" + i2.replace(/\.\$\*/g, "\\.[^.]+") + "$").test(e3))
              return t4.paths[i2];
          }
        } catch (t5) {
          n2.e(t5);
        } finally {
          n2.f();
        }
        return null;
      }
      function H(t4, e3, r3) {
        var n2 = e3.split(/\.(\d+)\.|\.(\d+)$/).filter(Boolean);
        if (n2.length < 2)
          return t4.paths.hasOwnProperty(n2[0]) ? t4.paths[n2[0]] : "adhocOrUndefined";
        var i2 = t4.path(n2[0]), o2 = false;
        if (!i2)
          return "adhocOrUndefined";
        for (var a2 = n2.length - 1, s2 = 1;s2 < n2.length; ++s2) {
          o2 = false;
          var c2 = n2[s2];
          if (s2 === a2 && i2 && !/\D/.test(c2)) {
            i2 = i2.$isMongooseDocumentArray ? i2.$embeddedSchemaType : i2 instanceof h.Array ? i2.caster : undefined;
            break;
          }
          if (/\D/.test(c2)) {
            if (!i2 || !i2.schema) {
              i2 = undefined;
              break;
            }
            o2 = i2.schema.pathType(c2) === "nested", i2 = i2.schema.path(c2);
          } else
            i2 instanceof h.Array && s2 !== a2 && (i2 = i2.caster);
        }
        return t4.subpaths[r3] = i2, i2 ? "real" : o2 ? "nested" : "adhocOrUndefined";
      }
      function W(t4, e3) {
        var r3, n2 = u(t4.childSchemas);
        try {
          for (n2.s();!(r3 = n2.n()).done; ) {
            var i2 = r3.value.schema;
            i2.$implicitlyCreated && (Object.assign(i2.options, e3), W(i2, e3));
          }
        } catch (t5) {
          n2.e(t5);
        } finally {
          n2.f();
        }
      }
      V.prototype = V.emit = V.listeners = V.removeListener = V.collection = V.errors = V.get = V.init = V.isModified = V.isNew = V.populated = V.remove = V.save = V.toObject = V.validate = 1, V.collection = 1, q.prototype.path = function(t4, e3) {
        if (e3 === undefined) {
          if (this.paths[t4] != null)
            return this.paths[t4];
          var r3 = z(t4), n2 = function(t5, e4, r4) {
            if (t5.paths.hasOwnProperty(e4))
              return t5.paths[e4];
            if (t5.subpaths.hasOwnProperty(r4)) {
              var n3 = t5.subpaths[r4];
              if (n3 === "nested")
                return;
              return n3;
            }
            if (t5.singleNestedPaths.hasOwnProperty(r4) && s(t5.singleNestedPaths[r4]) === "object") {
              var i3 = t5.singleNestedPaths[r4];
              if (i3 === "nested")
                return;
              return i3;
            }
            return null;
          }(this, t4, r3);
          if (n2 != null)
            return n2;
          var i2 = K(this, t4);
          return i2 != null ? i2 : (n2 = this.hasMixedParent(r3)) != null ? n2 : B.test(t4) ? function(t5, e4, r4) {
            return H(t5, e4, r4), t5.subpaths[r4];
          }(this, t4, r3) : undefined;
        }
        var o2 = t4.split(".")[0];
        if (V[o2] && !this.options.suppressReservedKeysWarning) {
          var a2 = "`".concat(o2, "` is a reserved schema pathname and may break some functionality. ") + "You are allowed to use it, but use at your own risk. To disable this warning pass `suppressReservedKeysWarning` as a schema option.";
          M.warn(a2);
        }
        s(e3) === "object" && M.hasUserDefinedProperty(e3, "ref") && I(e3.ref, t4);
        var c2, f2 = t4.split(/\./), l2 = f2.pop(), h2 = this.tree, p2 = "", d2 = u(f2);
        try {
          for (d2.s();!(c2 = d2.n()).done; ) {
            var y2 = c2.value;
            if (M.specialProperties.has(y2))
              throw new Error("Cannot set special property `" + y2 + "` on a schema");
            if (p2 = p2 += (p2.length > 0 ? "." : "") + y2, h2[y2] || (this.nested[p2] = true, h2[y2] = {}), s(h2[y2]) !== "object") {
              var m2 = "Cannot set nested path `" + t4 + "`. Parent path `" + p2 + "` already set to type " + h2[y2].name + ".";
              throw new Error(m2);
            }
            h2 = h2[y2];
          }
        } catch (t5) {
          d2.e(t5);
        } finally {
          d2.f();
        }
        h2[l2] = w(e3), this.paths[t4] = this.interpretAsType(t4, e3, this.options);
        var v2 = this.paths[t4];
        if (v2.$isSchemaMap) {
          var g2 = t4 + ".$*";
          this.paths[g2] = v2.$__schemaType, this.mapPaths.push(this.paths[g2]);
        }
        if (v2.$isSingleNested) {
          for (var _2 = 0, S2 = Object.keys(v2.schema.paths);_2 < S2.length; _2++) {
            var O2 = S2[_2];
            this.singleNestedPaths[t4 + "." + O2] = v2.schema.paths[O2];
          }
          for (var j2 = 0, $2 = Object.keys(v2.schema.singleNestedPaths);j2 < $2.length; j2++) {
            var A2 = $2[j2];
            this.singleNestedPaths[t4 + "." + A2] = v2.schema.singleNestedPaths[A2];
          }
          for (var E2 = 0, x2 = Object.keys(v2.schema.subpaths);E2 < x2.length; E2++) {
            var P2 = x2[E2];
            this.singleNestedPaths[t4 + "." + P2] = v2.schema.subpaths[P2];
          }
          for (var k2 = 0, T2 = Object.keys(v2.schema.nested);k2 < T2.length; k2++) {
            var R2 = T2[k2];
            this.singleNestedPaths[t4 + "." + R2] = "nested";
          }
          Object.defineProperty(v2.schema, "base", { configurable: true, enumerable: false, writable: false, value: this.base }), v2.caster.base = this.base, this.childSchemas.push({ schema: v2.schema, model: v2.caster });
        } else
          v2.$isMongooseDocumentArray && (Object.defineProperty(v2.schema, "base", { configurable: true, enumerable: false, writable: false, value: this.base }), v2.casterConstructor.base = this.base, this.childSchemas.push({ schema: v2.schema, model: v2.casterConstructor }));
        if (v2.$isMongooseArray && v2.caster instanceof b) {
          for (var N2 = t4, D2 = v2;D2.$isMongooseArray; )
            N2 += ".$", D2.$isMongooseDocumentArray ? (D2.$embeddedSchemaType._arrayPath = N2, D2.$embeddedSchemaType._arrayParentPath = t4, D2 = D2.$embeddedSchemaType) : (D2.caster._arrayPath = N2, D2.caster._arrayParentPath = t4, D2 = D2.caster), this.subpaths[N2] = D2;
          for (var L2 = 0, C2 = [];L2 < C2.length; L2++) {
            var U2 = C2[L2];
            this.subpaths[U2.path] = U2;
          }
        }
        if (v2.$isMongooseDocumentArray) {
          for (var q2 = 0, F2 = Object.keys(v2.schema.paths);q2 < F2.length; q2++) {
            var W2 = F2[q2], J2 = v2.schema.paths[W2];
            this.subpaths[t4 + "." + W2] = J2, s(J2) === "object" && J2 != null && J2.$parentSchemaDocArray == null && (J2.$parentSchemaDocArray = v2);
          }
          for (var G2 = 0, Y2 = Object.keys(v2.schema.subpaths);G2 < Y2.length; G2++) {
            var Q = Y2[G2], X = v2.schema.subpaths[Q];
            this.subpaths[t4 + "." + Q] = X, s(X) === "object" && X != null && X.$parentSchemaDocArray == null && (X.$parentSchemaDocArray = v2);
          }
          for (var Z = 0, tt = Object.keys(v2.schema.singleNestedPaths);Z < tt.length; Z++) {
            var et = tt[Z], rt = v2.schema.singleNestedPaths[et];
            this.subpaths[t4 + "." + et] = rt, s(rt) === "object" && rt != null && rt.$parentSchemaDocArray == null && (rt.$parentSchemaDocArray = v2);
          }
        }
        return this;
      }, Object.defineProperty(q.prototype, "base", { configurable: true, enumerable: false, writable: true, value: null }), q.prototype.interpretAsType = function(t4, e3, i2) {
        if (e3 instanceof b) {
          if (e3.path === t4)
            return e3;
          var o2 = e3.clone();
          return o2.path = t4, o2;
        }
        var c2 = this.base != null ? this.base.Schema.Types : q.Types, u2 = this.base != null ? this.base.Types : r2(1148);
        if (!(M.isPOJO(e3) || e3 instanceof m) && M.getFunctionName(e3.constructor) !== "Object") {
          var f2 = e3;
          (e3 = {})[i2.typeKey] = f2;
        }
        var l2, h2 = e3[i2.typeKey] && (e3[i2.typeKey] instanceof Function || i2.typeKey !== "type" || !e3.type.type) ? e3[i2.typeKey] : {};
        if (M.isPOJO(h2) || h2 === "mixed")
          return new c2.Mixed(t4, e3);
        if (Array.isArray(h2) || h2 === Array || h2 === "array" || h2 === c2.Array) {
          var p2 = h2 === Array || h2 === "array" ? e3.cast || e3.of : h2[0];
          if (p2 && p2.instanceOfSchema) {
            if (!(p2 instanceof q)) {
              if (!this.options._isMerging)
                throw new TypeError("Schema for array path `" + t4 + "` is from a different copy of the Mongoose module. Please make sure you're using the same version of Mongoose everywhere with `npm list mongoose`. If you are still getting this error, please add `new Schema()` around the path: " + "".concat(t4, ": new Schema(...)"));
              p2 = new q(p2);
            }
            return new c2.DocumentArray(t4, p2, e3);
          }
          if (p2 && p2[i2.typeKey] && p2[i2.typeKey].instanceOfSchema) {
            if (!(p2[i2.typeKey] instanceof q)) {
              if (!this.options._isMerging)
                throw new TypeError("Schema for array path `" + t4 + "` is from a different copy of the Mongoose module. Please make sure you're using the same version of Mongoose everywhere with `npm list mongoose`. If you are still getting this error, please add `new Schema()` around the path: " + "".concat(t4, ": new Schema(...)"));
              p2[i2.typeKey] = new q(p2[i2.typeKey]);
            }
            return new c2.DocumentArray(t4, p2[i2.typeKey], e3, p2);
          }
          if (p2 !== undefined && (Array.isArray(p2) || p2.type === Array || p2.type == "Array"))
            return p2 && p2.type == "Array" && (p2.type = Array), new c2.Array(t4, this.interpretAsType(t4, p2, i2), e3);
          var d2 = p2 == null || !p2[i2.typeKey] || i2.typeKey === "type" && p2.type.type ? p2 : p2[i2.typeKey];
          if (typeof p2 == "string")
            p2 = c2[p2.charAt(0).toUpperCase() + p2.substring(1)];
          else if (M.isPOJO(d2)) {
            if (Object.keys(d2).length) {
              var v2 = { minimize: i2.minimize };
              i2.typeKey && (v2.typeKey = i2.typeKey), i2.hasOwnProperty("strict") && (v2.strict = i2.strict), i2.hasOwnProperty("strictQuery") && (v2.strictQuery = i2.strictQuery), i2.hasOwnProperty("toObject") && (v2.toObject = M.omit(i2.toObject, ["transform"])), i2.hasOwnProperty("toJSON") && (v2.toJSON = M.omit(i2.toJSON, ["transform"])), this._userProvidedOptions.hasOwnProperty("_id") ? v2._id = this._userProvidedOptions._id : q.Types.DocumentArray.defaultOptions._id != null && (v2._id = q.Types.DocumentArray.defaultOptions._id);
              var g2 = new q(d2, v2);
              return g2.$implicitlyCreated = true, new c2.DocumentArray(t4, g2, e3);
            }
            return new c2.Array(t4, c2.Mixed, e3);
          }
          if (p2) {
            if (h2 = !p2[i2.typeKey] || i2.typeKey === "type" && p2.type.type ? p2 : p2[i2.typeKey], Array.isArray(h2))
              return new c2.Array(t4, this.interpretAsType(t4, h2, i2), e3);
            if ((l2 = typeof h2 == "string" ? h2 : h2.schemaName || M.getFunctionName(h2)) === "ClockDate" && (l2 = "Date"), l2 === undefined)
              throw new TypeError("Invalid schema configuration: " + "Could not determine the embedded type for array `".concat(t4, "`. ") + "See https://mongoosejs.com/docs/guide.html#definition for more info on supported schema syntaxes.");
            if (!c2.hasOwnProperty(l2))
              throw new TypeError("Invalid schema configuration: " + "`".concat(l2, "` is not a valid type within the array `").concat(t4, "`.") + "See https://bit.ly/mongoose-schematypes for a list of valid schema types.");
          }
          return new c2.Array(t4, p2 || c2.Mixed, e3, i2);
        }
        if (h2 && h2.instanceOfSchema)
          return new c2.Subdocument(h2, t4, e3);
        if ((l2 = n.isBuffer(h2) ? "Buffer" : typeof h2 == "function" || s(h2) === "object" ? h2.schemaName || M.getFunctionName(h2) : h2 === u2.ObjectId ? "ObjectId" : h2 === u2.Decimal128 ? "Decimal128" : h2 == null ? "" + h2 : h2.toString()) && (l2 = l2.charAt(0).toUpperCase() + l2.substring(1)), l2 === "ObjectID" && (l2 = "ObjectId"), l2 === "ClockDate" && (l2 = "Date"), l2 === undefined)
          throw new TypeError("Invalid schema configuration: `".concat(t4, "` schematype definition is ") + "invalid. See https://mongoosejs.com/docs/guide.html#definition for more info on supported schema syntaxes.");
        if (c2[l2] == null)
          throw new TypeError("Invalid schema configuration: `".concat(l2, "` is not ") + "a valid type at path `".concat(t4, "`. See ") + "https://bit.ly/mongoose-schematypes for a list of valid schema types.");
        var _2 = new c2[l2](t4, e3);
        return _2.$isSchemaMap && function(t5, e4, r3, n2, i3) {
          var o3 = r3 + ".$*", s2 = { type: {} };
          M.hasUserDefinedProperty(n2, "of") && ((s2 = M.isPOJO(n2.of) && Object.keys(n2.of).length > 0 && !M.hasUserDefinedProperty(n2.of, t5.options.typeKey) ? a({}, t5.options.typeKey, new q(n2.of)) : M.isPOJO(n2.of) ? Object.assign({}, n2.of) : a({}, t5.options.typeKey, n2.of))[t5.options.typeKey] && s2[t5.options.typeKey].instanceOfSchema && s2[t5.options.typeKey].eachPath(function(t6, e5) {
            if (e5.options.select === true || e5.options.select === false)
              throw new y('Cannot use schema-level projections (`select: true` or `select: false`) within maps at path "' + r3 + "." + t6 + '"');
          }), M.hasUserDefinedProperty(n2, "ref") && (s2.ref = n2.ref)), e4.$__schemaType = t5.interpretAsType(o3, s2, i3);
        }(this, _2, t4, e3, i2), _2;
      }, q.prototype.eachPath = function(t4) {
        for (var e3 = Object.keys(this.paths), r3 = e3.length, n2 = 0;n2 < r3; ++n2)
          t4(e3[n2], this.paths[e3[n2]]);
        return this;
      }, q.prototype.requiredPaths = function(t4) {
        if (this._requiredpaths && !t4)
          return this._requiredpaths;
        for (var e3 = Object.keys(this.paths), r3 = e3.length, n2 = [];r3--; ) {
          var i2 = e3[r3];
          this.paths[i2].isRequired && n2.push(i2);
        }
        return this._requiredpaths = n2, this._requiredpaths;
      }, q.prototype.indexedPaths = function() {
        return this._indexedpaths || (this._indexedpaths = this.indexes()), this._indexedpaths;
      }, q.prototype.pathType = function(t4) {
        if (this.paths.hasOwnProperty(t4))
          return "real";
        if (this.virtuals.hasOwnProperty(t4))
          return "virtual";
        if (this.nested.hasOwnProperty(t4))
          return "nested";
        var e3 = z(t4);
        if (this.subpaths.hasOwnProperty(e3) || this.subpaths.hasOwnProperty(t4))
          return "real";
        var r3 = this.singleNestedPaths.hasOwnProperty(e3) || this.singleNestedPaths.hasOwnProperty(t4);
        return r3 ? r3 === "nested" ? "nested" : "real" : K(this, t4) != null ? "real" : /\.\d+\.|\.\d+$/.test(t4) ? H(this, t4, e3) : "adhocOrUndefined";
      }, q.prototype.hasMixedParent = function(t4) {
        var e3 = t4.split(/\./g);
        t4 = "";
        for (var r3 = 0;r3 < e3.length; ++r3)
          if (t4 = r3 > 0 ? t4 + "." + e3[r3] : e3[r3], this.paths.hasOwnProperty(t4) && this.paths[t4] instanceof h.Mixed)
            return this.paths[t4];
        return null;
      }, q.prototype.setupTimestamp = function(t4) {
        return k(this, t4);
      }, q.prototype.queue = function(t4, e3) {
        return this.callQueue.push([t4, e3]), this;
      }, q.prototype.pre = function(t4) {
        if (t4 instanceof RegExp) {
          var e3, r3 = Array.prototype.slice.call(arguments, 1), n2 = u(D);
          try {
            for (n2.s();!(e3 = n2.n()).done; ) {
              var i2 = e3.value;
              t4.test(i2) && this.pre.apply(this, [i2].concat(r3));
            }
          } catch (t5) {
            n2.e(t5);
          } finally {
            n2.f();
          }
          return this;
        }
        if (Array.isArray(t4)) {
          var o2, a2 = Array.prototype.slice.call(arguments, 1), s2 = u(t4);
          try {
            for (s2.s();!(o2 = s2.n()).done; ) {
              var c2 = o2.value;
              this.pre.apply(this, [c2].concat(a2));
            }
          } catch (t5) {
            s2.e(t5);
          } finally {
            s2.f();
          }
          return this;
        }
        return this.s.hooks.pre.apply(this.s.hooks, arguments), this;
      }, q.prototype.post = function(t4) {
        if (t4 instanceof RegExp) {
          var e3, r3 = Array.prototype.slice.call(arguments, 1), n2 = u(D);
          try {
            for (n2.s();!(e3 = n2.n()).done; ) {
              var i2 = e3.value;
              t4.test(i2) && this.post.apply(this, [i2].concat(r3));
            }
          } catch (t5) {
            n2.e(t5);
          } finally {
            n2.f();
          }
          return this;
        }
        if (Array.isArray(t4)) {
          var o2, a2 = Array.prototype.slice.call(arguments, 1), s2 = u(t4);
          try {
            for (s2.s();!(o2 = s2.n()).done; ) {
              var c2 = o2.value;
              this.post.apply(this, [c2].concat(a2));
            }
          } catch (t5) {
            s2.e(t5);
          } finally {
            s2.f();
          }
          return this;
        }
        return this.s.hooks.post.apply(this.s.hooks, arguments), this;
      }, q.prototype.plugin = function(t4, e3) {
        if (typeof t4 != "function")
          throw new Error('First param to `schema.plugin()` must be a function, got "' + s(t4) + '"');
        if (e3 && e3.deduplicate) {
          var r3, n2 = u(this.plugins);
          try {
            for (n2.s();!(r3 = n2.n()).done; )
              if (r3.value.fn === t4)
                return this;
          } catch (t5) {
            n2.e(t5);
          } finally {
            n2.f();
          }
        }
        return this.plugins.push({ fn: t4, opts: e3 }), t4(this, e3), this;
      }, q.prototype.method = function(t4, e3, r3) {
        if (typeof t4 != "string")
          for (var n2 in t4)
            this.methods[n2] = t4[n2], this.methodOptions[n2] = w(r3);
        else
          this.methods[t4] = e3, this.methodOptions[t4] = w(r3);
        return this;
      }, q.prototype.static = function(t4, e3) {
        if (typeof t4 != "string")
          for (var r3 in t4)
            this.statics[r3] = t4[r3];
        else
          this.statics[t4] = e3;
        return this;
      }, q.prototype.index = function(t4, e3) {
        for (var r3 in t4 || (t4 = {}), e3 || (e3 = {}), e3.expires && M.expires(e3), t4)
          this.aliases[r3] && (t4 = M.renameObjKey(t4, r3, this.aliases[r3]));
        for (var n2 = 0, i2 = Object.keys(t4);n2 < i2.length; n2++) {
          var o2 = i2[n2];
          t4[o2] === "ascending" || t4[o2] === "asc" ? t4[o2] = 1 : t4[o2] !== "descending" && t4[o2] !== "desc" || (t4[o2] = -1);
        }
        return this._indexes.push([t4, e3]), this;
      }, q.prototype.set = function(t4, e3, r3) {
        if (arguments.length === 1)
          return this.options[t4];
        switch (t4) {
          case "read":
            typeof e3 == "string" ? this.options[t4] = { mode: $(e3), tags: r3 } : Array.isArray(e3) && typeof e3[0] == "string" ? this.options[t4] = { mode: $(e3[0]), tags: e3[1] } : this.options[t4] = e3, this._userProvidedOptions[t4] = this.options[t4];
            break;
          case "timestamps":
            this.setupTimestamp(e3), this.options[t4] = e3, this._userProvidedOptions[t4] = this.options[t4];
            break;
          case "_id":
            this.options[t4] = e3, this._userProvidedOptions[t4] = this.options[t4], e3 && !this.paths._id ? _(this) : !e3 && this.paths._id != null && this.paths._id.auto && this.remove("_id");
            break;
          default:
            this.options[t4] = e3, this._userProvidedOptions[t4] = this.options[t4];
        }
        return t4 === "strict" && W(this, { strict: e3 }), t4 === "strictQuery" && W(this, { strictQuery: e3 }), t4 === "toObject" && (delete (e3 = o({}, e3)).transform, W(this, { toObject: e3 })), t4 === "toJSON" && (delete (e3 = o({}, e3)).transform, W(this, { toJSON: e3 })), this;
      }, q.prototype.get = function(t4) {
        return this.options[t4];
      };
      var J = "2d 2dsphere hashed text".split(" ");
      function G(t4, e3) {
        var r3, n2 = e3.split("."), i2 = n2.pop(), o2 = t4.tree, a2 = u(n2);
        try {
          for (a2.s();!(r3 = a2.n()).done; )
            o2 = o2[r3.value];
        } catch (t5) {
          a2.e(t5);
        } finally {
          a2.f();
        }
        delete o2[i2];
      }
      function Y(t4) {
        return t4.startsWith("$[") && t4.endsWith("]");
      }
      Object.defineProperty(q, "indexTypes", { get: function() {
        return J;
      }, set: function() {
        throw new Error("Cannot overwrite Schema.indexTypes");
      } }), q.prototype.indexes = function() {
        return j(this);
      }, q.prototype.virtual = function(t4, e3) {
        if (t4 instanceof g || O(t4) === "VirtualType")
          return this.virtual(t4.path, t4.options);
        if (e3 = new v(e3), M.hasUserDefinedProperty(e3, ["ref", "refPath"])) {
          if (e3.localField == null)
            throw new Error("Reference virtuals require `localField` option");
          if (e3.foreignField == null)
            throw new Error("Reference virtuals require `foreignField` option");
          var r3 = this.virtual(t4);
          r3.options = e3, this.pre("init", function(n3, i3) {
            if (x.has(t4, n3)) {
              var o3 = x.get(t4, n3);
              if (this.$$populatedVirtuals || (this.$$populatedVirtuals = {}), e3.justOne || e3.count ? this.$$populatedVirtuals[t4] = Array.isArray(o3) ? o3[0] : o3 : this.$$populatedVirtuals[t4] = Array.isArray(o3) ? o3 : o3 == null ? [] : [o3], i3 != null && i3.hydratedPopulatedDocs && !e3.count) {
                var a3 = r3._getModelNamesForPopulate(this), s3 = this.$$populatedVirtuals[t4];
                if (Array.isArray(s3) || s3.$__ || (a3 == null ? undefined : a3.length) !== 1) {
                  if (Array.isArray(s3) && (a3 == null ? undefined : a3.length) === 1)
                    for (var c3 = this.db.model(a3[0]), u2 = 0;u2 < s3.length; ++u2)
                      s3[u2].$__ || (s3[u2] = c3.hydrate(s3[u2]));
                } else {
                  var f2 = this.db.model(a3[0]);
                  this.$$populatedVirtuals[t4] = f2.hydrate(s3);
                }
              }
              x.unset(t4, n3);
            }
          }), r3.set(function(r4) {
            return this.$$populatedVirtuals || (this.$$populatedVirtuals = {}), P(this.$$populatedVirtuals, t4, r4, e3);
          }), typeof e3.get == "function" && r3.get(e3.get);
          for (var n2 = t4.split("."), i2 = n2[0], o2 = 0;o2 < n2.length - 1; ++o2)
            if (this.paths[i2] != null) {
              if (this.paths[i2].$isMongooseDocumentArray || this.paths[i2].$isSingleNested) {
                var a2 = n2.slice(o2 + 1).join(".");
                this.paths[i2].schema.virtual(a2, e3);
                break;
              }
              i2 += "." + n2[o2 + 1];
            }
          return r3;
        }
        var s2 = this.virtuals, c2 = t4.split(".");
        if (this.pathType(t4) === "real")
          throw new Error('Virtual path "' + t4 + '" conflicts with a real path in the schema');
        return s2[t4] = c2.reduce(function(r4, n3, i3) {
          return r4[n3] || (r4[n3] = i3 === c2.length - 1 ? new g(e3, t4) : {}), r4[n3];
        }, this.tree), s2[t4];
      }, q.prototype.virtualpath = function(t4) {
        return this.virtuals.hasOwnProperty(t4) ? this.virtuals[t4] : null;
      }, q.prototype.remove = function(t4) {
        return typeof t4 == "string" && (t4 = [t4]), Array.isArray(t4) && t4.forEach(function(t5) {
          if (this.path(t5) != null || this.nested[t5]) {
            if (this.nested[t5]) {
              var e3, r3 = u(Object.keys(this.paths).concat(Object.keys(this.nested)));
              try {
                for (r3.s();!(e3 = r3.n()).done; ) {
                  var n2 = e3.value;
                  n2.startsWith(t5 + ".") && (delete this.paths[n2], delete this.nested[n2], G(this, n2));
                }
              } catch (t6) {
                r3.e(t6);
              } finally {
                r3.f();
              }
              return delete this.nested[t5], void G(this, t5);
            }
            delete this.paths[t5], G(this, t5);
          }
        }, this), this;
      }, q.prototype.removeVirtual = function(t4) {
        if (typeof t4 == "string" && (t4 = [t4]), Array.isArray(t4)) {
          var e3, r3 = u(t4);
          try {
            for (r3.s();!(e3 = r3.n()).done; ) {
              var n2 = e3.value;
              if (this.virtuals[n2] == null)
                throw new y('Attempting to remove virtual "'.concat(n2, '" that does not exist.'));
            }
          } catch (t5) {
            r3.e(t5);
          } finally {
            r3.f();
          }
          var i2, o2 = u(t4);
          try {
            for (o2.s();!(i2 = o2.n()).done; ) {
              var a2 = i2.value;
              delete this.paths[a2], delete this.virtuals[a2], a2.indexOf(".") !== -1 ? x.unset(a2, this.tree) : delete this.tree[a2];
            }
          } catch (t5) {
            o2.e(t5);
          } finally {
            o2.f();
          }
        }
        return this;
      }, q.prototype.loadClass = function(t4, e3) {
        return t4 === Object.prototype || t4 === Function.prototype || t4.prototype.hasOwnProperty("$isMongooseModelPrototype") || t4.prototype.hasOwnProperty("$isMongooseDocumentPrototype") || (this.loadClass(Object.getPrototypeOf(t4), e3), e3 || Object.getOwnPropertyNames(t4).forEach(function(e4) {
          if (!e4.match(/^(length|name|prototype|constructor|__proto__)$/)) {
            var r3 = Object.getOwnPropertyDescriptor(t4, e4);
            r3.hasOwnProperty("value") && this.static(e4, r3.value);
          }
        }, this), Object.getOwnPropertyNames(t4.prototype).forEach(function(r3) {
          if (!r3.match(/^(constructor)$/)) {
            var n2 = Object.getOwnPropertyDescriptor(t4.prototype, r3);
            e3 || typeof n2.value == "function" && this.method(r3, n2.value), typeof n2.get == "function" && (this.virtuals[r3] && (this.virtuals[r3].getters = []), this.virtual(r3).get(n2.get)), typeof n2.set == "function" && (this.virtuals[r3] && (this.virtuals[r3].setters = []), this.virtual(r3).set(n2.set));
          }
        }, this)), this;
      }, q.prototype._getSchema = function(t4) {
        var e3 = this.path(t4), r3 = [];
        if (e3)
          return e3.$fullPath = t4, e3;
        for (var n2 = t4.split("."), i2 = 0;i2 < n2.length; ++i2)
          (n2[i2] === "$" || Y(n2[i2])) && (n2[i2] = "0"), U.test(n2[i2]) && (n2[i2] = "$");
        return function t(e4, n3) {
          for (var i3, o2, a2 = e4.length + 1;a2--; )
            if (o2 = e4.slice(0, a2).join("."), i3 = n3.path(o2)) {
              if (r3.push(o2), i3.caster) {
                if (i3.caster instanceof h.Mixed)
                  return i3.caster.$fullPath = r3.join("."), i3.caster;
                if (a2 !== e4.length) {
                  if (a2 + 1 === e4.length && i3.$embeddedSchemaType && (e4[a2] === "$" || Y(e4[a2])))
                    return i3.$embeddedSchemaType;
                  if (i3.schema) {
                    var s2 = undefined;
                    return e4[a2] === "$" || Y(e4[a2]) ? a2 + 1 === e4.length ? i3.$embeddedSchemaType : ((s2 = t(e4.slice(a2 + 1), i3.schema)) && (s2.$parentSchemaDocArray = s2.$parentSchemaDocArray || (i3.schema.$isSingleNested ? null : i3)), s2) : ((s2 = t(e4.slice(a2), i3.schema)) && (s2.$parentSchemaDocArray = s2.$parentSchemaDocArray || (i3.schema.$isSingleNested ? null : i3)), s2);
                  }
                }
              } else if (i3.$isSchemaMap) {
                if (a2 >= e4.length)
                  return i3;
                if (a2 + 1 >= e4.length)
                  return i3.$__schemaType;
                if (i3.$__schemaType instanceof h.Mixed)
                  return i3.$__schemaType;
                if (i3.$__schemaType.schema != null)
                  return t(e4.slice(a2 + 1), i3.$__schemaType.schema);
              }
              return i3.$fullPath = r3.join("."), i3;
            }
        }(n2, this);
      }, q.prototype._getPathType = function(t4) {
        return this.path(t4) ? "real" : function t(e3, r3) {
          for (var n2, i2, o2 = e3.length + 1;o2--; ) {
            if (i2 = e3.slice(0, o2).join("."), n2 = r3.path(i2))
              return n2.caster ? n2.caster instanceof h.Mixed ? { schema: n2, pathType: "mixed" } : o2 !== e3.length && n2.schema ? e3[o2] === "$" || Y(e3[o2]) ? o2 === e3.length - 1 ? { schema: n2, pathType: "nested" } : t(e3.slice(o2 + 1), n2.schema) : t(e3.slice(o2), n2.schema) : { schema: n2, pathType: n2.$isSingleNested ? "nested" : "array" } : { schema: n2, pathType: "real" };
            if (o2 === e3.length && r3.nested[i2])
              return { schema: r3, pathType: "nested" };
          }
          return { schema: n2 || r3, pathType: "undefined" };
        }(t4.split("."), this);
      }, q.prototype._preCompile = function() {
        this.plugin(A, { deduplicate: true });
      }, t3.exports = e2 = q, q.Types = h = r2(2176), e2.ObjectId = h.ObjectId;
    }, 9225: (t3, e2, r2) => {
      function n(t4, e3) {
        (e3 == null || e3 > t4.length) && (e3 = t4.length);
        for (var r3 = 0, n2 = Array(e3);r3 < e3; r3++)
          n2[r3] = t4[r3];
        return n2;
      }
      function i(t4) {
        return i = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, i(t4);
      }
      var o, a, s = r2(1188), c = r2(3180), u = r2(7026), f = r2(2685), l = r2(2319), h = l.CastError, p = r2(1895), d = r2(3164), y = r2(8447), b = r2(1829), m = r2(499), v = r2(7352), g = r2(335), _ = r2(4111).G, w = r2(6951), S = r2(7785), O = Symbol("mongoose#isNestedArray"), j = Object.freeze({});
      function $(t4, e3, n2, i2) {
        a || (a = r2(1148).Embedded);
        var o2, s2, c2 = "type";
        if (i2 && i2.typeKey && (c2 = i2.typeKey), this.schemaOptions = i2, e3) {
          var u2 = {};
          g.isPOJO(e3) && (e3[c2] ? (delete (u2 = b(e3))[c2], e3 = e3[c2]) : e3 = p), n2 != null && n2.ref != null && u2.ref == null && (u2.ref = n2.ref), e3 === Object && (e3 = p);
          var f2 = typeof e3 == "string" ? e3 : g.getFunctionName(e3), h2 = r2(2176), d2 = h2.hasOwnProperty(f2) ? h2[f2] : e3;
          if (this.casterConstructor = d2, this.casterConstructor instanceof $ && (this.casterConstructor[O] = true), typeof d2 != "function" || d2.$isArraySubdocument || d2.$isSchemaMap)
            this.caster = d2, this.caster instanceof a || (this.caster.path = t4);
          else {
            var y2 = this.caster instanceof a ? null : t4;
            this.caster = new d2(y2, u2);
          }
          this.$embeddedSchemaType = this.caster;
        }
        if (this.$isMongooseArray = true, l.call(this, t4, n2, "Array"), this.defaultValue != null && (o2 = this.defaultValue, s2 = typeof o2 == "function"), !("defaultValue" in this) || this.defaultValue != null) {
          var m2 = function() {
            return s2 ? o2.call(this) : o2 != null ? [].concat(o2) : [];
          };
          m2.$runBeforeSetters = !s2, this.default(m2);
        }
      }
      $.schemaName = "Array", $.options = { castNonArrays: true }, $.defaultOptions = {}, $.set = l.set, $.setters = [], $.get = l.get, $.prototype = Object.create(l.prototype), $.prototype.constructor = $, $.prototype.OptionsConstructor = f, $._checkRequired = l.prototype.checkRequired, $.checkRequired = l.checkRequired, $.prototype.checkRequired = function(t4, e3) {
        return i(t4) === "object" && l._isRef(this, t4, e3, true) ? !!t4 : (typeof this.constructor.checkRequired == "function" ? this.constructor.checkRequired() : $.checkRequired())(t4);
      }, $.prototype.enum = function() {
        for (var t4 = this;; ) {
          var e3 = t4 && t4.caster && t4.caster.instance;
          if (e3 !== "Array") {
            if (e3 !== "String" && e3 !== "Number")
              throw new Error("`enum` can only be set on an array of strings or numbers , not " + e3);
            break;
          }
          t4 = t4.caster;
        }
        var r3 = arguments;
        return !Array.isArray(arguments) && g.isObject(arguments) && (r3 = g.object.vals(r3)), t4.caster.enum.apply(t4.caster, r3), this;
      }, $.prototype.applyGetters = function(t4, e3) {
        return e3 != null && e3.$__ != null && e3.$populated(this.path) ? t4 : l.prototype.applyGetters.call(this, t4, e3);
      }, $.prototype._applySetters = function(t4, e3, r3, n2) {
        if (this.casterConstructor.$isMongooseArray && $.options.castNonArrays && !this[O]) {
          for (var i2 = 0, o2 = this;o2 != null && o2.$isMongooseArray && !o2.$isMongooseDocumentArray; )
            ++i2, o2 = o2.casterConstructor;
          if (t4 != null && t4.length !== 0) {
            var a2 = d(t4);
            if (a2.min === a2.max && a2.max < i2 && a2.containsNonArrayItem)
              for (var s2 = a2.max;s2 < i2; ++s2)
                t4 = [t4];
          }
        }
        return l.prototype._applySetters.call(this, t4, e3, r3, n2);
      }, $.prototype.cast = function(t4, e3, n2, i2, a2) {
        var s2, c2;
        if (o || (o = r2(1148).Array), Array.isArray(t4)) {
          if (!t4.length && e3) {
            var u2 = e3.schema.indexedPaths(), f2 = this.path;
            for (s2 = 0, c2 = u2.length;s2 < c2; ++s2) {
              var l2 = u2[s2][0][f2];
              if (l2 === "2dsphere" || l2 === "2d")
                return;
            }
            var d2 = this.path.endsWith(".coordinates") ? this.path.substring(0, this.path.lastIndexOf(".")) : null;
            if (d2 != null) {
              for (s2 = 0, c2 = u2.length;s2 < c2; ++s2)
                if (u2[s2][0][d2] === "2dsphere")
                  return;
            }
          }
          a2 = a2 || j;
          var y2 = g.isMongooseArray(t4) ? t4.__array : t4, b2 = a2.path || this.path;
          if (a2.arrayPathIndex != null && (b2 += "." + a2.arrayPathIndex), y2 = (t4 = o(y2, b2, e3, this)).__array, n2 && e3 != null && e3.$__ != null && e3.$populated(this.path))
            return t4;
          var m2 = this.caster, _2 = m2.$isMongooseArray;
          if (m2 && this.casterConstructor !== p)
            try {
              var w2 = y2.length;
              for (s2 = 0;s2 < w2; s2++) {
                var S2 = {};
                _2 && (a2.arrayPath != null || m2._arrayParentPath != null) && (S2.arrayPathIndex = s2), y2[s2] = m2.applySetters(y2[s2], e3, n2, undefined, S2);
              }
            } catch (e4) {
              throw new h("[" + e4.kind + "]", v.inspect(t4), this.path + "." + s2, e4, this);
            }
          return t4;
        }
        var O2 = this.options.castNonArrays != null ? this.options.castNonArrays : $.options.castNonArrays;
        if (n2 || O2)
          return e3 && n2 && e3.markModified(this.path), this.cast([t4], e3, n2);
        throw new h("Array", v.inspect(t4), this.path, null, this);
      }, $.prototype._castForPopulate = function(t4, e3) {
        if (o || (o = r2(1148).Array), Array.isArray(t4)) {
          var n2, i2 = t4.__array ? t4.__array : t4, a2 = i2.length, s2 = this.caster;
          if (s2 && this.casterConstructor !== p)
            try {
              for (n2 = 0;n2 < a2; n2++) {
                var c2 = {};
                s2.$isMongooseArray && s2._arrayParentPath != null && (c2.arrayPathIndex = n2), i2[n2] = s2.cast(i2[n2], e3, false, undefined, c2);
              }
            } catch (e4) {
              throw new h("[" + e4.kind + "]", v.inspect(t4), this.path + "." + n2, e4, this);
            }
          return t4;
        }
        throw new h("Array", v.inspect(t4), this.path, null, this);
      }, $.prototype.$toObject = $.prototype.toObject, $.prototype.discriminator = function() {
        for (var t4, e3 = this;e3.$isMongooseArray && !e3.$isMongooseDocumentArray; )
          if ((e3 = e3.casterConstructor) == null || typeof e3 == "function")
            throw new u("You can only add an embedded discriminator on a document array, " + this.path + " is a plain array");
        return (t4 = e3).discriminator.apply(t4, arguments);
      }, $.prototype.clone = function() {
        var t4 = Object.assign({}, this.options), e3 = new this.constructor(this.path, this.caster, t4, this.schemaOptions);
        return e3.validators = this.validators.slice(), this.requiredValidator !== undefined && (e3.requiredValidator = this.requiredValidator), e3;
      }, $.prototype._castForQuery = function(t4, e3) {
        var r3 = this, n2 = this.casterConstructor;
        if (t4 && n2.discriminators && n2.schema && n2.schema.options && n2.schema.options.discriminatorKey)
          if (typeof t4[n2.schema.options.discriminatorKey] == "string" && n2.discriminators[t4[n2.schema.options.discriminatorKey]])
            n2 = n2.discriminators[t4[n2.schema.options.discriminatorKey]];
          else {
            var i2 = S(n2.discriminators, t4[n2.schema.options.discriminatorKey]);
            i2 && (n2 = i2);
          }
        var o2 = this.casterConstructor.prototype, a2 = o2 && o2.castForQuery, s2 = o2 && o2.cast, c2 = n2.castForQuery, u2 = this.caster;
        return Array.isArray(t4) ? (this.setters.reverse().forEach(function(e4) {
          t4 = e4.call(r3, t4, r3);
        }), t4 = t4.map(function(t5) {
          return g.isObject(t5) && t5.$elemMatch ? t5 : a2 ? t5 = a2.call(u2, null, t5, e3) : s2 ? t5 = s2.call(u2, t5) : c2 ? t5 = c2.call(u2, null, t5, e3) : t5 != null ? t5 = new n2(t5) : t5;
        })) : a2 ? t4 = a2.call(u2, null, t4, e3) : s2 ? t4 = s2.call(u2, t4) : c2 ? t4 = c2.call(u2, null, t4, e3) : t4 != null && (t4 = new n2(t4)), t4;
      }, $.prototype.castForQuery = function(t4, e3, r3) {
        var n2;
        if (t4 != null) {
          if (!(n2 = this.$conditionalHandlers[t4]))
            throw new Error("Can't use " + t4 + " with Array.");
          return n2.call(this, e3, r3);
        }
        return this._castForQuery(e3, r3);
      };
      var A = $.prototype.$conditionalHandlers = {};
      function E(t4) {
        return function(e3, r3) {
          if (!Array.isArray(e3))
            throw new TypeError("conditional " + t4 + " requires an array");
          var i2, o2 = [], a2 = function(t5, e4) {
            var r4 = typeof Symbol != "undefined" && t5[Symbol.iterator] || t5["@@iterator"];
            if (!r4) {
              if (Array.isArray(t5) || (r4 = function(t6, e5) {
                if (t6) {
                  if (typeof t6 == "string")
                    return n(t6, e5);
                  var r5 = {}.toString.call(t6).slice(8, -1);
                  return r5 === "Object" && t6.constructor && (r5 = t6.constructor.name), r5 === "Map" || r5 === "Set" ? Array.from(t6) : r5 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r5) ? n(t6, e5) : undefined;
                }
              }(t5)) || e4 && t5 && typeof t5.length == "number") {
                r4 && (t5 = r4);
                var i3 = 0, o3 = function() {
                };
                return { s: o3, n: function() {
                  return i3 >= t5.length ? { done: true } : { done: false, value: t5[i3++] };
                }, e: function(t6) {
                  throw t6;
                }, f: o3 };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var a3, s3 = true, c3 = false;
            return { s: function() {
              r4 = r4.call(t5);
            }, n: function() {
              var t6 = r4.next();
              return s3 = t6.done, t6;
            }, e: function(t6) {
              c3 = true, a3 = t6;
            }, f: function() {
              try {
                s3 || r4.return == null || r4.return();
              } finally {
                if (c3)
                  throw a3;
              }
            } };
          }(e3);
          try {
            for (a2.s();!(i2 = a2.n()).done; ) {
              var s2, c2 = i2.value;
              o2.push(y((s2 = this.casterConstructor.schema) !== null && s2 !== undefined ? s2 : r3.schema, c2, null, this && this.$$context));
            }
          } catch (t5) {
            a2.e(t5);
          } finally {
            a2.f();
          }
          return o2;
        };
      }
      A.$all = function(t4, e3) {
        var r3 = this;
        return Array.isArray(t4) || (t4 = [t4]), t4 = t4.map(function(t5) {
          if (!g.isObject(t5))
            return t5;
          if (t5.$elemMatch != null)
            return { $elemMatch: y(r3.casterConstructor.schema, t5.$elemMatch, null, r3 && r3.$$context) };
          var e4 = {};
          return e4[r3.path] = t5, y(r3.casterConstructor.schema, e4, null, r3 && r3.$$context)[r3.path];
        }, this), this.castForQuery(null, t4, e3);
      }, A.$options = String, A.$elemMatch = function(t4, e3) {
        for (var r3 = Object.keys(t4), n2 = r3.length, i2 = 0;i2 < n2; ++i2) {
          var o2 = r3[i2], a2 = t4[o2];
          m(o2) && a2 != null && (t4[o2] = this.castForQuery(o2, a2, e3));
        }
        return t4;
      }, A.$geoIntersects = w.cast$geoIntersects, A.$or = E("$or"), A.$and = E("$and"), A.$nor = E("$nor"), A.$near = A.$nearSphere = w.cast$near, A.$within = A.$geoWithin = w.cast$within, A.$size = A.$minDistance = A.$maxDistance = _, A.$exists = s, A.$type = c, A.$eq = A.$gt = A.$gte = A.$lt = A.$lte = A.$not = A.$regex = A.$ne = $.prototype._castForQuery, A.$nin = l.prototype.$conditionalHandlers.$nin, A.$in = l.prototype.$conditionalHandlers.$in, t3.exports = $;
    }, 4725: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4, e3) {
        var r3 = Object.keys(t4);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(t4);
          e3 && (n2 = n2.filter(function(e4) {
            return Object.getOwnPropertyDescriptor(t4, e4).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function o(t4) {
        for (var e3 = 1;e3 < arguments.length; e3++) {
          var r3 = arguments[e3] != null ? arguments[e3] : {};
          e3 % 2 ? i(Object(r3), true).forEach(function(e4) {
            a(t4, e4, r3[e4]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(r3)) : i(Object(r3)).forEach(function(e4) {
            Object.defineProperty(t4, e4, Object.getOwnPropertyDescriptor(r3, e4));
          });
        }
        return t4;
      }
      function a(t4, e3, r3) {
        return (e3 = function(t5) {
          var e4 = function(t6) {
            if (n(t6) != "object" || !t6)
              return t6;
            var e5 = t6[Symbol.toPrimitive];
            if (e5 !== undefined) {
              var r4 = e5.call(t6, "string");
              if (n(r4) != "object")
                return r4;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t6);
          }(t5);
          return n(e4) == "symbol" ? e4 : e4 + "";
        }(e3)) in t4 ? Object.defineProperty(t4, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t4[e3] = r3, t4;
      }
      var s = r2(6148), c = r2(2319), u = r2(6237);
      function f(t4, e3) {
        c.call(this, t4, e3, "BigInt");
      }
      function l(t4, e3) {
        return this.castForQuery(null, t4, e3);
      }
      f.schemaName = "BigInt", f.defaultOptions = {}, f.prototype = Object.create(c.prototype), f.prototype.constructor = f, f._cast = u, f.set = c.set, f.setters = [], f.get = c.get, f.cast = function(t4) {
        return arguments.length === 0 || (t4 === false && (t4 = this._defaultCaster), this._cast = t4), this._cast;
      }, f._checkRequired = function(t4) {
        return t4 != null;
      }, f.checkRequired = c.checkRequired, f.prototype.checkRequired = function(t4) {
        return this.constructor._checkRequired(t4);
      }, f.prototype.cast = function(t4) {
        var e3;
        e3 = typeof this._castFunction == "function" ? this._castFunction : typeof this.constructor.cast == "function" ? this.constructor.cast() : f.cast();
        try {
          return e3(t4);
        } catch (e4) {
          throw new s("BigInt", t4, this.path, e4, this);
        }
      }, f.$conditionalHandlers = o(o({}, c.prototype.$conditionalHandlers), {}, { $gt: l, $gte: l, $lt: l, $lte: l }), f.prototype.castForQuery = function(t4, e3, r3) {
        var n2;
        if (t4 != null)
          return (n2 = f.$conditionalHandlers[t4]) ? n2.call(this, e3) : this.applySetters(null, e3, r3);
        try {
          return this.applySetters(e3, r3);
        } catch (t5) {
          throw t5 instanceof s && t5.path === this.path && this.$fullPath != null && (t5.path = this.$fullPath), t5;
        }
      }, f.prototype._castNullish = function(t4) {
        return t4 === undefined || (typeof this.constructor.cast == "function" ? this.constructor.cast() : f.cast()), t4;
      }, t3.exports = f;
    }, 7116: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4, e3) {
        var r3 = Object.keys(t4);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(t4);
          e3 && (n2 = n2.filter(function(e4) {
            return Object.getOwnPropertyDescriptor(t4, e4).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function o(t4, e3, r3) {
        return (e3 = function(t5) {
          var e4 = function(t6) {
            if (n(t6) != "object" || !t6)
              return t6;
            var e5 = t6[Symbol.toPrimitive];
            if (e5 !== undefined) {
              var r4 = e5.call(t6, "string");
              if (n(r4) != "object")
                return r4;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t6);
          }(t5);
          return n(e4) == "symbol" ? e4 : e4 + "";
        }(e3)) in t4 ? Object.defineProperty(t4, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t4[e3] = r3, t4;
      }
      var a = r2(6148), s = r2(2319), c = r2(7092);
      function u(t4, e3) {
        s.call(this, t4, e3, "Boolean");
      }
      u.schemaName = "Boolean", u.defaultOptions = {}, u.prototype = Object.create(s.prototype), u.prototype.constructor = u, u._cast = c, u.set = s.set, u.setters = [], u.get = s.get, u.cast = function(t4) {
        return arguments.length === 0 || (t4 === false && (t4 = this._defaultCaster), this._cast = t4), this._cast;
      }, u._defaultCaster = function(t4) {
        if (t4 != null && typeof t4 != "boolean")
          throw new Error;
        return t4;
      }, u._checkRequired = function(t4) {
        return t4 === true || t4 === false;
      }, u.checkRequired = s.checkRequired, u.prototype.checkRequired = function(t4) {
        return this.constructor._checkRequired(t4);
      }, Object.defineProperty(u, "convertToTrue", { get: function() {
        return c.convertToTrue;
      }, set: function(t4) {
        c.convertToTrue = t4;
      } }), Object.defineProperty(u, "convertToFalse", { get: function() {
        return c.convertToFalse;
      }, set: function(t4) {
        c.convertToFalse = t4;
      } }), u.prototype.cast = function(t4) {
        var e3;
        e3 = typeof this._castFunction == "function" ? this._castFunction : typeof this.constructor.cast == "function" ? this.constructor.cast() : u.cast();
        try {
          return e3(t4);
        } catch (e4) {
          throw new a("Boolean", t4, this.path, e4, this);
        }
      }, u.$conditionalHandlers = function(t4) {
        for (var e3 = 1;e3 < arguments.length; e3++) {
          var r3 = arguments[e3] != null ? arguments[e3] : {};
          e3 % 2 ? i(Object(r3), true).forEach(function(e4) {
            o(t4, e4, r3[e4]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(r3)) : i(Object(r3)).forEach(function(e4) {
            Object.defineProperty(t4, e4, Object.getOwnPropertyDescriptor(r3, e4));
          });
        }
        return t4;
      }({}, s.prototype.$conditionalHandlers), u.prototype.castForQuery = function(t4, e3, r3) {
        var n2;
        if (t4 != null)
          return (n2 = u.$conditionalHandlers[t4]) ? n2.call(this, e3) : this.applySetters(null, e3, r3);
        try {
          return this.applySetters(e3, r3);
        } catch (t5) {
          throw t5 instanceof a && t5.path === this.path && this.$fullPath != null && (t5.path = this.$fullPath), t5;
        }
      }, u.prototype._castNullish = function(t4) {
        if (t4 === undefined)
          return t4;
        var e3 = typeof this.constructor.cast == "function" ? this.constructor.cast() : u.cast();
        return e3 == null ? t4 : !(e3.convertToFalse instanceof Set && e3.convertToFalse.has(t4)) && (!!(e3.convertToTrue instanceof Set && e3.convertToTrue.has(t4)) || t4);
      }, t3.exports = u;
    }, 1792: (t3, e2, r2) => {
      var n = r2(5832).Buffer;
      function i(t4, e3) {
        var r3 = Object.keys(t4);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(t4);
          e3 && (n2 = n2.filter(function(e4) {
            return Object.getOwnPropertyDescriptor(t4, e4).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function o(t4) {
        for (var e3 = 1;e3 < arguments.length; e3++) {
          var r3 = arguments[e3] != null ? arguments[e3] : {};
          e3 % 2 ? i(Object(r3), true).forEach(function(e4) {
            a(t4, e4, r3[e4]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(r3)) : i(Object(r3)).forEach(function(e4) {
            Object.defineProperty(t4, e4, Object.getOwnPropertyDescriptor(r3, e4));
          });
        }
        return t4;
      }
      function a(t4, e3, r3) {
        return (e3 = function(t5) {
          var e4 = function(t6) {
            if (s(t6) != "object" || !t6)
              return t6;
            var e5 = t6[Symbol.toPrimitive];
            if (e5 !== undefined) {
              var r4 = e5.call(t6, "string");
              if (s(r4) != "object")
                return r4;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t6);
          }(t5);
          return s(e4) == "symbol" ? e4 : e4 + "";
        }(e3)) in t4 ? Object.defineProperty(t4, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t4[e3] = r3, t4;
      }
      function s(t4) {
        return s = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, s(t4);
      }
      var c = r2(9820), u = r2(3958), f = r2(2319), l = r2(133), h = r2(335), p = c.Binary, d = f.CastError;
      function y(t4, e3) {
        f.call(this, t4, e3, "Buffer");
      }
      function b(t4, e3) {
        return this.castForQuery(null, t4, e3);
      }
      y.schemaName = "Buffer", y.defaultOptions = {}, y.prototype = Object.create(f.prototype), y.prototype.constructor = y, y.prototype.OptionsConstructor = u, y._checkRequired = function(t4) {
        return !(!t4 || !t4.length);
      }, y.set = f.set, y.setters = [], y.get = f.get, y.checkRequired = f.checkRequired, y.prototype.checkRequired = function(t4, e3) {
        return f._isRef(this, t4, e3, true) ? !!t4 : this.constructor._checkRequired(t4);
      }, y.prototype.cast = function(t4, e3, r3) {
        var i2;
        if (f._isRef(this, t4, e3, r3)) {
          if (t4 && t4.isMongooseBuffer)
            return t4;
          if (n.isBuffer(t4))
            return t4 && t4.isMongooseBuffer || (t4 = new c(t4, [this.path, e3]), this.options.subtype != null && (t4._subtype = this.options.subtype)), t4;
          if (t4 instanceof p) {
            if (i2 = new c(t4.value(true), [this.path, e3]), typeof t4.sub_type != "number")
              throw new d("Buffer", t4, this.path, null, this);
            return i2._subtype = t4.sub_type, i2;
          }
          if (t4 == null || h.isNonBuiltinObject(t4))
            return this._castRef(t4, e3, r3);
        }
        if (t4 && t4._id && (t4 = t4._id), t4 && t4.isMongooseBuffer)
          return t4;
        if (n.isBuffer(t4))
          return t4 && t4.isMongooseBuffer || (t4 = new c(t4, [this.path, e3]), this.options.subtype != null && (t4._subtype = this.options.subtype)), t4;
        if (t4 instanceof p) {
          if (i2 = new c(t4.value(true), [this.path, e3]), typeof t4.sub_type != "number")
            throw new d("Buffer", t4, this.path, null, this);
          return i2._subtype = t4.sub_type, i2;
        }
        if (t4 === null)
          return t4;
        var o2 = s(t4);
        if (o2 === "string" || o2 === "number" || Array.isArray(t4) || o2 === "object" && t4.type === "Buffer" && Array.isArray(t4.data))
          return o2 === "number" && (t4 = [t4]), i2 = new c(t4, [this.path, e3]), this.options.subtype != null && (i2._subtype = this.options.subtype), i2;
        if (h.isPOJO(t4) && (t4.$binary instanceof p || typeof t4.$binary == "string")) {
          var a2 = this.cast(n.from(t4.$binary, "base64"));
          if (t4.$type != null)
            return a2._subtype = t4.$type, a2;
        }
        throw new d("Buffer", t4, this.path, null, this);
      }, y.prototype.subtype = function(t4) {
        return this.options.subtype = t4, this;
      }, y.prototype.$conditionalHandlers = o(o({}, f.prototype.$conditionalHandlers), {}, { $bitsAllClear: l, $bitsAnyClear: l, $bitsAllSet: l, $bitsAnySet: l, $gt: b, $gte: b, $lt: b, $lte: b }), y.prototype.castForQuery = function(t4, e3, r3) {
        var n2, i2;
        if (t4 != null) {
          if (!(n2 = this.$conditionalHandlers[t4]))
            throw new Error("Can't use " + t4 + " with Buffer.");
          return n2.call(this, e3);
        }
        try {
          i2 = this.applySetters(e3, r3);
        } catch (t5) {
          throw t5 instanceof d && t5.path === this.path && this.$fullPath != null && (t5.path = this.$fullPath), t5;
        }
        return i2 ? i2.toObject({ transform: false, virtuals: false }) : i2;
      }, t3.exports = y;
    }, 7386: (t3, e2, r2) => {
      function n(t4, e3) {
        var r3 = Object.keys(t4);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(t4);
          e3 && (n2 = n2.filter(function(e4) {
            return Object.getOwnPropertyDescriptor(t4, e4).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function i(t4) {
        for (var e3 = 1;e3 < arguments.length; e3++) {
          var r3 = arguments[e3] != null ? arguments[e3] : {};
          e3 % 2 ? n(Object(r3), true).forEach(function(e4) {
            o(t4, e4, r3[e4]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(r3)) : n(Object(r3)).forEach(function(e4) {
            Object.defineProperty(t4, e4, Object.getOwnPropertyDescriptor(r3, e4));
          });
        }
        return t4;
      }
      function o(t4, e3, r3) {
        return (e3 = function(t5) {
          var e4 = function(t6) {
            if (a(t6) != "object" || !t6)
              return t6;
            var e5 = t6[Symbol.toPrimitive];
            if (e5 !== undefined) {
              var r4 = e5.call(t6, "string");
              if (a(r4) != "object")
                return r4;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t6);
          }(t5);
          return a(e4) == "symbol" ? e4 : e4 + "";
        }(e3)) in t4 ? Object.defineProperty(t4, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t4[e3] = r3, t4;
      }
      function a(t4) {
        return a = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, a(t4);
      }
      var s = r2(9507), c = r2(7236), u = r2(2319), f = r2(9973), l = r2(5857), h = r2(335), p = u.CastError;
      function d(t4, e3) {
        u.call(this, t4, e3, "Date");
      }
      function y(t4) {
        return this.cast(t4);
      }
      d.schemaName = "Date", d.defaultOptions = {}, d.prototype = Object.create(u.prototype), d.prototype.constructor = d, d.prototype.OptionsConstructor = c, d._cast = f, d.set = u.set, d.setters = [], d.get = u.get, d.cast = function(t4) {
        return arguments.length === 0 || (t4 === false && (t4 = this._defaultCaster), this._cast = t4), this._cast;
      }, d._defaultCaster = function(t4) {
        if (t4 != null && !(t4 instanceof Date))
          throw new Error;
        return t4;
      }, d.prototype.expires = function(t4) {
        return l(this._index) !== "Object" && (this._index = {}), this._index.expires = t4, h.expires(this._index), this;
      }, d._checkRequired = function(t4) {
        return t4 instanceof Date;
      }, d.checkRequired = u.checkRequired, d.prototype.checkRequired = function(t4, e3) {
        return a(t4) === "object" && u._isRef(this, t4, e3, true) ? t4 != null : (typeof this.constructor.checkRequired == "function" ? this.constructor.checkRequired() : d.checkRequired())(t4);
      }, d.prototype.min = function(t4, e3) {
        if (this.minValidator && (this.validators = this.validators.filter(function(t5) {
          return t5.validator !== this.minValidator;
        }, this)), t4) {
          var r3 = e3 || s.messages.Date.min;
          typeof r3 == "string" && (r3 = r3.replace(/{MIN}/, t4 === Date.now ? "Date.now()" : t4.toString()));
          var n2 = this;
          this.validators.push({ validator: this.minValidator = function(e4) {
            var r4 = t4;
            typeof t4 == "function" && t4 !== Date.now && (r4 = r4.call(this));
            var i2 = r4 === Date.now ? r4() : n2.cast(r4);
            return e4 === null || e4.valueOf() >= i2.valueOf();
          }, message: r3, type: "min", min: t4 });
        }
        return this;
      }, d.prototype.max = function(t4, e3) {
        if (this.maxValidator && (this.validators = this.validators.filter(function(t5) {
          return t5.validator !== this.maxValidator;
        }, this)), t4) {
          var r3 = e3 || s.messages.Date.max;
          typeof r3 == "string" && (r3 = r3.replace(/{MAX}/, t4 === Date.now ? "Date.now()" : t4.toString()));
          var n2 = this;
          this.validators.push({ validator: this.maxValidator = function(e4) {
            var r4 = t4;
            typeof r4 == "function" && r4 !== Date.now && (r4 = r4.call(this));
            var i2 = r4 === Date.now ? r4() : n2.cast(r4);
            return e4 === null || e4.valueOf() <= i2.valueOf();
          }, message: r3, type: "max", max: t4 });
        }
        return this;
      }, d.prototype.cast = function(t4) {
        var e3;
        e3 = typeof this._castFunction == "function" ? this._castFunction : typeof this.constructor.cast == "function" ? this.constructor.cast() : d.cast();
        try {
          return e3(t4);
        } catch (e4) {
          throw new p("date", t4, this.path, e4, this);
        }
      }, d.prototype.$conditionalHandlers = i(i({}, u.prototype.$conditionalHandlers), {}, { $gt: y, $gte: y, $lt: y, $lte: y }), d.prototype.castForQuery = function(t4, e3, r3) {
        if (t4 == null)
          try {
            return this.applySetters(e3, r3);
          } catch (t5) {
            throw t5 instanceof p && t5.path === this.path && this.$fullPath != null && (t5.path = this.$fullPath), t5;
          }
        var n2 = this.$conditionalHandlers[t4];
        if (!n2)
          throw new Error("Can't use " + t4 + " with Date.");
        return n2.call(this, e3);
      }, t3.exports = d;
    }, 8598: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4, e3) {
        var r3 = Object.keys(t4);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(t4);
          e3 && (n2 = n2.filter(function(e4) {
            return Object.getOwnPropertyDescriptor(t4, e4).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function o(t4) {
        for (var e3 = 1;e3 < arguments.length; e3++) {
          var r3 = arguments[e3] != null ? arguments[e3] : {};
          e3 % 2 ? i(Object(r3), true).forEach(function(e4) {
            a(t4, e4, r3[e4]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(r3)) : i(Object(r3)).forEach(function(e4) {
            Object.defineProperty(t4, e4, Object.getOwnPropertyDescriptor(r3, e4));
          });
        }
        return t4;
      }
      function a(t4, e3, r3) {
        return (e3 = function(t5) {
          var e4 = function(t6) {
            if (n(t6) != "object" || !t6)
              return t6;
            var e5 = t6[Symbol.toPrimitive];
            if (e5 !== undefined) {
              var r4 = e5.call(t6, "string");
              if (n(r4) != "object")
                return r4;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t6);
          }(t5);
          return n(e4) == "symbol" ? e4 : e4 + "";
        }(e3)) in t4 ? Object.defineProperty(t4, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t4[e3] = r3, t4;
      }
      var s = r2(2319), c = s.CastError, u = r2(3854), f = r2(2128);
      function l(t4, e3) {
        s.call(this, t4, e3, "Decimal128");
      }
      function h(t4) {
        return this.cast(t4);
      }
      l.schemaName = "Decimal128", l.defaultOptions = {}, l.prototype = Object.create(s.prototype), l.prototype.constructor = l, l._cast = u, l.set = s.set, l.setters = [], l.get = s.get, l.cast = function(t4) {
        return arguments.length === 0 || (t4 === false && (t4 = this._defaultCaster), this._cast = t4), this._cast;
      }, l._defaultCaster = function(t4) {
        if (t4 != null && !f(t4, "Decimal128"))
          throw new Error;
        return t4;
      }, l._checkRequired = function(t4) {
        return f(t4, "Decimal128");
      }, l.checkRequired = s.checkRequired, l.prototype.checkRequired = function(t4, e3) {
        return s._isRef(this, t4, e3, true) ? !!t4 : (typeof this.constructor.checkRequired == "function" ? this.constructor.checkRequired() : l.checkRequired())(t4);
      }, l.prototype.cast = function(t4, e3, r3) {
        if (s._isRef(this, t4, e3, r3))
          return f(t4, "Decimal128") ? t4 : this._castRef(t4, e3, r3);
        var n2;
        n2 = typeof this._castFunction == "function" ? this._castFunction : typeof this.constructor.cast == "function" ? this.constructor.cast() : l.cast();
        try {
          return n2(t4);
        } catch (e4) {
          throw new c("Decimal128", t4, this.path, e4, this);
        }
      }, l.prototype.$conditionalHandlers = o(o({}, s.prototype.$conditionalHandlers), {}, { $gt: h, $gte: h, $lt: h, $lte: h }), t3.exports = l;
    }, 9970: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4, e3) {
        var r3 = Object.keys(t4);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(t4);
          e3 && (n2 = n2.filter(function(e4) {
            return Object.getOwnPropertyDescriptor(t4, e4).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function o(t4, e3, r3) {
        return (e3 = function(t5) {
          var e4 = function(t6) {
            if (n(t6) != "object" || !t6)
              return t6;
            var e5 = t6[Symbol.toPrimitive];
            if (e5 !== undefined) {
              var r4 = e5.call(t6, "string");
              if (n(r4) != "object")
                return r4;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t6);
          }(t5);
          return n(e4) == "symbol" ? e4 : e4 + "";
        }(e3)) in t4 ? Object.defineProperty(t4, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t4[e3] = r3, t4;
      }
      var a, s, c = r2(6148), u = r2(2512), f = r2(3550).EventEmitter, l = r2(9225), h = r2(4172), p = r2(2319), d = r2(8447), y = r2(8650), b = r2(5962), m = r2(8145), v = r2(499), g = r2(335), _ = r2(371), w = r2(9662), S = r2(5625).arrayAtomicsSymbol, O = r2(5625).arrayPathSymbol, j = r2(5625).documentArrayParent;
      function $(t4, e3, r3, n2) {
        if (e3.options && e3.options.timeseries)
          throw new w(t4, "timeseries");
        var i2 = $.defaultOptions && $.defaultOptions._id;
        i2 != null && ((n2 = n2 || {})._id = i2), n2 != null && n2._id != null ? e3 = b(e3, n2) : r3 != null && r3._id != null && (e3 = b(e3, r3));
        var o2 = A(e3, r3);
        o2.prototype.$basePath = t4, l.call(this, t4, o2, r3), this.schema = e3, this.schemaOptions = n2 || {}, this.$isMongooseDocumentArray = true, this.Constructor = o2, o2.base = e3.base;
        var a2 = this.defaultValue;
        "defaultValue" in this && a2 == null || this.default(function() {
          var t5 = a2.call(this);
          return t5 == null || Array.isArray(t5) || (t5 = [t5]), t5;
        }), this.$embeddedSchemaType = new u(t4 + ".$", { required: this && this.schemaOptions && this.schemaOptions.required || false, $parentSchemaType: this }), this.$embeddedSchemaType.caster = this.Constructor, this.$embeddedSchemaType.schema = this.schema;
      }
      function A(t4, e3, n2) {
        function i2() {
          s.apply(this, arguments), this.__parentArray != null && this.__parentArray.getArrayParent() != null && this.$session(this.__parentArray.getArrayParent().$session());
        }
        s || (s = r2(8578)), t4._preCompile();
        var o2 = n2 != null ? n2.prototype : s.prototype;
        for (var a2 in i2.prototype = Object.create(o2), i2.prototype.$__setSchema(t4), i2.schema = t4, i2.prototype.constructor = i2, i2.$isArraySubdocument = true, i2.events = new f, i2.base = t4.base, t4.methods)
          i2.prototype[a2] = t4.methods[a2];
        for (var c2 in t4.statics)
          i2[c2] = t4.statics[c2];
        for (var u2 in f.prototype)
          i2[u2] = f.prototype[u2];
        return i2.options = e3, i2;
      }
      $.schemaName = "DocumentArray", $.options = { castNonArrays: true }, $.prototype = Object.create(l.prototype), $.prototype.constructor = $, $.prototype.OptionsConstructor = h, $.prototype.$conditionalHandlers = function(t4) {
        for (var e3 = 1;e3 < arguments.length; e3++) {
          var r3 = arguments[e3] != null ? arguments[e3] : {};
          e3 % 2 ? i(Object(r3), true).forEach(function(e4) {
            o(t4, e4, r3[e4]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(r3)) : i(Object(r3)).forEach(function(e4) {
            Object.defineProperty(t4, e4, Object.getOwnPropertyDescriptor(r3, e4));
          });
        }
        return t4;
      }({}, l.prototype.$conditionalHandlers), $.prototype.discriminator = function(t4, e3, r3) {
        var n2;
        typeof t4 == "function" && (t4 = g.getFunctionName(t4)), r3 = r3 || {};
        var i2 = g.isPOJO(r3) ? r3.value : r3, o2 = typeof r3.clone != "boolean" || r3.clone;
        e3.instanceOfSchema && o2 && (e3 = e3.clone());
        var a2 = A(e3 = y(this.casterConstructor, t4, e3, i2, null, null, (n2 = r3) === null || n2 === undefined ? undefined : n2.overwriteExisting), null, this.casterConstructor);
        a2.baseCasterConstructor = this.casterConstructor;
        try {
          Object.defineProperty(a2, "name", { value: t4 });
        } catch (t5) {
        }
        return this.casterConstructor.discriminators[t4] = a2, this.casterConstructor.discriminators[t4];
      }, $.prototype.doValidate = function(t4, e3, n2, i2) {
        a || (a = r2(4941));
        var o2 = this;
        try {
          p.prototype.doValidate.call(this, t4, function(r3) {
            if (r3)
              return e3(r3);
            var c2, u2 = t4 && t4.length;
            if (!u2)
              return e3();
            if (i2 && i2.updateValidator)
              return e3();
            function f2(t5) {
              t5 != null && (c2 = t5), --u2 || e3(c2);
            }
            g.isMongooseDocumentArray(t4) || (t4 = new a(t4, o2.path, n2));
            for (var l2 = 0, h2 = u2;l2 < h2; ++l2) {
              var p2 = t4[l2];
              if (p2 != null) {
                if (!(p2 instanceof s)) {
                  var d2 = _(o2.casterConstructor, t4[l2]);
                  p2 = t4[l2] = new d2(p2, t4, undefined, undefined, l2);
                }
                i2 == null || !i2.validateModifiedOnly || p2.$isModified() ? p2.$__validate(null, i2, f2) : --u2 || e3(c2);
              } else
                --u2 || e3(c2);
            }
          }, n2);
        } catch (t5) {
          return e3(t5);
        }
      }, $.prototype.doValidateSync = function(t4, e3, r3) {
        var n2 = p.prototype.doValidateSync.call(this, t4, e3);
        if (n2 != null)
          return n2;
        var i2 = t4 && t4.length, o2 = null;
        if (i2) {
          for (var a2 = 0, c2 = i2;a2 < c2; ++a2) {
            var u2 = t4[a2];
            if (u2) {
              if (!(u2 instanceof s)) {
                var f2 = _(this.casterConstructor, t4[a2]);
                u2 = t4[a2] = new f2(u2, t4, undefined, undefined, a2);
              }
              if (r3 == null || !r3.validateModifiedOnly || u2.$isModified()) {
                var l2 = u2.validateSync(r3);
                l2 && o2 == null && (o2 = l2);
              }
            }
          }
          return o2;
        }
      }, $.prototype.getDefault = function(t4, e3, n2) {
        var i2 = typeof this.defaultValue == "function" ? this.defaultValue.call(t4) : this.defaultValue;
        if (i2 == null)
          return i2;
        if (n2 && n2.skipCast)
          return i2;
        a || (a = r2(4941)), Array.isArray(i2) || (i2 = [i2]), i2 = new a(i2, this.path, t4);
        for (var o2 = 0;o2 < i2.length; ++o2) {
          var s2 = new (_(this.casterConstructor, i2[o2]))({}, i2, undefined, undefined, o2);
          s2.$init(i2[o2]), s2.isNew = true, Object.assign(s2.$__.activePaths.default, s2.$__.activePaths.init), s2.$__.activePaths.init = {}, i2[o2] = s2;
        }
        return i2;
      };
      var E = Object.freeze({ transform: false, virtuals: false }), x = Object.freeze({ skipId: false, willInit: true });
      function P(t4, e3, r3) {
        if (r3 && e3) {
          for (var n2, i2, o2, a2 = t4.path + ".", s2 = Object.keys(e3), c2 = s2.length, u2 = {};c2--; )
            if ((i2 = s2[c2]).startsWith(a2)) {
              if ((o2 = i2.substring(a2.length)) === "$")
                continue;
              o2.startsWith("$.") && (o2 = o2.substring(2)), n2 || (n2 = true), u2[o2] = e3[i2];
            }
          return n2 && u2 || undefined;
        }
      }
      $.prototype.cast = function(t4, e3, n2, i2, o2) {
        if (a || (a = r2(4941)), t4 != null && t4[O] != null && t4 === i2)
          return t4;
        var u2, f2, l2 = (o2 = o2 || {}).path || this.path;
        if (!Array.isArray(t4)) {
          if (!n2 && !$.options.castNonArrays)
            throw new c("DocumentArray", t4, this.path, null, this);
          return e3 && n2 && e3.markModified(l2), this.cast([t4], e3, n2, i2, o2);
        }
        o2.skipDocumentArrayCast && !g.isMongooseDocumentArray(t4) || (t4 = new a(t4, l2, e3)), i2 != null && (t4[S] = i2[S] || {}), o2.arrayPathIndex != null && (t4[O] = l2 + "." + o2.arrayPathIndex);
        for (var h2 = g.isMongooseDocumentArray(t4) ? t4.__array : t4, p2 = h2.length, d2 = 0;d2 < p2; ++d2)
          if (h2[d2]) {
            var y2 = _(this.casterConstructor, h2[d2]), b2 = m(h2[d2], true);
            if (h2[d2] !== b2 && (h2[d2] = b2), h2[d2] instanceof s) {
              if (h2[d2][j] !== e3)
                if (n2) {
                  var v2 = new y2(null, t4, x, u2, d2);
                  h2[d2] = v2.$init(h2[d2]);
                } else {
                  var w2 = new y2(h2[d2], t4, undefined, undefined, d2);
                  h2[d2] = w2;
                }
              h2[d2].__index == null && h2[d2].$setIndex(d2);
            } else if (h2[d2] != null)
              if (n2)
                e3 ? u2 || (u2 = P(this, e3.$__.selected, n2)) : u2 = true, f2 = new y2(null, t4, x, u2, d2), h2[d2] = f2.$init(h2[d2]);
              else if (i2 && typeof i2.id == "function" && (f2 = i2.id(h2[d2]._id)), i2 && f2 && g.deepEqual(f2.toObject(E), h2[d2]))
                f2.set(h2[d2]), h2[d2] = f2;
              else
                try {
                  f2 = new y2(h2[d2], t4, undefined, undefined, d2), h2[d2] = f2;
                } catch (e4) {
                  throw new c("embedded", h2[d2], t4[O], e4, this);
                }
          }
        return t4;
      }, $.prototype.clone = function() {
        var t4 = Object.assign({}, this.options), e3 = new this.constructor(this.path, this.schema, t4, this.schemaOptions);
        return e3.validators = this.validators.slice(), this.requiredValidator !== undefined && (e3.requiredValidator = this.requiredValidator), e3.Constructor.discriminators = Object.assign({}, this.Constructor.discriminators), e3;
      }, $.prototype.applyGetters = function(t4, e3) {
        return p.prototype.applyGetters.call(this, t4, e3);
      }, $.defaultOptions = {}, $.set = p.set, $.setters = [], $.get = p.get, $.prototype.$conditionalHandlers.$elemMatch = function(t4, e3) {
        for (var r3, n2 = Object.keys(t4), i2 = n2.length, o2 = 0;o2 < i2; ++o2) {
          var a2 = n2[o2], s2 = t4[a2];
          v(a2) && s2 != null && (t4[a2] = this.castForQuery(a2, s2, e3));
        }
        var c2 = this && this.casterConstructor && this.casterConstructor.schema && this.casterConstructor.schema.options && this.casterConstructor.schema.options.discriminatorKey, u2 = this && this.casterConstructor && this.casterConstructor.schema && this.casterConstructor.schema.discriminators || {};
        if (c2 != null && t4[c2] != null && u2[t4[c2]] != null)
          return d(u2[t4[c2]], t4, null, this && this.$$context);
        var f2 = (r3 = this.casterConstructor.schema) !== null && r3 !== undefined ? r3 : e3.schema;
        return d(f2, t4, null, this && this.$$context);
      }, t3.exports = $;
    }, 2512: (t3, e2, r2) => {
      var n = r2(7026), i = r2(2319), o = r2(963), a = r2(371);
      function s(t4, e3) {
        if (this.$parentSchemaType = e3 && e3.$parentSchemaType, !this.$parentSchemaType)
          throw new n("Cannot create DocumentArrayElement schematype without a parent");
        delete e3.$parentSchemaType, i.call(this, t4, e3, "DocumentArrayElement"), this.$isMongooseDocumentArrayElement = true;
      }
      s.schemaName = "DocumentArrayElement", s.defaultOptions = {}, s.prototype = Object.create(i.prototype), s.prototype.constructor = s, s.prototype.cast = function() {
        var t4;
        return (t4 = this.$parentSchemaType).cast.apply(t4, arguments)[0];
      }, s.prototype.doValidate = function(t4, e3, r3, n2) {
        var i2 = a(this.caster, t4);
        return !t4 || t4 instanceof i2 || (t4 = new i2(t4, r3, null, null, n2 && n2.index != null ? n2.index : null)), o.prototype.doValidate.call(this, t4, e3, r3, n2);
      }, s.prototype.clone = function() {
        this.options.$parentSchemaType = this.$parentSchemaType;
        var t4 = i.prototype.clone.apply(this, arguments);
        return delete this.options.$parentSchemaType, t4.caster = this.caster, t4.schema = this.schema, t4;
      }, t3.exports = s;
    }, 2176: (t3, e2, r2) => {
      e2.Array = r2(9225), e2.BigInt = r2(4725), e2.Boolean = r2(7116), e2.Buffer = r2(1792), e2.Date = r2(7386), e2.Decimal128 = e2.Decimal = r2(8598), e2.DocumentArray = r2(9970), e2.Map = r2(5690), e2.Mixed = r2(1895), e2.Number = r2(8191), e2.ObjectId = r2(9476), e2.String = r2(9391), e2.Subdocument = r2(963), e2.UUID = r2(7245), e2.Oid = e2.ObjectId, e2.Object = e2.Mixed, e2.Bool = e2.Boolean, e2.ObjectID = e2.ObjectId;
    }, 5690: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4, e3) {
        (e3 == null || e3 > t4.length) && (e3 = t4.length);
        for (var r3 = 0, n2 = Array(e3);r3 < e3; r3++)
          n2[r3] = t4[r3];
        return n2;
      }
      function o(t4, e3) {
        for (var r3 = 0;r3 < e3.length; r3++) {
          var n2 = e3[r3];
          n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(t4, a(n2.key), n2);
        }
      }
      function a(t4) {
        var e3 = function(t5) {
          if (n(t5) != "object" || !t5)
            return t5;
          var e4 = t5[Symbol.toPrimitive];
          if (e4 !== undefined) {
            var r3 = e4.call(t5, "string");
            if (n(r3) != "object")
              return r3;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(t5);
        }(t4);
        return n(e3) == "symbol" ? e3 : e3 + "";
      }
      function s() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (s = function() {
          return !!t4;
        })();
      }
      function c() {
        return c = typeof Reflect != "undefined" && Reflect.get ? Reflect.get.bind() : function(t4, e3, r3) {
          var n2 = function(t5, e4) {
            for (;!{}.hasOwnProperty.call(t5, e4) && (t5 = u(t5)) !== null; )
              ;
            return t5;
          }(t4, e3);
          if (n2) {
            var i2 = Object.getOwnPropertyDescriptor(n2, e3);
            return i2.get ? i2.get.call(arguments.length < 3 ? t4 : r3) : i2.value;
          }
        }, c.apply(null, arguments);
      }
      function u(t4) {
        return u = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, u(t4);
      }
      function f(t4, e3) {
        return f = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, f(t4, e3);
      }
      var l = r2(4902), h = r2(7488), p = r2(2319), d = function(t4) {
        function e3(t5, r3) {
          var i2;
          return function(t6, e4) {
            if (!(t6 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, e3), (i2 = function(t6, e4, r4) {
            return e4 = u(e4), function(t7, e5) {
              if (e5 && (n(e5) == "object" || typeof e5 == "function"))
                return e5;
              if (e5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t8) {
                if (t8 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t8;
              }(t7);
            }(t6, s() ? Reflect.construct(e4, r4 || [], u(t6).constructor) : e4.apply(t6, r4));
          }(this, e3, [t5, r3, "Map"])).$isSchemaMap = true, i2;
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && f(t5, e4);
        }(e3, t4), a2 = e3, h2 = [{ key: "set", value: function(t5, e4) {
          return p.set(t5, e4);
        } }, { key: "cast", value: function(t5, e4, n2) {
          if (t5 instanceof l)
            return t5;
          var o2 = this.path;
          if (n2) {
            var a3 = new l({}, o2, e4, this.$__schemaType);
            if (t5 instanceof r2.g.Map) {
              var s2, c2 = function(t6, e5) {
                var r3 = typeof Symbol != "undefined" && t6[Symbol.iterator] || t6["@@iterator"];
                if (!r3) {
                  if (Array.isArray(t6) || (r3 = function(t7, e6) {
                    if (t7) {
                      if (typeof t7 == "string")
                        return i(t7, e6);
                      var r4 = {}.toString.call(t7).slice(8, -1);
                      return r4 === "Object" && t7.constructor && (r4 = t7.constructor.name), r4 === "Map" || r4 === "Set" ? Array.from(t7) : r4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4) ? i(t7, e6) : undefined;
                    }
                  }(t6)) || e5 && t6 && typeof t6.length == "number") {
                    r3 && (t6 = r3);
                    var n3 = 0, o3 = function() {
                    };
                    return { s: o3, n: function() {
                      return n3 >= t6.length ? { done: true } : { done: false, value: t6[n3++] };
                    }, e: function(t7) {
                      throw t7;
                    }, f: o3 };
                  }
                  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var a4, s3 = true, c3 = false;
                return { s: function() {
                  r3 = r3.call(t6);
                }, n: function() {
                  var t7 = r3.next();
                  return s3 = t7.done, t7;
                }, e: function(t7) {
                  c3 = true, a4 = t7;
                }, f: function() {
                  try {
                    s3 || r3.return == null || r3.return();
                  } finally {
                    if (c3)
                      throw a4;
                  }
                } };
              }(t5.keys());
              try {
                for (c2.s();!(s2 = c2.n()).done; ) {
                  var u2 = s2.value, f2 = t5.get(u2);
                  f2 = f2 == null ? a3.$__schemaType._castNullish(f2) : a3.$__schemaType.cast(f2, e4, true, null, { path: o2 + "." + u2 }), a3.$init(u2, f2);
                }
              } catch (t6) {
                c2.e(t6);
              } finally {
                c2.f();
              }
            } else
              for (var h3 = 0, p2 = Object.keys(t5);h3 < p2.length; h3++) {
                var d2 = p2[h3], y = t5[d2];
                y = y == null ? a3.$__schemaType._castNullish(y) : a3.$__schemaType.cast(y, e4, true, null, { path: o2 + "." + d2 }), a3.$init(d2, y);
              }
            return a3;
          }
          return new l(t5, o2, e4, this.$__schemaType);
        } }, { key: "clone", value: function() {
          var t5, r3, n2, i2 = (t5 = e3, r3 = this, typeof (n2 = c(u(1 & 3 ? t5.prototype : t5), "clone", r3)) == "function" ? function(t6) {
            return n2.apply(r3, t6);
          } : n2)([]);
          return this.$__schemaType != null && (i2.$__schemaType = this.$__schemaType.clone()), i2;
        } }], h2 && o(a2.prototype, h2), Object.defineProperty(a2, "prototype", { writable: false }), a2;
        var a2, h2;
      }(p);
      d.schemaName = "Map", d.prototype.OptionsConstructor = h, d.defaultOptions = {}, t3.exports = d;
    }, 1895: (t3, e2, r2) => {
      var n = r2(2319), i = r2(3089), o = r2(4797), a = r2(335);
      function s(t4, e3) {
        if (e3 && e3.default) {
          var r3 = e3.default;
          Array.isArray(r3) && r3.length === 0 ? e3.default = Array : !e3.shared && o(r3) && Object.keys(r3).length === 0 && (e3.default = function() {
            return {};
          });
        }
        n.call(this, t4, e3, "Mixed"), this[i.schemaMixedSymbol] = true;
      }
      s.schemaName = "Mixed", s.defaultOptions = {}, s.prototype = Object.create(n.prototype), s.prototype.constructor = s, s.get = n.get, s.set = n.set, s.setters = [], s.prototype.cast = function(t4) {
        return t4 instanceof Error ? a.errorToPOJO(t4) : t4;
      }, s.prototype.castForQuery = function(t4, e3) {
        return e3;
      }, t3.exports = s;
    }, 8191: (t3, e2, r2) => {
      function n(t4, e3) {
        var r3 = Object.keys(t4);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(t4);
          e3 && (n2 = n2.filter(function(e4) {
            return Object.getOwnPropertyDescriptor(t4, e4).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function i(t4) {
        for (var e3 = 1;e3 < arguments.length; e3++) {
          var r3 = arguments[e3] != null ? arguments[e3] : {};
          e3 % 2 ? n(Object(r3), true).forEach(function(e4) {
            o(t4, e4, r3[e4]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(r3)) : n(Object(r3)).forEach(function(e4) {
            Object.defineProperty(t4, e4, Object.getOwnPropertyDescriptor(r3, e4));
          });
        }
        return t4;
      }
      function o(t4, e3, r3) {
        return (e3 = function(t5) {
          var e4 = function(t6) {
            if (a(t6) != "object" || !t6)
              return t6;
            var e5 = t6[Symbol.toPrimitive];
            if (e5 !== undefined) {
              var r4 = e5.call(t6, "string");
              if (a(r4) != "object")
                return r4;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t6);
          }(t5);
          return a(e4) == "symbol" ? e4 : e4 + "";
        }(e3)) in t4 ? Object.defineProperty(t4, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t4[e3] = r3, t4;
      }
      function a(t4) {
        return a = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, a(t4);
      }
      var s = r2(9507), c = r2(3823), u = r2(2319), f = r2(247), l = r2(133), h = r2(335), p = u.CastError;
      function d(t4, e3) {
        u.call(this, t4, e3, "Number");
      }
      function y(t4) {
        return this.cast(t4);
      }
      d.get = u.get, d.set = u.set, d.setters = [], d._cast = f, d.cast = function(t4) {
        return arguments.length === 0 || (t4 === false && (t4 = this._defaultCaster), this._cast = t4), this._cast;
      }, d._defaultCaster = function(t4) {
        if (typeof t4 != "number")
          throw new Error;
        return t4;
      }, d.schemaName = "Number", d.defaultOptions = {}, d.prototype = Object.create(u.prototype), d.prototype.constructor = d, d.prototype.OptionsConstructor = c, d._checkRequired = function(t4) {
        return typeof t4 == "number" || t4 instanceof Number;
      }, d.checkRequired = u.checkRequired, d.prototype.checkRequired = function(t4, e3) {
        return a(t4) === "object" && u._isRef(this, t4, e3, true) ? t4 != null : (typeof this.constructor.checkRequired == "function" ? this.constructor.checkRequired() : d.checkRequired())(t4);
      }, d.prototype.min = function(t4, e3) {
        if (this.minValidator && (this.validators = this.validators.filter(function(t5) {
          return t5.validator !== this.minValidator;
        }, this)), t4 != null) {
          var r3 = e3 || s.messages.Number.min;
          r3 = r3.replace(/{MIN}/, t4), this.validators.push({ validator: this.minValidator = function(e4) {
            return e4 == null || e4 >= t4;
          }, message: r3, type: "min", min: t4 });
        }
        return this;
      }, d.prototype.max = function(t4, e3) {
        if (this.maxValidator && (this.validators = this.validators.filter(function(t5) {
          return t5.validator !== this.maxValidator;
        }, this)), t4 != null) {
          var r3 = e3 || s.messages.Number.max;
          r3 = r3.replace(/{MAX}/, t4), this.validators.push({ validator: this.maxValidator = function(e4) {
            return e4 == null || e4 <= t4;
          }, message: r3, type: "max", max: t4 });
        }
        return this;
      }, d.prototype.enum = function(t4, e3) {
        return this.enumValidator && (this.validators = this.validators.filter(function(t5) {
          return t5.validator !== this.enumValidator;
        }, this)), Array.isArray(t4) || (h.isPOJO(t4) && t4.values != null ? (e3 = t4.message, t4 = t4.values) : typeof t4 == "number" && (t4 = Array.prototype.slice.call(arguments), e3 = null), h.isPOJO(t4) && (t4 = Object.values(t4)), e3 = e3 || s.messages.Number.enum), e3 = e3 == null ? s.messages.Number.enum : e3, this.enumValidator = function(e4) {
          return e4 == null || t4.indexOf(e4) !== -1;
        }, this.validators.push({ validator: this.enumValidator, message: e3, type: "enum", enumValues: t4 }), this;
      }, d.prototype.cast = function(t4, e3, r3) {
        if (typeof t4 != "number" && u._isRef(this, t4, e3, r3) && (t4 == null || h.isNonBuiltinObject(t4)))
          return this._castRef(t4, e3, r3);
        var n2, i2 = t4 && t4._id !== undefined ? t4._id : t4;
        n2 = typeof this._castFunction == "function" ? this._castFunction : typeof this.constructor.cast == "function" ? this.constructor.cast() : d.cast();
        try {
          return n2(i2);
        } catch (t5) {
          throw new p("Number", i2, this.path, t5, this);
        }
      }, d.prototype.$conditionalHandlers = i(i({}, u.prototype.$conditionalHandlers), {}, { $bitsAllClear: l, $bitsAnyClear: l, $bitsAllSet: l, $bitsAnySet: l, $gt: y, $gte: y, $lt: y, $lte: y, $mod: function(t4) {
        var e3 = this;
        return Array.isArray(t4) ? t4.map(function(t5) {
          return e3.cast(t5);
        }) : [this.cast(t4)];
      } }), d.prototype.castForQuery = function(t4, e3, r3) {
        var n2;
        if (t4 != null) {
          if (!(n2 = this.$conditionalHandlers[t4]))
            throw new p("number", e3, this.path, null, this);
          return n2.call(this, e3, r3);
        }
        try {
          e3 = this.applySetters(e3, r3);
        } catch (t5) {
          throw t5 instanceof p && t5.path === this.path && this.$fullPath != null && (t5.path = this.$fullPath), t5;
        }
        return e3;
      }, t3.exports = d;
    }, 9476: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4, e3) {
        var r3 = Object.keys(t4);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(t4);
          e3 && (n2 = n2.filter(function(e4) {
            return Object.getOwnPropertyDescriptor(t4, e4).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function o(t4) {
        for (var e3 = 1;e3 < arguments.length; e3++) {
          var r3 = arguments[e3] != null ? arguments[e3] : {};
          e3 % 2 ? i(Object(r3), true).forEach(function(e4) {
            a(t4, e4, r3[e4]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(r3)) : i(Object(r3)).forEach(function(e4) {
            Object.defineProperty(t4, e4, Object.getOwnPropertyDescriptor(r3, e4));
          });
        }
        return t4;
      }
      function a(t4, e3, r3) {
        return (e3 = function(t5) {
          var e4 = function(t6) {
            if (n(t6) != "object" || !t6)
              return t6;
            var e5 = t6[Symbol.toPrimitive];
            if (e5 !== undefined) {
              var r4 = e5.call(t6, "string");
              if (n(r4) != "object")
                return r4;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t6);
          }(t5);
          return n(e4) == "symbol" ? e4 : e4 + "";
        }(e3)) in t4 ? Object.defineProperty(t4, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t4[e3] = r3, t4;
      }
      var s, c = r2(210), u = r2(2319), f = r2(8092), l = r2(5857), h = r2(6704), p = r2(2128), d = r2(335), y = u.CastError;
      function b(t4, e3) {
        var r3 = typeof t4 == "string" && t4.length === 24 && /^[a-f0-9]+$/i.test(t4), n2 = e3 && e3.suppressWarning;
        !r3 && t4 !== undefined || n2 || d.warn("mongoose: To create a new ObjectId please try `Mongoose.Types.ObjectId` instead of using `Mongoose.Schema.ObjectId`. Set the `suppressWarning` option if you're trying to create a hex char path in your schema."), u.call(this, t4, e3, "ObjectId");
      }
      function m(t4) {
        return this.cast(t4);
      }
      function v() {
        return new h;
      }
      function g(t4) {
        return s || (s = r2(3293)), this instanceof s && t4 === undefined ? new h : t4;
      }
      b.schemaName = "ObjectId", b.defaultOptions = {}, b.prototype = Object.create(u.prototype), b.prototype.constructor = b, b.prototype.OptionsConstructor = c, b.get = u.get, b.set = u.set, b.setters = [], b.prototype.auto = function(t4) {
        return t4 && (this.default(v), this.set(g)), this;
      }, b._checkRequired = function(t4) {
        return p(t4, "ObjectId");
      }, b._cast = f, b.cast = function(t4) {
        return arguments.length === 0 || (t4 === false && (t4 = this._defaultCaster), this._cast = t4), this._cast;
      }, b._defaultCaster = function(t4) {
        if (!p(t4, "ObjectId"))
          throw new Error(t4 + " is not an instance of ObjectId");
        return t4;
      }, b.checkRequired = u.checkRequired, b.prototype.checkRequired = function(t4, e3) {
        return u._isRef(this, t4, e3, true) ? !!t4 : (typeof this.constructor.checkRequired == "function" ? this.constructor.checkRequired() : b.checkRequired())(t4);
      }, b.prototype.cast = function(t4, e3, r3) {
        if (!p(t4, "ObjectId") && u._isRef(this, t4, e3, r3)) {
          if ((l(t4) || "").toLowerCase() === "objectid")
            return new h(t4.toHexString());
          if (t4 == null || d.isNonBuiltinObject(t4))
            return this._castRef(t4, e3, r3);
        }
        var n2;
        n2 = typeof this._castFunction == "function" ? this._castFunction : typeof this.constructor.cast == "function" ? this.constructor.cast() : b.cast();
        try {
          return n2(t4);
        } catch (e4) {
          throw new y("ObjectId", t4, this.path, e4, this);
        }
      }, b.prototype.$conditionalHandlers = o(o({}, u.prototype.$conditionalHandlers), {}, { $gt: m, $gte: m, $lt: m, $lte: m }), v.$runBeforeSetters = true, t3.exports = b;
    }, 133: (t3, e2, r2) => {
      var n = r2(5832).Buffer, i = r2(6148);
      function o(t4, e3) {
        var r3 = Number(e3);
        if (isNaN(r3))
          throw new i("number", e3, t4);
        return r3;
      }
      t3.exports = function(t4) {
        var e3 = this;
        return Array.isArray(t4) ? t4.map(function(t5) {
          return o(e3.path, t5);
        }) : n.isBuffer(t4) ? t4 : o(e3.path, t4);
      };
    }, 1188: (t3, e2, r2) => {
      var n = r2(7092);
      t3.exports = function(t4) {
        var e3 = this != null ? this.path : null;
        return n(t4, e3);
      };
    }, 6951: (t3, e2, r2) => {
      var n = r2(4111).p, i = r2(4111).G;
      function o(t4, e3) {
        switch (t4.$geometry.type) {
          case "Polygon":
          case "LineString":
          case "Point":
            n(t4.$geometry.coordinates, e3);
        }
        return a(e3, t4), t4;
      }
      function a(t4, e3) {
        e3.$maxDistance && (e3.$maxDistance = i.call(t4, e3.$maxDistance)), e3.$minDistance && (e3.$minDistance = i.call(t4, e3.$minDistance));
      }
      e2.cast$geoIntersects = function(t4) {
        if (t4.$geometry)
          return o(t4, this), t4;
      }, e2.cast$near = function(t4) {
        var e3 = r2(9225);
        if (Array.isArray(t4))
          return n(t4, this), t4;
        if (a(this, t4), t4 && t4.$geometry)
          return o(t4, this);
        if (!Array.isArray(t4))
          throw new TypeError("$near must be either an array or an object with a $geometry property");
        return e3.prototype.castForQuery.call(this, null, t4);
      }, e2.cast$within = function(t4) {
        var e3 = this;
        if (a(this, t4), t4.$box || t4.$polygon) {
          var r3 = t4.$box ? "$box" : "$polygon";
          t4[r3].forEach(function(t5) {
            if (!Array.isArray(t5))
              throw new TypeError("Invalid $within $box argument. Expected an array, received " + t5);
            t5.forEach(function(r4, n3) {
              t5[n3] = i.call(e3, r4);
            });
          });
        } else if (t4.$center || t4.$centerSphere) {
          var n2 = t4.$center ? "$center" : "$centerSphere";
          t4[n2].forEach(function(r4, o2) {
            Array.isArray(r4) ? r4.forEach(function(t5, n3) {
              r4[n3] = i.call(e3, t5);
            }) : t4[n2][o2] = i.call(e3, r4);
          });
        } else
          t4.$geometry && o(t4, this);
        return t4;
      };
    }, 4111: (t3, e2, r2) => {
      var n = r2(8191);
      function i(t4) {
        return n.cast()(t4);
      }
      e2.G = i, e2.p = function t(e3, r3) {
        e3.forEach(function(n2, o) {
          Array.isArray(n2) ? t(n2, r3) : e3[o] = i.call(r3, n2);
        });
      };
    }, 2503: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      var i = r2(6148), o = r2(7092), a = r2(8471);
      t3.exports = function(t4, e3) {
        if (t4 == null || n(t4) !== "object")
          throw new i("$text", t4, e3);
        return t4.$search != null && (t4.$search = a(t4.$search, e3 + ".$search")), t4.$language != null && (t4.$language = a(t4.$language, e3 + ".$language")), t4.$caseSensitive != null && (t4.$caseSensitive = o(t4.$caseSensitive, e3 + ".$castSensitive")), t4.$diacriticSensitive != null && (t4.$diacriticSensitive = o(t4.$diacriticSensitive, e3 + ".$diacriticSensitive")), t4;
      };
    }, 3180: (t3) => {
      t3.exports = function(t4) {
        if (Array.isArray(t4)) {
          if (!t4.every(function(t5) {
            return typeof t5 == "number" || typeof t5 == "string";
          }))
            throw new Error("$type array values must be strings or numbers");
          return t4;
        }
        if (typeof t4 != "number" && typeof t4 != "string")
          throw new Error("$type parameter must be number, string, or array of numbers and strings");
        return t4;
      };
    }, 9391: (t3, e2, r2) => {
      function n(t4, e3) {
        var r3 = Object.keys(t4);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(t4);
          e3 && (n2 = n2.filter(function(e4) {
            return Object.getOwnPropertyDescriptor(t4, e4).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function i(t4) {
        for (var e3 = 1;e3 < arguments.length; e3++) {
          var r3 = arguments[e3] != null ? arguments[e3] : {};
          e3 % 2 ? n(Object(r3), true).forEach(function(e4) {
            o(t4, e4, r3[e4]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(r3)) : n(Object(r3)).forEach(function(e4) {
            Object.defineProperty(t4, e4, Object.getOwnPropertyDescriptor(r3, e4));
          });
        }
        return t4;
      }
      function o(t4, e3, r3) {
        return (e3 = function(t5) {
          var e4 = function(t6) {
            if (a(t6) != "object" || !t6)
              return t6;
            var e5 = t6[Symbol.toPrimitive];
            if (e5 !== undefined) {
              var r4 = e5.call(t6, "string");
              if (a(r4) != "object")
                return r4;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t6);
          }(t5);
          return a(e4) == "symbol" ? e4 : e4 + "";
        }(e3)) in t4 ? Object.defineProperty(t4, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t4[e3] = r3, t4;
      }
      function a(t4) {
        return a = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, a(t4);
      }
      function s(t4, e3) {
        (e3 == null || e3 > t4.length) && (e3 = t4.length);
        for (var r3 = 0, n2 = Array(e3);r3 < e3; r3++)
          n2[r3] = t4[r3];
        return n2;
      }
      var c = r2(2319), u = r2(9507), f = r2(8035), l = r2(8471), h = r2(335), p = r2(2128), d = c.CastError;
      function y(t4, e3) {
        this.enumValues = [], this.regExp = null, c.call(this, t4, e3, "String");
      }
      function b(t4, e3) {
        return this.castForQuery(null, t4, e3);
      }
      function m(t4) {
        return t4 == null ? this._castNullish(t4) : this.cast(t4, this);
      }
      y.schemaName = "String", y.defaultOptions = {}, y.prototype = Object.create(c.prototype), y.prototype.constructor = y, Object.defineProperty(y.prototype, "OptionsConstructor", { configurable: false, enumerable: false, writable: false, value: f }), y._cast = l, y.cast = function(t4) {
        return arguments.length === 0 || (t4 === false && (t4 = this._defaultCaster), this._cast = t4), this._cast;
      }, y._defaultCaster = function(t4) {
        if (t4 != null && typeof t4 != "string")
          throw new Error;
        return t4;
      }, y.get = c.get, y.set = c.set, y.setters = [], y._checkRequired = function(t4) {
        return (t4 instanceof String || typeof t4 == "string") && t4.length;
      }, y.checkRequired = c.checkRequired, y.prototype.enum = function() {
        if (this.enumValidator && (this.validators = this.validators.filter(function(t5) {
          return t5.validator !== this.enumValidator;
        }, this), this.enumValidator = false), arguments[0] === undefined || arguments[0] === false)
          return this;
        var t4, e3;
        h.isObject(arguments[0]) ? Array.isArray(arguments[0].values) ? (t4 = arguments[0].values, e3 = arguments[0].message) : (t4 = h.object.vals(arguments[0]), e3 = u.messages.String.enum) : (t4 = arguments, e3 = u.messages.String.enum);
        var r3, n2 = function(t5, e4) {
          var r4 = typeof Symbol != "undefined" && t5[Symbol.iterator] || t5["@@iterator"];
          if (!r4) {
            if (Array.isArray(t5) || (r4 = function(t6, e5) {
              if (t6) {
                if (typeof t6 == "string")
                  return s(t6, e5);
                var r5 = {}.toString.call(t6).slice(8, -1);
                return r5 === "Object" && t6.constructor && (r5 = t6.constructor.name), r5 === "Map" || r5 === "Set" ? Array.from(t6) : r5 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r5) ? s(t6, e5) : undefined;
              }
            }(t5)) || e4 && t5 && typeof t5.length == "number") {
              r4 && (t5 = r4);
              var n3 = 0, i3 = function() {
              };
              return { s: i3, n: function() {
                return n3 >= t5.length ? { done: true } : { done: false, value: t5[n3++] };
              }, e: function(t6) {
                throw t6;
              }, f: i3 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var o3, a2 = true, c2 = false;
          return { s: function() {
            r4 = r4.call(t5);
          }, n: function() {
            var t6 = r4.next();
            return a2 = t6.done, t6;
          }, e: function(t6) {
            c2 = true, o3 = t6;
          }, f: function() {
            try {
              a2 || r4.return == null || r4.return();
            } finally {
              if (c2)
                throw o3;
            }
          } };
        }(t4);
        try {
          for (n2.s();!(r3 = n2.n()).done; ) {
            var i2 = r3.value;
            i2 !== undefined && this.enumValues.push(this.cast(i2));
          }
        } catch (t5) {
          n2.e(t5);
        } finally {
          n2.f();
        }
        var o2 = this.enumValues;
        return this.enumValidator = function(t5) {
          return t5 == null || ~o2.indexOf(t5);
        }, this.validators.push({ validator: this.enumValidator, message: e3, type: "enum", enumValues: o2 }), this;
      }, y.prototype.lowercase = function(t4) {
        var e3 = this;
        return arguments.length > 0 && !t4 ? this : this.set(function(t5) {
          return typeof t5 != "string" && (t5 = e3.cast(t5)), t5 ? t5.toLowerCase() : t5;
        });
      }, y.prototype.uppercase = function(t4) {
        var e3 = this;
        return arguments.length > 0 && !t4 ? this : this.set(function(t5) {
          return typeof t5 != "string" && (t5 = e3.cast(t5)), t5 ? t5.toUpperCase() : t5;
        });
      }, y.prototype.trim = function(t4) {
        var e3 = this;
        return arguments.length > 0 && !t4 ? this : this.set(function(t5) {
          return typeof t5 != "string" && (t5 = e3.cast(t5)), t5 ? t5.trim() : t5;
        });
      }, y.prototype.minlength = function(t4, e3) {
        if (this.minlengthValidator && (this.validators = this.validators.filter(function(t5) {
          return t5.validator !== this.minlengthValidator;
        }, this)), t4 != null) {
          var r3 = e3 || u.messages.String.minlength;
          r3 = r3.replace(/{MINLENGTH}/, t4), this.validators.push({ validator: this.minlengthValidator = function(e4) {
            return e4 === null || e4.length >= t4;
          }, message: r3, type: "minlength", minlength: t4 });
        }
        return this;
      }, y.prototype.minLength = y.prototype.minlength, y.prototype.maxlength = function(t4, e3) {
        if (this.maxlengthValidator && (this.validators = this.validators.filter(function(t5) {
          return t5.validator !== this.maxlengthValidator;
        }, this)), t4 != null) {
          var r3 = e3 || u.messages.String.maxlength;
          r3 = r3.replace(/{MAXLENGTH}/, t4), this.validators.push({ validator: this.maxlengthValidator = function(e4) {
            return e4 === null || e4.length <= t4;
          }, message: r3, type: "maxlength", maxlength: t4 });
        }
        return this;
      }, y.prototype.maxLength = y.prototype.maxlength, y.prototype.match = function(t4, e3) {
        var r3 = e3 || u.messages.String.match;
        return this.validators.push({ validator: function(e4) {
          return !!t4 && (t4.lastIndex = 0, e4 == null || e4 === "" || t4.test(e4));
        }, message: r3, type: "regexp", regexp: t4 }), this;
      }, y.prototype.checkRequired = function(t4, e3) {
        return a(t4) === "object" && c._isRef(this, t4, e3, true) ? t4 != null : (typeof this.constructor.checkRequired == "function" ? this.constructor.checkRequired() : y.checkRequired())(t4);
      }, y.prototype.cast = function(t4, e3, r3) {
        if (typeof t4 != "string" && c._isRef(this, t4, e3, r3))
          return this._castRef(t4, e3, r3);
        var n2;
        n2 = typeof this._castFunction == "function" ? this._castFunction : typeof this.constructor.cast == "function" ? this.constructor.cast() : y.cast();
        try {
          return n2(t4);
        } catch (e4) {
          throw new d("string", t4, this.path, null, this);
        }
      };
      var v = i(i({}, c.prototype.$conditionalHandlers), {}, { $all: function(t4, e3) {
        var r3 = this;
        return Array.isArray(t4) ? t4.map(function(t5) {
          return r3.castForQuery(null, t5, e3);
        }) : [this.castForQuery(null, t4, e3)];
      }, $gt: b, $gte: b, $lt: b, $lte: b, $options: m, $regex: function(t4) {
        return Object.prototype.toString.call(t4) === "[object RegExp]" ? t4 : m.call(this, t4);
      }, $not: b });
      Object.defineProperty(y.prototype, "$conditionalHandlers", { configurable: false, enumerable: false, writable: false, value: Object.freeze(v) }), y.prototype.castForQuery = function(t4, e3, r3) {
        var n2;
        if (t4 != null) {
          if (!(n2 = this.$conditionalHandlers[t4]))
            throw new Error("Can't use " + t4 + " with String.");
          return n2.call(this, e3, r3);
        }
        if (Object.prototype.toString.call(e3) === "[object RegExp]" || p(e3, "BSONRegExp"))
          return e3;
        try {
          return this.applySetters(e3, r3);
        } catch (t5) {
          throw t5 instanceof d && t5.path === this.path && this.$fullPath != null && (t5.path = this.$fullPath), t5;
        }
      }, t3.exports = y;
    }, 963: (t3, e2, r2) => {
      function n(t4, e3) {
        var r3 = Object.keys(t4);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(t4);
          e3 && (n2 = n2.filter(function(e4) {
            return Object.getOwnPropertyDescriptor(t4, e4).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function i(t4) {
        for (var e3 = 1;e3 < arguments.length; e3++) {
          var r3 = arguments[e3] != null ? arguments[e3] : {};
          e3 % 2 ? n(Object(r3), true).forEach(function(e4) {
            o(t4, e4, r3[e4]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(r3)) : n(Object(r3)).forEach(function(e4) {
            Object.defineProperty(t4, e4, Object.getOwnPropertyDescriptor(r3, e4));
          });
        }
        return t4;
      }
      function o(t4, e3, r3) {
        return (e3 = function(t5) {
          var e4 = function(t6) {
            if (a(t6) != "object" || !t6)
              return t6;
            var e5 = t6[Symbol.toPrimitive];
            if (e5 !== undefined) {
              var r4 = e5.call(t6, "string");
              if (a(r4) != "object")
                return r4;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t6);
          }(t5);
          return a(e4) == "symbol" ? e4 : e4 + "";
        }(e3)) in t4 ? Object.defineProperty(t4, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t4[e3] = r3, t4;
      }
      function a(t4) {
        return a = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, a(t4);
      }
      var s, c = r2(6148), u = r2(3550).EventEmitter, f = r2(2260), l = r2(6271), h = r2(2319), p = r2(6690), d = r2(1188), y = r2(4111).G, b = r2(8650), m = r2(6951), v = r2(371), g = r2(5962), _ = r2(3920)._, w = r2(1384), S = r2(335), O = r2(9662);
      function j(t4, e3, r3) {
        if (t4.options.timeseries)
          throw new O(e3, "timeseries");
        var n2 = j.defaultOptions && j.defaultOptions._id;
        n2 != null && ((r3 = r3 || {})._id = n2), t4 = g(t4, r3), this.caster = $(t4, null, r3), this.caster.path = e3, this.caster.prototype.$basePath = e3, this.schema = t4, this.$isSingleNested = true, this.base = t4.base, h.call(this, e3, r3, "Embedded");
      }
      function $(t4, e3, n2) {
        s || (s = r2(292));
        var i2 = function(t5, e4, r3) {
          this.$__parent = r3, s.apply(this, arguments), r3 != null && this.$session(r3.$session());
        };
        t4._preCompile();
        var o2 = e3 != null ? e3.prototype : s.prototype;
        for (var a2 in (i2.prototype = Object.create(o2)).$__setSchema(t4), i2.prototype.constructor = i2, i2.$__required = n2 == null ? undefined : n2.required, i2.base = t4.base, i2.schema = t4, i2.$isSingleNested = true, i2.events = new u, i2.prototype.toBSON = function() {
          return this.toObject(_);
        }, t4.methods)
          i2.prototype[a2] = t4.methods[a2];
        for (var c2 in t4.statics)
          i2[c2] = t4.statics[c2];
        for (var f2 in u.prototype)
          i2[f2] = u.prototype[f2];
        return i2;
      }
      t3.exports = j, j.prototype = Object.create(h.prototype), j.prototype.constructor = j, j.prototype.OptionsConstructor = l, j.prototype.$conditionalHandlers.$geoWithin = function(t4, e3) {
        return { $geometry: this.castForQuery(null, t4.$geometry, e3) };
      }, j.prototype.$conditionalHandlers.$near = j.prototype.$conditionalHandlers.$nearSphere = m.cast$near, j.prototype.$conditionalHandlers.$within = j.prototype.$conditionalHandlers.$geoWithin = m.cast$within, j.prototype.$conditionalHandlers.$geoIntersects = m.cast$geoIntersects, j.prototype.$conditionalHandlers.$minDistance = y, j.prototype.$conditionalHandlers.$maxDistance = y, j.prototype.$conditionalHandlers.$exists = d, j.prototype.cast = function(t4, e3, r3, n2, i2) {
        if (t4 && t4.$isSingleNested && t4.parent === e3)
          return t4;
        if (t4 != null && (a(t4) !== "object" || Array.isArray(t4)))
          throw new f(this.path, t4);
        var o2, s2 = this.schema.path(this.schema.options.discriminatorKey), c2 = s2 == null ? null : s2.getDefault(e3), u2 = v(this.caster, t4, c2), l2 = e3 && e3.$__ && e3.$__.selected, h2 = this.path, d2 = l2 == null ? null : Object.keys(l2).reduce(function(t5, e4) {
          return e4.startsWith(h2 + ".") && ((t5 = t5 || {})[e4.substring(h2.length + 1)] = l2[e4]), t5;
        }, null);
        if (!r3)
          return i2 = Object.assign({}, i2, { priorDoc: n2 }), Object.keys(t4).length === 0 ? new u2({}, d2, e3, undefined, i2) : new u2(t4, d2, e3, undefined, i2);
        delete (o2 = new u2(undefined, d2, e3, false, { defaults: false })).$__.defaults, o2.$init(t4);
        var y2 = w(d2);
        return p(o2, d2, y2), o2;
      }, j.prototype.castForQuery = function(t4, e3, r3, n2) {
        var i2;
        if (t4 != null) {
          if (!(i2 = this.$conditionalHandlers[t4]))
            throw new Error("Can't use " + t4);
          return i2.call(this, e3);
        }
        if (e3 == null)
          return e3;
        var o2 = v(this.caster, e3);
        if (e3 instanceof o2)
          return e3;
        this.options.runSetters && (e3 = this._applySetters(e3, r3));
        var a2 = n2 != null && n2.strict != null ? n2.strict : undefined;
        try {
          e3 = new o2(e3, a2);
        } catch (t5) {
          if (!(t5 instanceof c))
            throw new c("Embedded", e3, this.path, t5, this);
          throw t5;
        }
        return e3;
      }, j.prototype.doValidate = function(t4, e3, r3, n2) {
        var i2 = v(this.caster, t4);
        if (!t4 || t4 instanceof i2 || (t4 = new i2(t4, null, r3 != null && r3.$__ != null ? r3 : null)), n2 && n2.skipSchemaValidators)
          return t4 ? t4.validate().then(function() {
            return e3(null);
          }, function(t5) {
            return e3(t5);
          }) : e3(null);
        h.prototype.doValidate.call(this, t4, function(r4) {
          return r4 ? e3(r4) : t4 ? void t4.validate().then(function() {
            return e3(null);
          }, function(t5) {
            return e3(t5);
          }) : e3(null);
        }, r3, n2);
      }, j.prototype.doValidateSync = function(t4, e3, r3) {
        if (!r3 || !r3.skipSchemaValidators) {
          var n2 = h.prototype.doValidateSync.call(this, t4, e3);
          if (n2)
            return n2;
        }
        if (t4)
          return t4.validateSync();
      }, j.prototype.discriminator = function(t4, e3, r3) {
        r3 = r3 || {};
        var n2 = S.isPOJO(r3) ? r3.value : r3, i2 = typeof r3.clone != "boolean" || r3.clone;
        return e3.instanceOfSchema && i2 && (e3 = e3.clone()), e3 = b(this.caster, t4, e3, n2, null, null, r3.overwriteExisting), this.caster.discriminators[t4] = $(e3, this.caster), this.caster.discriminators[t4];
      }, j.defaultOptions = {}, j.set = h.set, j.setters = [], j.get = h.get, j.prototype.toJSON = function() {
        return { path: this.path, options: this.options };
      }, j.prototype.clone = function() {
        var t4 = new this.constructor(this.schema, this.path, i(i({}, this.options), {}, { _skipApplyDiscriminators: true }));
        return t4.validators = this.validators.slice(), this.requiredValidator !== undefined && (t4.requiredValidator = this.requiredValidator), t4.caster.discriminators = Object.assign({}, this.caster.discriminators), t4;
      };
    }, 3089: (t3, e2) => {
      e2.schemaMixedSymbol = Symbol.for("mongoose:schema_mixed"), e2.builtInMiddleware = Symbol.for("mongoose:built-in-middleware");
    }, 7245: (t3, e2, r2) => {
      var n = r2(5832).Buffer;
      function i(t4) {
        return i = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, i(t4);
      }
      function o(t4, e3) {
        var r3 = Object.keys(t4);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(t4);
          e3 && (n2 = n2.filter(function(e4) {
            return Object.getOwnPropertyDescriptor(t4, e4).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function a(t4) {
        for (var e3 = 1;e3 < arguments.length; e3++) {
          var r3 = arguments[e3] != null ? arguments[e3] : {};
          e3 % 2 ? o(Object(r3), true).forEach(function(e4) {
            s(t4, e4, r3[e4]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(r3)) : o(Object(r3)).forEach(function(e4) {
            Object.defineProperty(t4, e4, Object.getOwnPropertyDescriptor(r3, e4));
          });
        }
        return t4;
      }
      function s(t4, e3, r3) {
        return (e3 = function(t5) {
          var e4 = function(t6) {
            if (i(t6) != "object" || !t6)
              return t6;
            var e5 = t6[Symbol.toPrimitive];
            if (e5 !== undefined) {
              var r4 = e5.call(t6, "string");
              if (i(r4) != "object")
                return r4;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t6);
          }(t5);
          return i(e4) == "symbol" ? e4 : e4 + "";
        }(e3)) in t4 ? Object.defineProperty(t4, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t4[e3] = r3, t4;
      }
      var c = r2(9820), u = r2(2319), f = u.CastError, l = r2(335), h = r2(133), p = /[0-9a-f]{8}-[0-9a-f]{4}-[0-9][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}/i, d = c.Binary;
      function y(t4) {
        typeof t4 != "string" && (t4 = "");
        var e3, r3 = (e3 = t4.replace(/[{}-]/g, "")) != null && n.from(e3, "hex"), i2 = new c(r3);
        return i2._subtype = 4, i2;
      }
      function b(t4) {
        var e3;
        return typeof t4 != "string" && t4 != null ? (e3 = t4.toString("hex")).substring(0, 8) + "-" + e3.substring(8, 12) + "-" + e3.substring(12, 16) + "-" + e3.substring(16, 20) + "-" + e3.substring(20, 32) : t4;
      }
      function m(t4, e3) {
        u.call(this, t4, e3, "UUID"), this.getters.push(function(t5) {
          return t5 != null && t5.$__ != null ? t5 : n.isBuffer(t5) ? b(t5) : t5 instanceof d ? b(t5.buffer) : l.isPOJO(t5) && t5.type === "Buffer" && Array.isArray(t5.data) ? b(n.from(t5.data)) : t5;
        });
      }
      function v(t4) {
        return this.cast(t4);
      }
      function g(t4) {
        var e3 = this;
        return t4.map(function(t5) {
          return e3.cast(t5);
        });
      }
      m.schemaName = "UUID", m.defaultOptions = {}, m.prototype = Object.create(u.prototype), m.prototype.constructor = m, m._cast = function(t4) {
        if (t4 == null)
          return t4;
        function e3(t5) {
          var e4 = new c(t5);
          return e4._subtype = 4, e4;
        }
        if (typeof t4 == "string") {
          if (p.test(t4))
            return y(t4);
          throw new f(m.schemaName, t4, this.path);
        }
        if (n.isBuffer(t4))
          return e3(t4);
        if (t4 instanceof d)
          return e3(t4.value(true));
        if (t4.toString && t4.toString !== Object.prototype.toString && p.test(t4.toString()))
          return y(t4.toString());
        throw new f(m.schemaName, t4, this.path);
      }, m.get = u.get, m.set = u.set, m.setters = [], m.cast = function(t4) {
        return arguments.length === 0 || (t4 === false && (t4 = this._defaultCaster), this._cast = t4), this._cast;
      }, m._checkRequired = function(t4) {
        return t4 != null;
      }, m.checkRequired = u.checkRequired, m.prototype.checkRequired = function(t4) {
        return n.isBuffer(t4) && (t4 = b(t4)), t4 != null && p.test(t4);
      }, m.prototype.cast = function(t4, e3, r3) {
        if (l.isNonBuiltinObject(t4) && u._isRef(this, t4, e3, r3))
          return this._castRef(t4, e3, r3);
        var n2;
        n2 = typeof this._castFunction == "function" ? this._castFunction : typeof this.constructor.cast == "function" ? this.constructor.cast() : m.cast();
        try {
          return n2(t4);
        } catch (e4) {
          throw new f(m.schemaName, t4, this.path, e4, this);
        }
      }, m.prototype.$conditionalHandlers = a(a({}, u.prototype.$conditionalHandlers), {}, { $bitsAllClear: h, $bitsAnyClear: h, $bitsAllSet: h, $bitsAnySet: h, $all: g, $gt: v, $gte: v, $in: g, $lt: v, $lte: v, $ne: v, $nin: g }), m.prototype.castForQuery = function(t4, e3, r3) {
        var n2;
        if (t4 != null) {
          if (!(n2 = this.$conditionalHandlers[t4]))
            throw new Error("Can't use " + t4 + " with UUID.");
          return n2.call(this, e3, r3);
        }
        try {
          return this.applySetters(e3, r3);
        } catch (t5) {
          throw t5 instanceof f && t5.path === this.path && this.$fullPath != null && (t5.path = this.$fullPath), t5;
        }
      }, t3.exports = m;
    }, 2319: (t3, e2, r2) => {
      var n = r2(5832).Buffer;
      function i(t4) {
        return i = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, i(t4);
      }
      var o = r2(9507), a = r2(1000), s = r2(1188), c = r2(3180), u = r2(1829), f = r2(9012), l = r2(6564), h = r2(4664), p = r2(3933), d = r2(5625).schemaTypeSymbol, y = r2(335), b = r2(5625).validatorErrorSymbol, m = r2(5625).documentIsModified, v = r2(5625).populateModelSymbol, g = o.CastError, _ = o.ValidatorError, w = { _skipMarkModified: true };
      function S(t4, e3, r3) {
        this[d] = true, this.path = t4, this.instance = r3, this.validators = [], this.getters = this.constructor.hasOwnProperty("getters") ? this.constructor.getters.slice() : [], this.setters = this.constructor.hasOwnProperty("setters") ? this.constructor.setters.slice() : [], this.splitPath(), e3 = e3 || {};
        for (var n2 = this.constructor.defaultOptions || {}, o2 = 0, s2 = Object.keys(n2);o2 < s2.length; o2++) {
          var c2 = s2[o2];
          c2 === "validate" ? this.validate(n2.validate) : n2.hasOwnProperty(c2) && !Object.prototype.hasOwnProperty.call(e3, c2) && (e3[c2] = n2[c2]);
        }
        e3.select == null && delete e3.select;
        var u2 = this.OptionsConstructor || a;
        this.options = new u2(e3), this._index = null, y.hasUserDefinedProperty(this.options, "immutable") && (this.$immutable = this.options.immutable, f(this));
        for (var l2 = 0, h2 = Object.keys(this.options);l2 < h2.length; l2++) {
          var p2 = h2[l2];
          if (p2 !== "cast") {
            if (y.hasUserDefinedProperty(this.options, p2) && typeof this[p2] == "function") {
              if (p2 === "index" && this._index) {
                if (e3.index === false) {
                  var b2 = this._index;
                  if (i(b2) === "object" && b2 != null) {
                    if (b2.unique)
                      throw new Error('Path "' + this.path + '" may not have `index` set to false and `unique` set to true');
                    if (b2.sparse)
                      throw new Error('Path "' + this.path + '" may not have `index` set to false and `sparse` set to true');
                  }
                  this._index = false;
                }
                continue;
              }
              var m2 = e3[p2];
              if (p2 === "default") {
                this.default(m2);
                continue;
              }
              var v2 = Array.isArray(m2) ? m2 : [m2];
              this[p2].apply(this, v2);
            }
          } else
            Array.isArray(this.options[p2]) ? this.castFunction.apply(this, this.options[p2]) : this.castFunction(this.options[p2]);
        }
        Object.defineProperty(this, "$$context", { enumerable: false, configurable: false, writable: true, value: null });
      }
      function O(t4, e3) {
        if (t4 !== undefined && !t4) {
          var r3 = new (e3.ErrorConstructor || _)(e3);
          return r3[b] = true, r3;
        }
      }
      function j(t4, e3) {
        return this.castForQuery(null, t4, e3);
      }
      function $(t4, e3) {
        var r3 = this;
        return Array.isArray(t4) ? t4.map(function(t5) {
          return Array.isArray(t5) && t5.length === 0 ? t5 : r3.castForQuery(null, t5, e3);
        }) : [this.castForQuery(null, t4, e3)];
      }
      S.prototype.OptionsConstructor = a, S.prototype.path, S.prototype.validators, S.prototype.isRequired, S.prototype.splitPath = function() {
        return this._presplitPath != null ? this._presplitPath : this.path != null ? (this._presplitPath = this.path.indexOf(".") === -1 ? [this.path] : this.path.split("."), this._presplitPath) : undefined;
      }, S.cast = function(t4) {
        return arguments.length === 0 || (t4 === false && (t4 = function(t5) {
          return t5;
        }), this._cast = t4), this._cast;
      }, S.prototype.castFunction = function(t4, e3) {
        return arguments.length === 0 ? this._castFunction : (t4 === false && (t4 = this.constructor._defaultCaster || function(t5) {
          return t5;
        }), typeof t4 == "string" ? (this._castErrorMessage = t4, this._castFunction) : (t4 != null && (this._castFunction = t4), e3 != null && (this._castErrorMessage = e3), this._castFunction));
      }, S.prototype.cast = function() {
        throw new Error("Base SchemaType class does not implement a `cast()` function");
      }, S.set = function(t4, e3) {
        this.hasOwnProperty("defaultOptions") || (this.defaultOptions = Object.assign({}, this.defaultOptions)), this.defaultOptions[t4] = e3;
      }, S.get = function(t4) {
        this.getters = this.hasOwnProperty("getters") ? this.getters : [], this.getters.push(t4);
      }, S.prototype.default = function(t4) {
        if (arguments.length === 1) {
          if (t4 === undefined)
            return void (this.defaultValue = undefined);
          if (t4 != null && t4.instanceOfSchema)
            throw new o("Cannot set default value of path `" + this.path + "` to a mongoose Schema instance.");
          return this.defaultValue = t4, this.defaultValue;
        }
        return arguments.length > 1 && (this.defaultValue = Array.prototype.slice.call(arguments)), this.defaultValue;
      }, S.prototype.index = function(t4) {
        return this._index = t4, y.expires(this._index), this;
      }, S.prototype.unique = function(t4) {
        if (this._index === false) {
          if (!t4)
            return;
          throw new Error('Path "' + this.path + '" may not have `index` set to false and `unique` set to true');
        }
        return this.options.hasOwnProperty("index") || t4 !== false ? (this._index == null || this._index === true ? this._index = {} : typeof this._index == "string" && (this._index = { type: this._index }), this._index.unique = t4, this) : this;
      }, S.prototype.text = function(t4) {
        if (this._index === false) {
          if (!t4)
            return this;
          throw new Error('Path "' + this.path + '" may not have `index` set to false and `text` set to true');
        }
        return this.options.hasOwnProperty("index") || t4 !== false ? (this._index === null || this._index === undefined || typeof this._index == "boolean" ? this._index = {} : typeof this._index == "string" && (this._index = { type: this._index }), this._index.text = t4, this) : this;
      }, S.prototype.sparse = function(t4) {
        if (this._index === false) {
          if (!t4)
            return this;
          throw new Error('Path "' + this.path + '" may not have `index` set to false and `sparse` set to true');
        }
        return this.options.hasOwnProperty("index") || t4 !== false ? (this._index == null || typeof this._index == "boolean" ? this._index = {} : typeof this._index == "string" && (this._index = { type: this._index }), this._index.sparse = t4, this) : this;
      }, S.prototype.immutable = function(t4) {
        return this.$immutable = t4, f(this), this;
      }, S.prototype.transform = function(t4) {
        return this.options.transform = t4, this;
      }, S.prototype.set = function(t4) {
        if (typeof t4 != "function")
          throw new TypeError("A setter must be a function.");
        return this.setters.push(t4), this;
      }, S.prototype.get = function(t4) {
        if (typeof t4 != "function")
          throw new TypeError("A getter must be a function.");
        return this.getters.push(t4), this;
      }, S.prototype.validateAll = function(t4) {
        for (var e3 = 0;e3 < t4.length; e3++)
          this.validate(t4[e3]);
        return this;
      }, S.prototype.validate = function(t4, e3, r3) {
        var n2, a2, s2, c2;
        if (typeof t4 == "function" || t4 && y.getFunctionName(t4.constructor) === "RegExp")
          return typeof e3 == "function" ? (n2 = { validator: t4, message: e3 }).type = r3 || "user defined" : e3 instanceof Object && !r3 ? ((n2 = h(e3) ? Object.assign({}, e3) : u(e3)).message || (n2.message = n2.msg), n2.validator = t4, n2.type = n2.type || "user defined") : (e3 == null && (e3 = o.messages.general.default), r3 || (r3 = "user defined"), n2 = { message: e3, type: r3, validator: t4 }), this.validators.push(n2), this;
        for (a2 = 0, s2 = arguments.length;a2 < s2; a2++) {
          if (c2 = arguments[a2], !y.isPOJO(c2)) {
            var f2 = "Invalid validator. Received (" + i(c2) + ") " + c2 + ". See https://mongoosejs.com/docs/api/schematype.html#SchemaType.prototype.validate()";
            throw new Error(f2);
          }
          this.validate(c2.validator, c2);
        }
        return this;
      }, S.prototype.required = function(t4, e3) {
        var r3 = {};
        if (arguments.length > 0 && t4 == null)
          return this.validators = this.validators.filter(function(t5) {
            return t5.validator !== this.requiredValidator;
          }, this), this.isRequired = false, delete this.originalRequiredValue, this;
        if (i(t4) === "object" && (e3 = (r3 = t4).message || e3, t4 = t4.isRequired), t4 === false)
          return this.validators = this.validators.filter(function(t5) {
            return t5.validator !== this.requiredValidator;
          }, this), this.isRequired = false, delete this.originalRequiredValue, this;
        var n2 = this;
        this.isRequired = true, this.requiredValidator = function(e4) {
          var r4 = this && this.$__ && this.$__.cachedRequired;
          if (r4 != null && !this.$__isSelected(n2.path) && !this[m](n2.path))
            return true;
          if (r4 != null && n2.path in r4) {
            var i2 = !r4[n2.path] || n2.checkRequired(e4, this);
            return delete r4[n2.path], i2;
          }
          return typeof t4 == "function" && !t4.apply(this) || n2.checkRequired(e4, this);
        }, this.originalRequiredValue = t4, typeof t4 == "string" && (e3 = t4, t4 = undefined);
        var a2 = e3 || o.messages.general.required;
        return this.validators.unshift(Object.assign({}, r3, { validator: this.requiredValidator, message: a2, type: "required" })), this;
      }, S.prototype.ref = function(t4) {
        return this.options.ref = t4, this;
      }, S.prototype.getDefault = function(t4, e3, r3) {
        var n2;
        if ((n2 = typeof this.defaultValue == "function" ? this.defaultValue === Date.now || this.defaultValue === Array || this.defaultValue.name.toLowerCase() === "objectid" ? this.defaultValue.call(t4) : this.defaultValue.call(t4, t4) : this.defaultValue) != null) {
          if (i(n2) !== "object" || this.options && this.options.shared || (n2 = u(n2)), r3 && r3.skipCast)
            return this._applySetters(n2, t4);
          var o2 = this.applySetters(n2, t4, e3, undefined, w);
          return o2 && !Array.isArray(o2) && o2.$isSingleNested && (o2.$__parent = t4), o2;
        }
        return n2;
      }, S.prototype._applySetters = function(t4, e3, r3, n2, i2) {
        var o2 = t4;
        if (r3)
          return o2;
        for (var a2 = this.setters, s2 = a2.length - 1;s2 >= 0; s2--)
          o2 = a2[s2].call(e3, o2, n2, this, i2);
        return o2;
      }, S.prototype._castNullish = function(t4) {
        return t4;
      }, S.prototype.applySetters = function(t4, e3, r3, n2, i2) {
        var o2 = this._applySetters(t4, e3, r3, n2, i2);
        return o2 == null ? this._castNullish(o2) : o2 = this.cast(o2, e3, r3, n2, i2);
      }, S.prototype.applyGetters = function(t4, e3) {
        var r3 = t4, n2 = this.getters, i2 = n2.length;
        if (i2 === 0)
          return r3;
        for (var o2 = 0;o2 < i2; ++o2)
          r3 = n2[o2].call(e3, r3, this);
        return r3;
      }, S.prototype.select = function(t4) {
        return this.selected = !!t4, this;
      }, S.prototype.doValidate = function(t4, e3, r3, n2) {
        var o2 = this, a2 = false, s2 = this.path;
        if (typeof e3 != "function")
          throw new TypeError("Must pass callback function to doValidate(), got ".concat(i(e3)));
        var c2 = this.validators.filter(function(t5) {
          return i(t5) === "object" && t5 !== null;
        }), f2 = c2.length;
        if (!f2)
          return e3(null);
        for (var l2 = function() {
          if (a2)
            return 0;
          var e4, i2 = c2[d2], f3 = i2.validator, l3 = h(i2) ? Object.assign({}, i2) : u(i2);
          if (l3.path = n2 && n2.path ? n2.path : s2, l3.fullPath = o2.$fullPath, l3.value = t4, f3 instanceof RegExp)
            return m2(f3.test(t4), l3, r3), 1;
          if (typeof f3 != "function")
            return 1;
          if (t4 === undefined && f3 !== o2.requiredValidator)
            return m2(true, l3, r3), 1;
          try {
            e4 = l3.propsParameter ? f3.call(r3, t4, l3) : f3.call(r3, t4);
          } catch (t5) {
            e4 = false, l3.reason = t5, t5.message && (l3.message = t5.message);
          }
          e4 != null && typeof e4.then == "function" ? e4.then(function(t5) {
            m2(t5, l3, r3);
          }, function(t5) {
            l3.reason = t5, l3.message = t5.message, m2(e4 = false, l3, r3);
          }) : m2(e4, l3, r3);
        }, d2 = 0, y2 = c2.length;d2 < y2 && l2() !== 0; ++d2)
          ;
        function m2(t5, r4, n3) {
          if (!a2)
            if (t5 === undefined || t5)
              --f2 <= 0 && p(function() {
                e3(null);
              });
            else {
              var i2 = r4.ErrorConstructor || _;
              (a2 = new i2(r4, n3))[b] = true, p(function() {
                e3(a2);
              });
            }
        }
      }, S.prototype.doValidateSync = function(t4, e3, r3) {
        var n2 = this.path;
        if (!this.validators.length)
          return null;
        var o2 = this.validators;
        if (t4 === undefined) {
          if (this.validators.length === 0 || this.validators[0].type !== "required")
            return null;
          o2 = [this.validators[0]];
        }
        var a2 = null, s2 = 0, c2 = o2.length;
        for (s2 = 0;s2 < c2; ++s2) {
          var f2 = o2[s2];
          if (f2 !== null && i(f2) === "object") {
            var p2 = f2.validator, d2 = h(f2) ? Object.assign({}, f2) : u(f2);
            d2.path = r3 && r3.path ? r3.path : n2, d2.fullPath = this.$fullPath, d2.value = t4;
            var y2 = false;
            if (!l(p2)) {
              if (p2 instanceof RegExp)
                a2 = O(p2.test(t4), d2);
              else if (typeof p2 == "function") {
                try {
                  y2 = d2.propsParameter ? p2.call(e3, t4, d2) : p2.call(e3, t4);
                } catch (t5) {
                  y2 = false, d2.reason = t5;
                }
                if ((y2 == null || typeof y2.then != "function") && (a2 = O(y2, d2)))
                  break;
              }
            }
          }
        }
        return a2;
      }, S._isRef = function(t4, e3, r3, i2) {
        var o2 = i2 && t4.options && (t4.options.ref || t4.options.refPath);
        if (!o2 && r3 && r3.$__ != null) {
          var a2 = r3.$__fullPath(t4.path, true), s2 = r3.ownerDocument();
          o2 = a2 != null && s2.$populated(a2) || r3.$populated(t4.path);
        }
        return !!o2 && (e3 == null || !(n.isBuffer(e3) || e3._bsontype === "Binary" || !y.isObject(e3)) || i2);
      }, S.prototype._castRef = function(t4, e3, r3) {
        if (t4 == null)
          return t4;
        if (t4.$__ != null)
          return t4.$__.wasPopulated = t4.$__.wasPopulated || { value: t4._doc._id }, t4;
        if (n.isBuffer(t4) || !y.isObject(t4)) {
          if (r3)
            return t4;
          throw new g(this.instance, t4, this.path, null, this);
        }
        var i2 = e3.$__fullPath(this.path, true), o2 = e3.ownerDocument().$populated(i2, true), a2 = t4;
        return e3.$__.populated && e3.$__.populated[i2] && e3.$__.populated[i2].options && e3.$__.populated[i2].options.options && e3.$__.populated[i2].options.options.lean || ((a2 = new o2.options[v](t4)).$__.wasPopulated = { value: a2._doc._id }), a2;
      }, S.prototype.$conditionalHandlers = { $all: function(t4, e3) {
        var r3 = this;
        return Array.isArray(t4) ? t4.map(function(t5) {
          return r3.castForQuery(null, t5, e3);
        }) : [this.castForQuery(null, t4, e3)];
      }, $eq: j, $in: $, $ne: j, $nin: $, $exists: s, $type: c }, S.prototype.castForQuery = function(t4, e3, r3) {
        var n2;
        if (t4 != null) {
          if (!(n2 = this.$conditionalHandlers[t4]))
            throw new Error("Can't use " + t4);
          return n2.call(this, e3, r3);
        }
        try {
          return this.applySetters(e3, r3);
        } catch (t5) {
          throw t5 instanceof g && t5.path === this.path && this.$fullPath != null && (t5.path = this.$fullPath), t5;
        }
      }, S.checkRequired = function(t4) {
        return arguments.length !== 0 && (this._checkRequired = t4), this._checkRequired;
      }, S.prototype.checkRequired = function(t4) {
        return t4 != null;
      }, S.prototype.clone = function() {
        var t4 = Object.assign({}, this.options), e3 = new this.constructor(this.path, t4, this.instance);
        return e3.validators = this.validators.slice(), this.requiredValidator !== undefined && (e3.requiredValidator = this.requiredValidator), this.defaultValue !== undefined && (e3.defaultValue = this.defaultValue), this.$immutable !== undefined && this.options.immutable === undefined && (e3.$immutable = this.$immutable, f(e3)), this._index !== undefined && (e3._index = this._index), this.selected !== undefined && (e3.selected = this.selected), this.isRequired !== undefined && (e3.isRequired = this.isRequired), this.originalRequiredValue !== undefined && (e3.originalRequiredValue = this.originalRequiredValue), e3.getters = this.getters.slice(), e3.setters = this.setters.slice(), e3;
      }, S.prototype.getEmbeddedSchemaType = function() {
        return this.$embeddedSchemaType;
      }, t3.exports = e2 = S, e2.CastError = g, e2.ValidatorError = _;
    }, 4494: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4, e3) {
        (e3 == null || e3 > t4.length) && (e3 = t4.length);
        for (var r3 = 0, n2 = Array(e3);r3 < e3; r3++)
          n2[r3] = t4[r3];
        return n2;
      }
      function o(t4, e3) {
        var r3 = Object.keys(t4);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(t4);
          e3 && (n2 = n2.filter(function(e4) {
            return Object.getOwnPropertyDescriptor(t4, e4).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function a(t4) {
        for (var e3 = 1;e3 < arguments.length; e3++) {
          var r3 = arguments[e3] != null ? arguments[e3] : {};
          e3 % 2 ? o(Object(r3), true).forEach(function(e4) {
            s(t4, e4, r3[e4]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(r3)) : o(Object(r3)).forEach(function(e4) {
            Object.defineProperty(t4, e4, Object.getOwnPropertyDescriptor(r3, e4));
          });
        }
        return t4;
      }
      function s(t4, e3, r3) {
        return (e3 = function(t5) {
          var e4 = function(t6) {
            if (n(t6) != "object" || !t6)
              return t6;
            var e5 = t6[Symbol.toPrimitive];
            if (e5 !== undefined) {
              var r4 = e5.call(t6, "string");
              if (n(r4) != "object")
                return r4;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t6);
          }(t5);
          return n(e4) == "symbol" ? e4 : e4 + "";
        }(e3)) in t4 ? Object.defineProperty(t4, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t4[e3] = r3, t4;
      }
      r2(335);
      var c = t3.exports = function() {
      };
      c.ctor = function() {
        var t4 = Array.prototype.slice.call(arguments), e3 = function() {
          c.apply(this, arguments), this.paths = {}, this.states = {};
        };
        return (e3.prototype = new c).constructor = e3, e3.prototype.stateNames = t4, t4.forEach(function(t5) {
          e3.prototype[t5] = function(e4) {
            this._changeState(e4, t5);
          };
        }), e3;
      }, c.prototype._changeState = function(t4, e3) {
        var r3 = this.paths[t4];
        if (r3 !== e3) {
          var n2 = this.states[r3];
          n2 && delete n2[t4], this.paths[t4] = e3, this.states[e3] = this.states[e3] || {}, this.states[e3][t4] = true;
        }
      }, c.prototype.clear = function(t4) {
        if (this.states[t4] != null)
          for (var e3, r3 = Object.keys(this.states[t4]), n2 = r3.length;n2--; )
            e3 = r3[n2], delete this.states[t4][e3], delete this.paths[e3];
      }, c.prototype.clearPath = function(t4) {
        var e3 = this.paths[t4];
        e3 && (delete this.paths[t4], delete this.states[e3][t4]);
      }, c.prototype.getStatePaths = function(t4) {
        return this.states[t4] != null ? this.states[t4] : {};
      }, c.prototype.some = function() {
        var t4 = this, e3 = arguments.length ? arguments : this.stateNames;
        return Array.prototype.some.call(e3, function(e4) {
          return t4.states[e4] != null && Object.keys(t4.states[e4]).length;
        });
      }, c.prototype._iter = function(t4) {
        return function() {
          var e3 = Array.prototype.slice.call(arguments), r3 = e3.pop();
          e3.length || (e3 = this.stateNames);
          var n2 = this;
          return e3.reduce(function(t5, e4) {
            return n2.states[e4] == null ? t5 : t5.concat(Object.keys(n2.states[e4]));
          }, [])[t4](function(t5, e4, n3) {
            return r3(t5, e4, n3);
          });
        };
      }, c.prototype.forEach = function() {
        return this.forEach = this._iter("forEach"), this.forEach.apply(this, arguments);
      }, c.prototype.map = function() {
        return this.map = this._iter("map"), this.map.apply(this, arguments);
      }, c.prototype.clone = function() {
        var t4 = new this.constructor;
        t4.paths = a({}, this.paths);
        var e3, r3 = function(t5, e4) {
          var r4 = typeof Symbol != "undefined" && t5[Symbol.iterator] || t5["@@iterator"];
          if (!r4) {
            if (Array.isArray(t5) || (r4 = function(t6, e5) {
              if (t6) {
                if (typeof t6 == "string")
                  return i(t6, e5);
                var r5 = {}.toString.call(t6).slice(8, -1);
                return r5 === "Object" && t6.constructor && (r5 = t6.constructor.name), r5 === "Map" || r5 === "Set" ? Array.from(t6) : r5 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r5) ? i(t6, e5) : undefined;
              }
            }(t5)) || e4 && t5 && typeof t5.length == "number") {
              r4 && (t5 = r4);
              var n3 = 0, o2 = function() {
              };
              return { s: o2, n: function() {
                return n3 >= t5.length ? { done: true } : { done: false, value: t5[n3++] };
              }, e: function(t6) {
                throw t6;
              }, f: o2 };
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          var a2, s2 = true, c2 = false;
          return { s: function() {
            r4 = r4.call(t5);
          }, n: function() {
            var t6 = r4.next();
            return s2 = t6.done, t6;
          }, e: function(t6) {
            c2 = true, a2 = t6;
          }, f: function() {
            try {
              s2 || r4.return == null || r4.return();
            } finally {
              if (c2)
                throw a2;
            }
          } };
        }(this.stateNames);
        try {
          for (r3.s();!(e3 = r3.n()).done; ) {
            var n2 = e3.value;
            n2 in this.states && (t4.states[n2] = this.states[n2] == null ? this.states[n2] : a({}, this.states[n2]));
          }
        } catch (t5) {
          r3.e(t5);
        } finally {
          r3.f();
        }
        return t4;
      };
    }, 2918: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4, e3, r3) {
        return (e3 = function(t5) {
          var e4 = function(t6) {
            if (n(t6) != "object" || !t6)
              return t6;
            var e5 = t6[Symbol.toPrimitive];
            if (e5 !== undefined) {
              var r4 = e5.call(t6, "string");
              if (n(r4) != "object")
                return r4;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t6);
          }(t5);
          return n(e4) == "symbol" ? e4 : e4 + "";
        }(e3)) in t4 ? Object.defineProperty(t4, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t4[e3] = r3, t4;
      }
      var o = r2(3293), a = r2(9987), s = r2(5625).arrayAtomicsSymbol, c = r2(5625).arrayAtomicsBackupSymbol, u = r2(5625).arrayParentSymbol, f = r2(5625).arrayPathSymbol, l = r2(5625).arraySchemaSymbol, h = Array.prototype.push, p = /^\d+$/;
      t3.exports = function(t4, e3, r3, n2) {
        var d;
        if (Array.isArray(t4)) {
          var y = t4.length;
          if (y === 0)
            d = new Array;
          else if (y === 1)
            (d = new Array(1))[0] = t4[0];
          else if (y < 1e4)
            d = new Array, h.apply(d, t4);
          else {
            d = new Array;
            for (var b = 0;b < y; ++b)
              h.call(d, t4[b]);
          }
        } else
          d = [];
        var m = i(i(i(i(i(i(i(i({}, s, {}), c, undefined), f, e3), l, n2), u, undefined), "isMongooseArray", true), "isMongooseArrayProxy", true), "__array", d);
        t4 && t4[s] != null && (m[s] = t4[s]), r3 != null && r3 instanceof o && (m[u] = r3, m[l] = n2 || r3.schema.path(e3));
        var v = new Proxy(d, { get: function(t5, e4) {
          return m.hasOwnProperty(e4) ? m[e4] : a.hasOwnProperty(e4) ? a[e4] : typeof e4 == "string" && p.test(e4) && (n2 == null ? undefined : n2.$embeddedSchemaType) != null ? n2.$embeddedSchemaType.applyGetters(d[e4], r3) : d[e4];
        }, set: function(t5, e4, r4) {
          return typeof e4 == "string" && p.test(e4) ? a.set.call(v, e4, r4, false) : m.hasOwnProperty(e4) ? m[e4] = r4 : d[e4] = r4, true;
        } });
        return v;
      };
    }, 9240: (t3, e2) => {
      e2.isMongooseArray = function(t4) {
        return Array.isArray(t4) && t4.isMongooseArray;
      };
    }, 9987: (t3, e2, r2) => {
      var n = r2(5832).Buffer;
      function i(t4) {
        return i = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, i(t4);
      }
      function o(t4, e3) {
        var r3 = typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
        if (!r3) {
          if (Array.isArray(t4) || (r3 = a(t4)) || e3 && t4 && typeof t4.length == "number") {
            r3 && (t4 = r3);
            var n2 = 0, i2 = function() {
            };
            return { s: i2, n: function() {
              return n2 >= t4.length ? { done: true } : { done: false, value: t4[n2++] };
            }, e: function(t5) {
              throw t5;
            }, f: i2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var o2, s2 = true, c2 = false;
        return { s: function() {
          r3 = r3.call(t4);
        }, n: function() {
          var t5 = r3.next();
          return s2 = t5.done, t5;
        }, e: function(t5) {
          c2 = true, o2 = t5;
        }, f: function() {
          try {
            s2 || r3.return == null || r3.return();
          } finally {
            if (c2)
              throw o2;
          }
        } };
      }
      function a(t4, e3) {
        if (t4) {
          if (typeof t4 == "string")
            return s(t4, e3);
          var r3 = {}.toString.call(t4).slice(8, -1);
          return r3 === "Object" && t4.constructor && (r3 = t4.constructor.name), r3 === "Map" || r3 === "Set" ? Array.from(t4) : r3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r3) ? s(t4, e3) : undefined;
        }
      }
      function s(t4, e3) {
        (e3 == null || e3 > t4.length) && (e3 = t4.length);
        for (var r3 = 0, n2 = Array(e3);r3 < e3; r3++)
          n2[r3] = t4[r3];
        return n2;
      }
      var c = r2(3293), u = r2(8578), f = r2(7026), l = r2(8208), h = r2(1829), p = r2(3920)._, d = r2(5678), y = r2(335), b = r2(2128), m = r2(5625).arrayAtomicsSymbol, v = r2(5625).arrayParentSymbol, g = r2(5625).arrayPathSymbol, _ = r2(5625).arraySchemaSymbol, w = r2(5625).populateModelSymbol, S = Symbol("mongoose#Array#sliced"), O = Array.prototype.push, j = { $__getAtomics: function() {
        var t4 = [], e3 = Object.keys(this[m] || {}), r3 = e3.length, n2 = Object.assign({}, p, { _isNested: true });
        if (r3 === 0)
          return t4[0] = ["$set", this.toObject(n2)], t4;
        for (;r3--; ) {
          var i2 = e3[r3], o2 = this[m][i2];
          y.isMongooseObject(o2) ? o2 = o2.toObject(n2) : Array.isArray(o2) ? o2 = this.toObject.call(o2, n2) : o2 != null && Array.isArray(o2.$each) ? o2.$each = this.toObject.call(o2.$each, n2) : o2 != null && typeof o2.valueOf == "function" && (o2 = o2.valueOf()), i2 === "$addToSet" && (o2 = { $each: o2 }), t4.push([i2, o2]);
        }
        return t4;
      }, $atomics: function() {
        return this[m];
      }, $parent: function() {
        return this[v];
      }, $path: function() {
        return this[g];
      }, $shift: function() {
        this._registerAtomic("$pop", -1), this._markModified();
        var t4 = this.__array;
        if (!t4._shifted)
          return t4._shifted = true, [].shift.call(t4);
      }, $pop: function() {
        if (this._registerAtomic("$pop", 1), this._markModified(), !this._popped)
          return this._popped = true, [].pop.call(this);
      }, $schema: function() {
        return this[_];
      }, _cast: function(t4) {
        var e3, r3 = false, i2 = this[v];
        if (i2 && (r3 = i2.$populated(this[g], true)), r3 && t4 != null) {
          if ((e3 = r3.options[w]) == null)
            throw new f("No populated model found for path `" + this[g] + "`. This is likely a bug in Mongoose, please report an issue on github.com/Automattic/mongoose.");
          return (n.isBuffer(t4) || b(t4, "ObjectId") || !y.isObject(t4)) && (t4 = { _id: t4 }), t4.schema && t4.schema.discriminatorMapping && t4.schema.discriminatorMapping.key !== undefined || (t4 = new e3(t4)), this[_].caster.applySetters(t4, i2, true);
        }
        return this[_].caster.applySetters(t4, i2, false);
      }, _mapCast: function(t4, e3) {
        return this._cast(t4, this.length + e3);
      }, _markModified: function(t4) {
        var e3, r3 = this[v];
        if (r3) {
          if (e3 = this[g], arguments.length && (e3 = e3 + "." + t4), e3 != null && e3.endsWith(".$"))
            return this;
          r3.markModified(e3, arguments.length !== 0 ? t4 : r3);
        }
        return this;
      }, _registerAtomic: function(t4, e3) {
        if (!this[S]) {
          if (t4 === "$set")
            return this[m] = { $set: e3 }, l(this[v], this[g]), this._markModified(), this;
          var r3, n2 = this[m];
          if (t4 === "$pop" && !("$pop" in n2)) {
            var i2 = this;
            this[v].once("save", function() {
              i2._popped = i2._shifted = null;
            });
          }
          if (n2.$set || Object.keys(n2).length && !(t4 in n2))
            return this[m] = { $set: this }, this;
          if (t4 === "$pullAll" || t4 === "$addToSet")
            n2[t4] || (n2[t4] = []), n2[t4] = n2[t4].concat(e3);
          else if (t4 === "$pullDocs") {
            var c2 = n2.$pull || (n2.$pull = {});
            e3[0] instanceof u ? (r3 = c2.$or || (c2.$or = []), Array.prototype.push.apply(r3, e3.map(function(t5) {
              return t5.toObject({ transform: function(e4, r4) {
                return t5 == null || t5.$__ == null || Object.keys(t5.$__.activePaths.getStatePaths("default")).forEach(function(t6) {
                  d.unset(t6, r4), $(r4, t6);
                }), r4;
              }, virtuals: false });
            }))) : (r3 = c2._id || (c2._id = { $in: [] })).$in = r3.$in.concat(e3);
          } else if (t4 === "$push")
            if (n2.$push = n2.$push || { $each: [] }, e3 != null && y.hasUserDefinedProperty(e3, "$each"))
              n2.$push = e3;
            else if (e3.length === 1)
              n2.$push.$each.push(e3[0]);
            else if (e3.length < 1e4) {
              var f2;
              (f2 = n2.$push.$each).push.apply(f2, function(t5) {
                if (Array.isArray(t5))
                  return s(t5);
              }(_2 = e3) || function(t5) {
                if (typeof Symbol != "undefined" && t5[Symbol.iterator] != null || t5["@@iterator"] != null)
                  return Array.from(t5);
              }(_2) || a(_2) || function() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
              }());
            } else {
              var h2, p2 = o(e3);
              try {
                for (p2.s();!(h2 = p2.n()).done; ) {
                  var b2 = h2.value;
                  n2.$push.$each.push(b2);
                }
              } catch (t5) {
                p2.e(t5);
              } finally {
                p2.f();
              }
            }
          else
            n2[t4] = e3;
          return this;
        }
        var _2;
      }, addToSet: function() {
        A(this, arguments), E(this, arguments);
        var t4 = [].map.call(arguments, this._mapCast, this), e3 = [], r3 = "";
        t4[0] instanceof u ? r3 = "doc" : t4[0] instanceof Date ? r3 = "date" : b(t4[0], "ObjectId") && (r3 = "ObjectId");
        var n2 = y.isMongooseArray(t4) ? t4.__array : t4, i2 = y.isMongooseArray(this) ? this.__array : this;
        return n2.forEach(function(t5) {
          var n3, o2 = +t5;
          switch (r3) {
            case "doc":
              n3 = this.some(function(e4) {
                return e4.equals(t5);
              });
              break;
            case "date":
              n3 = this.some(function(t6) {
                return +t6 === o2;
              });
              break;
            case "ObjectId":
              n3 = this.find(function(e4) {
                return e4.toString() === t5.toString();
              });
              break;
            default:
              n3 = ~this.indexOf(t5);
          }
          n3 || (this._markModified(), i2.push(t5), this._registerAtomic("$addToSet", t5), [].push.call(e3, t5));
        }, this), e3;
      }, hasAtomics: function() {
        return y.isPOJO(this[m]) ? Object.keys(this[m]).length : 0;
      }, includes: function(t4, e3) {
        return this.indexOf(t4, e3) !== -1;
      }, indexOf: function(t4, e3) {
        b(t4, "ObjectId") && (t4 = t4.toString()), e3 = e3 == null ? 0 : e3;
        for (var r3 = this.length, n2 = e3;n2 < r3; ++n2)
          if (t4 == this[n2])
            return n2;
        return -1;
      }, inspect: function() {
        return JSON.stringify(this);
      }, nonAtomicPush: function() {
        var t4 = [].map.call(arguments, this._mapCast, this);
        this._markModified();
        var e3 = [].push.apply(this, t4);
        return this._registerAtomic("$set", this), e3;
      }, pop: function() {
        this._markModified();
        var t4 = [].pop.call(this);
        return this._registerAtomic("$set", this), t4;
      }, pull: function() {
        var t4 = this, e3 = [].map.call(arguments, function(e4, r4) {
          return t4._cast(e4, r4, { defaults: false });
        }, this), r3 = this[v].get(this[g]);
        y.isMongooseArray(r3) && (r3 = r3.__array);
        var n2, i2 = r3.length;
        for (this._markModified();i2--; )
          (n2 = r3[i2]) instanceof c ? e3.some(function(t5) {
            return n2.equals(t5);
          }) && r3.splice(i2, 1) : ~this.indexOf.call(e3, n2) && r3.splice(i2, 1);
        return e3[0] instanceof u ? this._registerAtomic("$pullDocs", e3.map(function(t5) {
          var e4 = t5.$__getValue("_id");
          return e4 === undefined || t5.$isDefault("_id") ? t5 : e4;
        })) : this._registerAtomic("$pullAll", e3), l(this[v], this[g]) > 0 && this._registerAtomic("$set", this), this;
      }, push: function() {
        var t4, e3 = arguments, r3 = e3, n2 = e3[0] != null && y.hasUserDefinedProperty(e3[0], "$each"), i2 = y.isMongooseArray(this) ? this.__array : this;
        if (n2 && (r3 = e3[0], e3 = e3[0].$each), this[_] == null)
          return O.apply(this, e3);
        A(this, e3), E(this, e3), e3 = [].map.call(e3, this._mapCast, this);
        var o2 = this[m];
        return this._markModified(), n2 ? (r3.$each = e3, (o2.$push && o2.$push.$each && o2.$push.$each.length || 0) !== 0 && o2.$push.$position != r3.$position ? (r3.$position != null ? ([].splice.apply(i2, [r3.$position, 0].concat(e3)), t4 = i2.length) : t4 = [].push.apply(i2, e3), this._registerAtomic("$set", this)) : r3.$position != null ? ([].splice.apply(i2, [r3.$position, 0].concat(e3)), t4 = this.length) : t4 = [].push.apply(i2, e3)) : (r3 = e3, t4 = O.apply(i2, e3)), this._registerAtomic("$push", r3), t4;
      }, remove: function() {
        return this.pull.apply(this, arguments);
      }, set: function(t4, e3, r3) {
        var n2 = this.__array;
        if (r3)
          return n2[t4] = e3, this;
        var i2 = j._cast.call(this, e3, t4);
        return j._markModified.call(this, t4), n2[t4] = i2, this;
      }, shift: function() {
        var t4 = y.isMongooseArray(this) ? this.__array : this;
        this._markModified();
        var e3 = [].shift.call(t4);
        return this._registerAtomic("$set", this), e3;
      }, sort: function() {
        var t4 = y.isMongooseArray(this) ? this.__array : this, e3 = [].sort.apply(t4, arguments);
        return this._registerAtomic("$set", this), e3;
      }, splice: function() {
        var t4, e3 = y.isMongooseArray(this) ? this.__array : this;
        if (this._markModified(), A(this, Array.prototype.slice.call(arguments, 2)), arguments.length) {
          var r3;
          if (this[_] == null)
            r3 = arguments;
          else {
            r3 = [];
            for (var n2 = 0;n2 < arguments.length; ++n2)
              r3[n2] = n2 < 2 ? arguments[n2] : this._cast(arguments[n2], arguments[0] + (n2 - 2));
          }
          t4 = [].splice.apply(e3, r3), this._registerAtomic("$set", this);
        }
        return t4;
      }, toBSON: function() {
        return this.toObject(p);
      }, toObject: function(t4) {
        var e3 = y.isMongooseArray(this) ? this.__array : this;
        return t4 && t4.depopulate ? ((t4 = h(t4))._isNested = true, [].concat(e3).map(function(e4) {
          return e4 instanceof c ? e4.toObject(t4) : e4;
        })) : [].concat(e3);
      }, $toObject: function() {
        return this.constructor.prototype.toObject.apply(this, arguments);
      }, unshift: function() {
        var t4;
        A(this, arguments), t4 = this[_] == null ? arguments : [].map.call(arguments, this._cast, this);
        var e3 = y.isMongooseArray(this) ? this.__array : this;
        return this._markModified(), [].unshift.apply(e3, t4), this._registerAtomic("$set", this), this.length;
      } };
      function $(t4, e3, r3) {
        if (typeof e3 == "string") {
          if (e3.indexOf(".") === -1)
            return;
          e3 = d.stringToParts(e3);
        }
        (r3 = r3 || 0) >= e3.length || t4 != null && i(t4) === "object" && ($(t4[e3[0]], e3, r3 + 1), t4[e3[0]] != null && i(t4[e3[0]]) === "object" && Object.keys(t4[e3[0]]).length === 0 && delete t4[e3[0]]);
      }
      function A(t4, e3) {
        var r3, n2, a2, s2 = t4 == null ? null : t4[_] && t4[_].caster && t4[_].caster.options && t4[_].caster.options.ref || null;
        t4.length === 0 && e3.length !== 0 && function(t5, e4) {
          if (!e4)
            return false;
          var r4, n3 = o(t5);
          try {
            for (n3.s();!(r4 = n3.n()).done; ) {
              var i2 = r4.value;
              if (i2 == null)
                return false;
              var a3 = i2.constructor;
              if (!(i2 instanceof c) || a3.modelName !== e4 && a3.baseModelName !== e4)
                return false;
            }
          } catch (t6) {
            n3.e(t6);
          } finally {
            n3.f();
          }
          return true;
        }(e3, s2) && t4[v].$populated(t4[g], [], (r3 = {}, n2 = w, a2 = e3[0].constructor, ((n2 = function(t5) {
          var e4 = function(t6) {
            if (i(t6) != "object" || !t6)
              return t6;
            var e5 = t6[Symbol.toPrimitive];
            if (e5 !== undefined) {
              var r4 = e5.call(t6, "string");
              if (i(r4) != "object")
                return r4;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t6);
          }(t5);
          return i(e4) == "symbol" ? e4 : e4 + "";
        }(n2)) in r3) ? Object.defineProperty(r3, n2, { value: a2, enumerable: true, configurable: true, writable: true }) : r3[n2] = a2, r3));
      }
      function E(t4, e3) {
        var r3 = t4 == null ? null : t4[_] && t4[_].caster && t4[_].caster.options && t4[_].caster.options.ref || null, a2 = t4[v], s2 = t4[g];
        if (r3 && a2.populated(s2)) {
          var c2, u2 = o(e3);
          try {
            for (u2.s();!(c2 = u2.n()).done; ) {
              var f2 = c2.value;
              if (f2 != null && (i(f2) !== "object" || f2 instanceof String || f2 instanceof Number || f2 instanceof n || y.isMongooseType(f2))) {
                a2.depopulate(s2);
                break;
              }
            }
          } catch (t5) {
            u2.e(t5);
          } finally {
            u2.f();
          }
        }
      }
      for (var x = function() {
        var t4 = k[P];
        if (Array.prototype[t4] == null)
          return 1;
        j[t4] = function() {
          var e3 = y.isMongooseArray(this) ? this.__array : this, r3 = [].concat(e3);
          return r3[t4].apply(r3, arguments);
        };
      }, P = 0, k = ["filter", "flat", "flatMap", "map", "slice"];P < k.length; P++)
        x();
      t3.exports = j;
    }, 8578: (t3, e2, r2) => {
      function n(t4, e3) {
        var r3 = Object.keys(t4);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(t4);
          e3 && (n2 = n2.filter(function(e4) {
            return Object.getOwnPropertyDescriptor(t4, e4).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function i(t4, e3, r3) {
        return (e3 = function(t5) {
          var e4 = function(t6) {
            if (o(t6) != "object" || !t6)
              return t6;
            var e5 = t6[Symbol.toPrimitive];
            if (e5 !== undefined) {
              var r4 = e5.call(t6, "string");
              if (o(r4) != "object")
                return r4;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t6);
          }(t5);
          return o(e4) == "symbol" ? e4 : e4 + "";
        }(e3)) in t4 ? Object.defineProperty(t4, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t4[e3] = r3, t4;
      }
      function o(t4) {
        return o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, o(t4);
      }
      var a = r2(3550).EventEmitter, s = r2(292), c = r2(335), u = r2(5625).documentArrayParent;
      function f(t4, e3, r3, a2, f2) {
        var l2;
        c.isMongooseDocumentArray(e3) ? (this.__parentArray = e3, this[u] = e3.$parent()) : (this.__parentArray = undefined, this[u] = undefined), this.$setIndex(f2), this.$__parent = this[u], o(r3) === "object" && r3 != null ? (l2 = function(t5) {
          for (var e4 = 1;e4 < arguments.length; e4++) {
            var r4 = arguments[e4] != null ? arguments[e4] : {};
            e4 % 2 ? n(Object(r4), true).forEach(function(e5) {
              i(t5, e5, r4[e5]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t5, Object.getOwnPropertyDescriptors(r4)) : n(Object(r4)).forEach(function(e5) {
              Object.defineProperty(t5, e5, Object.getOwnPropertyDescriptor(r4, e5));
            });
          }
          return t5;
        }({ isNew: true }, r3), r3 = undefined) : l2 = { isNew: true }, s.call(this, t4, a2, this[u], r3, l2);
      }
      for (var l in f.prototype = Object.create(s.prototype), f.prototype.constructor = f, Object.defineProperty(f.prototype, "$isSingleNested", { configurable: false, writable: false, value: false }), Object.defineProperty(f.prototype, "$isDocumentArrayElement", { configurable: false, writable: false, value: true }), a.prototype)
        f[l] = a.prototype[l];
      f.prototype.$setIndex = function(t4) {
        if (this.__index = t4, this.$__ != null && this.$__.validationError != null)
          for (var e3 = 0, r3 = Object.keys(this.$__.validationError.errors);e3 < r3.length; e3++) {
            var n2 = r3[e3];
            this.invalidate(n2, this.$__.validationError.errors[n2]);
          }
      }, f.prototype.populate = function() {
        throw new Error('Mongoose does not support calling populate() on nested docs. Instead of `doc.arr[0].populate("path")`, use `doc.populate("arr.0.path")`');
      }, f.prototype.$__removeFromParent = function() {
        var t4 = this._doc._id;
        if (!t4)
          throw new Error("For your own good, Mongoose does not know how to remove an ArraySubdocument that has no _id");
        this.__parentArray.pull({ _id: t4 });
      }, f.prototype.$__fullPath = function(t4, e3) {
        return this.__index == null ? null : (this.$__.fullPath || this.ownerDocument(), e3 ? t4 ? this.$__.fullPath + "." + t4 : this.$__.fullPath : t4 ? this.$__.fullPath + "." + this.__index + "." + t4 : this.$__.fullPath + "." + this.__index);
      }, f.prototype.$__pathRelativeToParent = function(t4, e3) {
        return this.__index != null && this.__parentArray && this.__parentArray.$path ? e3 ? t4 == null ? this.__parentArray.$path() : this.__parentArray.$path() + "." + t4 : t4 == null ? this.__parentArray.$path() + "." + this.__index : this.__parentArray.$path() + "." + this.__index + "." + t4 : null;
      }, f.prototype.$parent = function() {
        return this[u];
      }, f.prototype.parentArray = function() {
        return this.__parentArray;
      }, t3.exports = f;
    }, 9820: (t3, e2, r2) => {
      var n = r2(5832).Buffer, i = r2(3633).Binary, o = r2(335);
      function a(t4, e3, r3) {
        var i2, s2, u, f, l = t4;
        return t4 == null && (l = 0), Array.isArray(e3) ? (s2 = e3[0], u = e3[1]) : i2 = e3, f = typeof l == "number" || l instanceof Number ? n.alloc(l) : n.from(l, i2, r3), o.decorate(f, a.mixin), f.isMongooseBuffer = true, f[a.pathSymbol] = s2, f[c] = u, f._subtype = 0, f;
      }
      var s = Symbol.for("mongoose#Buffer#_path"), c = Symbol.for("mongoose#Buffer#_parent");
      a.pathSymbol = s, a.mixin = { _subtype: undefined, _markModified: function() {
        var t4 = this[c];
        return t4 && t4.markModified(this[a.pathSymbol]), this;
      }, write: function() {
        var t4 = n.prototype.write.apply(this, arguments);
        return t4 > 0 && this._markModified(), t4;
      }, copy: function(t4) {
        var e3 = n.prototype.copy.apply(this, arguments);
        return t4 && t4.isMongooseBuffer && t4._markModified(), e3;
      } }, o.each(["writeUInt8", "writeUInt16", "writeUInt32", "writeInt8", "writeInt16", "writeInt32", "writeFloat", "writeDouble", "fill", "utf8Write", "binaryWrite", "asciiWrite", "set", "writeUInt16LE", "writeUInt16BE", "writeUInt32LE", "writeUInt32BE", "writeInt16LE", "writeInt16BE", "writeInt32LE", "writeInt32BE", "writeFloatLE", "writeFloatBE", "writeDoubleLE", "writeDoubleBE"], function(t4) {
        n.prototype[t4] && (a.mixin[t4] = function() {
          var e3 = n.prototype[t4].apply(this, arguments);
          return this._markModified(), e3;
        });
      }), a.mixin.toObject = function(t4) {
        var e3 = typeof t4 == "number" ? t4 : this._subtype || 0;
        return new i(n.from(this), e3);
      }, a.mixin.$toObject = a.mixin.toObject, a.mixin.toBSON = function() {
        return new i(this, this._subtype || 0);
      }, a.mixin.equals = function(t4) {
        if (!n.isBuffer(t4))
          return false;
        if (this.length !== t4.length)
          return false;
        for (var e3 = 0;e3 < this.length; ++e3)
          if (this[e3] !== t4[e3])
            return false;
        return true;
      }, a.mixin.subtype = function(t4) {
        if (typeof t4 != "number")
          throw new TypeError("Invalid subtype. Expected a number");
        this._subtype !== t4 && this._markModified(), this._subtype = t4;
      }, a.Binary = i, t3.exports = a;
    }, 9394: (t3, e2, r2) => {
      t3.exports = r2(3633).Decimal128;
    }, 4941: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4, e3, r3) {
        return (e3 = function(t5) {
          var e4 = function(t6) {
            if (n(t6) != "object" || !t6)
              return t6;
            var e5 = t6[Symbol.toPrimitive];
            if (e5 !== undefined) {
              var r4 = e5.call(t6, "string");
              if (n(r4) != "object")
                return r4;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t6);
          }(t5);
          return n(e4) == "symbol" ? e4 : e4 + "";
        }(e3)) in t4 ? Object.defineProperty(t4, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t4[e3] = r3, t4;
      }
      var o = r2(9987), a = r2(1520), s = r2(3293), c = r2(5625).arrayAtomicsSymbol, u = r2(5625).arrayAtomicsBackupSymbol, f = r2(5625).arrayParentSymbol, l = r2(5625).arrayPathSymbol, h = r2(5625).arraySchemaSymbol, p = Array.prototype.push, d = /^\d+$/;
      t3.exports = function(t4, e3, r3) {
        var n2 = [], y = i(i(i(i(i({}, c, {}), u, undefined), l, e3), h, undefined), f, undefined);
        if (Array.isArray(t4) && (t4[l] === e3 && t4[f] === r3 && (y[c] = Object.assign({}, t4[c])), t4.forEach(function(t5) {
          p.call(n2, t5);
        })), y[l] = e3, y.__array = n2, r3 && r3 instanceof s)
          for (y[f] = r3, y[h] = r3.$__schema.path(e3);y[h] != null && y[h].$isMongooseArray && !y[h].$isMongooseDocumentArray; )
            y[h] = y[h].casterConstructor;
        var b = new Proxy(n2, { get: function(t5, e4) {
          return e4 === "isMongooseArray" || e4 === "isMongooseArrayProxy" || e4 === "isMongooseDocumentArray" || e4 === "isMongooseDocumentArrayProxy" || (y.hasOwnProperty(e4) ? y[e4] : a.hasOwnProperty(e4) ? a[e4] : o.hasOwnProperty(e4) ? o[e4] : n2[e4]);
        }, set: function(t5, e4, r4) {
          return typeof e4 == "string" && d.test(e4) ? a.set.call(b, e4, r4, false) : y.hasOwnProperty(e4) ? y[e4] = r4 : n2[e4] = r4, true;
        } });
        return b;
      };
    }, 3640: (t3, e2) => {
      e2.isMongooseDocumentArray = function(t4) {
        return Array.isArray(t4) && t4.isMongooseDocumentArray;
      };
    }, 1520: (t3, e2, r2) => {
      var n = r2(5832).Buffer;
      function i(t4, e3) {
        var r3 = typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
        if (!r3) {
          if (Array.isArray(t4) || (r3 = function(t5, e4) {
            if (t5) {
              if (typeof t5 == "string")
                return o(t5, e4);
              var r4 = {}.toString.call(t5).slice(8, -1);
              return r4 === "Object" && t5.constructor && (r4 = t5.constructor.name), r4 === "Map" || r4 === "Set" ? Array.from(t5) : r4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4) ? o(t5, e4) : undefined;
            }
          }(t4)) || e3 && t4 && typeof t4.length == "number") {
            r3 && (t4 = r3);
            var n2 = 0, i2 = function() {
            };
            return { s: i2, n: function() {
              return n2 >= t4.length ? { done: true } : { done: false, value: t4[n2++] };
            }, e: function(t5) {
              throw t5;
            }, f: i2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var a2, s2 = true, c2 = false;
        return { s: function() {
          r3 = r3.call(t4);
        }, n: function() {
          var t5 = r3.next();
          return s2 = t5.done, t5;
        }, e: function(t5) {
          c2 = true, a2 = t5;
        }, f: function() {
          try {
            s2 || r3.return == null || r3.return();
          } finally {
            if (c2)
              throw a2;
          }
        } };
      }
      function o(t4, e3) {
        (e3 == null || e3 > t4.length) && (e3 = t4.length);
        for (var r3 = 0, n2 = Array(e3);r3 < e3; r3++)
          n2[r3] = t4[r3];
        return n2;
      }
      var a = r2(9987), s = r2(3293), c = r2(8092), u = r2(7785), f = r2(3920)._, l = r2(335), h = r2(2128), p = r2(5625).arrayParentSymbol, d = r2(5625).arrayPathSymbol, y = r2(5625).arraySchemaSymbol, b = r2(5625).documentArrayParent, m = Array.prototype.toString, v = { toBSON: function() {
        return this.toObject(f);
      }, toString: function() {
        return m.call(this.__array.map(function(t4) {
          return t4 != null && t4.$__ != null ? t4.toString() : t4;
        }));
      }, getArrayParent: function() {
        return this[p];
      }, _cast: function(t4, e3, r3) {
        if (this[y] == null)
          return t4;
        var i2 = this[y].casterConstructor;
        if ((i2.$isMongooseDocumentArray ? l.isMongooseDocumentArray(t4) : t4 instanceof i2) || t4 && t4.constructor && t4.constructor.baseCasterConstructor === i2)
          return t4[b] && t4.__parentArray || (t4[b] = this[p], t4.__parentArray = this), t4.$setIndex(e3), t4;
        if (t4 == null)
          return null;
        if ((n.isBuffer(t4) || h(t4, "ObjectId") || !l.isObject(t4)) && (t4 = { _id: t4 }), t4 && i2.discriminators && i2.schema && i2.schema.options && i2.schema.options.discriminatorKey)
          if (typeof t4[i2.schema.options.discriminatorKey] == "string" && i2.discriminators[t4[i2.schema.options.discriminatorKey]])
            i2 = i2.discriminators[t4[i2.schema.options.discriminatorKey]];
          else {
            var o2 = u(i2.discriminators, t4[i2.schema.options.discriminatorKey]);
            o2 && (i2 = o2);
          }
        if (i2.$isMongooseDocumentArray)
          return i2.cast(t4, this, undefined, undefined, e3);
        var a2 = new i2(t4, this, r3, undefined, e3);
        return a2.isNew = true, a2;
      }, id: function(t4) {
        var e3, r3, n2;
        try {
          e3 = c(t4).toString();
        } catch (t5) {
          e3 = null;
        }
        var o2, a2 = i(this);
        try {
          for (a2.s();!(o2 = a2.n()).done; ) {
            var u2 = o2.value;
            if (u2 && (n2 = u2.get("_id")) != null) {
              if (n2 instanceof s) {
                if (r3 || (r3 = String(t4)), r3 == n2._id)
                  return u2;
              } else if (h(t4, "ObjectId") || h(n2, "ObjectId")) {
                if (e3 == n2)
                  return u2;
              } else if (t4 == n2 || l.deepEqual(t4, n2))
                return u2;
            }
          }
        } catch (t5) {
          a2.e(t5);
        } finally {
          a2.f();
        }
        return null;
      }, toObject: function(t4) {
        return [].concat(this.map(function(e3) {
          return e3 == null ? null : typeof e3.toObject != "function" ? e3 : e3.toObject(t4);
        }));
      }, $toObject: function() {
        return this.constructor.prototype.toObject.apply(this, arguments);
      }, push: function() {
        var t4 = a.push.apply(this, arguments);
        return g(this), t4;
      }, pull: function() {
        var t4 = a.pull.apply(this, arguments);
        return g(this), t4;
      }, shift: function() {
        var t4 = a.shift.apply(this, arguments);
        return g(this), t4;
      }, splice: function() {
        var t4 = a.splice.apply(this, arguments);
        return g(this), t4;
      }, inspect: function() {
        return this.toObject();
      }, create: function(t4) {
        var e3 = this[y].casterConstructor;
        if (t4 && e3.discriminators && e3.schema && e3.schema.options && e3.schema.options.discriminatorKey)
          if (typeof t4[e3.schema.options.discriminatorKey] == "string" && e3.discriminators[t4[e3.schema.options.discriminatorKey]])
            e3 = e3.discriminators[t4[e3.schema.options.discriminatorKey]];
          else {
            var r3 = u(e3.discriminators, t4[e3.schema.options.discriminatorKey]);
            r3 && (e3 = r3);
          }
        return new e3(t4, this);
      }, notify: function(t4) {
        var e3 = this;
        return function r(n2, i2) {
          for (var o2 = (i2 = i2 || e3).length;o2--; )
            i2[o2] != null && (t4 === "save" && (n2 = e3[o2]), l.isMongooseArray(i2[o2]) ? r(n2, i2[o2]) : i2[o2] && i2[o2].emit(t4, n2));
        };
      }, set: function(t4, e3, r3) {
        var n2 = this.__array;
        if (r3)
          return n2[t4] = e3, this;
        var i2 = v._cast.call(this, e3, t4);
        return v._markModified.call(this, t4), n2[t4] = i2, this;
      }, _markModified: function(t4, e3) {
        var r3, n2 = this[p];
        if (n2) {
          if (r3 = this[d], arguments.length && (r3 = e3 != null ? r3 + "." + t4.__index + "." + e3 : r3 + "." + t4), r3 != null && r3.endsWith(".$"))
            return this;
          n2.markModified(r3, arguments.length !== 0 ? t4 : n2);
        }
        return this;
      } };
      function g(t4) {
        var e3 = t4[p];
        if (e3 && e3.$__.populated != null) {
          var r3, n2 = i(Object.keys(e3.$__.populated).filter(function(e4) {
            return e4.startsWith(t4[d] + ".");
          }));
          try {
            var o2 = function() {
              var n3 = r3.value, i2 = n3.slice((t4[d] + ".").length);
              if (!Array.isArray(e3.$__.populated[n3].value))
                return 1;
              e3.$__.populated[n3].value = t4.map(function(t5) {
                return t5.$populated(i2);
              });
            };
            for (n2.s();!(r3 = n2.n()).done; )
              o2();
          } catch (t5) {
            n2.e(t5);
          } finally {
            n2.f();
          }
        }
      }
      t3.exports = v;
    }, 1148: (t3, e2, r2) => {
      e2.Array = r2(2918), e2.Buffer = r2(9820), e2.Document = e2.Embedded = r2(8578), e2.DocumentArray = r2(4941), e2.Decimal128 = r2(9394), e2.ObjectId = r2(6704), e2.Map = r2(4902), e2.Subdocument = r2(292), e2.UUID = r2(2417);
    }, 4902: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4, e3) {
        var r3 = typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
        if (!r3) {
          if (Array.isArray(t4) || (r3 = function(t5, e4) {
            if (t5) {
              if (typeof t5 == "string")
                return o(t5, e4);
              var r4 = {}.toString.call(t5).slice(8, -1);
              return r4 === "Object" && t5.constructor && (r4 = t5.constructor.name), r4 === "Map" || r4 === "Set" ? Array.from(t5) : r4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4) ? o(t5, e4) : undefined;
            }
          }(t4)) || e3 && t4 && typeof t4.length == "number") {
            r3 && (t4 = r3);
            var n2 = 0, i2 = function() {
            };
            return { s: i2, n: function() {
              return n2 >= t4.length ? { done: true } : { done: false, value: t4[n2++] };
            }, e: function(t5) {
              throw t5;
            }, f: i2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var a2, s2 = true, c2 = false;
        return { s: function() {
          r3 = r3.call(t4);
        }, n: function() {
          var t5 = r3.next();
          return s2 = t5.done, t5;
        }, e: function(t5) {
          c2 = true, a2 = t5;
        }, f: function() {
          try {
            s2 || r3.return == null || r3.return();
          } finally {
            if (c2)
              throw a2;
          }
        } };
      }
      function o(t4, e3) {
        (e3 == null || e3 > t4.length) && (e3 = t4.length);
        for (var r3 = 0, n2 = Array(e3);r3 < e3; r3++)
          n2[r3] = t4[r3];
        return n2;
      }
      function a(t4, e3) {
        for (var r3 = 0;r3 < e3.length; r3++) {
          var n2 = e3[r3];
          n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(t4, s(n2.key), n2);
        }
      }
      function s(t4) {
        var e3 = function(t5) {
          if (n(t5) != "object" || !t5)
            return t5;
          var e4 = t5[Symbol.toPrimitive];
          if (e4 !== undefined) {
            var r3 = e4.call(t5, "string");
            if (n(r3) != "object")
              return r3;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(t5);
        }(t4);
        return n(e3) == "symbol" ? e3 : e3 + "";
      }
      function c(t4, e3, r3, n2) {
        var i2 = u(p(1 & n2 ? t4.prototype : t4), e3, r3);
        return 2 & n2 && typeof i2 == "function" ? function(t5) {
          return i2.apply(r3, t5);
        } : i2;
      }
      function u() {
        return u = typeof Reflect != "undefined" && Reflect.get ? Reflect.get.bind() : function(t4, e3, r3) {
          var n2 = function(t5, e4) {
            for (;!{}.hasOwnProperty.call(t5, e4) && (t5 = p(t5)) !== null; )
              ;
            return t5;
          }(t4, e3);
          if (n2) {
            var i2 = Object.getOwnPropertyDescriptor(n2, e3);
            return i2.get ? i2.get.call(arguments.length < 3 ? t4 : r3) : i2.value;
          }
        }, u.apply(null, arguments);
      }
      function f(t4) {
        var e3 = typeof Map == "function" ? new Map : undefined;
        return f = function(t5) {
          if (t5 === null || !function(t6) {
            try {
              return Function.toString.call(t6).indexOf("[native code]") !== -1;
            } catch (e4) {
              return typeof t6 == "function";
            }
          }(t5))
            return t5;
          if (typeof t5 != "function")
            throw new TypeError("Super expression must either be null or a function");
          if (e3 !== undefined) {
            if (e3.has(t5))
              return e3.get(t5);
            e3.set(t5, r3);
          }
          function r3() {
            return function(t6, e4, r4) {
              if (l())
                return Reflect.construct.apply(null, arguments);
              var n2 = [null];
              n2.push.apply(n2, e4);
              var i2 = new (t6.bind.apply(t6, n2));
              return r4 && h(i2, r4.prototype), i2;
            }(t5, arguments, p(this).constructor);
          }
          return r3.prototype = Object.create(t5.prototype, { constructor: { value: r3, enumerable: false, writable: true, configurable: true } }), h(r3, t5);
        }, f(t4);
      }
      function l() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (l = function() {
          return !!t4;
        })();
      }
      function h(t4, e3) {
        return h = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, h(t4, e3);
      }
      function p(t4) {
        return p = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, p(t4);
      }
      var d = r2(1895), y = r2(7026), b = r2(1829), m = r2(335).deepEqual, v = r2(5857), g = r2(8145), _ = r2(7352), w = r2(8150), S = r2(2128), O = r2(5625).populateModelSymbol, j = function(t4) {
        function e3(t5, r4, i2, o3) {
          var a2;
          return function(t6, e4) {
            if (!(t6 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, e3), v(t5) === "Object" && (t5 = Object.keys(t5).reduce(function(e4, r5) {
            return e4.concat([[r5, t5[r5]]]);
          }, [])), (a2 = function(t6, e4, r5) {
            return e4 = p(e4), function(t7, e5) {
              if (e5 && (n(e5) == "object" || typeof e5 == "function"))
                return e5;
              if (e5 !== undefined)
                throw new TypeError("Derived constructors may only return object or undefined");
              return function(t8) {
                if (t8 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t8;
              }(t7);
            }(t6, l() ? Reflect.construct(e4, r5 || [], p(t6).constructor) : e4.apply(t6, r5));
          }(this, e3, [t5])).$__parent = i2 != null && i2.$__ != null ? i2 : null, a2.$__path = r4, a2.$__schemaType = o3 == null ? new d(r4) : o3, a2.$__runDeferred(), a2;
        }
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), Object.defineProperty(t5, "prototype", { writable: false }), e4 && h(t5, e4);
        }(e3, t4), r3 = e3, o2 = [{ key: "$init", value: function(t5, r4) {
          $(t5), c(e3, "set", this, 3)([t5, r4]), r4 != null && r4.$isSingleNested && (r4.$basePath = this.$__path + "." + t5);
        } }, { key: "$__set", value: function(t5, r4) {
          c(e3, "set", this, 3)([t5, r4]);
        } }, { key: "get", value: function(t5, r4) {
          return S(t5, "ObjectId") && (t5 = t5.toString()), (r4 = r4 || {}).getters === false ? c(e3, "get", this, 3)([t5]) : this.$__schemaType.applyGetters(c(e3, "get", this, 3)([t5]), this.$__parent);
        } }, { key: "set", value: function(t5, r4) {
          if (S(t5, "ObjectId") && (t5 = t5.toString()), $(t5), r4 = g(r4), this.$__schemaType == null)
            return this.$__deferred = this.$__deferred || [], void this.$__deferred.push({ key: t5, value: r4 });
          var n2, i2 = this.$__parent, o3 = i2 != null && i2.$__ && i2.$__.populated ? i2.$populated(u2.call(this), true) || i2.$populated(this.$__path, true) : null, a2 = this.get(t5);
          if (o3 != null) {
            if (this.$__schemaType.$isSingleNested)
              throw new y("Cannot manually populate single nested subdoc underneath Map " + 'at path "'.concat(this.$__path, '". Try using an array instead of a Map.'));
            Array.isArray(r4) && this.$__schemaType.$isMongooseArray ? r4 = r4.map(function(t6) {
              return t6.$__ == null && (t6 = new o3.options[O](t6)), t6.$__.wasPopulated = { value: t6._doc._id }, t6;
            }) : r4 != null && (r4.$__ == null && (r4 = new o3.options[O](r4)), r4.$__.wasPopulated = { value: r4._doc._id });
          } else
            try {
              var s2 = this.$__schemaType.$isMongooseDocumentArray || this.$__schemaType.$isSingleNested ? { path: u2.call(this) } : null;
              r4 = this.$__schemaType.applySetters(r4, this.$__parent, false, this.get(t5), s2);
            } catch (t6) {
              if (this.$__parent != null && this.$__parent.$__ != null)
                return void this.$__parent.invalidate(u2.call(this), t6);
              throw t6;
            }
          function u2() {
            return n2 || (n2 = this.$__path + "." + t5);
          }
          c(e3, "set", this, 3)([t5, r4]), i2 == null || i2.$__ == null || m(r4, a2) || i2.markModified(u2.call(this));
        } }, { key: "clear", value: function() {
          c(e3, "clear", this, 3)([]);
          var t5 = this.$__parent;
          t5 != null && t5.markModified(this.$__path);
        } }, { key: "delete", value: function(t5) {
          return S(t5, "ObjectId") && (t5 = t5.toString()), this.set(t5, undefined), c(e3, "delete", this, 3)([t5]);
        } }, { key: "toBSON", value: function() {
          return new Map(this);
        } }, { key: "toObject", value: function(t5) {
          if (t5 && t5.flattenMaps) {
            var e4, r4 = {}, n2 = i(this.keys());
            try {
              for (n2.s();!(e4 = n2.n()).done; ) {
                var o3 = e4.value;
                r4[o3] = b(this.get(o3), t5);
              }
            } catch (t6) {
              n2.e(t6);
            } finally {
              n2.f();
            }
            return r4;
          }
          return new Map(this);
        } }, { key: "$toObject", value: function() {
          return this.constructor.prototype.toObject.apply(this, arguments);
        } }, { key: "toJSON", value: function(t5) {
          if (typeof (t5 && t5.flattenMaps) != "boolean" || t5.flattenMaps) {
            var e4, r4 = {}, n2 = i(this.keys());
            try {
              for (n2.s();!(e4 = n2.n()).done; ) {
                var o3 = e4.value;
                r4[o3] = b(this.get(o3), t5);
              }
            } catch (t6) {
              n2.e(t6);
            } finally {
              n2.f();
            }
            return r4;
          }
          return new Map(this);
        } }, { key: "inspect", value: function() {
          return new Map(this);
        } }, { key: "$__runDeferred", value: function() {
          if (this.$__deferred) {
            var t5, e4 = i(this.$__deferred);
            try {
              for (e4.s();!(t5 = e4.n()).done; ) {
                var r4 = t5.value;
                this.set(r4.key, r4.value);
              }
            } catch (t6) {
              e4.e(t6);
            } finally {
              e4.f();
            }
            this.$__deferred = null;
          }
        } }], o2 && a(r3.prototype, o2), Object.defineProperty(r3, "prototype", { writable: false }), r3;
        var r3, o2;
      }(f(Map));
      function $(t4) {
        var e3 = n(t4);
        if (e3 !== "string")
          throw new TypeError("Mongoose maps only support string keys, got ".concat(e3));
        if (t4.startsWith("$"))
          throw new Error('Mongoose maps do not support keys that start with "$", got "'.concat(t4, '"'));
        if (t4.includes("."))
          throw new Error('Mongoose maps do not support keys that contain ".", got "'.concat(t4, '"'));
        if (w.has(t4))
          throw new Error('Mongoose maps do not support reserved key name "'.concat(t4, '"'));
      }
      _.inspect.custom && Object.defineProperty(j.prototype, _.inspect.custom, { enumerable: false, writable: false, configurable: false, value: j.prototype.inspect }), Object.defineProperty(j.prototype, "$__set", { enumerable: false, writable: true, configurable: false }), Object.defineProperty(j.prototype, "$__parent", { enumerable: false, writable: true, configurable: false }), Object.defineProperty(j.prototype, "$__path", { enumerable: false, writable: true, configurable: false }), Object.defineProperty(j.prototype, "$__schemaType", { enumerable: false, writable: true, configurable: false }), Object.defineProperty(j.prototype, "$isMongooseMap", { enumerable: false, writable: false, configurable: false, value: true }), Object.defineProperty(j.prototype, "$__deferredCalls", { enumerable: false, writable: false, configurable: false, value: true }), t3.exports = j;
    }, 6704: (t3, e2, r2) => {
      var n = r2(3633).ObjectId, i = r2(5625).objectIdSymbol;
      Object.defineProperty(n.prototype, "_id", { enumerable: false, configurable: true, get: function() {
        return this;
      } }), n.prototype.hasOwnProperty("valueOf") || (n.prototype.valueOf = function() {
        return this.toString();
      }), n.prototype[i] = true, t3.exports = n;
    }, 292: (t3, e2, r2) => {
      function n() {
        n = function() {
          return e3;
        };
        var t4, e3 = {}, r3 = Object.prototype, i2 = r3.hasOwnProperty, a2 = Object.defineProperty || function(t5, e4, r4) {
          t5[e4] = r4.value;
        }, s2 = typeof Symbol == "function" ? Symbol : {}, c2 = s2.iterator || "@@iterator", u2 = s2.asyncIterator || "@@asyncIterator", f2 = s2.toStringTag || "@@toStringTag";
        function l2(t5, e4, r4) {
          return Object.defineProperty(t5, e4, { value: r4, enumerable: true, configurable: true, writable: true }), t5[e4];
        }
        try {
          l2({}, "");
        } catch (t5) {
          l2 = function(t6, e4, r4) {
            return t6[e4] = r4;
          };
        }
        function h(t5, e4, r4, n2) {
          var i3 = e4 && e4.prototype instanceof g ? e4 : g, o2 = Object.create(i3.prototype), s3 = new I(n2 || []);
          return a2(o2, "_invoke", { value: x(t5, r4, s3) }), o2;
        }
        function p(t5, e4, r4) {
          try {
            return { type: "normal", arg: t5.call(e4, r4) };
          } catch (t6) {
            return { type: "throw", arg: t6 };
          }
        }
        e3.wrap = h;
        var d = "suspendedStart", y = "suspendedYield", b = "executing", m = "completed", v = {};
        function g() {
        }
        function _() {
        }
        function w() {
        }
        var S = {};
        l2(S, c2, function() {
          return this;
        });
        var O = Object.getPrototypeOf, j = O && O(O(T([])));
        j && j !== r3 && i2.call(j, c2) && (S = j);
        var $ = w.prototype = g.prototype = Object.create(S);
        function A(t5) {
          ["next", "throw", "return"].forEach(function(e4) {
            l2(t5, e4, function(t6) {
              return this._invoke(e4, t6);
            });
          });
        }
        function E(t5, e4) {
          function r4(n3, a3, s3, c3) {
            var u3 = p(t5[n3], t5, a3);
            if (u3.type !== "throw") {
              var f3 = u3.arg, l3 = f3.value;
              return l3 && o(l3) == "object" && i2.call(l3, "__await") ? e4.resolve(l3.__await).then(function(t6) {
                r4("next", t6, s3, c3);
              }, function(t6) {
                r4("throw", t6, s3, c3);
              }) : e4.resolve(l3).then(function(t6) {
                f3.value = t6, s3(f3);
              }, function(t6) {
                return r4("throw", t6, s3, c3);
              });
            }
            c3(u3.arg);
          }
          var n2;
          a2(this, "_invoke", { value: function(t6, i3) {
            function o2() {
              return new e4(function(e5, n3) {
                r4(t6, i3, e5, n3);
              });
            }
            return n2 = n2 ? n2.then(o2, o2) : o2();
          } });
        }
        function x(e4, r4, n2) {
          var i3 = d;
          return function(o2, a3) {
            if (i3 === b)
              throw Error("Generator is already running");
            if (i3 === m) {
              if (o2 === "throw")
                throw a3;
              return { value: t4, done: true };
            }
            for (n2.method = o2, n2.arg = a3;; ) {
              var s3 = n2.delegate;
              if (s3) {
                var c3 = P(s3, n2);
                if (c3) {
                  if (c3 === v)
                    continue;
                  return c3;
                }
              }
              if (n2.method === "next")
                n2.sent = n2._sent = n2.arg;
              else if (n2.method === "throw") {
                if (i3 === d)
                  throw i3 = m, n2.arg;
                n2.dispatchException(n2.arg);
              } else
                n2.method === "return" && n2.abrupt("return", n2.arg);
              i3 = b;
              var u3 = p(e4, r4, n2);
              if (u3.type === "normal") {
                if (i3 = n2.done ? m : y, u3.arg === v)
                  continue;
                return { value: u3.arg, done: n2.done };
              }
              u3.type === "throw" && (i3 = m, n2.method = "throw", n2.arg = u3.arg);
            }
          };
        }
        function P(e4, r4) {
          var n2 = r4.method, i3 = e4.iterator[n2];
          if (i3 === t4)
            return r4.delegate = null, n2 === "throw" && e4.iterator.return && (r4.method = "return", r4.arg = t4, P(e4, r4), r4.method === "throw") || n2 !== "return" && (r4.method = "throw", r4.arg = new TypeError("The iterator does not provide a '" + n2 + "' method")), v;
          var o2 = p(i3, e4.iterator, r4.arg);
          if (o2.type === "throw")
            return r4.method = "throw", r4.arg = o2.arg, r4.delegate = null, v;
          var a3 = o2.arg;
          return a3 ? a3.done ? (r4[e4.resultName] = a3.value, r4.next = e4.nextLoc, r4.method !== "return" && (r4.method = "next", r4.arg = t4), r4.delegate = null, v) : a3 : (r4.method = "throw", r4.arg = new TypeError("iterator result is not an object"), r4.delegate = null, v);
        }
        function k(t5) {
          var e4 = { tryLoc: t5[0] };
          1 in t5 && (e4.catchLoc = t5[1]), 2 in t5 && (e4.finallyLoc = t5[2], e4.afterLoc = t5[3]), this.tryEntries.push(e4);
        }
        function M(t5) {
          var e4 = t5.completion || {};
          e4.type = "normal", delete e4.arg, t5.completion = e4;
        }
        function I(t5) {
          this.tryEntries = [{ tryLoc: "root" }], t5.forEach(k, this), this.reset(true);
        }
        function T(e4) {
          if (e4 || e4 === "") {
            var r4 = e4[c2];
            if (r4)
              return r4.call(e4);
            if (typeof e4.next == "function")
              return e4;
            if (!isNaN(e4.length)) {
              var n2 = -1, a3 = function r() {
                for (;++n2 < e4.length; )
                  if (i2.call(e4, n2))
                    return r.value = e4[n2], r.done = false, r;
                return r.value = t4, r.done = true, r;
              };
              return a3.next = a3;
            }
          }
          throw new TypeError(o(e4) + " is not iterable");
        }
        return _.prototype = w, a2($, "constructor", { value: w, configurable: true }), a2(w, "constructor", { value: _, configurable: true }), _.displayName = l2(w, f2, "GeneratorFunction"), e3.isGeneratorFunction = function(t5) {
          var e4 = typeof t5 == "function" && t5.constructor;
          return !!e4 && (e4 === _ || (e4.displayName || e4.name) === "GeneratorFunction");
        }, e3.mark = function(t5) {
          return Object.setPrototypeOf ? Object.setPrototypeOf(t5, w) : (t5.__proto__ = w, l2(t5, f2, "GeneratorFunction")), t5.prototype = Object.create($), t5;
        }, e3.awrap = function(t5) {
          return { __await: t5 };
        }, A(E.prototype), l2(E.prototype, u2, function() {
          return this;
        }), e3.AsyncIterator = E, e3.async = function(t5, r4, n2, i3, o2) {
          o2 === undefined && (o2 = Promise);
          var a3 = new E(h(t5, r4, n2, i3), o2);
          return e3.isGeneratorFunction(r4) ? a3 : a3.next().then(function(t6) {
            return t6.done ? t6.value : a3.next();
          });
        }, A($), l2($, f2, "Generator"), l2($, c2, function() {
          return this;
        }), l2($, "toString", function() {
          return "[object Generator]";
        }), e3.keys = function(t5) {
          var e4 = Object(t5), r4 = [];
          for (var n2 in e4)
            r4.push(n2);
          return r4.reverse(), function t() {
            for (;r4.length; ) {
              var n3 = r4.pop();
              if (n3 in e4)
                return t.value = n3, t.done = false, t;
            }
            return t.done = true, t;
          };
        }, e3.values = T, I.prototype = { constructor: I, reset: function(e4) {
          if (this.prev = 0, this.next = 0, this.sent = this._sent = t4, this.done = false, this.delegate = null, this.method = "next", this.arg = t4, this.tryEntries.forEach(M), !e4)
            for (var r4 in this)
              r4.charAt(0) === "t" && i2.call(this, r4) && !isNaN(+r4.slice(1)) && (this[r4] = t4);
        }, stop: function() {
          this.done = true;
          var t5 = this.tryEntries[0].completion;
          if (t5.type === "throw")
            throw t5.arg;
          return this.rval;
        }, dispatchException: function(e4) {
          if (this.done)
            throw e4;
          var r4 = this;
          function n2(n3, i3) {
            return s3.type = "throw", s3.arg = e4, r4.next = n3, i3 && (r4.method = "next", r4.arg = t4), !!i3;
          }
          for (var o2 = this.tryEntries.length - 1;o2 >= 0; --o2) {
            var a3 = this.tryEntries[o2], s3 = a3.completion;
            if (a3.tryLoc === "root")
              return n2("end");
            if (a3.tryLoc <= this.prev) {
              var c3 = i2.call(a3, "catchLoc"), u3 = i2.call(a3, "finallyLoc");
              if (c3 && u3) {
                if (this.prev < a3.catchLoc)
                  return n2(a3.catchLoc, true);
                if (this.prev < a3.finallyLoc)
                  return n2(a3.finallyLoc);
              } else if (c3) {
                if (this.prev < a3.catchLoc)
                  return n2(a3.catchLoc, true);
              } else {
                if (!u3)
                  throw Error("try statement without catch or finally");
                if (this.prev < a3.finallyLoc)
                  return n2(a3.finallyLoc);
              }
            }
          }
        }, abrupt: function(t5, e4) {
          for (var r4 = this.tryEntries.length - 1;r4 >= 0; --r4) {
            var n2 = this.tryEntries[r4];
            if (n2.tryLoc <= this.prev && i2.call(n2, "finallyLoc") && this.prev < n2.finallyLoc) {
              var o2 = n2;
              break;
            }
          }
          o2 && (t5 === "break" || t5 === "continue") && o2.tryLoc <= e4 && e4 <= o2.finallyLoc && (o2 = null);
          var a3 = o2 ? o2.completion : {};
          return a3.type = t5, a3.arg = e4, o2 ? (this.method = "next", this.next = o2.finallyLoc, v) : this.complete(a3);
        }, complete: function(t5, e4) {
          if (t5.type === "throw")
            throw t5.arg;
          return t5.type === "break" || t5.type === "continue" ? this.next = t5.arg : t5.type === "return" ? (this.rval = this.arg = t5.arg, this.method = "return", this.next = "end") : t5.type === "normal" && e4 && (this.next = e4), v;
        }, finish: function(t5) {
          for (var e4 = this.tryEntries.length - 1;e4 >= 0; --e4) {
            var r4 = this.tryEntries[e4];
            if (r4.finallyLoc === t5)
              return this.complete(r4.completion, r4.afterLoc), M(r4), v;
          }
        }, catch: function(t5) {
          for (var e4 = this.tryEntries.length - 1;e4 >= 0; --e4) {
            var r4 = this.tryEntries[e4];
            if (r4.tryLoc === t5) {
              var n2 = r4.completion;
              if (n2.type === "throw") {
                var i3 = n2.arg;
                M(r4);
              }
              return i3;
            }
          }
          throw Error("illegal catch attempt");
        }, delegateYield: function(e4, r4, n2) {
          return this.delegate = { iterator: T(e4), resultName: r4, nextLoc: n2 }, this.method === "next" && (this.arg = t4), v;
        } }, e3;
      }
      function i(t4, e3, r3, n2, i2, o2, a2) {
        try {
          var s2 = t4[o2](a2), c2 = s2.value;
        } catch (t5) {
          return void r3(t5);
        }
        s2.done ? e3(c2) : Promise.resolve(c2).then(n2, i2);
      }
      function o(t4) {
        return o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, o(t4);
      }
      var a = r2(3293), s = r2(3933), c = r2(3920)._, u = r2(7352), f = r2(335);
      function l(t4, e3, r3, n2, i2) {
        if (o(n2) === "object" && n2 != null && i2 == null && (i2 = n2, n2 = undefined), r3 != null) {
          var s2 = { isNew: r3.isNew };
          "defaults" in r3.$__ && (s2.defaults = r3.$__.defaults), i2 = Object.assign(s2, i2);
        }
        i2 != null && i2.path != null && (this.$basePath = i2.path), a.call(this, t4, e3, n2, i2), delete this.$__.priorDoc;
      }
      t3.exports = l, l.prototype = Object.create(a.prototype), Object.defineProperty(l.prototype, "$isSubdocument", { configurable: false, writable: false, value: true }), Object.defineProperty(l.prototype, "$isSingleNested", { configurable: false, writable: false, value: true }), l.prototype.toBSON = function() {
        return this.toObject(c);
      }, l.prototype.save = function() {
        var t4, e3 = (t4 = n().mark(function t(e4) {
          var r3 = this;
          return n().wrap(function(t5) {
            for (;; )
              switch (t5.prev = t5.next) {
                case 0:
                  return (e4 = e4 || {}).suppressWarning || f.warn("mongoose: calling `save()` on a subdoc does **not** save the document to MongoDB, it only runs save middleware. Use `subdoc.save({ suppressWarning: true })` to hide this warning if you're sure this behavior is right for your app."), t5.abrupt("return", new Promise(function(t6, e5) {
                    r3.$__save(function(n2) {
                      if (n2 != null)
                        return e5(n2);
                      t6(r3);
                    });
                  }));
                case 3:
                case "end":
                  return t5.stop();
              }
          }, t);
        }), function() {
          var e4 = this, r3 = arguments;
          return new Promise(function(n2, o2) {
            var a2 = t4.apply(e4, r3);
            function s2(t5) {
              i(a2, n2, o2, s2, c2, "next", t5);
            }
            function c2(t5) {
              i(a2, n2, o2, s2, c2, "throw", t5);
            }
            s2(undefined);
          });
        });
        return function(t5) {
          return e3.apply(this, arguments);
        };
      }(), l.prototype.$__fullPath = function(t4) {
        return this.$__.fullPath || this.ownerDocument(), t4 ? this.$__.fullPath + "." + t4 : this.$__.fullPath;
      }, l.prototype.$__pathRelativeToParent = function(t4) {
        return t4 == null ? this.$basePath : [this.$basePath, t4].join(".");
      }, l.prototype.$__save = function(t4) {
        var e3 = this;
        return s(function() {
          return t4(null, e3);
        });
      }, l.prototype.$isValid = function(t4) {
        var e3 = this.$parent(), r3 = this.$__pathRelativeToParent(t4);
        return e3 != null && r3 != null ? e3.$isValid(r3) : a.prototype.$isValid.call(this, t4);
      }, l.prototype.markModified = function(t4) {
        a.prototype.markModified.call(this, t4);
        var e3 = this.$parent(), r3 = this.$__pathRelativeToParent(t4);
        if (e3 != null && r3 != null) {
          var n2 = this.$__pathRelativeToParent().replace(/\.$/, "");
          e3.isDirectModified(n2) || this.isNew || this.$__parent.markModified(r3, this);
        }
      }, l.prototype.isModified = function(t4, e3, r3) {
        var n2 = this, i2 = this.$parent();
        return i2 != null ? (Array.isArray(t4) || typeof t4 == "string" ? t4 = (t4 = Array.isArray(t4) ? t4 : t4.split(" ")).map(function(t5) {
          return n2.$__pathRelativeToParent(t5);
        }).filter(function(t5) {
          return t5 != null;
        }) : t4 || (t4 = this.$__pathRelativeToParent()), i2.$isModified(t4, e3, r3)) : a.prototype.isModified.call(this, t4, e3, r3);
      }, l.prototype.$markValid = function(t4) {
        a.prototype.$markValid.call(this, t4);
        var e3 = this.$parent(), r3 = this.$__pathRelativeToParent(t4);
        e3 != null && r3 != null && e3.$markValid(r3);
      }, l.prototype.invalidate = function(t4, e3, r3) {
        a.prototype.invalidate.call(this, t4, e3, r3);
        var n2 = this.$parent(), i2 = this.$__pathRelativeToParent(t4);
        if (n2 != null && i2 != null)
          n2.invalidate(i2, e3, r3);
        else if (e3.kind === "cast" || e3.name === "CastError" || i2 == null)
          throw e3;
        return this.ownerDocument().$__.validationError;
      }, l.prototype.$ignore = function(t4) {
        a.prototype.$ignore.call(this, t4);
        var e3 = this.$parent(), r3 = this.$__pathRelativeToParent(t4);
        e3 != null && r3 != null && e3.$ignore(r3);
      }, l.prototype.ownerDocument = function() {
        if (this.$__.ownerDocument)
          return this.$__.ownerDocument;
        for (var t4 = this, e3 = [], r3 = new Set([t4]);typeof t4.$__pathRelativeToParent == "function"; ) {
          e3.unshift(t4.$__pathRelativeToParent(undefined, true));
          var n2 = t4.$parent();
          if (n2 == null)
            break;
          if (t4 = n2, r3.has(t4))
            throw new Error("Infinite subdocument loop: subdoc with _id " + t4._id + " is a parent of itself");
          r3.add(t4);
        }
        return this.$__.fullPath = e3.join("."), this.$__.ownerDocument = t4, this.$__.ownerDocument;
      }, l.prototype.$__fullPathWithIndexes = function() {
        for (var t4 = this, e3 = [], r3 = new Set([t4]);typeof t4.$__pathRelativeToParent == "function"; ) {
          e3.unshift(t4.$__pathRelativeToParent(undefined, false));
          var n2 = t4.$parent();
          if (n2 == null)
            break;
          if (t4 = n2, r3.has(t4))
            throw new Error("Infinite subdocument loop: subdoc with _id " + t4._id + " is a parent of itself");
          r3.add(t4);
        }
        return e3.join(".");
      }, l.prototype.parent = function() {
        return this.$__parent;
      }, l.prototype.$parent = l.prototype.parent, l.prototype.$__deleteOne = function(t4) {
        if (t4 != null)
          return t4(null, this);
      }, l.prototype.$__removeFromParent = function() {
        this.$__parent.set(this.$basePath, null);
      }, l.prototype.deleteOne = function(t4, e3) {
        if (typeof t4 == "function" && (e3 = t4, t4 = null), function(t5) {
          var e4 = t5.ownerDocument();
          function r4() {
            e4.$removeListener("save", r4), e4.$removeListener("deleteOne", r4), t5.emit("deleteOne", t5), t5.constructor.emit("deleteOne", t5);
          }
          e4.$on("save", r4), e4.$on("deleteOne", r4);
        }(this), !t4 || !t4.noop) {
          this.$__removeFromParent();
          var r3 = this.ownerDocument();
          r3.$__.removedSubdocs = r3.$__.removedSubdocs || [], r3.$__.removedSubdocs.push(this);
        }
        return this.$__deleteOne(e3);
      }, l.prototype.populate = function() {
        throw new Error('Mongoose does not support calling populate() on nested docs. Instead of `doc.nested.populate("path")`, use `doc.populate("nested.path")`');
      }, l.prototype.inspect = function() {
        return this.toObject();
      }, u.inspect.custom && (l.prototype[u.inspect.custom] = l.prototype.inspect);
    }, 2417: (t3, e2, r2) => {
      t3.exports = r2(3633).UUID;
    }, 335: (t3, e2, r2) => {
      var n = r2(5832).Buffer;
      function i(t4, e3) {
        var r3 = Object.keys(t4);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(t4);
          e3 && (n2 = n2.filter(function(e4) {
            return Object.getOwnPropertyDescriptor(t4, e4).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function o(t4) {
        for (var e3 = 1;e3 < arguments.length; e3++) {
          var r3 = arguments[e3] != null ? arguments[e3] : {};
          e3 % 2 ? i(Object(r3), true).forEach(function(e4) {
            a(t4, e4, r3[e4]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(r3)) : i(Object(r3)).forEach(function(e4) {
            Object.defineProperty(t4, e4, Object.getOwnPropertyDescriptor(r3, e4));
          });
        }
        return t4;
      }
      function a(t4, e3, r3) {
        return (e3 = function(t5) {
          var e4 = function(t6) {
            if (f(t6) != "object" || !t6)
              return t6;
            var e5 = t6[Symbol.toPrimitive];
            if (e5 !== undefined) {
              var r4 = e5.call(t6, "string");
              if (f(r4) != "object")
                return r4;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t6);
          }(t5);
          return f(e4) == "symbol" ? e4 : e4 + "";
        }(e3)) in t4 ? Object.defineProperty(t4, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t4[e3] = r3, t4;
      }
      function s(t4, e3) {
        var r3 = typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
        if (!r3) {
          if (Array.isArray(t4) || (r3 = c(t4)) || e3 && t4 && typeof t4.length == "number") {
            r3 && (t4 = r3);
            var n2 = 0, i2 = function() {
            };
            return { s: i2, n: function() {
              return n2 >= t4.length ? { done: true } : { done: false, value: t4[n2++] };
            }, e: function(t5) {
              throw t5;
            }, f: i2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var o2, a2 = true, s2 = false;
        return { s: function() {
          r3 = r3.call(t4);
        }, n: function() {
          var t5 = r3.next();
          return a2 = t5.done, t5;
        }, e: function(t5) {
          s2 = true, o2 = t5;
        }, f: function() {
          try {
            a2 || r3.return == null || r3.return();
          } finally {
            if (s2)
              throw o2;
          }
        } };
      }
      function c(t4, e3) {
        if (t4) {
          if (typeof t4 == "string")
            return u(t4, e3);
          var r3 = {}.toString.call(t4).slice(8, -1);
          return r3 === "Object" && t4.constructor && (r3 = t4.constructor.name), r3 === "Map" || r3 === "Set" ? Array.from(t4) : r3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r3) ? u(t4, e3) : undefined;
        }
      }
      function u(t4, e3) {
        (e3 == null || e3 > t4.length) && (e3 = t4.length);
        for (var r3 = 0, n2 = Array(e3);r3 < e3; r3++)
          n2[r3] = t4[r3];
        return n2;
      }
      function f(t4) {
        return f = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, f(t4);
      }
      var l, h = r2(3633).UUID, p = r2(354), d = r2(5678), y = r2(6704), b = r2(6591), m = r2(1829), v = r2(3933), g = r2(4797), _ = r2(9240), w = r2(3640), S = r2(2128), O = r2(6288), j = r2(5515), $ = r2(6504), A = r2(8183), E = r2(5682), x = r2(8150), P = r2(3692).trustedSymbol;
      e2.specialProperties = x, e2.isMongooseArray = _.isMongooseArray, e2.isMongooseDocumentArray = w.isMongooseDocumentArray, e2.registerMongooseArray = _.registerMongooseArray, e2.registerMongooseDocumentArray = w.registerMongooseDocumentArray;
      var k = /\s/, M = /\s+/;
      e2.toCollectionName = function(t4, e3) {
        if (t4 === "system.profile")
          return t4;
        if (t4 === "system.indexes")
          return t4;
        if (typeof e3 == "function") {
          if (typeof t4 != "string")
            throw new TypeError("Collection name must be a string");
          if (t4.length === 0)
            throw new TypeError("Collection name cannot be empty");
          return e3(t4);
        }
        return t4;
      }, e2.deepEqual = function t(r3, i2) {
        if (r3 === i2)
          return true;
        if (f(r3) !== "object" || f(i2) !== "object")
          return r3 === i2;
        if (r3 instanceof Date && i2 instanceof Date)
          return r3.getTime() === i2.getTime();
        if (S(r3, "ObjectId") && S(i2, "ObjectId") || S(r3, "Decimal128") && S(i2, "Decimal128"))
          return r3.toString() === i2.toString();
        if (r3 instanceof RegExp && i2 instanceof RegExp)
          return r3.source === i2.source && r3.ignoreCase === i2.ignoreCase && r3.multiline === i2.multiline && r3.global === i2.global && r3.dotAll === i2.dotAll && r3.unicode === i2.unicode && r3.sticky === i2.sticky && r3.hasIndices === i2.hasIndices;
        if (r3 == null || i2 == null)
          return false;
        if (r3.prototype !== i2.prototype)
          return false;
        if (r3 instanceof Map || i2 instanceof Map)
          return r3 instanceof Map && i2 instanceof Map && t(Array.from(r3.keys()), Array.from(i2.keys())) && t(Array.from(r3.values()), Array.from(i2.values()));
        if (r3 instanceof Number && i2 instanceof Number)
          return r3.valueOf() === i2.valueOf();
        if (n.isBuffer(r3))
          return e2.buffer.areEqual(r3, i2);
        if (Array.isArray(r3) || Array.isArray(i2)) {
          if (!Array.isArray(r3) || !Array.isArray(i2))
            return false;
          var o2 = r3.length;
          if (o2 !== i2.length)
            return false;
          for (var a2 = 0;a2 < o2; ++a2)
            if (!t(r3[a2], i2[a2]))
              return false;
          return true;
        }
        r3.$__ != null ? r3 = r3._doc : $(r3) && (r3 = r3.toObject()), i2.$__ != null ? i2 = i2._doc : $(i2) && (i2 = i2.toObject());
        var s2 = Object.keys(r3), c2 = Object.keys(i2), u2 = s2.length;
        if (u2 !== c2.length)
          return false;
        for (var l2 = u2 - 1;l2 >= 0; l2--)
          if (s2[l2] !== c2[l2])
            return false;
        for (var h2 = 0, p2 = s2;h2 < p2.length; h2++) {
          var d2 = p2[h2];
          if (!t(r3[d2], i2[d2]))
            return false;
        }
        return true;
      }, e2.last = function(t4) {
        if (t4.length > 0)
          return t4[t4.length - 1];
      }, e2.promiseOrCallback = A, e2.cloneArrays = function(t4) {
        return Array.isArray(t4) ? t4.map(function(t5) {
          return e2.cloneArrays(t5);
        }) : t4;
      }, e2.omit = function(t4, e3) {
        if (e3 == null)
          return Object.assign({}, t4);
        Array.isArray(e3) || (e3 = [e3]);
        var r3, n2 = Object.assign({}, t4), i2 = s(e3);
        try {
          for (i2.s();!(r3 = i2.n()).done; )
            delete n2[r3.value];
        } catch (t5) {
          i2.e(t5);
        } finally {
          i2.f();
        }
        return n2;
      }, e2.merge = function t(r3, n2, i2, a2) {
        i2 = i2 || {};
        var s2, f2, l2 = Object.keys(n2), h2 = 0, p2 = l2.length;
        n2[P] && (r3[P] = n2[P]), a2 = a2 || "";
        for (var d2 = i2.omitNested || {};h2 < p2; )
          if (s2 = l2[h2++], !(i2.omit && i2.omit[s2] || d2[a2] || x.has(s2)))
            if (r3[s2] == null)
              O(n2[s2]) ? r3[s2] = o({}, n2[s2]) : Array.isArray(n2[s2]) ? r3[s2] = function(t4) {
                if (Array.isArray(t4))
                  return u(t4);
              }(f2 = n2[s2]) || function(t4) {
                if (typeof Symbol != "undefined" && t4[Symbol.iterator] != null || t4["@@iterator"] != null)
                  return Array.from(t4);
              }(f2) || c(f2) || function() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
              }() : r3[s2] = n2[s2];
            else if (e2.isObject(n2[s2])) {
              if (e2.isObject(r3[s2]) || (r3[s2] = {}), n2[s2] != null) {
                if (i2.isDiscriminatorSchemaMerge && n2[s2].$isSingleNested && r3[s2].$isMongooseDocumentArray || n2[s2].$isMongooseDocumentArray && r3[s2].$isSingleNested)
                  continue;
                if (n2[s2].instanceOfSchema) {
                  r3[s2].instanceOfSchema ? E(r3[s2], n2[s2].clone(), i2.isDiscriminatorSchemaMerge) : r3[s2] = n2[s2].clone();
                  continue;
                }
                if (S(n2[s2], "ObjectId")) {
                  r3[s2] = new y(n2[s2]);
                  continue;
                }
              }
              t(r3[s2], n2[s2], i2, a2 ? a2 + "." + s2 : s2);
            } else
              i2.overwrite && (r3[s2] = n2[s2]);
        return r3;
      }, e2.toObject = function t(n2) {
        var i2;
        if (l || (l = r2(3293)), n2 == null)
          return n2;
        if (n2 instanceof l)
          return n2.toObject();
        if (Array.isArray(n2)) {
          i2 = [];
          var o2, a2 = s(n2);
          try {
            for (a2.s();!(o2 = a2.n()).done; ) {
              var c2 = o2.value;
              i2.push(t(c2));
            }
          } catch (t4) {
            a2.e(t4);
          } finally {
            a2.f();
          }
          return i2;
        }
        if (e2.isPOJO(n2)) {
          i2 = {}, n2[P] && (i2[P] = n2[P]);
          for (var u2 = 0, f2 = Object.keys(n2);u2 < f2.length; u2++) {
            var h2 = f2[u2];
            x.has(h2) || (i2[h2] = t(n2[h2]));
          }
          return i2;
        }
        return n2;
      }, e2.isObject = g, e2.isPOJO = r2(6288), e2.isNonBuiltinObject = function(t4) {
        return !(f(t4) !== "object" || e2.isNativeObject(t4) || e2.isMongooseType(t4) || t4 instanceof h || t4 == null);
      }, e2.isNativeObject = function(t4) {
        return Array.isArray(t4) || t4 instanceof Date || t4 instanceof Boolean || t4 instanceof Number || t4 instanceof String;
      }, e2.isEmptyObject = function(t4) {
        return t4 != null && f(t4) === "object" && Object.keys(t4).length === 0;
      }, e2.hasKey = function(t4, r3) {
        for (var n2 = 0, i2 = Object.keys(t4);n2 < i2.length; n2++) {
          var o2 = i2[n2];
          if (o2 === r3)
            return true;
          if (e2.isPOJO(t4[o2]) && e2.hasKey(t4[o2], r3))
            return true;
        }
        return false;
      }, e2.tick = function(t4) {
        if (typeof t4 == "function")
          return function() {
            try {
              t4.apply(this, arguments);
            } catch (t5) {
              v(function() {
                throw t5;
              });
            }
          };
      }, e2.isMongooseType = function(t4) {
        return S(t4, "ObjectId") || S(t4, "Decimal128") || t4 instanceof n;
      }, e2.isMongooseObject = $, e2.expires = function(t4) {
        t4 && t4.constructor.name === "Object" && "expires" in t4 && (t4.expireAfterSeconds = typeof t4.expires != "string" ? t4.expires : Math.round(p(t4.expires) / 1000), delete t4.expires);
      }, e2.populate = function(t4, r3, n2, i2, o2, a2, c2, u2) {
        var l2, h2 = null;
        if (arguments.length === 1) {
          if (t4 instanceof b)
            return t4._docs = {}, t4._childDocs = [], [t4];
          if (Array.isArray(t4)) {
            var p2 = (l2 = [], t4.forEach(function(t5) {
              k.test(t5.path) ? t5.path.split(M).forEach(function(e3) {
                var r4 = Object.assign({}, t5);
                r4.path = e3, l2.push(r4);
              }) : l2.push(t5);
            }), l2);
            return p2.map(function(t5) {
              return e2.populate(t5)[0];
            });
          }
          h2 = e2.isObject(t4) ? Object.assign({}, t4) : { path: t4 };
        } else
          h2 = f(n2) === "object" ? { path: t4, select: r3, match: n2, options: i2 } : { path: t4, select: r3, model: n2, match: i2, options: o2, populate: a2, justOne: c2, count: u2 };
        if (typeof h2.path != "string")
          throw new TypeError("utils.populate: invalid path. Expected string. Got typeof `" + f(t4) + "`");
        return function(t5) {
          if (Array.isArray(t5.populate)) {
            var r4 = [];
            t5.populate.forEach(function(t6) {
              if (k.test(t6.path)) {
                var n4 = Object.assign({}, t6);
                n4.path.split(M).forEach(function(t7) {
                  n4.path = t7, r4.push(e2.populate(n4)[0]);
                });
              } else
                r4.push(e2.populate(t6)[0]);
            }), t5.populate = e2.populate(r4);
          } else
            t5.populate != null && f(t5.populate) === "object" && (t5.populate = e2.populate(t5.populate));
          var n3 = [], i3 = k.test(t5.path) ? t5.path.split(M) : [t5.path];
          t5.options != null && (t5.options = m(t5.options));
          var o3, a3 = s(i3);
          try {
            for (a3.s();!(o3 = a3.n()).done; ) {
              var c3 = o3.value;
              n3.push(new b(Object.assign({}, t5, { path: c3 })));
            }
          } catch (t6) {
            a3.e(t6);
          } finally {
            a3.f();
          }
          return n3;
        }(h2);
      }, e2.getValue = function(t4, e3, r3) {
        return d.get(t4, e3, T, r3);
      };
      var I = Object.freeze({ getters: false });
      function T(t4, e3) {
        var r3 = (t4 == null ? undefined : t4._doc) || t4;
        return r3 != null && r3.isMongooseArrayProxy && (r3 = r3.__array), r3 instanceof Map ? r3.get(e3, I) : r3[e3];
      }
      e2.setValue = function(t4, e3, r3, n2, i2) {
        d.set(t4, e3, r3, "_doc", n2, i2);
      }, e2.object = {}, e2.object.vals = function(t4) {
        for (var e3 = Object.keys(t4), r3 = e3.length, n2 = [];r3--; )
          n2.push(t4[e3[r3]]);
        return n2;
      };
      var B = Object.prototype.hasOwnProperty;
      e2.object.hasOwnProperty = function(t4, e3) {
        return B.call(t4, e3);
      }, e2.isNullOrUndefined = function(t4) {
        return t4 == null;
      }, e2.array = {}, e2.array.flatten = function t(e3, r3, n2) {
        return n2 || (n2 = []), e3.forEach(function(e4) {
          Array.isArray(e4) ? t(e4, r3, n2) : r3 && !r3(e4) || n2.push(e4);
        }), n2;
      };
      var R = Object.prototype.hasOwnProperty;
      e2.hasUserDefinedProperty = function(t4, r3) {
        if (t4 == null)
          return false;
        if (Array.isArray(r3)) {
          var n2, i2 = s(r3);
          try {
            for (i2.s();!(n2 = i2.n()).done; ) {
              var o2 = n2.value;
              if (e2.hasUserDefinedProperty(t4, o2))
                return true;
            }
          } catch (t5) {
            i2.e(t5);
          } finally {
            i2.f();
          }
          return false;
        }
        if (R.call(t4, r3))
          return true;
        if (f(t4) === "object" && r3 in t4) {
          var a2 = t4[r3];
          return a2 !== Object.prototype[r3] && a2 !== Array.prototype[r3];
        }
        return false;
      };
      var N = Math.pow(2, 32) - 1;
      e2.isArrayIndex = function(t4) {
        return typeof t4 == "number" ? t4 >= 0 && t4 <= N : typeof t4 == "string" && !!/^\d+$/.test(t4) && (t4 = +t4) >= 0 && t4 <= N;
      }, e2.array.unique = function(t4) {
        var e3, r3 = new Set, n2 = new Set, i2 = [], o2 = s(t4);
        try {
          for (o2.s();!(e3 = o2.n()).done; ) {
            var a2 = e3.value;
            if (typeof a2 == "number" || typeof a2 == "string" || a2 == null) {
              if (r3.has(a2))
                continue;
              i2.push(a2), r3.add(a2);
            } else if (S(a2, "ObjectId")) {
              if (n2.has(a2.toString()))
                continue;
              i2.push(a2), n2.add(a2.toString());
            } else
              i2.push(a2);
          }
        } catch (t5) {
          o2.e(t5);
        } finally {
          o2.f();
        }
        return i2;
      }, e2.buffer = {}, e2.buffer.areEqual = function(t4, e3) {
        if (!n.isBuffer(t4))
          return false;
        if (!n.isBuffer(e3))
          return false;
        if (t4.length !== e3.length)
          return false;
        for (var r3 = 0, i2 = t4.length;r3 < i2; ++r3)
          if (t4[r3] !== e3[r3])
            return false;
        return true;
      }, e2.getFunctionName = j, e2.decorate = function(t4, e3) {
        for (var r3 in e3)
          x.has(r3) || (t4[r3] = e3[r3]);
      }, e2.mergeClone = function(t4, r3) {
        $(r3) && (r3 = r3.toObject({ transform: false, virtuals: false, depopulate: true, getters: false, flattenDecimals: false }));
        for (var i2, o2 = Object.keys(r3), a2 = o2.length, s2 = 0;s2 < a2; )
          if (i2 = o2[s2++], !x.has(i2))
            if (t4[i2] === undefined)
              t4[i2] = m(r3[i2], { transform: false, virtuals: false, depopulate: true, getters: false, flattenDecimals: false });
            else {
              var c2 = r3[i2];
              if (c2 == null || !c2.valueOf || c2 instanceof Date || (c2 = c2.valueOf()), e2.isObject(c2)) {
                var u2 = c2;
                $(c2) && !c2.isMongooseBuffer && (u2 = u2.toObject({ transform: false, virtuals: false, depopulate: true, getters: false, flattenDecimals: false })), c2.isMongooseBuffer && (u2 = n.from(u2)), e2.mergeClone(t4[i2], u2);
              } else
                t4[i2] = m(c2, { flattenDecimals: false });
            }
      }, e2.each = function(t4, e3) {
        var r3, n2 = s(t4);
        try {
          for (n2.s();!(r3 = n2.n()).done; )
            e3(r3.value);
        } catch (t5) {
          n2.e(t5);
        } finally {
          n2.f();
        }
      }, e2.renameObjKey = function(t4, e3, r3) {
        return Object.keys(t4).reduce(function(n2, i2) {
          return i2 === e3 ? n2[r3] = t4[e3] : n2[i2] = t4[i2], n2;
        }, {});
      }, e2.getOption = function(t4) {
        var e3, r3 = s(Array.prototype.slice.call(arguments, 1));
        try {
          for (r3.s();!(e3 = r3.n()).done; ) {
            var n2 = e3.value;
            if (n2 != null && n2[t4] != null)
              return n2[t4];
          }
        } catch (t5) {
          r3.e(t5);
        } finally {
          r3.f();
        }
        return null;
      }, e2.noop = function() {
      }, e2.errorToPOJO = function(t4) {
        if (!(t4 instanceof Error))
          throw new Error("`error` must be `instanceof Error`.");
        var e3, r3 = {}, n2 = s(Object.getOwnPropertyNames(t4));
        try {
          for (n2.s();!(e3 = n2.n()).done; ) {
            var i2 = e3.value;
            r3[i2] = t4[i2];
          }
        } catch (t5) {
          n2.e(t5);
        } finally {
          n2.f();
        }
        return r3;
      }, e2.warn = function(t4) {
        return { env: {} }.emitWarning(t4, { code: "MONGOOSE" });
      }, e2.injectTimestampsOption = function(t4, e3) {
        e3 != null && (t4.timestamps = e3);
      };
    }, 5165: (t3, e2, r2) => {
      function n(t4, e3) {
        var r3 = typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
        if (!r3) {
          if (Array.isArray(t4) || (r3 = function(t5, e4) {
            if (t5) {
              if (typeof t5 == "string")
                return i(t5, e4);
              var r4 = {}.toString.call(t5).slice(8, -1);
              return r4 === "Object" && t5.constructor && (r4 = t5.constructor.name), r4 === "Map" || r4 === "Set" ? Array.from(t5) : r4 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r4) ? i(t5, e4) : undefined;
            }
          }(t4)) || e3 && t4 && typeof t4.length == "number") {
            r3 && (t4 = r3);
            var n2 = 0, o2 = function() {
            };
            return { s: o2, n: function() {
              return n2 >= t4.length ? { done: true } : { done: false, value: t4[n2++] };
            }, e: function(t5) {
              throw t5;
            }, f: o2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var a2, s2 = true, c2 = false;
        return { s: function() {
          r3 = r3.call(t4);
        }, n: function() {
          var t5 = r3.next();
          return s2 = t5.done, t5;
        }, e: function(t5) {
          c2 = true, a2 = t5;
        }, f: function() {
          try {
            s2 || r3.return == null || r3.return();
          } finally {
            if (c2)
              throw a2;
          }
        } };
      }
      function i(t4, e3) {
        (e3 == null || e3 > t4.length) && (e3 = t4.length);
        for (var r3 = 0, n2 = Array(e3);r3 < e3; r3++)
          n2[r3] = t4[r3];
        return n2;
      }
      var o = r2(8660), a = r2(335), s = r2(5625).modelSymbol;
      function c(t4, e3) {
        this.path = e3, this.getters = [], this.setters = [], this.options = Object.assign({}, t4);
      }
      c.prototype._applyDefaultGetters = function() {
        if (!(this.getters.length > 0 || this.setters.length > 0)) {
          var t4 = "$" + this.path;
          this.getters.push(function() {
            return this.$locals[t4];
          }), this.setters.push(function(e3) {
            this.$locals[t4] = e3;
          });
        }
      }, c.prototype.clone = function() {
        var t4 = new c(this.options, this.path);
        return t4.getters = [].concat(this.getters), t4.setters = [].concat(this.setters), t4;
      }, c.prototype.get = function(t4) {
        return this.getters.push(t4), this;
      }, c.prototype.set = function(t4) {
        return this.setters.push(t4), this;
      }, c.prototype.applyGetters = function(t4, e3) {
        a.hasUserDefinedProperty(this.options, ["ref", "refPath"]) && e3.$$populatedVirtuals && e3.$$populatedVirtuals.hasOwnProperty(this.path) && (t4 = e3.$$populatedVirtuals[this.path]);
        var r3, i2 = t4, o2 = n(this.getters);
        try {
          for (o2.s();!(r3 = o2.n()).done; )
            i2 = r3.value.call(e3, i2, this, e3);
        } catch (t5) {
          o2.e(t5);
        } finally {
          o2.f();
        }
        return i2;
      }, c.prototype.applySetters = function(t4, e3) {
        var r3, i2 = t4, o2 = n(this.setters);
        try {
          for (o2.s();!(r3 = o2.n()).done; )
            i2 = r3.value.call(e3, i2, this, e3);
        } catch (t5) {
          o2.e(t5);
        } finally {
          o2.f();
        }
        return i2;
      }, c.prototype._getModelNamesForPopulate = function(t4) {
        if (this.options.refPath)
          return o(this.options.refPath, t4, this.path);
        var e3;
        return (e3 = typeof this.options.ref != "function" || this.options.ref[s] ? this.options.ref : this.options.ref.call(t4, t4)) == null || Array.isArray(e3) ? e3 : [e3];
      }, t3.exports = c;
    }, 1419: (t3, e2, r2) => {
      var n = e2;
      n.bignum = r2(7799), n.define = r2(2392).define, n.base = r2(1620), n.constants = r2(8050), n.decoders = r2(2240), n.encoders = r2(9176);
    }, 2392: (t3, e2, r2) => {
      var n = r2(1419), i = r2(1679);
      function o(t4, e3) {
        this.name = t4, this.body = e3, this.decoders = {}, this.encoders = {};
      }
      e2.define = function(t4, e3) {
        return new o(t4, e3);
      }, o.prototype._createNamed = function(t4) {
        var e3;
        try {
          e3 = Object(function() {
            var t5 = new Error("Cannot find module 'vm'");
            throw t5.code = "MODULE_NOT_FOUND", t5;
          }())("(function " + this.name + "(entity) {\n  this._initNamed(entity);\n})");
        } catch (t5) {
          e3 = function(t6) {
            this._initNamed(t6);
          };
        }
        return i(e3, t4), e3.prototype._initNamed = function(e4) {
          t4.call(this, e4);
        }, new e3(this);
      }, o.prototype._getDecoder = function(t4) {
        return t4 = t4 || "der", this.decoders.hasOwnProperty(t4) || (this.decoders[t4] = this._createNamed(n.decoders[t4])), this.decoders[t4];
      }, o.prototype.decode = function(t4, e3, r3) {
        return this._getDecoder(e3).decode(t4, r3);
      }, o.prototype._getEncoder = function(t4) {
        return t4 = t4 || "der", this.encoders.hasOwnProperty(t4) || (this.encoders[t4] = this._createNamed(n.encoders[t4])), this.encoders[t4];
      }, o.prototype.encode = function(t4, e3, r3) {
        return this._getEncoder(e3).encode(t4, r3);
      };
    }, 8260: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      var i = r2(1679), o = r2(1620).Reporter, a = r2(5832).Buffer;
      function s(t4, e3) {
        o.call(this, e3), a.isBuffer(t4) ? (this.base = t4, this.offset = 0, this.length = t4.length) : this.error("Input not Buffer");
      }
      function c(t4, e3) {
        if (Array.isArray(t4))
          this.length = 0, this.value = t4.map(function(t5) {
            return t5 instanceof c || (t5 = new c(t5, e3)), this.length += t5.length, t5;
          }, this);
        else if (typeof t4 == "number") {
          if (!(0 <= t4 && t4 <= 255))
            return e3.error("non-byte EncoderBuffer value");
          this.value = t4, this.length = 1;
        } else if (typeof t4 == "string")
          this.value = t4, this.length = a.byteLength(t4);
        else {
          if (!a.isBuffer(t4))
            return e3.error("Unsupported type: " + n(t4));
          this.value = t4, this.length = t4.length;
        }
      }
      i(s, o), e2.t = s, s.prototype.save = function() {
        return { offset: this.offset, reporter: o.prototype.save.call(this) };
      }, s.prototype.restore = function(t4) {
        var e3 = new s(this.base);
        return e3.offset = t4.offset, e3.length = this.offset, this.offset = t4.offset, o.prototype.restore.call(this, t4.reporter), e3;
      }, s.prototype.isEmpty = function() {
        return this.offset === this.length;
      }, s.prototype.readUInt8 = function(t4) {
        return this.offset + 1 <= this.length ? this.base.readUInt8(this.offset++, true) : this.error(t4 || "DecoderBuffer overrun");
      }, s.prototype.skip = function(t4, e3) {
        if (!(this.offset + t4 <= this.length))
          return this.error(e3 || "DecoderBuffer overrun");
        var r3 = new s(this.base);
        return r3._reporterState = this._reporterState, r3.offset = this.offset, r3.length = this.offset + t4, this.offset += t4, r3;
      }, s.prototype.raw = function(t4) {
        return this.base.slice(t4 ? t4.offset : this.offset, this.length);
      }, e2.d = c, c.prototype.join = function(t4, e3) {
        return t4 || (t4 = new a(this.length)), e3 || (e3 = 0), this.length === 0 || (Array.isArray(this.value) ? this.value.forEach(function(r3) {
          r3.join(t4, e3), e3 += r3.length;
        }) : (typeof this.value == "number" ? t4[e3] = this.value : typeof this.value == "string" ? t4.write(this.value, e3) : a.isBuffer(this.value) && this.value.copy(t4, e3), e3 += this.length)), t4;
      };
    }, 1620: (t3, e2, r2) => {
      var n = e2;
      n.Reporter = r2(6555).a, n.DecoderBuffer = r2(8260).t, n.EncoderBuffer = r2(8260).d, n.Node = r2(4258);
    }, 4258: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      var i = r2(1620).Reporter, o = r2(1620).EncoderBuffer, a = r2(1620).DecoderBuffer, s = r2(3528), c = ["seq", "seqof", "set", "setof", "objid", "bool", "gentime", "utctime", "null_", "enum", "int", "objDesc", "bitstr", "bmpstr", "charstr", "genstr", "graphstr", "ia5str", "iso646str", "numstr", "octstr", "printstr", "t61str", "unistr", "utf8str", "videostr"], u = ["key", "obj", "use", "optional", "explicit", "implicit", "def", "choice", "any", "contains"].concat(c);
      function f(t4, e3) {
        var r3 = {};
        this._baseState = r3, r3.enc = t4, r3.parent = e3 || null, r3.children = null, r3.tag = null, r3.args = null, r3.reverseArgs = null, r3.choice = null, r3.optional = false, r3.any = false, r3.obj = false, r3.use = null, r3.useDecoder = null, r3.key = null, r3.default = null, r3.explicit = null, r3.implicit = null, r3.contains = null, r3.parent || (r3.children = [], this._wrap());
      }
      t3.exports = f;
      var l = ["enc", "parent", "children", "tag", "args", "reverseArgs", "choice", "optional", "any", "obj", "use", "alteredUse", "key", "default", "explicit", "implicit", "contains"];
      f.prototype.clone = function() {
        var t4 = this._baseState, e3 = {};
        l.forEach(function(r4) {
          e3[r4] = t4[r4];
        });
        var r3 = new this.constructor(e3.parent);
        return r3._baseState = e3, r3;
      }, f.prototype._wrap = function() {
        var t4 = this._baseState;
        u.forEach(function(e3) {
          this[e3] = function() {
            var r3 = new this.constructor(this);
            return t4.children.push(r3), r3[e3].apply(r3, arguments);
          };
        }, this);
      }, f.prototype._init = function(t4) {
        var e3 = this._baseState;
        s(e3.parent === null), t4.call(this), e3.children = e3.children.filter(function(t5) {
          return t5._baseState.parent === this;
        }, this), s.equal(e3.children.length, 1, "Root node can have only one child");
      }, f.prototype._useArgs = function(t4) {
        var e3 = this._baseState, r3 = t4.filter(function(t5) {
          return t5 instanceof this.constructor;
        }, this);
        t4 = t4.filter(function(t5) {
          return !(t5 instanceof this.constructor);
        }, this), r3.length !== 0 && (s(e3.children === null), e3.children = r3, r3.forEach(function(t5) {
          t5._baseState.parent = this;
        }, this)), t4.length !== 0 && (s(e3.args === null), e3.args = t4, e3.reverseArgs = t4.map(function(t5) {
          if (n(t5) !== "object" || t5.constructor !== Object)
            return t5;
          var e4 = {};
          return Object.keys(t5).forEach(function(r4) {
            r4 == (0 | r4) && (r4 |= 0);
            var n2 = t5[r4];
            e4[n2] = r4;
          }), e4;
        }));
      }, ["_peekTag", "_decodeTag", "_use", "_decodeStr", "_decodeObjid", "_decodeTime", "_decodeNull", "_decodeInt", "_decodeBool", "_decodeList", "_encodeComposite", "_encodeStr", "_encodeObjid", "_encodeTime", "_encodeNull", "_encodeInt", "_encodeBool"].forEach(function(t4) {
        f.prototype[t4] = function() {
          var e3 = this._baseState;
          throw new Error(t4 + " not implemented for encoding: " + e3.enc);
        };
      }), c.forEach(function(t4) {
        f.prototype[t4] = function() {
          var e3 = this._baseState, r3 = Array.prototype.slice.call(arguments);
          return s(e3.tag === null), e3.tag = t4, this._useArgs(r3), this;
        };
      }), f.prototype.use = function(t4) {
        s(t4);
        var e3 = this._baseState;
        return s(e3.use === null), e3.use = t4, this;
      }, f.prototype.optional = function() {
        return this._baseState.optional = true, this;
      }, f.prototype.def = function(t4) {
        var e3 = this._baseState;
        return s(e3.default === null), e3.default = t4, e3.optional = true, this;
      }, f.prototype.explicit = function(t4) {
        var e3 = this._baseState;
        return s(e3.explicit === null && e3.implicit === null), e3.explicit = t4, this;
      }, f.prototype.implicit = function(t4) {
        var e3 = this._baseState;
        return s(e3.explicit === null && e3.implicit === null), e3.implicit = t4, this;
      }, f.prototype.obj = function() {
        var t4 = this._baseState, e3 = Array.prototype.slice.call(arguments);
        return t4.obj = true, e3.length !== 0 && this._useArgs(e3), this;
      }, f.prototype.key = function(t4) {
        var e3 = this._baseState;
        return s(e3.key === null), e3.key = t4, this;
      }, f.prototype.any = function() {
        return this._baseState.any = true, this;
      }, f.prototype.choice = function(t4) {
        var e3 = this._baseState;
        return s(e3.choice === null), e3.choice = t4, this._useArgs(Object.keys(t4).map(function(e4) {
          return t4[e4];
        })), this;
      }, f.prototype.contains = function(t4) {
        var e3 = this._baseState;
        return s(e3.use === null), e3.contains = t4, this;
      }, f.prototype._decode = function(t4, e3) {
        var r3 = this._baseState;
        if (r3.parent === null)
          return t4.wrapResult(r3.children[0]._decode(t4, e3));
        var n2, i2 = r3.default, o2 = true, s2 = null;
        if (r3.key !== null && (s2 = t4.enterKey(r3.key)), r3.optional) {
          var c2 = null;
          if (r3.explicit !== null ? c2 = r3.explicit : r3.implicit !== null ? c2 = r3.implicit : r3.tag !== null && (c2 = r3.tag), c2 !== null || r3.any) {
            if (o2 = this._peekTag(t4, c2, r3.any), t4.isError(o2))
              return o2;
          } else {
            var u2 = t4.save();
            try {
              r3.choice === null ? this._decodeGeneric(r3.tag, t4, e3) : this._decodeChoice(t4, e3), o2 = true;
            } catch (t5) {
              o2 = false;
            }
            t4.restore(u2);
          }
        }
        if (r3.obj && o2 && (n2 = t4.enterObject()), o2) {
          if (r3.explicit !== null) {
            var f2 = this._decodeTag(t4, r3.explicit);
            if (t4.isError(f2))
              return f2;
            t4 = f2;
          }
          var l2 = t4.offset;
          if (r3.use === null && r3.choice === null) {
            r3.any && (u2 = t4.save());
            var h = this._decodeTag(t4, r3.implicit !== null ? r3.implicit : r3.tag, r3.any);
            if (t4.isError(h))
              return h;
            r3.any ? i2 = t4.raw(u2) : t4 = h;
          }
          if (e3 && e3.track && r3.tag !== null && e3.track(t4.path(), l2, t4.length, "tagged"), e3 && e3.track && r3.tag !== null && e3.track(t4.path(), t4.offset, t4.length, "content"), r3.any || (i2 = r3.choice === null ? this._decodeGeneric(r3.tag, t4, e3) : this._decodeChoice(t4, e3)), t4.isError(i2))
            return i2;
          if (r3.any || r3.choice !== null || r3.children === null || r3.children.forEach(function(r4) {
            r4._decode(t4, e3);
          }), r3.contains && (r3.tag === "octstr" || r3.tag === "bitstr")) {
            var p = new a(i2);
            i2 = this._getUse(r3.contains, t4._reporterState.obj)._decode(p, e3);
          }
        }
        return r3.obj && o2 && (i2 = t4.leaveObject(n2)), r3.key === null || i2 === null && o2 !== true ? s2 !== null && t4.exitKey(s2) : t4.leaveKey(s2, r3.key, i2), i2;
      }, f.prototype._decodeGeneric = function(t4, e3, r3) {
        var n2 = this._baseState;
        return t4 === "seq" || t4 === "set" ? null : t4 === "seqof" || t4 === "setof" ? this._decodeList(e3, t4, n2.args[0], r3) : /str$/.test(t4) ? this._decodeStr(e3, t4, r3) : t4 === "objid" && n2.args ? this._decodeObjid(e3, n2.args[0], n2.args[1], r3) : t4 === "objid" ? this._decodeObjid(e3, null, null, r3) : t4 === "gentime" || t4 === "utctime" ? this._decodeTime(e3, t4, r3) : t4 === "null_" ? this._decodeNull(e3, r3) : t4 === "bool" ? this._decodeBool(e3, r3) : t4 === "objDesc" ? this._decodeStr(e3, t4, r3) : t4 === "int" || t4 === "enum" ? this._decodeInt(e3, n2.args && n2.args[0], r3) : n2.use !== null ? this._getUse(n2.use, e3._reporterState.obj)._decode(e3, r3) : e3.error("unknown tag: " + t4);
      }, f.prototype._getUse = function(t4, e3) {
        var r3 = this._baseState;
        return r3.useDecoder = this._use(t4, e3), s(r3.useDecoder._baseState.parent === null), r3.useDecoder = r3.useDecoder._baseState.children[0], r3.implicit !== r3.useDecoder._baseState.implicit && (r3.useDecoder = r3.useDecoder.clone(), r3.useDecoder._baseState.implicit = r3.implicit), r3.useDecoder;
      }, f.prototype._decodeChoice = function(t4, e3) {
        var r3 = this._baseState, n2 = null, i2 = false;
        return Object.keys(r3.choice).some(function(o2) {
          var a2 = t4.save(), s2 = r3.choice[o2];
          try {
            var c2 = s2._decode(t4, e3);
            if (t4.isError(c2))
              return false;
            n2 = { type: o2, value: c2 }, i2 = true;
          } catch (e4) {
            return t4.restore(a2), false;
          }
          return true;
        }, this), i2 ? n2 : t4.error("Choice not matched");
      }, f.prototype._createEncoderBuffer = function(t4) {
        return new o(t4, this.reporter);
      }, f.prototype._encode = function(t4, e3, r3) {
        var n2 = this._baseState;
        if (n2.default === null || n2.default !== t4) {
          var i2 = this._encodeValue(t4, e3, r3);
          if (i2 !== undefined && !this._skipDefault(i2, e3, r3))
            return i2;
        }
      }, f.prototype._encodeValue = function(t4, e3, r3) {
        var o2 = this._baseState;
        if (o2.parent === null)
          return o2.children[0]._encode(t4, e3 || new i);
        var a2 = null;
        if (this.reporter = e3, o2.optional && t4 === undefined) {
          if (o2.default === null)
            return;
          t4 = o2.default;
        }
        var s2 = null, c2 = false;
        if (o2.any)
          a2 = this._createEncoderBuffer(t4);
        else if (o2.choice)
          a2 = this._encodeChoice(t4, e3);
        else if (o2.contains)
          s2 = this._getUse(o2.contains, r3)._encode(t4, e3), c2 = true;
        else if (o2.children)
          s2 = o2.children.map(function(r4) {
            if (r4._baseState.tag === "null_")
              return r4._encode(null, e3, t4);
            if (r4._baseState.key === null)
              return e3.error("Child should have a key");
            var i2 = e3.enterKey(r4._baseState.key);
            if (n(t4) !== "object")
              return e3.error("Child expected, but input is not object");
            var o3 = r4._encode(t4[r4._baseState.key], e3, t4);
            return e3.leaveKey(i2), o3;
          }, this).filter(function(t5) {
            return t5;
          }), s2 = this._createEncoderBuffer(s2);
        else if (o2.tag === "seqof" || o2.tag === "setof") {
          if (!o2.args || o2.args.length !== 1)
            return e3.error("Too many args for : " + o2.tag);
          if (!Array.isArray(t4))
            return e3.error("seqof/setof, but data is not Array");
          var u2 = this.clone();
          u2._baseState.implicit = null, s2 = this._createEncoderBuffer(t4.map(function(r4) {
            var n2 = this._baseState;
            return this._getUse(n2.args[0], t4)._encode(r4, e3);
          }, u2));
        } else
          o2.use !== null ? a2 = this._getUse(o2.use, r3)._encode(t4, e3) : (s2 = this._encodePrimitive(o2.tag, t4), c2 = true);
        if (!o2.any && o2.choice === null) {
          var f2 = o2.implicit !== null ? o2.implicit : o2.tag, l2 = o2.implicit === null ? "universal" : "context";
          f2 === null ? o2.use === null && e3.error("Tag could be omitted only for .use()") : o2.use === null && (a2 = this._encodeComposite(f2, c2, l2, s2));
        }
        return o2.explicit !== null && (a2 = this._encodeComposite(o2.explicit, false, "context", a2)), a2;
      }, f.prototype._encodeChoice = function(t4, e3) {
        var r3 = this._baseState, n2 = r3.choice[t4.type];
        return n2 || s(false, t4.type + " not found in " + JSON.stringify(Object.keys(r3.choice))), n2._encode(t4.value, e3);
      }, f.prototype._encodePrimitive = function(t4, e3) {
        var r3 = this._baseState;
        if (/str$/.test(t4))
          return this._encodeStr(e3, t4);
        if (t4 === "objid" && r3.args)
          return this._encodeObjid(e3, r3.reverseArgs[0], r3.args[1]);
        if (t4 === "objid")
          return this._encodeObjid(e3, null, null);
        if (t4 === "gentime" || t4 === "utctime")
          return this._encodeTime(e3, t4);
        if (t4 === "null_")
          return this._encodeNull();
        if (t4 === "int" || t4 === "enum")
          return this._encodeInt(e3, r3.args && r3.reverseArgs[0]);
        if (t4 === "bool")
          return this._encodeBool(e3);
        if (t4 === "objDesc")
          return this._encodeStr(e3, t4);
        throw new Error("Unsupported tag: " + t4);
      }, f.prototype._isNumstr = function(t4) {
        return /^[0-9 ]*$/.test(t4);
      }, f.prototype._isPrintstr = function(t4) {
        return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(t4);
      };
    }, 6555: (t3, e2, r2) => {
      var n = r2(1679);
      function i(t4) {
        this._reporterState = { obj: null, path: [], options: t4 || {}, errors: [] };
      }
      function o(t4, e3) {
        this.path = t4, this.rethrow(e3);
      }
      e2.a = i, i.prototype.isError = function(t4) {
        return t4 instanceof o;
      }, i.prototype.save = function() {
        var t4 = this._reporterState;
        return { obj: t4.obj, pathLen: t4.path.length };
      }, i.prototype.restore = function(t4) {
        var e3 = this._reporterState;
        e3.obj = t4.obj, e3.path = e3.path.slice(0, t4.pathLen);
      }, i.prototype.enterKey = function(t4) {
        return this._reporterState.path.push(t4);
      }, i.prototype.exitKey = function(t4) {
        var e3 = this._reporterState;
        e3.path = e3.path.slice(0, t4 - 1);
      }, i.prototype.leaveKey = function(t4, e3, r3) {
        var n2 = this._reporterState;
        this.exitKey(t4), n2.obj !== null && (n2.obj[e3] = r3);
      }, i.prototype.path = function() {
        return this._reporterState.path.join("/");
      }, i.prototype.enterObject = function() {
        var t4 = this._reporterState, e3 = t4.obj;
        return t4.obj = {}, e3;
      }, i.prototype.leaveObject = function(t4) {
        var e3 = this._reporterState, r3 = e3.obj;
        return e3.obj = t4, r3;
      }, i.prototype.error = function(t4) {
        var e3, r3 = this._reporterState, n2 = t4 instanceof o;
        if (e3 = n2 ? t4 : new o(r3.path.map(function(t5) {
          return "[" + JSON.stringify(t5) + "]";
        }).join(""), t4.message || t4, t4.stack), !r3.options.partial)
          throw e3;
        return n2 || r3.errors.push(e3), e3;
      }, i.prototype.wrapResult = function(t4) {
        var e3 = this._reporterState;
        return e3.options.partial ? { result: this.isError(t4) ? null : t4, errors: e3.errors } : t4;
      }, n(o, Error), o.prototype.rethrow = function(t4) {
        if (this.message = t4 + " at: " + (this.path || "(shallow)"), Error.captureStackTrace && Error.captureStackTrace(this, o), !this.stack)
          try {
            throw new Error(this.message);
          } catch (t5) {
            this.stack = t5.stack;
          }
        return this;
      };
    }, 425: (t3, e2, r2) => {
      var n = r2(8050);
      e2.tagClass = { 0: "universal", 1: "application", 2: "context", 3: "private" }, e2.tagClassByName = n._reverse(e2.tagClass), e2.tag = { 0: "end", 1: "bool", 2: "int", 3: "bitstr", 4: "octstr", 5: "null_", 6: "objid", 7: "objDesc", 8: "external", 9: "real", 10: "enum", 11: "embed", 12: "utf8str", 13: "relativeOid", 16: "seq", 17: "set", 18: "numstr", 19: "printstr", 20: "t61str", 21: "videostr", 22: "ia5str", 23: "utctime", 24: "gentime", 25: "graphstr", 26: "iso646str", 27: "genstr", 28: "unistr", 29: "charstr", 30: "bmpstr" }, e2.tagByName = n._reverse(e2.tag);
    }, 8050: (t3, e2, r2) => {
      var n = e2;
      n._reverse = function(t4) {
        var e3 = {};
        return Object.keys(t4).forEach(function(r3) {
          (0 | r3) == r3 && (r3 |= 0);
          var n2 = t4[r3];
          e3[n2] = r3;
        }), e3;
      }, n.der = r2(425);
    }, 3879: (t3, e2, r2) => {
      var n = r2(1679), i = r2(1419), o = i.base, a = i.bignum, s = i.constants.der;
      function c(t4) {
        this.enc = "der", this.name = t4.name, this.entity = t4, this.tree = new u, this.tree._init(t4.body);
      }
      function u(t4) {
        o.Node.call(this, "der", t4);
      }
      function f(t4, e3) {
        var r3 = t4.readUInt8(e3);
        if (t4.isError(r3))
          return r3;
        var n2 = s.tagClass[r3 >> 6], i2 = !(32 & r3);
        if (31 & ~r3)
          r3 &= 31;
        else {
          var o2 = r3;
          for (r3 = 0;!(128 & ~o2); ) {
            if (o2 = t4.readUInt8(e3), t4.isError(o2))
              return o2;
            r3 <<= 7, r3 |= 127 & o2;
          }
        }
        return { cls: n2, primitive: i2, tag: r3, tagStr: s.tag[r3] };
      }
      function l(t4, e3, r3) {
        var n2 = t4.readUInt8(r3);
        if (t4.isError(n2))
          return n2;
        if (!e3 && n2 === 128)
          return null;
        if (!(128 & n2))
          return n2;
        var i2 = 127 & n2;
        if (i2 > 4)
          return t4.error("length octect is too long");
        n2 = 0;
        for (var o2 = 0;o2 < i2; o2++) {
          n2 <<= 8;
          var a2 = t4.readUInt8(r3);
          if (t4.isError(a2))
            return a2;
          n2 |= a2;
        }
        return n2;
      }
      t3.exports = c, c.prototype.decode = function(t4, e3) {
        return t4 instanceof o.DecoderBuffer || (t4 = new o.DecoderBuffer(t4, e3)), this.tree._decode(t4, e3);
      }, n(u, o.Node), u.prototype._peekTag = function(t4, e3, r3) {
        if (t4.isEmpty())
          return false;
        var n2 = t4.save(), i2 = f(t4, 'Failed to peek tag: "' + e3 + '"');
        return t4.isError(i2) ? i2 : (t4.restore(n2), i2.tag === e3 || i2.tagStr === e3 || i2.tagStr + "of" === e3 || r3);
      }, u.prototype._decodeTag = function(t4, e3, r3) {
        var n2 = f(t4, 'Failed to decode tag of "' + e3 + '"');
        if (t4.isError(n2))
          return n2;
        var i2 = l(t4, n2.primitive, 'Failed to get length of "' + e3 + '"');
        if (t4.isError(i2))
          return i2;
        if (!r3 && n2.tag !== e3 && n2.tagStr !== e3 && n2.tagStr + "of" !== e3)
          return t4.error('Failed to match tag: "' + e3 + '"');
        if (n2.primitive || i2 !== null)
          return t4.skip(i2, 'Failed to match body of: "' + e3 + '"');
        var o2 = t4.save(), a2 = this._skipUntilEnd(t4, 'Failed to skip indefinite length body: "' + this.tag + '"');
        return t4.isError(a2) ? a2 : (i2 = t4.offset - o2.offset, t4.restore(o2), t4.skip(i2, 'Failed to match body of: "' + e3 + '"'));
      }, u.prototype._skipUntilEnd = function(t4, e3) {
        for (;; ) {
          var r3 = f(t4, e3);
          if (t4.isError(r3))
            return r3;
          var n2, i2 = l(t4, r3.primitive, e3);
          if (t4.isError(i2))
            return i2;
          if (n2 = r3.primitive || i2 !== null ? t4.skip(i2) : this._skipUntilEnd(t4, e3), t4.isError(n2))
            return n2;
          if (r3.tagStr === "end")
            break;
        }
      }, u.prototype._decodeList = function(t4, e3, r3, n2) {
        for (var i2 = [];!t4.isEmpty(); ) {
          var o2 = this._peekTag(t4, "end");
          if (t4.isError(o2))
            return o2;
          var a2 = r3.decode(t4, "der", n2);
          if (t4.isError(a2) && o2)
            break;
          i2.push(a2);
        }
        return i2;
      }, u.prototype._decodeStr = function(t4, e3) {
        if (e3 === "bitstr") {
          var r3 = t4.readUInt8();
          return t4.isError(r3) ? r3 : { unused: r3, data: t4.raw() };
        }
        if (e3 === "bmpstr") {
          var n2 = t4.raw();
          if (n2.length % 2 == 1)
            return t4.error("Decoding of string type: bmpstr length mismatch");
          for (var i2 = "", o2 = 0;o2 < n2.length / 2; o2++)
            i2 += String.fromCharCode(n2.readUInt16BE(2 * o2));
          return i2;
        }
        if (e3 === "numstr") {
          var a2 = t4.raw().toString("ascii");
          return this._isNumstr(a2) ? a2 : t4.error("Decoding of string type: numstr unsupported characters");
        }
        if (e3 === "octstr")
          return t4.raw();
        if (e3 === "objDesc")
          return t4.raw();
        if (e3 === "printstr") {
          var s2 = t4.raw().toString("ascii");
          return this._isPrintstr(s2) ? s2 : t4.error("Decoding of string type: printstr unsupported characters");
        }
        return /str$/.test(e3) ? t4.raw().toString() : t4.error("Decoding of string type: " + e3 + " unsupported");
      }, u.prototype._decodeObjid = function(t4, e3, r3) {
        for (var n2, i2 = [], o2 = 0;!t4.isEmpty(); ) {
          var a2 = t4.readUInt8();
          o2 <<= 7, o2 |= 127 & a2, 128 & a2 || (i2.push(o2), o2 = 0);
        }
        128 & a2 && i2.push(o2);
        var s2 = i2[0] / 40 | 0, c2 = i2[0] % 40;
        if (n2 = r3 ? i2 : [s2, c2].concat(i2.slice(1)), e3) {
          var u2 = e3[n2.join(" ")];
          u2 === undefined && (u2 = e3[n2.join(".")]), u2 !== undefined && (n2 = u2);
        }
        return n2;
      }, u.prototype._decodeTime = function(t4, e3) {
        var r3 = t4.raw().toString();
        if (e3 === "gentime")
          var n2 = 0 | r3.slice(0, 4), i2 = 0 | r3.slice(4, 6), o2 = 0 | r3.slice(6, 8), a2 = 0 | r3.slice(8, 10), s2 = 0 | r3.slice(10, 12), c2 = 0 | r3.slice(12, 14);
        else {
          if (e3 !== "utctime")
            return t4.error("Decoding " + e3 + " time is not supported yet");
          n2 = 0 | r3.slice(0, 2), i2 = 0 | r3.slice(2, 4), o2 = 0 | r3.slice(4, 6), a2 = 0 | r3.slice(6, 8), s2 = 0 | r3.slice(8, 10), c2 = 0 | r3.slice(10, 12), n2 = n2 < 70 ? 2000 + n2 : 1900 + n2;
        }
        return Date.UTC(n2, i2 - 1, o2, a2, s2, c2, 0);
      }, u.prototype._decodeNull = function(t4) {
        return null;
      }, u.prototype._decodeBool = function(t4) {
        var e3 = t4.readUInt8();
        return t4.isError(e3) ? e3 : e3 !== 0;
      }, u.prototype._decodeInt = function(t4, e3) {
        var r3 = t4.raw(), n2 = new a(r3);
        return e3 && (n2 = e3[n2.toString(10)] || n2), n2;
      }, u.prototype._use = function(t4, e3) {
        return typeof t4 == "function" && (t4 = t4(e3)), t4._getDecoder("der").tree;
      };
    }, 2240: (t3, e2, r2) => {
      var n = e2;
      n.der = r2(3879), n.pem = r2(8330);
    }, 8330: (t3, e2, r2) => {
      var n = r2(1679), i = r2(5832).Buffer, o = r2(3879);
      function a(t4) {
        o.call(this, t4), this.enc = "pem";
      }
      n(a, o), t3.exports = a, a.prototype.decode = function(t4, e3) {
        for (var r3 = t4.toString().split(/[\r\n]+/g), n2 = e3.label.toUpperCase(), a2 = /^-----(BEGIN|END) ([^-]+)-----$/, s = -1, c = -1, u = 0;u < r3.length; u++) {
          var f = r3[u].match(a2);
          if (f !== null && f[2] === n2) {
            if (s !== -1) {
              if (f[1] !== "END")
                break;
              c = u;
              break;
            }
            if (f[1] !== "BEGIN")
              break;
            s = u;
          }
        }
        if (s === -1 || c === -1)
          throw new Error("PEM section not found for: " + n2);
        var l = r3.slice(s + 1, c).join("");
        l.replace(/[^a-z0-9\+\/=]+/gi, "");
        var h = new i(l, "base64");
        return o.prototype.decode.call(this, h, e3);
      };
    }, 2655: (t3, e2, r2) => {
      var n = r2(1679), i = r2(5832).Buffer, o = r2(1419), a = o.base, s = o.constants.der;
      function c(t4) {
        this.enc = "der", this.name = t4.name, this.entity = t4, this.tree = new u, this.tree._init(t4.body);
      }
      function u(t4) {
        a.Node.call(this, "der", t4);
      }
      function f(t4) {
        return t4 < 10 ? "0" + t4 : t4;
      }
      t3.exports = c, c.prototype.encode = function(t4, e3) {
        return this.tree._encode(t4, e3).join();
      }, n(u, a.Node), u.prototype._encodeComposite = function(t4, e3, r3, n2) {
        var o2, a2 = function(t5, e4, r4, n3) {
          var i2;
          if (t5 === "seqof" ? t5 = "seq" : t5 === "setof" && (t5 = "set"), s.tagByName.hasOwnProperty(t5))
            i2 = s.tagByName[t5];
          else {
            if (typeof t5 != "number" || (0 | t5) !== t5)
              return n3.error("Unknown tag: " + t5);
            i2 = t5;
          }
          return i2 >= 31 ? n3.error("Multi-octet tag encoding unsupported") : (e4 || (i2 |= 32), i2 |= s.tagClassByName[r4 || "universal"] << 6);
        }(t4, e3, r3, this.reporter);
        if (n2.length < 128)
          return (o2 = new i(2))[0] = a2, o2[1] = n2.length, this._createEncoderBuffer([o2, n2]);
        for (var c2 = 1, u2 = n2.length;u2 >= 256; u2 >>= 8)
          c2++;
        (o2 = new i(2 + c2))[0] = a2, o2[1] = 128 | c2, u2 = 1 + c2;
        for (var f2 = n2.length;f2 > 0; u2--, f2 >>= 8)
          o2[u2] = 255 & f2;
        return this._createEncoderBuffer([o2, n2]);
      }, u.prototype._encodeStr = function(t4, e3) {
        if (e3 === "bitstr")
          return this._createEncoderBuffer([0 | t4.unused, t4.data]);
        if (e3 === "bmpstr") {
          for (var r3 = new i(2 * t4.length), n2 = 0;n2 < t4.length; n2++)
            r3.writeUInt16BE(t4.charCodeAt(n2), 2 * n2);
          return this._createEncoderBuffer(r3);
        }
        return e3 === "numstr" ? this._isNumstr(t4) ? this._createEncoderBuffer(t4) : this.reporter.error("Encoding of string type: numstr supports only digits and space") : e3 === "printstr" ? this._isPrintstr(t4) ? this._createEncoderBuffer(t4) : this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark") : /str$/.test(e3) || e3 === "objDesc" ? this._createEncoderBuffer(t4) : this.reporter.error("Encoding of string type: " + e3 + " unsupported");
      }, u.prototype._encodeObjid = function(t4, e3, r3) {
        if (typeof t4 == "string") {
          if (!e3)
            return this.reporter.error("string objid given, but no values map found");
          if (!e3.hasOwnProperty(t4))
            return this.reporter.error("objid not found in values map");
          t4 = e3[t4].split(/[\s\.]+/g);
          for (var n2 = 0;n2 < t4.length; n2++)
            t4[n2] |= 0;
        } else if (Array.isArray(t4))
          for (t4 = t4.slice(), n2 = 0;n2 < t4.length; n2++)
            t4[n2] |= 0;
        if (!Array.isArray(t4))
          return this.reporter.error("objid() should be either array or string, got: " + JSON.stringify(t4));
        if (!r3) {
          if (t4[1] >= 40)
            return this.reporter.error("Second objid identifier OOB");
          t4.splice(0, 2, 40 * t4[0] + t4[1]);
        }
        var o2 = 0;
        for (n2 = 0;n2 < t4.length; n2++) {
          var a2 = t4[n2];
          for (o2++;a2 >= 128; a2 >>= 7)
            o2++;
        }
        var s2 = new i(o2), c2 = s2.length - 1;
        for (n2 = t4.length - 1;n2 >= 0; n2--)
          for (a2 = t4[n2], s2[c2--] = 127 & a2;(a2 >>= 7) > 0; )
            s2[c2--] = 128 | 127 & a2;
        return this._createEncoderBuffer(s2);
      }, u.prototype._encodeTime = function(t4, e3) {
        var r3, n2 = new Date(t4);
        return e3 === "gentime" ? r3 = [f(n2.getFullYear()), f(n2.getUTCMonth() + 1), f(n2.getUTCDate()), f(n2.getUTCHours()), f(n2.getUTCMinutes()), f(n2.getUTCSeconds()), "Z"].join("") : e3 === "utctime" ? r3 = [f(n2.getFullYear() % 100), f(n2.getUTCMonth() + 1), f(n2.getUTCDate()), f(n2.getUTCHours()), f(n2.getUTCMinutes()), f(n2.getUTCSeconds()), "Z"].join("") : this.reporter.error("Encoding " + e3 + " time is not supported yet"), this._encodeStr(r3, "octstr");
      }, u.prototype._encodeNull = function() {
        return this._createEncoderBuffer("");
      }, u.prototype._encodeInt = function(t4, e3) {
        if (typeof t4 == "string") {
          if (!e3)
            return this.reporter.error("String int or enum given, but no values map");
          if (!e3.hasOwnProperty(t4))
            return this.reporter.error("Values map doesn't contain: " + JSON.stringify(t4));
          t4 = e3[t4];
        }
        if (typeof t4 != "number" && !i.isBuffer(t4)) {
          var r3 = t4.toArray();
          !t4.sign && 128 & r3[0] && r3.unshift(0), t4 = new i(r3);
        }
        if (i.isBuffer(t4)) {
          var n2 = t4.length;
          t4.length === 0 && n2++;
          var o2 = new i(n2);
          return t4.copy(o2), t4.length === 0 && (o2[0] = 0), this._createEncoderBuffer(o2);
        }
        if (t4 < 128)
          return this._createEncoderBuffer(t4);
        if (t4 < 256)
          return this._createEncoderBuffer([0, t4]);
        n2 = 1;
        for (var a2 = t4;a2 >= 256; a2 >>= 8)
          n2++;
        for (a2 = (o2 = new Array(n2)).length - 1;a2 >= 0; a2--)
          o2[a2] = 255 & t4, t4 >>= 8;
        return 128 & o2[0] && o2.unshift(0), this._createEncoderBuffer(new i(o2));
      }, u.prototype._encodeBool = function(t4) {
        return this._createEncoderBuffer(t4 ? 255 : 0);
      }, u.prototype._use = function(t4, e3) {
        return typeof t4 == "function" && (t4 = t4(e3)), t4._getEncoder("der").tree;
      }, u.prototype._skipDefault = function(t4, e3, r3) {
        var n2, i2 = this._baseState;
        if (i2.default === null)
          return false;
        var o2 = t4.join();
        if (i2.defaultBuffer === undefined && (i2.defaultBuffer = this._encodeValue(i2.default, e3, r3).join()), o2.length !== i2.defaultBuffer.length)
          return false;
        for (n2 = 0;n2 < o2.length; n2++)
          if (o2[n2] !== i2.defaultBuffer[n2])
            return false;
        return true;
      };
    }, 9176: (t3, e2, r2) => {
      var n = e2;
      n.der = r2(2655), n.pem = r2(8418);
    }, 8418: (t3, e2, r2) => {
      var n = r2(1679), i = r2(2655);
      function o(t4) {
        i.call(this, t4), this.enc = "pem";
      }
      n(o, i), t3.exports = o, o.prototype.encode = function(t4, e3) {
        for (var r3 = i.prototype.encode.call(this, t4).toString("base64"), n2 = ["-----BEGIN " + e3.label + "-----"], o2 = 0;o2 < r3.length; o2 += 64)
          n2.push(r3.slice(o2, o2 + 64));
        return n2.push("-----END " + e3.label + "-----"), n2.join("\n");
      };
    }, 2402: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4) {
        return i = typeof Symbol == "function" && n(Symbol.iterator) === "symbol" ? function(t5) {
          return n(t5);
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : n(t5);
        }, i(t4);
      }
      var o, a, s = r2(3743).codes, c = s.ERR_AMBIGUOUS_ARGUMENT, u = s.ERR_INVALID_ARG_TYPE, f = s.ERR_INVALID_ARG_VALUE, l = s.ERR_INVALID_RETURN_VALUE, h = s.ERR_MISSING_ARGS, p = r2(9068), d = r2(7352).inspect, y = r2(7352).types, b = y.isPromise, m = y.isRegExp, v = Object.assign ? Object.assign : r2(6182).assign, g = Object.is ? Object.is : r2(2064);
      function _() {
        var t4 = r2(6193);
        o = t4.isDeepEqual, a = t4.isDeepStrictEqual;
      }
      new Map;
      var w = false, S = t3.exports = A, O = {};
      function j(t4) {
        if (t4.message instanceof Error)
          throw t4.message;
        throw new p(t4);
      }
      function $(t4, e3, r3, n2) {
        if (!r3) {
          var i2 = false;
          if (e3 === 0)
            i2 = true, n2 = "No value argument passed to `assert.ok()`";
          else if (n2 instanceof Error)
            throw n2;
          var o2 = new p({ actual: r3, expected: true, message: n2, operator: "==", stackStartFn: t4 });
          throw o2.generatedMessage = i2, o2;
        }
      }
      function A() {
        for (var t4 = arguments.length, e3 = new Array(t4), r3 = 0;r3 < t4; r3++)
          e3[r3] = arguments[r3];
        $.apply(undefined, [A, e3.length].concat(e3));
      }
      S.fail = function t(e3, r3, n2, i2, o2) {
        var a2, s2 = arguments.length;
        if (s2 === 0 ? a2 = "Failed" : s2 === 1 ? (n2 = e3, e3 = undefined) : (w === false && (w = true, ({ env: {} }.emitWarning ? { env: {} }.emitWarning : console.warn.bind(console))("assert.fail() with more than one argument is deprecated. Please use assert.strictEqual() instead or only pass a message.", "DeprecationWarning", "DEP0094")), s2 === 2 && (i2 = "!=")), n2 instanceof Error)
          throw n2;
        var c2 = { actual: e3, expected: r3, operator: i2 === undefined ? "fail" : i2, stackStartFn: o2 || t };
        n2 !== undefined && (c2.message = n2);
        var u2 = new p(c2);
        throw a2 && (u2.message = a2, u2.generatedMessage = true), u2;
      }, S.AssertionError = p, S.ok = A, S.equal = function t(e3, r3, n2) {
        if (arguments.length < 2)
          throw new h("actual", "expected");
        e3 != r3 && j({ actual: e3, expected: r3, message: n2, operator: "==", stackStartFn: t });
      }, S.notEqual = function t(e3, r3, n2) {
        if (arguments.length < 2)
          throw new h("actual", "expected");
        e3 == r3 && j({ actual: e3, expected: r3, message: n2, operator: "!=", stackStartFn: t });
      }, S.deepEqual = function t(e3, r3, n2) {
        if (arguments.length < 2)
          throw new h("actual", "expected");
        o === undefined && _(), o(e3, r3) || j({ actual: e3, expected: r3, message: n2, operator: "deepEqual", stackStartFn: t });
      }, S.notDeepEqual = function t(e3, r3, n2) {
        if (arguments.length < 2)
          throw new h("actual", "expected");
        o === undefined && _(), o(e3, r3) && j({ actual: e3, expected: r3, message: n2, operator: "notDeepEqual", stackStartFn: t });
      }, S.deepStrictEqual = function t(e3, r3, n2) {
        if (arguments.length < 2)
          throw new h("actual", "expected");
        o === undefined && _(), a(e3, r3) || j({ actual: e3, expected: r3, message: n2, operator: "deepStrictEqual", stackStartFn: t });
      }, S.notDeepStrictEqual = function t(e3, r3, n2) {
        if (arguments.length < 2)
          throw new h("actual", "expected");
        o === undefined && _(), a(e3, r3) && j({ actual: e3, expected: r3, message: n2, operator: "notDeepStrictEqual", stackStartFn: t });
      }, S.strictEqual = function t(e3, r3, n2) {
        if (arguments.length < 2)
          throw new h("actual", "expected");
        g(e3, r3) || j({ actual: e3, expected: r3, message: n2, operator: "strictEqual", stackStartFn: t });
      }, S.notStrictEqual = function t(e3, r3, n2) {
        if (arguments.length < 2)
          throw new h("actual", "expected");
        g(e3, r3) && j({ actual: e3, expected: r3, message: n2, operator: "notStrictEqual", stackStartFn: t });
      };
      var E = function t(e3, r3, n2) {
        var i2 = this;
        (function(t4, e4) {
          if (!(t4 instanceof e4))
            throw new TypeError("Cannot call a class as a function");
        })(this, t), r3.forEach(function(t4) {
          t4 in e3 && (n2 !== undefined && typeof n2[t4] == "string" && m(e3[t4]) && e3[t4].test(n2[t4]) ? i2[t4] = n2[t4] : i2[t4] = e3[t4]);
        });
      };
      function x(t4, e3, r3, n2) {
        if (typeof e3 != "function") {
          if (m(e3))
            return e3.test(t4);
          if (arguments.length === 2)
            throw new u("expected", ["Function", "RegExp"], e3);
          if (i(t4) !== "object" || t4 === null) {
            var s2 = new p({ actual: t4, expected: e3, message: r3, operator: "deepStrictEqual", stackStartFn: n2 });
            throw s2.operator = n2.name, s2;
          }
          var c2 = Object.keys(e3);
          if (e3 instanceof Error)
            c2.push("name", "message");
          else if (c2.length === 0)
            throw new f("error", e3, "may not be an empty object");
          return o === undefined && _(), c2.forEach(function(i2) {
            typeof t4[i2] == "string" && m(e3[i2]) && e3[i2].test(t4[i2]) || function(t5, e4, r4, n3, i3, o2) {
              if (!(r4 in t5) || !a(t5[r4], e4[r4])) {
                if (!n3) {
                  var s3 = new E(t5, i3), c3 = new E(e4, i3, t5), u2 = new p({ actual: s3, expected: c3, operator: "deepStrictEqual", stackStartFn: o2 });
                  throw u2.actual = t5, u2.expected = e4, u2.operator = o2.name, u2;
                }
                j({ actual: t5, expected: e4, message: n3, operator: o2.name, stackStartFn: o2 });
              }
            }(t4, e3, i2, r3, c2, n2);
          }), true;
        }
        return e3.prototype !== undefined && t4 instanceof e3 || !Error.isPrototypeOf(e3) && e3.call({}, t4) === true;
      }
      function P(t4) {
        if (typeof t4 != "function")
          throw new u("fn", "Function", t4);
        try {
          t4();
        } catch (t5) {
          return t5;
        }
        return O;
      }
      function k(t4) {
        return b(t4) || t4 !== null && i(t4) === "object" && typeof t4.then == "function" && typeof t4.catch == "function";
      }
      function M(t4) {
        return Promise.resolve().then(function() {
          var e3;
          if (typeof t4 == "function") {
            if (!k(e3 = t4()))
              throw new l("instance of Promise", "promiseFn", e3);
          } else {
            if (!k(t4))
              throw new u("promiseFn", ["Function", "Promise"], t4);
            e3 = t4;
          }
          return Promise.resolve().then(function() {
            return e3;
          }).then(function() {
            return O;
          }).catch(function(t5) {
            return t5;
          });
        });
      }
      function I(t4, e3, r3, n2) {
        if (typeof r3 == "string") {
          if (arguments.length === 4)
            throw new u("error", ["Object", "Error", "Function", "RegExp"], r3);
          if (i(e3) === "object" && e3 !== null) {
            if (e3.message === r3)
              throw new c("error/message", 'The error message "'.concat(e3.message, '" is identical to the message.'));
          } else if (e3 === r3)
            throw new c("error/message", 'The error "'.concat(e3, '" is identical to the message.'));
          n2 = r3, r3 = undefined;
        } else if (r3 != null && i(r3) !== "object" && typeof r3 != "function")
          throw new u("error", ["Object", "Error", "Function", "RegExp"], r3);
        if (e3 === O) {
          var o2 = "";
          r3 && r3.name && (o2 += " (".concat(r3.name, ")")), o2 += n2 ? ": ".concat(n2) : ".";
          var a2 = t4.name === "rejects" ? "rejection" : "exception";
          j({ actual: undefined, expected: r3, operator: t4.name, message: "Missing expected ".concat(a2).concat(o2), stackStartFn: t4 });
        }
        if (r3 && !x(e3, r3, n2, t4))
          throw e3;
      }
      function T(t4, e3, r3, n2) {
        if (e3 !== O) {
          if (typeof r3 == "string" && (n2 = r3, r3 = undefined), !r3 || x(e3, r3)) {
            var i2 = n2 ? ": ".concat(n2) : ".", o2 = t4.name === "doesNotReject" ? "rejection" : "exception";
            j({ actual: e3, expected: r3, operator: t4.name, message: "Got unwanted ".concat(o2).concat(i2, "\n") + 'Actual message: "'.concat(e3 && e3.message, '"'), stackStartFn: t4 });
          }
          throw e3;
        }
      }
      function B() {
        for (var t4 = arguments.length, e3 = new Array(t4), r3 = 0;r3 < t4; r3++)
          e3[r3] = arguments[r3];
        $.apply(undefined, [B, e3.length].concat(e3));
      }
      S.throws = function t(e3) {
        for (var r3 = arguments.length, n2 = new Array(r3 > 1 ? r3 - 1 : 0), i2 = 1;i2 < r3; i2++)
          n2[i2 - 1] = arguments[i2];
        I.apply(undefined, [t, P(e3)].concat(n2));
      }, S.rejects = function t(e3) {
        for (var r3 = arguments.length, n2 = new Array(r3 > 1 ? r3 - 1 : 0), i2 = 1;i2 < r3; i2++)
          n2[i2 - 1] = arguments[i2];
        return M(e3).then(function(e4) {
          return I.apply(undefined, [t, e4].concat(n2));
        });
      }, S.doesNotThrow = function t(e3) {
        for (var r3 = arguments.length, n2 = new Array(r3 > 1 ? r3 - 1 : 0), i2 = 1;i2 < r3; i2++)
          n2[i2 - 1] = arguments[i2];
        T.apply(undefined, [t, P(e3)].concat(n2));
      }, S.doesNotReject = function t(e3) {
        for (var r3 = arguments.length, n2 = new Array(r3 > 1 ? r3 - 1 : 0), i2 = 1;i2 < r3; i2++)
          n2[i2 - 1] = arguments[i2];
        return M(e3).then(function(e4) {
          return T.apply(undefined, [t, e4].concat(n2));
        });
      }, S.ifError = function t(e3) {
        if (e3 != null) {
          var r3 = "ifError got unwanted exception: ";
          i(e3) === "object" && typeof e3.message == "string" ? e3.message.length === 0 && e3.constructor ? r3 += e3.constructor.name : r3 += e3.message : r3 += d(e3);
          var n2 = new p({ actual: e3, expected: null, operator: "ifError", message: r3, stackStartFn: t }), o2 = e3.stack;
          if (typeof o2 == "string") {
            var a2 = o2.split("\n");
            a2.shift();
            for (var s2 = n2.stack.split("\n"), c2 = 0;c2 < a2.length; c2++) {
              var u2 = s2.indexOf(a2[c2]);
              if (u2 !== -1) {
                s2 = s2.slice(0, u2);
                break;
              }
            }
            n2.stack = "".concat(s2.join("\n"), "\n").concat(a2.join("\n"));
          }
          throw n2;
        }
      }, S.strict = v(B, S, { equal: S.strictEqual, deepEqual: S.deepStrictEqual, notEqual: S.notStrictEqual, notDeepEqual: S.notDeepStrictEqual }), S.strict.strict = S.strict;
    }, 9068: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4, e3, r3) {
        return e3 in t4 ? Object.defineProperty(t4, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t4[e3] = r3, t4;
      }
      function o(t4, e3) {
        for (var r3 = 0;r3 < e3.length; r3++) {
          var n2 = e3[r3];
          n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(t4, n2.key, n2);
        }
      }
      function a(t4, e3) {
        return !e3 || h(e3) !== "object" && typeof e3 != "function" ? s(t4) : e3;
      }
      function s(t4) {
        if (t4 === undefined)
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t4;
      }
      function c(t4) {
        var e3 = typeof Map == "function" ? new Map : undefined;
        return c = function(t5) {
          if (t5 === null || (r3 = t5, Function.toString.call(r3).indexOf("[native code]") === -1))
            return t5;
          var r3;
          if (typeof t5 != "function")
            throw new TypeError("Super expression must either be null or a function");
          if (e3 !== undefined) {
            if (e3.has(t5))
              return e3.get(t5);
            e3.set(t5, n2);
          }
          function n2() {
            return u(t5, arguments, l(this).constructor);
          }
          return n2.prototype = Object.create(t5.prototype, { constructor: { value: n2, enumerable: false, writable: true, configurable: true } }), f(n2, t5);
        }, c(t4);
      }
      function u(t4, e3, r3) {
        return u = function() {
          if (typeof Reflect == "undefined" || !Reflect.construct)
            return false;
          if (Reflect.construct.sham)
            return false;
          if (typeof Proxy == "function")
            return true;
          try {
            return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
            })), true;
          } catch (t5) {
            return false;
          }
        }() ? Reflect.construct : function(t5, e4, r4) {
          var n2 = [null];
          n2.push.apply(n2, e4);
          var i2 = new (Function.bind.apply(t5, n2));
          return r4 && f(i2, r4.prototype), i2;
        }, u.apply(null, arguments);
      }
      function f(t4, e3) {
        return f = Object.setPrototypeOf || function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, f(t4, e3);
      }
      function l(t4) {
        return l = Object.setPrototypeOf ? Object.getPrototypeOf : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, l(t4);
      }
      function h(t4) {
        return h = typeof Symbol == "function" && n(Symbol.iterator) === "symbol" ? function(t5) {
          return n(t5);
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : n(t5);
        }, h(t4);
      }
      var p = r2(7352).inspect, d = r2(3743).codes.ERR_INVALID_ARG_TYPE;
      function y(t4, e3, r3) {
        return (r3 === undefined || r3 > t4.length) && (r3 = t4.length), t4.substring(r3 - e3.length, r3) === e3;
      }
      var b = "", m = "", v = "", g = "", _ = { deepStrictEqual: "Expected values to be strictly deep-equal:", strictEqual: "Expected values to be strictly equal:", strictEqualObject: 'Expected "actual" to be reference-equal to "expected":', deepEqual: "Expected values to be loosely deep-equal:", equal: "Expected values to be loosely equal:", notDeepStrictEqual: 'Expected "actual" not to be strictly deep-equal to:', notStrictEqual: 'Expected "actual" to be strictly unequal to:', notStrictEqualObject: 'Expected "actual" not to be reference-equal to "expected":', notDeepEqual: 'Expected "actual" not to be loosely deep-equal to:', notEqual: 'Expected "actual" to be loosely unequal to:', notIdentical: "Values identical but not reference-equal:" };
      function w(t4) {
        var e3 = Object.keys(t4), r3 = Object.create(Object.getPrototypeOf(t4));
        return e3.forEach(function(e4) {
          r3[e4] = t4[e4];
        }), Object.defineProperty(r3, "message", { value: t4.message }), r3;
      }
      function S(t4) {
        return p(t4, { compact: false, customInspect: false, depth: 1000, maxArrayLength: 1 / 0, showHidden: false, breakLength: 1 / 0, showProxy: false, sorted: true, getters: true });
      }
      var O = function(t4) {
        function e3(t5) {
          var r4;
          if (function(t6, e4) {
            if (!(t6 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }(this, e3), h(t5) !== "object" || t5 === null)
            throw new d("options", "Object", t5);
          var { message: n3, operator: i2, stackStartFn: o2, actual: c2, expected: u2 } = t5, f2 = Error.stackTraceLimit;
          if (Error.stackTraceLimit = 0, n3 != null)
            r4 = a(this, l(e3).call(this, String(n3)));
          else if ({ env: {} }.stderr && { env: {} }.stderr.isTTY && ({ env: {} }.stderr && { env: {} }.stderr.getColorDepth && { env: {} }.stderr.getColorDepth() !== 1 ? (b = "[34m", m = "[32m", g = "[39m", v = "[31m") : (b = "", m = "", g = "", v = "")), h(c2) === "object" && c2 !== null && h(u2) === "object" && u2 !== null && "stack" in c2 && c2 instanceof Error && "stack" in u2 && u2 instanceof Error && (c2 = w(c2), u2 = w(u2)), i2 === "deepStrictEqual" || i2 === "strictEqual")
            r4 = a(this, l(e3).call(this, function(t6, e4, r5) {
              var n4 = "", i3 = "", o3 = 0, a2 = "", s2 = false, c3 = S(t6), u3 = c3.split("\n"), f3 = S(e4).split("\n"), l2 = 0, p3 = "";
              if (r5 === "strictEqual" && h(t6) === "object" && h(e4) === "object" && t6 !== null && e4 !== null && (r5 = "strictEqualObject"), u3.length === 1 && f3.length === 1 && u3[0] !== f3[0]) {
                var d2 = u3[0].length + f3[0].length;
                if (d2 <= 10) {
                  if (!(h(t6) === "object" && t6 !== null || h(e4) === "object" && e4 !== null || t6 === 0 && e4 === 0))
                    return "".concat(_[r5], "\n\n") + "".concat(u3[0], " !== ").concat(f3[0], "\n");
                } else if (r5 !== "strictEqualObject" && d2 < ({ env: {} }.stderr && { env: {} }.stderr.isTTY ? { env: {} }.stderr.columns : 80)) {
                  for (;u3[0][l2] === f3[0][l2]; )
                    l2++;
                  l2 > 2 && (p3 = "\n  ".concat(function(t7, e5) {
                    if (e5 = Math.floor(e5), t7.length == 0 || e5 == 0)
                      return "";
                    var r6 = t7.length * e5;
                    for (e5 = Math.floor(Math.log(e5) / Math.log(2));e5; )
                      t7 += t7, e5--;
                    return t7 + t7.substring(0, r6 - t7.length);
                  }(" ", l2), "^"), l2 = 0);
                }
              }
              for (var w2 = u3[u3.length - 1], O3 = f3[f3.length - 1];w2 === O3 && (l2++ < 2 ? a2 = "\n  ".concat(w2).concat(a2) : n4 = w2, u3.pop(), f3.pop(), u3.length !== 0 && f3.length !== 0); )
                w2 = u3[u3.length - 1], O3 = f3[f3.length - 1];
              var j2 = Math.max(u3.length, f3.length);
              if (j2 === 0) {
                var $2 = c3.split("\n");
                if ($2.length > 30)
                  for ($2[26] = "".concat(b, "...").concat(g);$2.length > 27; )
                    $2.pop();
                return "".concat(_.notIdentical, "\n\n").concat($2.join("\n"), "\n");
              }
              l2 > 3 && (a2 = "\n".concat(b, "...").concat(g).concat(a2), s2 = true), n4 !== "" && (a2 = "\n  ".concat(n4).concat(a2), n4 = "");
              var A2 = 0, E = _[r5] + "\n".concat(m, "+ actual").concat(g, " ").concat(v, "- expected").concat(g), x = " ".concat(b, "...").concat(g, " Lines skipped");
              for (l2 = 0;l2 < j2; l2++) {
                var P = l2 - o3;
                if (u3.length < l2 + 1)
                  P > 1 && l2 > 2 && (P > 4 ? (i3 += "\n".concat(b, "...").concat(g), s2 = true) : P > 3 && (i3 += "\n  ".concat(f3[l2 - 2]), A2++), i3 += "\n  ".concat(f3[l2 - 1]), A2++), o3 = l2, n4 += "\n".concat(v, "-").concat(g, " ").concat(f3[l2]), A2++;
                else if (f3.length < l2 + 1)
                  P > 1 && l2 > 2 && (P > 4 ? (i3 += "\n".concat(b, "...").concat(g), s2 = true) : P > 3 && (i3 += "\n  ".concat(u3[l2 - 2]), A2++), i3 += "\n  ".concat(u3[l2 - 1]), A2++), o3 = l2, i3 += "\n".concat(m, "+").concat(g, " ").concat(u3[l2]), A2++;
                else {
                  var k = f3[l2], M = u3[l2], I = M !== k && (!y(M, ",") || M.slice(0, -1) !== k);
                  I && y(k, ",") && k.slice(0, -1) === M && (I = false, M += ","), I ? (P > 1 && l2 > 2 && (P > 4 ? (i3 += "\n".concat(b, "...").concat(g), s2 = true) : P > 3 && (i3 += "\n  ".concat(u3[l2 - 2]), A2++), i3 += "\n  ".concat(u3[l2 - 1]), A2++), o3 = l2, i3 += "\n".concat(m, "+").concat(g, " ").concat(M), n4 += "\n".concat(v, "-").concat(g, " ").concat(k), A2 += 2) : (i3 += n4, n4 = "", P !== 1 && l2 !== 0 || (i3 += "\n  ".concat(M), A2++));
                }
                if (A2 > 20 && l2 < j2 - 2)
                  return "".concat(E).concat(x, "\n").concat(i3, "\n").concat(b, "...").concat(g).concat(n4, "\n") + "".concat(b, "...").concat(g);
              }
              return "".concat(E).concat(s2 ? x : "", "\n").concat(i3).concat(n4).concat(a2).concat(p3);
            }(c2, u2, i2)));
          else if (i2 === "notDeepStrictEqual" || i2 === "notStrictEqual") {
            var p2 = _[i2], O2 = S(c2).split("\n");
            if (i2 === "notStrictEqual" && h(c2) === "object" && c2 !== null && (p2 = _.notStrictEqualObject), O2.length > 30)
              for (O2[26] = "".concat(b, "...").concat(g);O2.length > 27; )
                O2.pop();
            r4 = O2.length === 1 ? a(this, l(e3).call(this, "".concat(p2, " ").concat(O2[0]))) : a(this, l(e3).call(this, "".concat(p2, "\n\n").concat(O2.join("\n"), "\n")));
          } else {
            var j = S(c2), $ = "", A = _[i2];
            i2 === "notDeepEqual" || i2 === "notEqual" ? (j = "".concat(_[i2], "\n\n").concat(j)).length > 1024 && (j = "".concat(j.slice(0, 1021), "...")) : ($ = "".concat(S(u2)), j.length > 512 && (j = "".concat(j.slice(0, 509), "...")), $.length > 512 && ($ = "".concat($.slice(0, 509), "...")), i2 === "deepEqual" || i2 === "equal" ? j = "".concat(A, "\n\n").concat(j, "\n\nshould equal\n\n") : $ = " ".concat(i2, " ").concat($)), r4 = a(this, l(e3).call(this, "".concat(j).concat($)));
          }
          return Error.stackTraceLimit = f2, r4.generatedMessage = !n3, Object.defineProperty(s(r4), "name", { value: "AssertionError [ERR_ASSERTION]", enumerable: false, writable: true, configurable: true }), r4.code = "ERR_ASSERTION", r4.actual = c2, r4.expected = u2, r4.operator = i2, Error.captureStackTrace && Error.captureStackTrace(s(r4), o2), r4.stack, r4.name = "AssertionError", a(r4);
        }
        var r3, n2;
        return function(t5, e4) {
          if (typeof e4 != "function" && e4 !== null)
            throw new TypeError("Super expression must either be null or a function");
          t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), e4 && f(t5, e4);
        }(e3, t4), r3 = e3, n2 = [{ key: "toString", value: function() {
          return "".concat(this.name, " [").concat(this.code, "]: ").concat(this.message);
        } }, { key: p.custom, value: function(t5, e4) {
          return p(this, function(t6) {
            for (var e5 = 1;e5 < arguments.length; e5++) {
              var r4 = arguments[e5] != null ? arguments[e5] : {}, n3 = Object.keys(r4);
              typeof Object.getOwnPropertySymbols == "function" && (n3 = n3.concat(Object.getOwnPropertySymbols(r4).filter(function(t7) {
                return Object.getOwnPropertyDescriptor(r4, t7).enumerable;
              }))), n3.forEach(function(e6) {
                i(t6, e6, r4[e6]);
              });
            }
            return t6;
          }({}, e4, { customInspect: false, depth: 0 }));
        } }], n2 && o(r3.prototype, n2), e3;
      }(c(Error));
      t3.exports = O;
    }, 3743: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4) {
        return i = typeof Symbol == "function" && n(Symbol.iterator) === "symbol" ? function(t5) {
          return n(t5);
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : n(t5);
        }, i(t4);
      }
      function o(t4) {
        return o = Object.setPrototypeOf ? Object.getPrototypeOf : function(t5) {
          return t5.__proto__ || Object.getPrototypeOf(t5);
        }, o(t4);
      }
      function a(t4, e3) {
        return a = Object.setPrototypeOf || function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, a(t4, e3);
      }
      var s, c, u = {};
      function f(t4, e3, r3) {
        r3 || (r3 = Error);
        var n2 = function(r4) {
          function n3(r5, a2, s2) {
            var c2;
            return function(t5, e4) {
              if (!(t5 instanceof e4))
                throw new TypeError("Cannot call a class as a function");
            }(this, n3), c2 = function(t5, e4) {
              return !e4 || i(e4) !== "object" && typeof e4 != "function" ? function(t6) {
                if (t6 === undefined)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return t6;
              }(t5) : e4;
            }(this, o(n3).call(this, function(t5, r6, n4) {
              return typeof e3 == "string" ? e3 : e3(t5, r6, n4);
            }(r5, a2, s2))), c2.code = t4, c2;
          }
          return function(t5, e4) {
            if (typeof e4 != "function" && e4 !== null)
              throw new TypeError("Super expression must either be null or a function");
            t5.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t5, writable: true, configurable: true } }), e4 && a(t5, e4);
          }(n3, r4), n3;
        }(r3);
        u[t4] = n2;
      }
      function l(t4, e3) {
        if (Array.isArray(t4)) {
          var r3 = t4.length;
          return t4 = t4.map(function(t5) {
            return String(t5);
          }), r3 > 2 ? "one of ".concat(e3, " ").concat(t4.slice(0, r3 - 1).join(", "), ", or ") + t4[r3 - 1] : r3 === 2 ? "one of ".concat(e3, " ").concat(t4[0], " or ").concat(t4[1]) : "of ".concat(e3, " ").concat(t4[0]);
        }
        return "of ".concat(e3, " ").concat(String(t4));
      }
      f("ERR_AMBIGUOUS_ARGUMENT", 'The "%s" argument is ambiguous. %s', TypeError), f("ERR_INVALID_ARG_TYPE", function(t4, e3, n2) {
        var o2, a2, c2, u2, f2;
        if (s === undefined && (s = r2(2402)), s(typeof t4 == "string", "'name' must be a string"), typeof e3 == "string" && (a2 = "not ", e3.substr(0, 4) === a2) ? (o2 = "must not be", e3 = e3.replace(/^not /, "")) : o2 = "must be", function(t5, e4, r3) {
          return (r3 === undefined || r3 > t5.length) && (r3 = t5.length), t5.substring(r3 - 9, r3) === e4;
        }(t4, " argument"))
          c2 = "The ".concat(t4, " ").concat(o2, " ").concat(l(e3, "type"));
        else {
          var h = (typeof f2 != "number" && (f2 = 0), f2 + 1 > (u2 = t4).length || u2.indexOf(".", f2) === -1 ? "argument" : "property");
          c2 = 'The "'.concat(t4, '" ').concat(h, " ").concat(o2, " ").concat(l(e3, "type"));
        }
        return c2 + ". Received type ".concat(i(n2));
      }, TypeError), f("ERR_INVALID_ARG_VALUE", function(t4, e3) {
        var n2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "is invalid";
        c === undefined && (c = r2(7352));
        var i2 = c.inspect(e3);
        return i2.length > 128 && (i2 = "".concat(i2.slice(0, 128), "...")), "The argument '".concat(t4, "' ").concat(n2, ". Received ").concat(i2);
      }, TypeError, RangeError), f("ERR_INVALID_RETURN_VALUE", function(t4, e3, r3) {
        var n2;
        return n2 = r3 && r3.constructor && r3.constructor.name ? "instance of ".concat(r3.constructor.name) : "type ".concat(i(r3)), "Expected ".concat(t4, ' to be returned from the "').concat(e3, '"') + " function but got ".concat(n2, ".");
      }, TypeError), f("ERR_MISSING_ARGS", function() {
        for (var t4 = arguments.length, e3 = new Array(t4), n2 = 0;n2 < t4; n2++)
          e3[n2] = arguments[n2];
        s === undefined && (s = r2(2402)), s(e3.length > 0, "At least one arg needs to be specified");
        var i2 = "The ", o2 = e3.length;
        switch (e3 = e3.map(function(t5) {
          return '"'.concat(t5, '"');
        }), o2) {
          case 1:
            i2 += "".concat(e3[0], " argument");
            break;
          case 2:
            i2 += "".concat(e3[0], " and ").concat(e3[1], " arguments");
            break;
          default:
            i2 += e3.slice(0, o2 - 1).join(", "), i2 += ", and ".concat(e3[o2 - 1], " arguments");
        }
        return "".concat(i2, " must be specified");
      }, TypeError), t3.exports.codes = u;
    }, 6193: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4, e3) {
        return function(t5) {
          if (Array.isArray(t5))
            return t5;
        }(t4) || function(t5, e4) {
          var r3 = [], n2 = true, i2 = false, o2 = undefined;
          try {
            for (var a2, s2 = t5[Symbol.iterator]();!(n2 = (a2 = s2.next()).done) && (r3.push(a2.value), !e4 || r3.length !== e4); n2 = true)
              ;
          } catch (t6) {
            i2 = true, o2 = t6;
          } finally {
            try {
              n2 || s2.return == null || s2.return();
            } finally {
              if (i2)
                throw o2;
            }
          }
          return r3;
        }(t4, e3) || function() {
          throw new TypeError("Invalid attempt to destructure non-iterable instance");
        }();
      }
      function o(t4) {
        return o = typeof Symbol == "function" && n(Symbol.iterator) === "symbol" ? function(t5) {
          return n(t5);
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : n(t5);
        }, o(t4);
      }
      var a = /a/g.flags !== undefined, s = function(t4) {
        var e3 = [];
        return t4.forEach(function(t5) {
          return e3.push(t5);
        }), e3;
      }, c = function(t4) {
        var e3 = [];
        return t4.forEach(function(t5, r3) {
          return e3.push([r3, t5]);
        }), e3;
      }, u = Object.is ? Object.is : r2(2064), f = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function() {
        return [];
      }, l = Number.isNaN ? Number.isNaN : r2(6062);
      function h(t4) {
        return t4.call.bind(t4);
      }
      var p = h(Object.prototype.hasOwnProperty), d = h(Object.prototype.propertyIsEnumerable), y = h(Object.prototype.toString), b = r2(7352).types, m = b.isAnyArrayBuffer, v = b.isArrayBufferView, g = b.isDate, _ = b.isMap, w = b.isRegExp, S = b.isSet, O = b.isNativeError, j = b.isBoxedPrimitive, $ = b.isNumberObject, A = b.isStringObject, E = b.isBooleanObject, x = b.isBigIntObject, P = b.isSymbolObject, k = b.isFloat32Array, M = b.isFloat64Array;
      function I(t4) {
        if (t4.length === 0 || t4.length > 10)
          return true;
        for (var e3 = 0;e3 < t4.length; e3++) {
          var r3 = t4.charCodeAt(e3);
          if (r3 < 48 || r3 > 57)
            return true;
        }
        return t4.length === 10 && t4 >= Math.pow(2, 32);
      }
      function T(t4) {
        return Object.keys(t4).filter(I).concat(f(t4).filter(Object.prototype.propertyIsEnumerable.bind(t4)));
      }
      function B(t4, e3) {
        if (t4 === e3)
          return 0;
        for (var r3 = t4.length, n2 = e3.length, i2 = 0, o2 = Math.min(r3, n2);i2 < o2; ++i2)
          if (t4[i2] !== e3[i2]) {
            r3 = t4[i2], n2 = e3[i2];
            break;
          }
        return r3 < n2 ? -1 : n2 < r3 ? 1 : 0;
      }
      function R(t4, e3, r3, n2) {
        if (t4 === e3)
          return t4 !== 0 || !r3 || u(t4, e3);
        if (r3) {
          if (o(t4) !== "object")
            return typeof t4 == "number" && l(t4) && l(e3);
          if (o(e3) !== "object" || t4 === null || e3 === null)
            return false;
          if (Object.getPrototypeOf(t4) !== Object.getPrototypeOf(e3))
            return false;
        } else {
          if (t4 === null || o(t4) !== "object")
            return (e3 === null || o(e3) !== "object") && t4 == e3;
          if (e3 === null || o(e3) !== "object")
            return false;
        }
        var i2, s2, c2, f2, h2 = y(t4);
        if (h2 !== y(e3))
          return false;
        if (Array.isArray(t4)) {
          if (t4.length !== e3.length)
            return false;
          var p2 = T(t4), d2 = T(e3);
          return p2.length === d2.length && D(t4, e3, r3, n2, 1, p2);
        }
        if (h2 === "[object Object]" && (!_(t4) && _(e3) || !S(t4) && S(e3)))
          return false;
        if (g(t4)) {
          if (!g(e3) || Date.prototype.getTime.call(t4) !== Date.prototype.getTime.call(e3))
            return false;
        } else if (w(t4)) {
          if (!w(e3) || (c2 = t4, f2 = e3, !(a ? c2.source === f2.source && c2.flags === f2.flags : RegExp.prototype.toString.call(c2) === RegExp.prototype.toString.call(f2))))
            return false;
        } else if (O(t4) || t4 instanceof Error) {
          if (t4.message !== e3.message || t4.name !== e3.name)
            return false;
        } else {
          if (v(t4)) {
            if (r3 || !k(t4) && !M(t4)) {
              if (!function(t5, e4) {
                return t5.byteLength === e4.byteLength && B(new Uint8Array(t5.buffer, t5.byteOffset, t5.byteLength), new Uint8Array(e4.buffer, e4.byteOffset, e4.byteLength)) === 0;
              }(t4, e3))
                return false;
            } else if (!function(t5, e4) {
              if (t5.byteLength !== e4.byteLength)
                return false;
              for (var r4 = 0;r4 < t5.byteLength; r4++)
                if (t5[r4] !== e4[r4])
                  return false;
              return true;
            }(t4, e3))
              return false;
            var b2 = T(t4), I2 = T(e3);
            return b2.length === I2.length && D(t4, e3, r3, n2, 0, b2);
          }
          if (S(t4))
            return !(!S(e3) || t4.size !== e3.size) && D(t4, e3, r3, n2, 2);
          if (_(t4))
            return !(!_(e3) || t4.size !== e3.size) && D(t4, e3, r3, n2, 3);
          if (m(t4)) {
            if (s2 = e3, (i2 = t4).byteLength !== s2.byteLength || B(new Uint8Array(i2), new Uint8Array(s2)) !== 0)
              return false;
          } else if (j(t4) && !function(t5, e4) {
            return $(t5) ? $(e4) && u(Number.prototype.valueOf.call(t5), Number.prototype.valueOf.call(e4)) : A(t5) ? A(e4) && String.prototype.valueOf.call(t5) === String.prototype.valueOf.call(e4) : E(t5) ? E(e4) && Boolean.prototype.valueOf.call(t5) === Boolean.prototype.valueOf.call(e4) : x(t5) ? x(e4) && BigInt.prototype.valueOf.call(t5) === BigInt.prototype.valueOf.call(e4) : P(e4) && Symbol.prototype.valueOf.call(t5) === Symbol.prototype.valueOf.call(e4);
          }(t4, e3))
            return false;
        }
        return D(t4, e3, r3, n2, 0);
      }
      function N(t4, e3) {
        return e3.filter(function(e4) {
          return d(t4, e4);
        });
      }
      function D(t4, e3, r3, n2, a2, u2) {
        if (arguments.length === 5) {
          u2 = Object.keys(t4);
          var l2 = Object.keys(e3);
          if (u2.length !== l2.length)
            return false;
        }
        for (var h2 = 0;h2 < u2.length; h2++)
          if (!p(e3, u2[h2]))
            return false;
        if (r3 && arguments.length === 5) {
          var y2 = f(t4);
          if (y2.length !== 0) {
            var b2 = 0;
            for (h2 = 0;h2 < y2.length; h2++) {
              var m2 = y2[h2];
              if (d(t4, m2)) {
                if (!d(e3, m2))
                  return false;
                u2.push(m2), b2++;
              } else if (d(e3, m2))
                return false;
            }
            var v2 = f(e3);
            if (y2.length !== v2.length && N(e3, v2).length !== b2)
              return false;
          } else {
            var g2 = f(e3);
            if (g2.length !== 0 && N(e3, g2).length !== 0)
              return false;
          }
        }
        if (u2.length === 0 && (a2 === 0 || a2 === 1 && t4.length === 0 || t4.size === 0))
          return true;
        if (n2 === undefined)
          n2 = { val1: new Map, val2: new Map, position: 0 };
        else {
          var _2 = n2.val1.get(t4);
          if (_2 !== undefined) {
            var w2 = n2.val2.get(e3);
            if (w2 !== undefined)
              return _2 === w2;
          }
          n2.position++;
        }
        n2.val1.set(t4, n2.position), n2.val2.set(e3, n2.position);
        var S2 = function(t5, e4, r4, n3, a3, u3) {
          var f2 = 0;
          if (u3 === 2) {
            if (!function(t6, e5, r5, n4) {
              for (var i2 = null, a4 = s(t6), c2 = 0;c2 < a4.length; c2++) {
                var u4 = a4[c2];
                if (o(u4) === "object" && u4 !== null)
                  i2 === null && (i2 = new Set), i2.add(u4);
                else if (!e5.has(u4)) {
                  if (r5)
                    return false;
                  if (!U(t6, e5, u4))
                    return false;
                  i2 === null && (i2 = new Set), i2.add(u4);
                }
              }
              if (i2 !== null) {
                for (var f3 = s(e5), l4 = 0;l4 < f3.length; l4++) {
                  var h4 = f3[l4];
                  if (o(h4) === "object" && h4 !== null) {
                    if (!L(i2, h4, r5, n4))
                      return false;
                  } else if (!r5 && !t6.has(h4) && !L(i2, h4, r5, n4))
                    return false;
                }
                return i2.size === 0;
              }
              return true;
            }(t5, e4, r4, a3))
              return false;
          } else if (u3 === 3) {
            if (!function(t6, e5, r5, n4) {
              for (var a4 = null, s2 = c(t6), u4 = 0;u4 < s2.length; u4++) {
                var f3 = i(s2[u4], 2), l4 = f3[0], h4 = f3[1];
                if (o(l4) === "object" && l4 !== null)
                  a4 === null && (a4 = new Set), a4.add(l4);
                else {
                  var p2 = e5.get(l4);
                  if (p2 === undefined && !e5.has(l4) || !R(h4, p2, r5, n4)) {
                    if (r5)
                      return false;
                    if (!q(t6, e5, l4, h4, n4))
                      return false;
                    a4 === null && (a4 = new Set), a4.add(l4);
                  }
                }
              }
              if (a4 !== null) {
                for (var d3 = c(e5), y3 = 0;y3 < d3.length; y3++) {
                  var b3 = i(d3[y3], 2), m3 = (l4 = b3[0], b3[1]);
                  if (o(l4) === "object" && l4 !== null) {
                    if (!F(a4, t6, l4, m3, r5, n4))
                      return false;
                  } else if (!(r5 || t6.has(l4) && R(t6.get(l4), m3, false, n4) || F(a4, t6, l4, m3, false, n4)))
                    return false;
                }
                return a4.size === 0;
              }
              return true;
            }(t5, e4, r4, a3))
              return false;
          } else if (u3 === 1)
            for (;f2 < t5.length; f2++) {
              if (!p(t5, f2)) {
                if (p(e4, f2))
                  return false;
                for (var l3 = Object.keys(t5);f2 < l3.length; f2++) {
                  var h3 = l3[f2];
                  if (!p(e4, h3) || !R(t5[h3], e4[h3], r4, a3))
                    return false;
                }
                return l3.length === Object.keys(e4).length;
              }
              if (!p(e4, f2) || !R(t5[f2], e4[f2], r4, a3))
                return false;
            }
          for (f2 = 0;f2 < n3.length; f2++) {
            var d2 = n3[f2];
            if (!R(t5[d2], e4[d2], r4, a3))
              return false;
          }
          return true;
        }(t4, e3, r3, u2, n2, a2);
        return n2.val1.delete(t4), n2.val2.delete(e3), S2;
      }
      function L(t4, e3, r3, n2) {
        for (var i2 = s(t4), o2 = 0;o2 < i2.length; o2++) {
          var a2 = i2[o2];
          if (R(e3, a2, r3, n2))
            return t4.delete(a2), true;
        }
        return false;
      }
      function C(t4) {
        switch (o(t4)) {
          case "undefined":
            return null;
          case "object":
            return;
          case "symbol":
            return false;
          case "string":
            t4 = +t4;
          case "number":
            if (l(t4))
              return false;
        }
        return true;
      }
      function U(t4, e3, r3) {
        var n2 = C(r3);
        return n2 != null ? n2 : e3.has(n2) && !t4.has(n2);
      }
      function q(t4, e3, r3, n2, i2) {
        var o2 = C(r3);
        if (o2 != null)
          return o2;
        var a2 = e3.get(o2);
        return !(a2 === undefined && !e3.has(o2) || !R(n2, a2, false, i2)) && !t4.has(o2) && R(n2, a2, false, i2);
      }
      function F(t4, e3, r3, n2, i2, o2) {
        for (var a2 = s(t4), c2 = 0;c2 < a2.length; c2++) {
          var u2 = a2[c2];
          if (R(r3, u2, i2, o2) && R(n2, e3.get(u2), i2, o2))
            return t4.delete(u2), true;
        }
        return false;
      }
      t3.exports = { isDeepEqual: function(t4, e3) {
        return R(t4, e3, false);
      }, isDeepStrictEqual: function(t4, e3) {
        return R(t4, e3, true);
      } };
    }, 6775: (t3, e2) => {
      e2.byteLength = function(t4) {
        var e3 = s(t4), r3 = e3[0], n2 = e3[1];
        return 3 * (r3 + n2) / 4 - n2;
      }, e2.toByteArray = function(t4) {
        var e3, r3, o2 = s(t4), a2 = o2[0], c2 = o2[1], u = new i(function(t5, e4, r4) {
          return 3 * (e4 + r4) / 4 - r4;
        }(0, a2, c2)), f = 0, l = c2 > 0 ? a2 - 4 : a2;
        for (r3 = 0;r3 < l; r3 += 4)
          e3 = n[t4.charCodeAt(r3)] << 18 | n[t4.charCodeAt(r3 + 1)] << 12 | n[t4.charCodeAt(r3 + 2)] << 6 | n[t4.charCodeAt(r3 + 3)], u[f++] = e3 >> 16 & 255, u[f++] = e3 >> 8 & 255, u[f++] = 255 & e3;
        return c2 === 2 && (e3 = n[t4.charCodeAt(r3)] << 2 | n[t4.charCodeAt(r3 + 1)] >> 4, u[f++] = 255 & e3), c2 === 1 && (e3 = n[t4.charCodeAt(r3)] << 10 | n[t4.charCodeAt(r3 + 1)] << 4 | n[t4.charCodeAt(r3 + 2)] >> 2, u[f++] = e3 >> 8 & 255, u[f++] = 255 & e3), u;
      }, e2.fromByteArray = function(t4) {
        for (var e3, n2 = t4.length, i2 = n2 % 3, o2 = [], a2 = 16383, s2 = 0, u = n2 - i2;s2 < u; s2 += a2)
          o2.push(c(t4, s2, s2 + a2 > u ? u : s2 + a2));
        return i2 === 1 ? (e3 = t4[n2 - 1], o2.push(r2[e3 >> 2] + r2[e3 << 4 & 63] + "==")) : i2 === 2 && (e3 = (t4[n2 - 2] << 8) + t4[n2 - 1], o2.push(r2[e3 >> 10] + r2[e3 >> 4 & 63] + r2[e3 << 2 & 63] + "=")), o2.join("");
      };
      for (var r2 = [], n = [], i = typeof Uint8Array != "undefined" ? Uint8Array : Array, o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", a = 0;a < 64; ++a)
        r2[a] = o[a], n[o.charCodeAt(a)] = a;
      function s(t4) {
        var e3 = t4.length;
        if (e3 % 4 > 0)
          throw new Error("Invalid string. Length must be a multiple of 4");
        var r3 = t4.indexOf("=");
        return r3 === -1 && (r3 = e3), [r3, r3 === e3 ? 0 : 4 - r3 % 4];
      }
      function c(t4, e3, n2) {
        for (var i2, o2, a2 = [], s2 = e3;s2 < n2; s2 += 3)
          i2 = (t4[s2] << 16 & 16711680) + (t4[s2 + 1] << 8 & 65280) + (255 & t4[s2 + 2]), a2.push(r2[(o2 = i2) >> 18 & 63] + r2[o2 >> 12 & 63] + r2[o2 >> 6 & 63] + r2[63 & o2]);
        return a2.join("");
      }
      n["-".charCodeAt(0)] = 62, n["_".charCodeAt(0)] = 63;
    }, 7799: function(t3, e2, r2) {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      (function(t4, e3) {
        function i(t5, e4) {
          if (!t5)
            throw new Error(e4 || "Assertion failed");
        }
        function o(t5, e4) {
          t5.super_ = e4;
          var r3 = function() {
          };
          r3.prototype = e4.prototype, t5.prototype = new r3, t5.prototype.constructor = t5;
        }
        function a(t5, e4, r3) {
          if (a.isBN(t5))
            return t5;
          this.negative = 0, this.words = null, this.length = 0, this.red = null, t5 !== null && (e4 !== "le" && e4 !== "be" || (r3 = e4, e4 = 10), this._init(t5 || 0, e4 || 10, r3 || "be"));
        }
        var s;
        n(t4) === "object" ? t4.exports = a : e3.BN = a, a.BN = a, a.wordSize = 26;
        try {
          s = typeof window != "undefined" && window.Buffer !== undefined ? window.Buffer : r2(7790).Buffer;
        } catch (t5) {
        }
        function c(t5, e4) {
          var r3 = t5.charCodeAt(e4);
          return r3 >= 48 && r3 <= 57 ? r3 - 48 : r3 >= 65 && r3 <= 70 ? r3 - 55 : r3 >= 97 && r3 <= 102 ? r3 - 87 : void i(false, "Invalid character in " + t5);
        }
        function u(t5, e4, r3) {
          var n2 = c(t5, r3);
          return r3 - 1 >= e4 && (n2 |= c(t5, r3 - 1) << 4), n2;
        }
        function f(t5, e4, r3, n2) {
          for (var o2 = 0, a2 = 0, s2 = Math.min(t5.length, r3), c2 = e4;c2 < s2; c2++) {
            var u2 = t5.charCodeAt(c2) - 48;
            o2 *= n2, a2 = u2 >= 49 ? u2 - 49 + 10 : u2 >= 17 ? u2 - 17 + 10 : u2, i(u2 >= 0 && a2 < n2, "Invalid character"), o2 += a2;
          }
          return o2;
        }
        function l(t5, e4) {
          t5.words = e4.words, t5.length = e4.length, t5.negative = e4.negative, t5.red = e4.red;
        }
        if (a.isBN = function(t5) {
          return t5 instanceof a || t5 !== null && n(t5) === "object" && t5.constructor.wordSize === a.wordSize && Array.isArray(t5.words);
        }, a.max = function(t5, e4) {
          return t5.cmp(e4) > 0 ? t5 : e4;
        }, a.min = function(t5, e4) {
          return t5.cmp(e4) < 0 ? t5 : e4;
        }, a.prototype._init = function(t5, e4, r3) {
          if (typeof t5 == "number")
            return this._initNumber(t5, e4, r3);
          if (n(t5) === "object")
            return this._initArray(t5, e4, r3);
          e4 === "hex" && (e4 = 16), i(e4 === (0 | e4) && e4 >= 2 && e4 <= 36);
          var o2 = 0;
          (t5 = t5.toString().replace(/\s+/g, ""))[0] === "-" && (o2++, this.negative = 1), o2 < t5.length && (e4 === 16 ? this._parseHex(t5, o2, r3) : (this._parseBase(t5, e4, o2), r3 === "le" && this._initArray(this.toArray(), e4, r3)));
        }, a.prototype._initNumber = function(t5, e4, r3) {
          t5 < 0 && (this.negative = 1, t5 = -t5), t5 < 67108864 ? (this.words = [67108863 & t5], this.length = 1) : t5 < 4503599627370496 ? (this.words = [67108863 & t5, t5 / 67108864 & 67108863], this.length = 2) : (i(t5 < 9007199254740992), this.words = [67108863 & t5, t5 / 67108864 & 67108863, 1], this.length = 3), r3 === "le" && this._initArray(this.toArray(), e4, r3);
        }, a.prototype._initArray = function(t5, e4, r3) {
          if (i(typeof t5.length == "number"), t5.length <= 0)
            return this.words = [0], this.length = 1, this;
          this.length = Math.ceil(t5.length / 3), this.words = new Array(this.length);
          for (var n2 = 0;n2 < this.length; n2++)
            this.words[n2] = 0;
          var o2, a2, s2 = 0;
          if (r3 === "be")
            for (n2 = t5.length - 1, o2 = 0;n2 >= 0; n2 -= 3)
              a2 = t5[n2] | t5[n2 - 1] << 8 | t5[n2 - 2] << 16, this.words[o2] |= a2 << s2 & 67108863, this.words[o2 + 1] = a2 >>> 26 - s2 & 67108863, (s2 += 24) >= 26 && (s2 -= 26, o2++);
          else if (r3 === "le")
            for (n2 = 0, o2 = 0;n2 < t5.length; n2 += 3)
              a2 = t5[n2] | t5[n2 + 1] << 8 | t5[n2 + 2] << 16, this.words[o2] |= a2 << s2 & 67108863, this.words[o2 + 1] = a2 >>> 26 - s2 & 67108863, (s2 += 24) >= 26 && (s2 -= 26, o2++);
          return this._strip();
        }, a.prototype._parseHex = function(t5, e4, r3) {
          this.length = Math.ceil((t5.length - e4) / 6), this.words = new Array(this.length);
          for (var n2 = 0;n2 < this.length; n2++)
            this.words[n2] = 0;
          var i2, o2 = 0, a2 = 0;
          if (r3 === "be")
            for (n2 = t5.length - 1;n2 >= e4; n2 -= 2)
              i2 = u(t5, e4, n2) << o2, this.words[a2] |= 67108863 & i2, o2 >= 18 ? (o2 -= 18, a2 += 1, this.words[a2] |= i2 >>> 26) : o2 += 8;
          else
            for (n2 = (t5.length - e4) % 2 == 0 ? e4 + 1 : e4;n2 < t5.length; n2 += 2)
              i2 = u(t5, e4, n2) << o2, this.words[a2] |= 67108863 & i2, o2 >= 18 ? (o2 -= 18, a2 += 1, this.words[a2] |= i2 >>> 26) : o2 += 8;
          this._strip();
        }, a.prototype._parseBase = function(t5, e4, r3) {
          this.words = [0], this.length = 1;
          for (var n2 = 0, i2 = 1;i2 <= 67108863; i2 *= e4)
            n2++;
          n2--, i2 = i2 / e4 | 0;
          for (var o2 = t5.length - r3, a2 = o2 % n2, s2 = Math.min(o2, o2 - a2) + r3, c2 = 0, u2 = r3;u2 < s2; u2 += n2)
            c2 = f(t5, u2, u2 + n2, e4), this.imuln(i2), this.words[0] + c2 < 67108864 ? this.words[0] += c2 : this._iaddn(c2);
          if (a2 !== 0) {
            var l2 = 1;
            for (c2 = f(t5, u2, t5.length, e4), u2 = 0;u2 < a2; u2++)
              l2 *= e4;
            this.imuln(l2), this.words[0] + c2 < 67108864 ? this.words[0] += c2 : this._iaddn(c2);
          }
          this._strip();
        }, a.prototype.copy = function(t5) {
          t5.words = new Array(this.length);
          for (var e4 = 0;e4 < this.length; e4++)
            t5.words[e4] = this.words[e4];
          t5.length = this.length, t5.negative = this.negative, t5.red = this.red;
        }, a.prototype._move = function(t5) {
          l(t5, this);
        }, a.prototype.clone = function() {
          var t5 = new a(null);
          return this.copy(t5), t5;
        }, a.prototype._expand = function(t5) {
          for (;this.length < t5; )
            this.words[this.length++] = 0;
          return this;
        }, a.prototype._strip = function() {
          for (;this.length > 1 && this.words[this.length - 1] === 0; )
            this.length--;
          return this._normSign();
        }, a.prototype._normSign = function() {
          return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
        }, typeof Symbol != "undefined" && typeof Symbol.for == "function")
          try {
            a.prototype[Symbol.for("nodejs.util.inspect.custom")] = h;
          } catch (t5) {
            a.prototype.inspect = h;
          }
        else
          a.prototype.inspect = h;
        function h() {
          return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
        }
        var p = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], d = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], y = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
        function b(t5, e4, r3) {
          r3.negative = e4.negative ^ t5.negative;
          var n2 = t5.length + e4.length | 0;
          r3.length = n2, n2 = n2 - 1 | 0;
          var i2 = 0 | t5.words[0], o2 = 0 | e4.words[0], a2 = i2 * o2, s2 = 67108863 & a2, c2 = a2 / 67108864 | 0;
          r3.words[0] = s2;
          for (var u2 = 1;u2 < n2; u2++) {
            for (var f2 = c2 >>> 26, l2 = 67108863 & c2, h2 = Math.min(u2, e4.length - 1), p2 = Math.max(0, u2 - t5.length + 1);p2 <= h2; p2++) {
              var d2 = u2 - p2 | 0;
              f2 += (a2 = (i2 = 0 | t5.words[d2]) * (o2 = 0 | e4.words[p2]) + l2) / 67108864 | 0, l2 = 67108863 & a2;
            }
            r3.words[u2] = 0 | l2, c2 = 0 | f2;
          }
          return c2 !== 0 ? r3.words[u2] = 0 | c2 : r3.length--, r3._strip();
        }
        a.prototype.toString = function(t5, e4) {
          var r3;
          if (e4 = 0 | e4 || 1, (t5 = t5 || 10) === 16 || t5 === "hex") {
            r3 = "";
            for (var n2 = 0, o2 = 0, a2 = 0;a2 < this.length; a2++) {
              var s2 = this.words[a2], c2 = (16777215 & (s2 << n2 | o2)).toString(16);
              o2 = s2 >>> 24 - n2 & 16777215, (n2 += 2) >= 26 && (n2 -= 26, a2--), r3 = o2 !== 0 || a2 !== this.length - 1 ? p[6 - c2.length] + c2 + r3 : c2 + r3;
            }
            for (o2 !== 0 && (r3 = o2.toString(16) + r3);r3.length % e4 != 0; )
              r3 = "0" + r3;
            return this.negative !== 0 && (r3 = "-" + r3), r3;
          }
          if (t5 === (0 | t5) && t5 >= 2 && t5 <= 36) {
            var u2 = d[t5], f2 = y[t5];
            r3 = "";
            var l2 = this.clone();
            for (l2.negative = 0;!l2.isZero(); ) {
              var h2 = l2.modrn(f2).toString(t5);
              r3 = (l2 = l2.idivn(f2)).isZero() ? h2 + r3 : p[u2 - h2.length] + h2 + r3;
            }
            for (this.isZero() && (r3 = "0" + r3);r3.length % e4 != 0; )
              r3 = "0" + r3;
            return this.negative !== 0 && (r3 = "-" + r3), r3;
          }
          i(false, "Base should be between 2 and 36");
        }, a.prototype.toNumber = function() {
          var t5 = this.words[0];
          return this.length === 2 ? t5 += 67108864 * this.words[1] : this.length === 3 && this.words[2] === 1 ? t5 += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && i(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -t5 : t5;
        }, a.prototype.toJSON = function() {
          return this.toString(16, 2);
        }, s && (a.prototype.toBuffer = function(t5, e4) {
          return this.toArrayLike(s, t5, e4);
        }), a.prototype.toArray = function(t5, e4) {
          return this.toArrayLike(Array, t5, e4);
        }, a.prototype.toArrayLike = function(t5, e4, r3) {
          this._strip();
          var n2 = this.byteLength(), o2 = r3 || Math.max(1, n2);
          i(n2 <= o2, "byte array longer than desired length"), i(o2 > 0, "Requested array length <= 0");
          var a2 = function(t6, e5) {
            return t6.allocUnsafe ? t6.allocUnsafe(e5) : new t6(e5);
          }(t5, o2);
          return this["_toArrayLike" + (e4 === "le" ? "LE" : "BE")](a2, n2), a2;
        }, a.prototype._toArrayLikeLE = function(t5, e4) {
          for (var r3 = 0, n2 = 0, i2 = 0, o2 = 0;i2 < this.length; i2++) {
            var a2 = this.words[i2] << o2 | n2;
            t5[r3++] = 255 & a2, r3 < t5.length && (t5[r3++] = a2 >> 8 & 255), r3 < t5.length && (t5[r3++] = a2 >> 16 & 255), o2 === 6 ? (r3 < t5.length && (t5[r3++] = a2 >> 24 & 255), n2 = 0, o2 = 0) : (n2 = a2 >>> 24, o2 += 2);
          }
          if (r3 < t5.length)
            for (t5[r3++] = n2;r3 < t5.length; )
              t5[r3++] = 0;
        }, a.prototype._toArrayLikeBE = function(t5, e4) {
          for (var r3 = t5.length - 1, n2 = 0, i2 = 0, o2 = 0;i2 < this.length; i2++) {
            var a2 = this.words[i2] << o2 | n2;
            t5[r3--] = 255 & a2, r3 >= 0 && (t5[r3--] = a2 >> 8 & 255), r3 >= 0 && (t5[r3--] = a2 >> 16 & 255), o2 === 6 ? (r3 >= 0 && (t5[r3--] = a2 >> 24 & 255), n2 = 0, o2 = 0) : (n2 = a2 >>> 24, o2 += 2);
          }
          if (r3 >= 0)
            for (t5[r3--] = n2;r3 >= 0; )
              t5[r3--] = 0;
        }, Math.clz32 ? a.prototype._countBits = function(t5) {
          return 32 - Math.clz32(t5);
        } : a.prototype._countBits = function(t5) {
          var e4 = t5, r3 = 0;
          return e4 >= 4096 && (r3 += 13, e4 >>>= 13), e4 >= 64 && (r3 += 7, e4 >>>= 7), e4 >= 8 && (r3 += 4, e4 >>>= 4), e4 >= 2 && (r3 += 2, e4 >>>= 2), r3 + e4;
        }, a.prototype._zeroBits = function(t5) {
          if (t5 === 0)
            return 26;
          var e4 = t5, r3 = 0;
          return 8191 & e4 || (r3 += 13, e4 >>>= 13), 127 & e4 || (r3 += 7, e4 >>>= 7), 15 & e4 || (r3 += 4, e4 >>>= 4), 3 & e4 || (r3 += 2, e4 >>>= 2), 1 & e4 || r3++, r3;
        }, a.prototype.bitLength = function() {
          var t5 = this.words[this.length - 1], e4 = this._countBits(t5);
          return 26 * (this.length - 1) + e4;
        }, a.prototype.zeroBits = function() {
          if (this.isZero())
            return 0;
          for (var t5 = 0, e4 = 0;e4 < this.length; e4++) {
            var r3 = this._zeroBits(this.words[e4]);
            if (t5 += r3, r3 !== 26)
              break;
          }
          return t5;
        }, a.prototype.byteLength = function() {
          return Math.ceil(this.bitLength() / 8);
        }, a.prototype.toTwos = function(t5) {
          return this.negative !== 0 ? this.abs().inotn(t5).iaddn(1) : this.clone();
        }, a.prototype.fromTwos = function(t5) {
          return this.testn(t5 - 1) ? this.notn(t5).iaddn(1).ineg() : this.clone();
        }, a.prototype.isNeg = function() {
          return this.negative !== 0;
        }, a.prototype.neg = function() {
          return this.clone().ineg();
        }, a.prototype.ineg = function() {
          return this.isZero() || (this.negative ^= 1), this;
        }, a.prototype.iuor = function(t5) {
          for (;this.length < t5.length; )
            this.words[this.length++] = 0;
          for (var e4 = 0;e4 < t5.length; e4++)
            this.words[e4] = this.words[e4] | t5.words[e4];
          return this._strip();
        }, a.prototype.ior = function(t5) {
          return i(!(this.negative | t5.negative)), this.iuor(t5);
        }, a.prototype.or = function(t5) {
          return this.length > t5.length ? this.clone().ior(t5) : t5.clone().ior(this);
        }, a.prototype.uor = function(t5) {
          return this.length > t5.length ? this.clone().iuor(t5) : t5.clone().iuor(this);
        }, a.prototype.iuand = function(t5) {
          var e4;
          e4 = this.length > t5.length ? t5 : this;
          for (var r3 = 0;r3 < e4.length; r3++)
            this.words[r3] = this.words[r3] & t5.words[r3];
          return this.length = e4.length, this._strip();
        }, a.prototype.iand = function(t5) {
          return i(!(this.negative | t5.negative)), this.iuand(t5);
        }, a.prototype.and = function(t5) {
          return this.length > t5.length ? this.clone().iand(t5) : t5.clone().iand(this);
        }, a.prototype.uand = function(t5) {
          return this.length > t5.length ? this.clone().iuand(t5) : t5.clone().iuand(this);
        }, a.prototype.iuxor = function(t5) {
          var e4, r3;
          this.length > t5.length ? (e4 = this, r3 = t5) : (e4 = t5, r3 = this);
          for (var n2 = 0;n2 < r3.length; n2++)
            this.words[n2] = e4.words[n2] ^ r3.words[n2];
          if (this !== e4)
            for (;n2 < e4.length; n2++)
              this.words[n2] = e4.words[n2];
          return this.length = e4.length, this._strip();
        }, a.prototype.ixor = function(t5) {
          return i(!(this.negative | t5.negative)), this.iuxor(t5);
        }, a.prototype.xor = function(t5) {
          return this.length > t5.length ? this.clone().ixor(t5) : t5.clone().ixor(this);
        }, a.prototype.uxor = function(t5) {
          return this.length > t5.length ? this.clone().iuxor(t5) : t5.clone().iuxor(this);
        }, a.prototype.inotn = function(t5) {
          i(typeof t5 == "number" && t5 >= 0);
          var e4 = 0 | Math.ceil(t5 / 26), r3 = t5 % 26;
          this._expand(e4), r3 > 0 && e4--;
          for (var n2 = 0;n2 < e4; n2++)
            this.words[n2] = 67108863 & ~this.words[n2];
          return r3 > 0 && (this.words[n2] = ~this.words[n2] & 67108863 >> 26 - r3), this._strip();
        }, a.prototype.notn = function(t5) {
          return this.clone().inotn(t5);
        }, a.prototype.setn = function(t5, e4) {
          i(typeof t5 == "number" && t5 >= 0);
          var r3 = t5 / 26 | 0, n2 = t5 % 26;
          return this._expand(r3 + 1), this.words[r3] = e4 ? this.words[r3] | 1 << n2 : this.words[r3] & ~(1 << n2), this._strip();
        }, a.prototype.iadd = function(t5) {
          var e4, r3, n2;
          if (this.negative !== 0 && t5.negative === 0)
            return this.negative = 0, e4 = this.isub(t5), this.negative ^= 1, this._normSign();
          if (this.negative === 0 && t5.negative !== 0)
            return t5.negative = 0, e4 = this.isub(t5), t5.negative = 1, e4._normSign();
          this.length > t5.length ? (r3 = this, n2 = t5) : (r3 = t5, n2 = this);
          for (var i2 = 0, o2 = 0;o2 < n2.length; o2++)
            e4 = (0 | r3.words[o2]) + (0 | n2.words[o2]) + i2, this.words[o2] = 67108863 & e4, i2 = e4 >>> 26;
          for (;i2 !== 0 && o2 < r3.length; o2++)
            e4 = (0 | r3.words[o2]) + i2, this.words[o2] = 67108863 & e4, i2 = e4 >>> 26;
          if (this.length = r3.length, i2 !== 0)
            this.words[this.length] = i2, this.length++;
          else if (r3 !== this)
            for (;o2 < r3.length; o2++)
              this.words[o2] = r3.words[o2];
          return this;
        }, a.prototype.add = function(t5) {
          var e4;
          return t5.negative !== 0 && this.negative === 0 ? (t5.negative = 0, e4 = this.sub(t5), t5.negative ^= 1, e4) : t5.negative === 0 && this.negative !== 0 ? (this.negative = 0, e4 = t5.sub(this), this.negative = 1, e4) : this.length > t5.length ? this.clone().iadd(t5) : t5.clone().iadd(this);
        }, a.prototype.isub = function(t5) {
          if (t5.negative !== 0) {
            t5.negative = 0;
            var e4 = this.iadd(t5);
            return t5.negative = 1, e4._normSign();
          }
          if (this.negative !== 0)
            return this.negative = 0, this.iadd(t5), this.negative = 1, this._normSign();
          var r3, n2, i2 = this.cmp(t5);
          if (i2 === 0)
            return this.negative = 0, this.length = 1, this.words[0] = 0, this;
          i2 > 0 ? (r3 = this, n2 = t5) : (r3 = t5, n2 = this);
          for (var o2 = 0, a2 = 0;a2 < n2.length; a2++)
            o2 = (e4 = (0 | r3.words[a2]) - (0 | n2.words[a2]) + o2) >> 26, this.words[a2] = 67108863 & e4;
          for (;o2 !== 0 && a2 < r3.length; a2++)
            o2 = (e4 = (0 | r3.words[a2]) + o2) >> 26, this.words[a2] = 67108863 & e4;
          if (o2 === 0 && a2 < r3.length && r3 !== this)
            for (;a2 < r3.length; a2++)
              this.words[a2] = r3.words[a2];
          return this.length = Math.max(this.length, a2), r3 !== this && (this.negative = 1), this._strip();
        }, a.prototype.sub = function(t5) {
          return this.clone().isub(t5);
        };
        var m = function(t5, e4, r3) {
          var n2, i2, o2, a2 = t5.words, s2 = e4.words, c2 = r3.words, u2 = 0, f2 = 0 | a2[0], l2 = 8191 & f2, h2 = f2 >>> 13, p2 = 0 | a2[1], d2 = 8191 & p2, y2 = p2 >>> 13, b2 = 0 | a2[2], m2 = 8191 & b2, v2 = b2 >>> 13, g2 = 0 | a2[3], _2 = 8191 & g2, w2 = g2 >>> 13, S2 = 0 | a2[4], O2 = 8191 & S2, j2 = S2 >>> 13, $2 = 0 | a2[5], A2 = 8191 & $2, E2 = $2 >>> 13, x2 = 0 | a2[6], P = 8191 & x2, k = x2 >>> 13, M = 0 | a2[7], I = 8191 & M, T = M >>> 13, B = 0 | a2[8], R = 8191 & B, N = B >>> 13, D = 0 | a2[9], L = 8191 & D, C = D >>> 13, U = 0 | s2[0], q = 8191 & U, F = U >>> 13, V = 0 | s2[1], z = 8191 & V, K = V >>> 13, H = 0 | s2[2], W = 8191 & H, J = H >>> 13, G = 0 | s2[3], Y = 8191 & G, Q = G >>> 13, X = 0 | s2[4], Z = 8191 & X, tt = X >>> 13, et = 0 | s2[5], rt = 8191 & et, nt = et >>> 13, it = 0 | s2[6], ot = 8191 & it, at = it >>> 13, st = 0 | s2[7], ct = 8191 & st, ut = st >>> 13, ft = 0 | s2[8], lt = 8191 & ft, ht = ft >>> 13, pt = 0 | s2[9], dt = 8191 & pt, yt = pt >>> 13;
          r3.negative = t5.negative ^ e4.negative, r3.length = 19;
          var bt = (u2 + (n2 = Math.imul(l2, q)) | 0) + ((8191 & (i2 = (i2 = Math.imul(l2, F)) + Math.imul(h2, q) | 0)) << 13) | 0;
          u2 = ((o2 = Math.imul(h2, F)) + (i2 >>> 13) | 0) + (bt >>> 26) | 0, bt &= 67108863, n2 = Math.imul(d2, q), i2 = (i2 = Math.imul(d2, F)) + Math.imul(y2, q) | 0, o2 = Math.imul(y2, F);
          var mt = (u2 + (n2 = n2 + Math.imul(l2, z) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(l2, K) | 0) + Math.imul(h2, z) | 0)) << 13) | 0;
          u2 = ((o2 = o2 + Math.imul(h2, K) | 0) + (i2 >>> 13) | 0) + (mt >>> 26) | 0, mt &= 67108863, n2 = Math.imul(m2, q), i2 = (i2 = Math.imul(m2, F)) + Math.imul(v2, q) | 0, o2 = Math.imul(v2, F), n2 = n2 + Math.imul(d2, z) | 0, i2 = (i2 = i2 + Math.imul(d2, K) | 0) + Math.imul(y2, z) | 0, o2 = o2 + Math.imul(y2, K) | 0;
          var vt = (u2 + (n2 = n2 + Math.imul(l2, W) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(l2, J) | 0) + Math.imul(h2, W) | 0)) << 13) | 0;
          u2 = ((o2 = o2 + Math.imul(h2, J) | 0) + (i2 >>> 13) | 0) + (vt >>> 26) | 0, vt &= 67108863, n2 = Math.imul(_2, q), i2 = (i2 = Math.imul(_2, F)) + Math.imul(w2, q) | 0, o2 = Math.imul(w2, F), n2 = n2 + Math.imul(m2, z) | 0, i2 = (i2 = i2 + Math.imul(m2, K) | 0) + Math.imul(v2, z) | 0, o2 = o2 + Math.imul(v2, K) | 0, n2 = n2 + Math.imul(d2, W) | 0, i2 = (i2 = i2 + Math.imul(d2, J) | 0) + Math.imul(y2, W) | 0, o2 = o2 + Math.imul(y2, J) | 0;
          var gt = (u2 + (n2 = n2 + Math.imul(l2, Y) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(l2, Q) | 0) + Math.imul(h2, Y) | 0)) << 13) | 0;
          u2 = ((o2 = o2 + Math.imul(h2, Q) | 0) + (i2 >>> 13) | 0) + (gt >>> 26) | 0, gt &= 67108863, n2 = Math.imul(O2, q), i2 = (i2 = Math.imul(O2, F)) + Math.imul(j2, q) | 0, o2 = Math.imul(j2, F), n2 = n2 + Math.imul(_2, z) | 0, i2 = (i2 = i2 + Math.imul(_2, K) | 0) + Math.imul(w2, z) | 0, o2 = o2 + Math.imul(w2, K) | 0, n2 = n2 + Math.imul(m2, W) | 0, i2 = (i2 = i2 + Math.imul(m2, J) | 0) + Math.imul(v2, W) | 0, o2 = o2 + Math.imul(v2, J) | 0, n2 = n2 + Math.imul(d2, Y) | 0, i2 = (i2 = i2 + Math.imul(d2, Q) | 0) + Math.imul(y2, Y) | 0, o2 = o2 + Math.imul(y2, Q) | 0;
          var _t = (u2 + (n2 = n2 + Math.imul(l2, Z) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(l2, tt) | 0) + Math.imul(h2, Z) | 0)) << 13) | 0;
          u2 = ((o2 = o2 + Math.imul(h2, tt) | 0) + (i2 >>> 13) | 0) + (_t >>> 26) | 0, _t &= 67108863, n2 = Math.imul(A2, q), i2 = (i2 = Math.imul(A2, F)) + Math.imul(E2, q) | 0, o2 = Math.imul(E2, F), n2 = n2 + Math.imul(O2, z) | 0, i2 = (i2 = i2 + Math.imul(O2, K) | 0) + Math.imul(j2, z) | 0, o2 = o2 + Math.imul(j2, K) | 0, n2 = n2 + Math.imul(_2, W) | 0, i2 = (i2 = i2 + Math.imul(_2, J) | 0) + Math.imul(w2, W) | 0, o2 = o2 + Math.imul(w2, J) | 0, n2 = n2 + Math.imul(m2, Y) | 0, i2 = (i2 = i2 + Math.imul(m2, Q) | 0) + Math.imul(v2, Y) | 0, o2 = o2 + Math.imul(v2, Q) | 0, n2 = n2 + Math.imul(d2, Z) | 0, i2 = (i2 = i2 + Math.imul(d2, tt) | 0) + Math.imul(y2, Z) | 0, o2 = o2 + Math.imul(y2, tt) | 0;
          var wt = (u2 + (n2 = n2 + Math.imul(l2, rt) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(l2, nt) | 0) + Math.imul(h2, rt) | 0)) << 13) | 0;
          u2 = ((o2 = o2 + Math.imul(h2, nt) | 0) + (i2 >>> 13) | 0) + (wt >>> 26) | 0, wt &= 67108863, n2 = Math.imul(P, q), i2 = (i2 = Math.imul(P, F)) + Math.imul(k, q) | 0, o2 = Math.imul(k, F), n2 = n2 + Math.imul(A2, z) | 0, i2 = (i2 = i2 + Math.imul(A2, K) | 0) + Math.imul(E2, z) | 0, o2 = o2 + Math.imul(E2, K) | 0, n2 = n2 + Math.imul(O2, W) | 0, i2 = (i2 = i2 + Math.imul(O2, J) | 0) + Math.imul(j2, W) | 0, o2 = o2 + Math.imul(j2, J) | 0, n2 = n2 + Math.imul(_2, Y) | 0, i2 = (i2 = i2 + Math.imul(_2, Q) | 0) + Math.imul(w2, Y) | 0, o2 = o2 + Math.imul(w2, Q) | 0, n2 = n2 + Math.imul(m2, Z) | 0, i2 = (i2 = i2 + Math.imul(m2, tt) | 0) + Math.imul(v2, Z) | 0, o2 = o2 + Math.imul(v2, tt) | 0, n2 = n2 + Math.imul(d2, rt) | 0, i2 = (i2 = i2 + Math.imul(d2, nt) | 0) + Math.imul(y2, rt) | 0, o2 = o2 + Math.imul(y2, nt) | 0;
          var St = (u2 + (n2 = n2 + Math.imul(l2, ot) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(l2, at) | 0) + Math.imul(h2, ot) | 0)) << 13) | 0;
          u2 = ((o2 = o2 + Math.imul(h2, at) | 0) + (i2 >>> 13) | 0) + (St >>> 26) | 0, St &= 67108863, n2 = Math.imul(I, q), i2 = (i2 = Math.imul(I, F)) + Math.imul(T, q) | 0, o2 = Math.imul(T, F), n2 = n2 + Math.imul(P, z) | 0, i2 = (i2 = i2 + Math.imul(P, K) | 0) + Math.imul(k, z) | 0, o2 = o2 + Math.imul(k, K) | 0, n2 = n2 + Math.imul(A2, W) | 0, i2 = (i2 = i2 + Math.imul(A2, J) | 0) + Math.imul(E2, W) | 0, o2 = o2 + Math.imul(E2, J) | 0, n2 = n2 + Math.imul(O2, Y) | 0, i2 = (i2 = i2 + Math.imul(O2, Q) | 0) + Math.imul(j2, Y) | 0, o2 = o2 + Math.imul(j2, Q) | 0, n2 = n2 + Math.imul(_2, Z) | 0, i2 = (i2 = i2 + Math.imul(_2, tt) | 0) + Math.imul(w2, Z) | 0, o2 = o2 + Math.imul(w2, tt) | 0, n2 = n2 + Math.imul(m2, rt) | 0, i2 = (i2 = i2 + Math.imul(m2, nt) | 0) + Math.imul(v2, rt) | 0, o2 = o2 + Math.imul(v2, nt) | 0, n2 = n2 + Math.imul(d2, ot) | 0, i2 = (i2 = i2 + Math.imul(d2, at) | 0) + Math.imul(y2, ot) | 0, o2 = o2 + Math.imul(y2, at) | 0;
          var Ot = (u2 + (n2 = n2 + Math.imul(l2, ct) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(l2, ut) | 0) + Math.imul(h2, ct) | 0)) << 13) | 0;
          u2 = ((o2 = o2 + Math.imul(h2, ut) | 0) + (i2 >>> 13) | 0) + (Ot >>> 26) | 0, Ot &= 67108863, n2 = Math.imul(R, q), i2 = (i2 = Math.imul(R, F)) + Math.imul(N, q) | 0, o2 = Math.imul(N, F), n2 = n2 + Math.imul(I, z) | 0, i2 = (i2 = i2 + Math.imul(I, K) | 0) + Math.imul(T, z) | 0, o2 = o2 + Math.imul(T, K) | 0, n2 = n2 + Math.imul(P, W) | 0, i2 = (i2 = i2 + Math.imul(P, J) | 0) + Math.imul(k, W) | 0, o2 = o2 + Math.imul(k, J) | 0, n2 = n2 + Math.imul(A2, Y) | 0, i2 = (i2 = i2 + Math.imul(A2, Q) | 0) + Math.imul(E2, Y) | 0, o2 = o2 + Math.imul(E2, Q) | 0, n2 = n2 + Math.imul(O2, Z) | 0, i2 = (i2 = i2 + Math.imul(O2, tt) | 0) + Math.imul(j2, Z) | 0, o2 = o2 + Math.imul(j2, tt) | 0, n2 = n2 + Math.imul(_2, rt) | 0, i2 = (i2 = i2 + Math.imul(_2, nt) | 0) + Math.imul(w2, rt) | 0, o2 = o2 + Math.imul(w2, nt) | 0, n2 = n2 + Math.imul(m2, ot) | 0, i2 = (i2 = i2 + Math.imul(m2, at) | 0) + Math.imul(v2, ot) | 0, o2 = o2 + Math.imul(v2, at) | 0, n2 = n2 + Math.imul(d2, ct) | 0, i2 = (i2 = i2 + Math.imul(d2, ut) | 0) + Math.imul(y2, ct) | 0, o2 = o2 + Math.imul(y2, ut) | 0;
          var jt = (u2 + (n2 = n2 + Math.imul(l2, lt) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(l2, ht) | 0) + Math.imul(h2, lt) | 0)) << 13) | 0;
          u2 = ((o2 = o2 + Math.imul(h2, ht) | 0) + (i2 >>> 13) | 0) + (jt >>> 26) | 0, jt &= 67108863, n2 = Math.imul(L, q), i2 = (i2 = Math.imul(L, F)) + Math.imul(C, q) | 0, o2 = Math.imul(C, F), n2 = n2 + Math.imul(R, z) | 0, i2 = (i2 = i2 + Math.imul(R, K) | 0) + Math.imul(N, z) | 0, o2 = o2 + Math.imul(N, K) | 0, n2 = n2 + Math.imul(I, W) | 0, i2 = (i2 = i2 + Math.imul(I, J) | 0) + Math.imul(T, W) | 0, o2 = o2 + Math.imul(T, J) | 0, n2 = n2 + Math.imul(P, Y) | 0, i2 = (i2 = i2 + Math.imul(P, Q) | 0) + Math.imul(k, Y) | 0, o2 = o2 + Math.imul(k, Q) | 0, n2 = n2 + Math.imul(A2, Z) | 0, i2 = (i2 = i2 + Math.imul(A2, tt) | 0) + Math.imul(E2, Z) | 0, o2 = o2 + Math.imul(E2, tt) | 0, n2 = n2 + Math.imul(O2, rt) | 0, i2 = (i2 = i2 + Math.imul(O2, nt) | 0) + Math.imul(j2, rt) | 0, o2 = o2 + Math.imul(j2, nt) | 0, n2 = n2 + Math.imul(_2, ot) | 0, i2 = (i2 = i2 + Math.imul(_2, at) | 0) + Math.imul(w2, ot) | 0, o2 = o2 + Math.imul(w2, at) | 0, n2 = n2 + Math.imul(m2, ct) | 0, i2 = (i2 = i2 + Math.imul(m2, ut) | 0) + Math.imul(v2, ct) | 0, o2 = o2 + Math.imul(v2, ut) | 0, n2 = n2 + Math.imul(d2, lt) | 0, i2 = (i2 = i2 + Math.imul(d2, ht) | 0) + Math.imul(y2, lt) | 0, o2 = o2 + Math.imul(y2, ht) | 0;
          var $t = (u2 + (n2 = n2 + Math.imul(l2, dt) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(l2, yt) | 0) + Math.imul(h2, dt) | 0)) << 13) | 0;
          u2 = ((o2 = o2 + Math.imul(h2, yt) | 0) + (i2 >>> 13) | 0) + ($t >>> 26) | 0, $t &= 67108863, n2 = Math.imul(L, z), i2 = (i2 = Math.imul(L, K)) + Math.imul(C, z) | 0, o2 = Math.imul(C, K), n2 = n2 + Math.imul(R, W) | 0, i2 = (i2 = i2 + Math.imul(R, J) | 0) + Math.imul(N, W) | 0, o2 = o2 + Math.imul(N, J) | 0, n2 = n2 + Math.imul(I, Y) | 0, i2 = (i2 = i2 + Math.imul(I, Q) | 0) + Math.imul(T, Y) | 0, o2 = o2 + Math.imul(T, Q) | 0, n2 = n2 + Math.imul(P, Z) | 0, i2 = (i2 = i2 + Math.imul(P, tt) | 0) + Math.imul(k, Z) | 0, o2 = o2 + Math.imul(k, tt) | 0, n2 = n2 + Math.imul(A2, rt) | 0, i2 = (i2 = i2 + Math.imul(A2, nt) | 0) + Math.imul(E2, rt) | 0, o2 = o2 + Math.imul(E2, nt) | 0, n2 = n2 + Math.imul(O2, ot) | 0, i2 = (i2 = i2 + Math.imul(O2, at) | 0) + Math.imul(j2, ot) | 0, o2 = o2 + Math.imul(j2, at) | 0, n2 = n2 + Math.imul(_2, ct) | 0, i2 = (i2 = i2 + Math.imul(_2, ut) | 0) + Math.imul(w2, ct) | 0, o2 = o2 + Math.imul(w2, ut) | 0, n2 = n2 + Math.imul(m2, lt) | 0, i2 = (i2 = i2 + Math.imul(m2, ht) | 0) + Math.imul(v2, lt) | 0, o2 = o2 + Math.imul(v2, ht) | 0;
          var At = (u2 + (n2 = n2 + Math.imul(d2, dt) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(d2, yt) | 0) + Math.imul(y2, dt) | 0)) << 13) | 0;
          u2 = ((o2 = o2 + Math.imul(y2, yt) | 0) + (i2 >>> 13) | 0) + (At >>> 26) | 0, At &= 67108863, n2 = Math.imul(L, W), i2 = (i2 = Math.imul(L, J)) + Math.imul(C, W) | 0, o2 = Math.imul(C, J), n2 = n2 + Math.imul(R, Y) | 0, i2 = (i2 = i2 + Math.imul(R, Q) | 0) + Math.imul(N, Y) | 0, o2 = o2 + Math.imul(N, Q) | 0, n2 = n2 + Math.imul(I, Z) | 0, i2 = (i2 = i2 + Math.imul(I, tt) | 0) + Math.imul(T, Z) | 0, o2 = o2 + Math.imul(T, tt) | 0, n2 = n2 + Math.imul(P, rt) | 0, i2 = (i2 = i2 + Math.imul(P, nt) | 0) + Math.imul(k, rt) | 0, o2 = o2 + Math.imul(k, nt) | 0, n2 = n2 + Math.imul(A2, ot) | 0, i2 = (i2 = i2 + Math.imul(A2, at) | 0) + Math.imul(E2, ot) | 0, o2 = o2 + Math.imul(E2, at) | 0, n2 = n2 + Math.imul(O2, ct) | 0, i2 = (i2 = i2 + Math.imul(O2, ut) | 0) + Math.imul(j2, ct) | 0, o2 = o2 + Math.imul(j2, ut) | 0, n2 = n2 + Math.imul(_2, lt) | 0, i2 = (i2 = i2 + Math.imul(_2, ht) | 0) + Math.imul(w2, lt) | 0, o2 = o2 + Math.imul(w2, ht) | 0;
          var Et = (u2 + (n2 = n2 + Math.imul(m2, dt) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(m2, yt) | 0) + Math.imul(v2, dt) | 0)) << 13) | 0;
          u2 = ((o2 = o2 + Math.imul(v2, yt) | 0) + (i2 >>> 13) | 0) + (Et >>> 26) | 0, Et &= 67108863, n2 = Math.imul(L, Y), i2 = (i2 = Math.imul(L, Q)) + Math.imul(C, Y) | 0, o2 = Math.imul(C, Q), n2 = n2 + Math.imul(R, Z) | 0, i2 = (i2 = i2 + Math.imul(R, tt) | 0) + Math.imul(N, Z) | 0, o2 = o2 + Math.imul(N, tt) | 0, n2 = n2 + Math.imul(I, rt) | 0, i2 = (i2 = i2 + Math.imul(I, nt) | 0) + Math.imul(T, rt) | 0, o2 = o2 + Math.imul(T, nt) | 0, n2 = n2 + Math.imul(P, ot) | 0, i2 = (i2 = i2 + Math.imul(P, at) | 0) + Math.imul(k, ot) | 0, o2 = o2 + Math.imul(k, at) | 0, n2 = n2 + Math.imul(A2, ct) | 0, i2 = (i2 = i2 + Math.imul(A2, ut) | 0) + Math.imul(E2, ct) | 0, o2 = o2 + Math.imul(E2, ut) | 0, n2 = n2 + Math.imul(O2, lt) | 0, i2 = (i2 = i2 + Math.imul(O2, ht) | 0) + Math.imul(j2, lt) | 0, o2 = o2 + Math.imul(j2, ht) | 0;
          var xt = (u2 + (n2 = n2 + Math.imul(_2, dt) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(_2, yt) | 0) + Math.imul(w2, dt) | 0)) << 13) | 0;
          u2 = ((o2 = o2 + Math.imul(w2, yt) | 0) + (i2 >>> 13) | 0) + (xt >>> 26) | 0, xt &= 67108863, n2 = Math.imul(L, Z), i2 = (i2 = Math.imul(L, tt)) + Math.imul(C, Z) | 0, o2 = Math.imul(C, tt), n2 = n2 + Math.imul(R, rt) | 0, i2 = (i2 = i2 + Math.imul(R, nt) | 0) + Math.imul(N, rt) | 0, o2 = o2 + Math.imul(N, nt) | 0, n2 = n2 + Math.imul(I, ot) | 0, i2 = (i2 = i2 + Math.imul(I, at) | 0) + Math.imul(T, ot) | 0, o2 = o2 + Math.imul(T, at) | 0, n2 = n2 + Math.imul(P, ct) | 0, i2 = (i2 = i2 + Math.imul(P, ut) | 0) + Math.imul(k, ct) | 0, o2 = o2 + Math.imul(k, ut) | 0, n2 = n2 + Math.imul(A2, lt) | 0, i2 = (i2 = i2 + Math.imul(A2, ht) | 0) + Math.imul(E2, lt) | 0, o2 = o2 + Math.imul(E2, ht) | 0;
          var Pt = (u2 + (n2 = n2 + Math.imul(O2, dt) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(O2, yt) | 0) + Math.imul(j2, dt) | 0)) << 13) | 0;
          u2 = ((o2 = o2 + Math.imul(j2, yt) | 0) + (i2 >>> 13) | 0) + (Pt >>> 26) | 0, Pt &= 67108863, n2 = Math.imul(L, rt), i2 = (i2 = Math.imul(L, nt)) + Math.imul(C, rt) | 0, o2 = Math.imul(C, nt), n2 = n2 + Math.imul(R, ot) | 0, i2 = (i2 = i2 + Math.imul(R, at) | 0) + Math.imul(N, ot) | 0, o2 = o2 + Math.imul(N, at) | 0, n2 = n2 + Math.imul(I, ct) | 0, i2 = (i2 = i2 + Math.imul(I, ut) | 0) + Math.imul(T, ct) | 0, o2 = o2 + Math.imul(T, ut) | 0, n2 = n2 + Math.imul(P, lt) | 0, i2 = (i2 = i2 + Math.imul(P, ht) | 0) + Math.imul(k, lt) | 0, o2 = o2 + Math.imul(k, ht) | 0;
          var kt = (u2 + (n2 = n2 + Math.imul(A2, dt) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(A2, yt) | 0) + Math.imul(E2, dt) | 0)) << 13) | 0;
          u2 = ((o2 = o2 + Math.imul(E2, yt) | 0) + (i2 >>> 13) | 0) + (kt >>> 26) | 0, kt &= 67108863, n2 = Math.imul(L, ot), i2 = (i2 = Math.imul(L, at)) + Math.imul(C, ot) | 0, o2 = Math.imul(C, at), n2 = n2 + Math.imul(R, ct) | 0, i2 = (i2 = i2 + Math.imul(R, ut) | 0) + Math.imul(N, ct) | 0, o2 = o2 + Math.imul(N, ut) | 0, n2 = n2 + Math.imul(I, lt) | 0, i2 = (i2 = i2 + Math.imul(I, ht) | 0) + Math.imul(T, lt) | 0, o2 = o2 + Math.imul(T, ht) | 0;
          var Mt = (u2 + (n2 = n2 + Math.imul(P, dt) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(P, yt) | 0) + Math.imul(k, dt) | 0)) << 13) | 0;
          u2 = ((o2 = o2 + Math.imul(k, yt) | 0) + (i2 >>> 13) | 0) + (Mt >>> 26) | 0, Mt &= 67108863, n2 = Math.imul(L, ct), i2 = (i2 = Math.imul(L, ut)) + Math.imul(C, ct) | 0, o2 = Math.imul(C, ut), n2 = n2 + Math.imul(R, lt) | 0, i2 = (i2 = i2 + Math.imul(R, ht) | 0) + Math.imul(N, lt) | 0, o2 = o2 + Math.imul(N, ht) | 0;
          var It = (u2 + (n2 = n2 + Math.imul(I, dt) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(I, yt) | 0) + Math.imul(T, dt) | 0)) << 13) | 0;
          u2 = ((o2 = o2 + Math.imul(T, yt) | 0) + (i2 >>> 13) | 0) + (It >>> 26) | 0, It &= 67108863, n2 = Math.imul(L, lt), i2 = (i2 = Math.imul(L, ht)) + Math.imul(C, lt) | 0, o2 = Math.imul(C, ht);
          var Tt = (u2 + (n2 = n2 + Math.imul(R, dt) | 0) | 0) + ((8191 & (i2 = (i2 = i2 + Math.imul(R, yt) | 0) + Math.imul(N, dt) | 0)) << 13) | 0;
          u2 = ((o2 = o2 + Math.imul(N, yt) | 0) + (i2 >>> 13) | 0) + (Tt >>> 26) | 0, Tt &= 67108863;
          var Bt = (u2 + (n2 = Math.imul(L, dt)) | 0) + ((8191 & (i2 = (i2 = Math.imul(L, yt)) + Math.imul(C, dt) | 0)) << 13) | 0;
          return u2 = ((o2 = Math.imul(C, yt)) + (i2 >>> 13) | 0) + (Bt >>> 26) | 0, Bt &= 67108863, c2[0] = bt, c2[1] = mt, c2[2] = vt, c2[3] = gt, c2[4] = _t, c2[5] = wt, c2[6] = St, c2[7] = Ot, c2[8] = jt, c2[9] = $t, c2[10] = At, c2[11] = Et, c2[12] = xt, c2[13] = Pt, c2[14] = kt, c2[15] = Mt, c2[16] = It, c2[17] = Tt, c2[18] = Bt, u2 !== 0 && (c2[19] = u2, r3.length++), r3;
        };
        function v(t5, e4, r3) {
          r3.negative = e4.negative ^ t5.negative, r3.length = t5.length + e4.length;
          for (var n2 = 0, i2 = 0, o2 = 0;o2 < r3.length - 1; o2++) {
            var a2 = i2;
            i2 = 0;
            for (var s2 = 67108863 & n2, c2 = Math.min(o2, e4.length - 1), u2 = Math.max(0, o2 - t5.length + 1);u2 <= c2; u2++) {
              var f2 = o2 - u2, l2 = (0 | t5.words[f2]) * (0 | e4.words[u2]), h2 = 67108863 & l2;
              s2 = 67108863 & (h2 = h2 + s2 | 0), i2 += (a2 = (a2 = a2 + (l2 / 67108864 | 0) | 0) + (h2 >>> 26) | 0) >>> 26, a2 &= 67108863;
            }
            r3.words[o2] = s2, n2 = a2, a2 = i2;
          }
          return n2 !== 0 ? r3.words[o2] = n2 : r3.length--, r3._strip();
        }
        function g(t5, e4, r3) {
          return v(t5, e4, r3);
        }
        function _(t5, e4) {
          this.x = t5, this.y = e4;
        }
        Math.imul || (m = b), a.prototype.mulTo = function(t5, e4) {
          var r3 = this.length + t5.length;
          return this.length === 10 && t5.length === 10 ? m(this, t5, e4) : r3 < 63 ? b(this, t5, e4) : r3 < 1024 ? v(this, t5, e4) : g(this, t5, e4);
        }, _.prototype.makeRBT = function(t5) {
          for (var e4 = new Array(t5), r3 = a.prototype._countBits(t5) - 1, n2 = 0;n2 < t5; n2++)
            e4[n2] = this.revBin(n2, r3, t5);
          return e4;
        }, _.prototype.revBin = function(t5, e4, r3) {
          if (t5 === 0 || t5 === r3 - 1)
            return t5;
          for (var n2 = 0, i2 = 0;i2 < e4; i2++)
            n2 |= (1 & t5) << e4 - i2 - 1, t5 >>= 1;
          return n2;
        }, _.prototype.permute = function(t5, e4, r3, n2, i2, o2) {
          for (var a2 = 0;a2 < o2; a2++)
            n2[a2] = e4[t5[a2]], i2[a2] = r3[t5[a2]];
        }, _.prototype.transform = function(t5, e4, r3, n2, i2, o2) {
          this.permute(o2, t5, e4, r3, n2, i2);
          for (var a2 = 1;a2 < i2; a2 <<= 1)
            for (var s2 = a2 << 1, c2 = Math.cos(2 * Math.PI / s2), u2 = Math.sin(2 * Math.PI / s2), f2 = 0;f2 < i2; f2 += s2)
              for (var l2 = c2, h2 = u2, p2 = 0;p2 < a2; p2++) {
                var d2 = r3[f2 + p2], y2 = n2[f2 + p2], b2 = r3[f2 + p2 + a2], m2 = n2[f2 + p2 + a2], v2 = l2 * b2 - h2 * m2;
                m2 = l2 * m2 + h2 * b2, b2 = v2, r3[f2 + p2] = d2 + b2, n2[f2 + p2] = y2 + m2, r3[f2 + p2 + a2] = d2 - b2, n2[f2 + p2 + a2] = y2 - m2, p2 !== s2 && (v2 = c2 * l2 - u2 * h2, h2 = c2 * h2 + u2 * l2, l2 = v2);
              }
        }, _.prototype.guessLen13b = function(t5, e4) {
          var r3 = 1 | Math.max(e4, t5), n2 = 1 & r3, i2 = 0;
          for (r3 = r3 / 2 | 0;r3; r3 >>>= 1)
            i2++;
          return 1 << i2 + 1 + n2;
        }, _.prototype.conjugate = function(t5, e4, r3) {
          if (!(r3 <= 1))
            for (var n2 = 0;n2 < r3 / 2; n2++) {
              var i2 = t5[n2];
              t5[n2] = t5[r3 - n2 - 1], t5[r3 - n2 - 1] = i2, i2 = e4[n2], e4[n2] = -e4[r3 - n2 - 1], e4[r3 - n2 - 1] = -i2;
            }
        }, _.prototype.normalize13b = function(t5, e4) {
          for (var r3 = 0, n2 = 0;n2 < e4 / 2; n2++) {
            var i2 = 8192 * Math.round(t5[2 * n2 + 1] / e4) + Math.round(t5[2 * n2] / e4) + r3;
            t5[n2] = 67108863 & i2, r3 = i2 < 67108864 ? 0 : i2 / 67108864 | 0;
          }
          return t5;
        }, _.prototype.convert13b = function(t5, e4, r3, n2) {
          for (var o2 = 0, a2 = 0;a2 < e4; a2++)
            o2 += 0 | t5[a2], r3[2 * a2] = 8191 & o2, o2 >>>= 13, r3[2 * a2 + 1] = 8191 & o2, o2 >>>= 13;
          for (a2 = 2 * e4;a2 < n2; ++a2)
            r3[a2] = 0;
          i(o2 === 0), i(!(-8192 & o2));
        }, _.prototype.stub = function(t5) {
          for (var e4 = new Array(t5), r3 = 0;r3 < t5; r3++)
            e4[r3] = 0;
          return e4;
        }, _.prototype.mulp = function(t5, e4, r3) {
          var n2 = 2 * this.guessLen13b(t5.length, e4.length), i2 = this.makeRBT(n2), o2 = this.stub(n2), a2 = new Array(n2), s2 = new Array(n2), c2 = new Array(n2), u2 = new Array(n2), f2 = new Array(n2), l2 = new Array(n2), h2 = r3.words;
          h2.length = n2, this.convert13b(t5.words, t5.length, a2, n2), this.convert13b(e4.words, e4.length, u2, n2), this.transform(a2, o2, s2, c2, n2, i2), this.transform(u2, o2, f2, l2, n2, i2);
          for (var p2 = 0;p2 < n2; p2++) {
            var d2 = s2[p2] * f2[p2] - c2[p2] * l2[p2];
            c2[p2] = s2[p2] * l2[p2] + c2[p2] * f2[p2], s2[p2] = d2;
          }
          return this.conjugate(s2, c2, n2), this.transform(s2, c2, h2, o2, n2, i2), this.conjugate(h2, o2, n2), this.normalize13b(h2, n2), r3.negative = t5.negative ^ e4.negative, r3.length = t5.length + e4.length, r3._strip();
        }, a.prototype.mul = function(t5) {
          var e4 = new a(null);
          return e4.words = new Array(this.length + t5.length), this.mulTo(t5, e4);
        }, a.prototype.mulf = function(t5) {
          var e4 = new a(null);
          return e4.words = new Array(this.length + t5.length), g(this, t5, e4);
        }, a.prototype.imul = function(t5) {
          return this.clone().mulTo(t5, this);
        }, a.prototype.imuln = function(t5) {
          var e4 = t5 < 0;
          e4 && (t5 = -t5), i(typeof t5 == "number"), i(t5 < 67108864);
          for (var r3 = 0, n2 = 0;n2 < this.length; n2++) {
            var o2 = (0 | this.words[n2]) * t5, a2 = (67108863 & o2) + (67108863 & r3);
            r3 >>= 26, r3 += o2 / 67108864 | 0, r3 += a2 >>> 26, this.words[n2] = 67108863 & a2;
          }
          return r3 !== 0 && (this.words[n2] = r3, this.length++), e4 ? this.ineg() : this;
        }, a.prototype.muln = function(t5) {
          return this.clone().imuln(t5);
        }, a.prototype.sqr = function() {
          return this.mul(this);
        }, a.prototype.isqr = function() {
          return this.imul(this.clone());
        }, a.prototype.pow = function(t5) {
          var e4 = function(t6) {
            for (var e5 = new Array(t6.bitLength()), r4 = 0;r4 < e5.length; r4++) {
              var n3 = r4 / 26 | 0, i3 = r4 % 26;
              e5[r4] = t6.words[n3] >>> i3 & 1;
            }
            return e5;
          }(t5);
          if (e4.length === 0)
            return new a(1);
          for (var r3 = this, n2 = 0;n2 < e4.length && e4[n2] === 0; n2++, r3 = r3.sqr())
            ;
          if (++n2 < e4.length)
            for (var i2 = r3.sqr();n2 < e4.length; n2++, i2 = i2.sqr())
              e4[n2] !== 0 && (r3 = r3.mul(i2));
          return r3;
        }, a.prototype.iushln = function(t5) {
          i(typeof t5 == "number" && t5 >= 0);
          var e4, r3 = t5 % 26, n2 = (t5 - r3) / 26, o2 = 67108863 >>> 26 - r3 << 26 - r3;
          if (r3 !== 0) {
            var a2 = 0;
            for (e4 = 0;e4 < this.length; e4++) {
              var s2 = this.words[e4] & o2, c2 = (0 | this.words[e4]) - s2 << r3;
              this.words[e4] = c2 | a2, a2 = s2 >>> 26 - r3;
            }
            a2 && (this.words[e4] = a2, this.length++);
          }
          if (n2 !== 0) {
            for (e4 = this.length - 1;e4 >= 0; e4--)
              this.words[e4 + n2] = this.words[e4];
            for (e4 = 0;e4 < n2; e4++)
              this.words[e4] = 0;
            this.length += n2;
          }
          return this._strip();
        }, a.prototype.ishln = function(t5) {
          return i(this.negative === 0), this.iushln(t5);
        }, a.prototype.iushrn = function(t5, e4, r3) {
          var n2;
          i(typeof t5 == "number" && t5 >= 0), n2 = e4 ? (e4 - e4 % 26) / 26 : 0;
          var o2 = t5 % 26, a2 = Math.min((t5 - o2) / 26, this.length), s2 = 67108863 ^ 67108863 >>> o2 << o2, c2 = r3;
          if (n2 -= a2, n2 = Math.max(0, n2), c2) {
            for (var u2 = 0;u2 < a2; u2++)
              c2.words[u2] = this.words[u2];
            c2.length = a2;
          }
          if (a2 === 0)
            ;
          else if (this.length > a2)
            for (this.length -= a2, u2 = 0;u2 < this.length; u2++)
              this.words[u2] = this.words[u2 + a2];
          else
            this.words[0] = 0, this.length = 1;
          var f2 = 0;
          for (u2 = this.length - 1;u2 >= 0 && (f2 !== 0 || u2 >= n2); u2--) {
            var l2 = 0 | this.words[u2];
            this.words[u2] = f2 << 26 - o2 | l2 >>> o2, f2 = l2 & s2;
          }
          return c2 && f2 !== 0 && (c2.words[c2.length++] = f2), this.length === 0 && (this.words[0] = 0, this.length = 1), this._strip();
        }, a.prototype.ishrn = function(t5, e4, r3) {
          return i(this.negative === 0), this.iushrn(t5, e4, r3);
        }, a.prototype.shln = function(t5) {
          return this.clone().ishln(t5);
        }, a.prototype.ushln = function(t5) {
          return this.clone().iushln(t5);
        }, a.prototype.shrn = function(t5) {
          return this.clone().ishrn(t5);
        }, a.prototype.ushrn = function(t5) {
          return this.clone().iushrn(t5);
        }, a.prototype.testn = function(t5) {
          i(typeof t5 == "number" && t5 >= 0);
          var e4 = t5 % 26, r3 = (t5 - e4) / 26, n2 = 1 << e4;
          return !(this.length <= r3 || !(this.words[r3] & n2));
        }, a.prototype.imaskn = function(t5) {
          i(typeof t5 == "number" && t5 >= 0);
          var e4 = t5 % 26, r3 = (t5 - e4) / 26;
          if (i(this.negative === 0, "imaskn works only with positive numbers"), this.length <= r3)
            return this;
          if (e4 !== 0 && r3++, this.length = Math.min(r3, this.length), e4 !== 0) {
            var n2 = 67108863 ^ 67108863 >>> e4 << e4;
            this.words[this.length - 1] &= n2;
          }
          return this._strip();
        }, a.prototype.maskn = function(t5) {
          return this.clone().imaskn(t5);
        }, a.prototype.iaddn = function(t5) {
          return i(typeof t5 == "number"), i(t5 < 67108864), t5 < 0 ? this.isubn(-t5) : this.negative !== 0 ? this.length === 1 && (0 | this.words[0]) <= t5 ? (this.words[0] = t5 - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t5), this.negative = 1, this) : this._iaddn(t5);
        }, a.prototype._iaddn = function(t5) {
          this.words[0] += t5;
          for (var e4 = 0;e4 < this.length && this.words[e4] >= 67108864; e4++)
            this.words[e4] -= 67108864, e4 === this.length - 1 ? this.words[e4 + 1] = 1 : this.words[e4 + 1]++;
          return this.length = Math.max(this.length, e4 + 1), this;
        }, a.prototype.isubn = function(t5) {
          if (i(typeof t5 == "number"), i(t5 < 67108864), t5 < 0)
            return this.iaddn(-t5);
          if (this.negative !== 0)
            return this.negative = 0, this.iaddn(t5), this.negative = 1, this;
          if (this.words[0] -= t5, this.length === 1 && this.words[0] < 0)
            this.words[0] = -this.words[0], this.negative = 1;
          else
            for (var e4 = 0;e4 < this.length && this.words[e4] < 0; e4++)
              this.words[e4] += 67108864, this.words[e4 + 1] -= 1;
          return this._strip();
        }, a.prototype.addn = function(t5) {
          return this.clone().iaddn(t5);
        }, a.prototype.subn = function(t5) {
          return this.clone().isubn(t5);
        }, a.prototype.iabs = function() {
          return this.negative = 0, this;
        }, a.prototype.abs = function() {
          return this.clone().iabs();
        }, a.prototype._ishlnsubmul = function(t5, e4, r3) {
          var n2, o2, a2 = t5.length + r3;
          this._expand(a2);
          var s2 = 0;
          for (n2 = 0;n2 < t5.length; n2++) {
            o2 = (0 | this.words[n2 + r3]) + s2;
            var c2 = (0 | t5.words[n2]) * e4;
            s2 = ((o2 -= 67108863 & c2) >> 26) - (c2 / 67108864 | 0), this.words[n2 + r3] = 67108863 & o2;
          }
          for (;n2 < this.length - r3; n2++)
            s2 = (o2 = (0 | this.words[n2 + r3]) + s2) >> 26, this.words[n2 + r3] = 67108863 & o2;
          if (s2 === 0)
            return this._strip();
          for (i(s2 === -1), s2 = 0, n2 = 0;n2 < this.length; n2++)
            s2 = (o2 = -(0 | this.words[n2]) + s2) >> 26, this.words[n2] = 67108863 & o2;
          return this.negative = 1, this._strip();
        }, a.prototype._wordDiv = function(t5, e4) {
          var r3 = (this.length, t5.length), n2 = this.clone(), i2 = t5, o2 = 0 | i2.words[i2.length - 1];
          (r3 = 26 - this._countBits(o2)) != 0 && (i2 = i2.ushln(r3), n2.iushln(r3), o2 = 0 | i2.words[i2.length - 1]);
          var s2, c2 = n2.length - i2.length;
          if (e4 !== "mod") {
            (s2 = new a(null)).length = c2 + 1, s2.words = new Array(s2.length);
            for (var u2 = 0;u2 < s2.length; u2++)
              s2.words[u2] = 0;
          }
          var f2 = n2.clone()._ishlnsubmul(i2, 1, c2);
          f2.negative === 0 && (n2 = f2, s2 && (s2.words[c2] = 1));
          for (var l2 = c2 - 1;l2 >= 0; l2--) {
            var h2 = 67108864 * (0 | n2.words[i2.length + l2]) + (0 | n2.words[i2.length + l2 - 1]);
            for (h2 = Math.min(h2 / o2 | 0, 67108863), n2._ishlnsubmul(i2, h2, l2);n2.negative !== 0; )
              h2--, n2.negative = 0, n2._ishlnsubmul(i2, 1, l2), n2.isZero() || (n2.negative ^= 1);
            s2 && (s2.words[l2] = h2);
          }
          return s2 && s2._strip(), n2._strip(), e4 !== "div" && r3 !== 0 && n2.iushrn(r3), { div: s2 || null, mod: n2 };
        }, a.prototype.divmod = function(t5, e4, r3) {
          return i(!t5.isZero()), this.isZero() ? { div: new a(0), mod: new a(0) } : this.negative !== 0 && t5.negative === 0 ? (s2 = this.neg().divmod(t5, e4), e4 !== "mod" && (n2 = s2.div.neg()), e4 !== "div" && (o2 = s2.mod.neg(), r3 && o2.negative !== 0 && o2.iadd(t5)), { div: n2, mod: o2 }) : this.negative === 0 && t5.negative !== 0 ? (s2 = this.divmod(t5.neg(), e4), e4 !== "mod" && (n2 = s2.div.neg()), { div: n2, mod: s2.mod }) : this.negative & t5.negative ? (s2 = this.neg().divmod(t5.neg(), e4), e4 !== "div" && (o2 = s2.mod.neg(), r3 && o2.negative !== 0 && o2.isub(t5)), { div: s2.div, mod: o2 }) : t5.length > this.length || this.cmp(t5) < 0 ? { div: new a(0), mod: this } : t5.length === 1 ? e4 === "div" ? { div: this.divn(t5.words[0]), mod: null } : e4 === "mod" ? { div: null, mod: new a(this.modrn(t5.words[0])) } : { div: this.divn(t5.words[0]), mod: new a(this.modrn(t5.words[0])) } : this._wordDiv(t5, e4);
          var n2, o2, s2;
        }, a.prototype.div = function(t5) {
          return this.divmod(t5, "div", false).div;
        }, a.prototype.mod = function(t5) {
          return this.divmod(t5, "mod", false).mod;
        }, a.prototype.umod = function(t5) {
          return this.divmod(t5, "mod", true).mod;
        }, a.prototype.divRound = function(t5) {
          var e4 = this.divmod(t5);
          if (e4.mod.isZero())
            return e4.div;
          var r3 = e4.div.negative !== 0 ? e4.mod.isub(t5) : e4.mod, n2 = t5.ushrn(1), i2 = t5.andln(1), o2 = r3.cmp(n2);
          return o2 < 0 || i2 === 1 && o2 === 0 ? e4.div : e4.div.negative !== 0 ? e4.div.isubn(1) : e4.div.iaddn(1);
        }, a.prototype.modrn = function(t5) {
          var e4 = t5 < 0;
          e4 && (t5 = -t5), i(t5 <= 67108863);
          for (var r3 = (1 << 26) % t5, n2 = 0, o2 = this.length - 1;o2 >= 0; o2--)
            n2 = (r3 * n2 + (0 | this.words[o2])) % t5;
          return e4 ? -n2 : n2;
        }, a.prototype.modn = function(t5) {
          return this.modrn(t5);
        }, a.prototype.idivn = function(t5) {
          var e4 = t5 < 0;
          e4 && (t5 = -t5), i(t5 <= 67108863);
          for (var r3 = 0, n2 = this.length - 1;n2 >= 0; n2--) {
            var o2 = (0 | this.words[n2]) + 67108864 * r3;
            this.words[n2] = o2 / t5 | 0, r3 = o2 % t5;
          }
          return this._strip(), e4 ? this.ineg() : this;
        }, a.prototype.divn = function(t5) {
          return this.clone().idivn(t5);
        }, a.prototype.egcd = function(t5) {
          i(t5.negative === 0), i(!t5.isZero());
          var e4 = this, r3 = t5.clone();
          e4 = e4.negative !== 0 ? e4.umod(t5) : e4.clone();
          for (var n2 = new a(1), o2 = new a(0), s2 = new a(0), c2 = new a(1), u2 = 0;e4.isEven() && r3.isEven(); )
            e4.iushrn(1), r3.iushrn(1), ++u2;
          for (var f2 = r3.clone(), l2 = e4.clone();!e4.isZero(); ) {
            for (var h2 = 0, p2 = 1;!(e4.words[0] & p2) && h2 < 26; ++h2, p2 <<= 1)
              ;
            if (h2 > 0)
              for (e4.iushrn(h2);h2-- > 0; )
                (n2.isOdd() || o2.isOdd()) && (n2.iadd(f2), o2.isub(l2)), n2.iushrn(1), o2.iushrn(1);
            for (var d2 = 0, y2 = 1;!(r3.words[0] & y2) && d2 < 26; ++d2, y2 <<= 1)
              ;
            if (d2 > 0)
              for (r3.iushrn(d2);d2-- > 0; )
                (s2.isOdd() || c2.isOdd()) && (s2.iadd(f2), c2.isub(l2)), s2.iushrn(1), c2.iushrn(1);
            e4.cmp(r3) >= 0 ? (e4.isub(r3), n2.isub(s2), o2.isub(c2)) : (r3.isub(e4), s2.isub(n2), c2.isub(o2));
          }
          return { a: s2, b: c2, gcd: r3.iushln(u2) };
        }, a.prototype._invmp = function(t5) {
          i(t5.negative === 0), i(!t5.isZero());
          var e4 = this, r3 = t5.clone();
          e4 = e4.negative !== 0 ? e4.umod(t5) : e4.clone();
          for (var n2, o2 = new a(1), s2 = new a(0), c2 = r3.clone();e4.cmpn(1) > 0 && r3.cmpn(1) > 0; ) {
            for (var u2 = 0, f2 = 1;!(e4.words[0] & f2) && u2 < 26; ++u2, f2 <<= 1)
              ;
            if (u2 > 0)
              for (e4.iushrn(u2);u2-- > 0; )
                o2.isOdd() && o2.iadd(c2), o2.iushrn(1);
            for (var l2 = 0, h2 = 1;!(r3.words[0] & h2) && l2 < 26; ++l2, h2 <<= 1)
              ;
            if (l2 > 0)
              for (r3.iushrn(l2);l2-- > 0; )
                s2.isOdd() && s2.iadd(c2), s2.iushrn(1);
            e4.cmp(r3) >= 0 ? (e4.isub(r3), o2.isub(s2)) : (r3.isub(e4), s2.isub(o2));
          }
          return (n2 = e4.cmpn(1) === 0 ? o2 : s2).cmpn(0) < 0 && n2.iadd(t5), n2;
        }, a.prototype.gcd = function(t5) {
          if (this.isZero())
            return t5.abs();
          if (t5.isZero())
            return this.abs();
          var e4 = this.clone(), r3 = t5.clone();
          e4.negative = 0, r3.negative = 0;
          for (var n2 = 0;e4.isEven() && r3.isEven(); n2++)
            e4.iushrn(1), r3.iushrn(1);
          for (;; ) {
            for (;e4.isEven(); )
              e4.iushrn(1);
            for (;r3.isEven(); )
              r3.iushrn(1);
            var i2 = e4.cmp(r3);
            if (i2 < 0) {
              var o2 = e4;
              e4 = r3, r3 = o2;
            } else if (i2 === 0 || r3.cmpn(1) === 0)
              break;
            e4.isub(r3);
          }
          return r3.iushln(n2);
        }, a.prototype.invm = function(t5) {
          return this.egcd(t5).a.umod(t5);
        }, a.prototype.isEven = function() {
          return !(1 & this.words[0]);
        }, a.prototype.isOdd = function() {
          return !(1 & ~this.words[0]);
        }, a.prototype.andln = function(t5) {
          return this.words[0] & t5;
        }, a.prototype.bincn = function(t5) {
          i(typeof t5 == "number");
          var e4 = t5 % 26, r3 = (t5 - e4) / 26, n2 = 1 << e4;
          if (this.length <= r3)
            return this._expand(r3 + 1), this.words[r3] |= n2, this;
          for (var o2 = n2, a2 = r3;o2 !== 0 && a2 < this.length; a2++) {
            var s2 = 0 | this.words[a2];
            o2 = (s2 += o2) >>> 26, s2 &= 67108863, this.words[a2] = s2;
          }
          return o2 !== 0 && (this.words[a2] = o2, this.length++), this;
        }, a.prototype.isZero = function() {
          return this.length === 1 && this.words[0] === 0;
        }, a.prototype.cmpn = function(t5) {
          var e4, r3 = t5 < 0;
          if (this.negative !== 0 && !r3)
            return -1;
          if (this.negative === 0 && r3)
            return 1;
          if (this._strip(), this.length > 1)
            e4 = 1;
          else {
            r3 && (t5 = -t5), i(t5 <= 67108863, "Number is too big");
            var n2 = 0 | this.words[0];
            e4 = n2 === t5 ? 0 : n2 < t5 ? -1 : 1;
          }
          return this.negative !== 0 ? 0 | -e4 : e4;
        }, a.prototype.cmp = function(t5) {
          if (this.negative !== 0 && t5.negative === 0)
            return -1;
          if (this.negative === 0 && t5.negative !== 0)
            return 1;
          var e4 = this.ucmp(t5);
          return this.negative !== 0 ? 0 | -e4 : e4;
        }, a.prototype.ucmp = function(t5) {
          if (this.length > t5.length)
            return 1;
          if (this.length < t5.length)
            return -1;
          for (var e4 = 0, r3 = this.length - 1;r3 >= 0; r3--) {
            var n2 = 0 | this.words[r3], i2 = 0 | t5.words[r3];
            if (n2 !== i2) {
              n2 < i2 ? e4 = -1 : n2 > i2 && (e4 = 1);
              break;
            }
          }
          return e4;
        }, a.prototype.gtn = function(t5) {
          return this.cmpn(t5) === 1;
        }, a.prototype.gt = function(t5) {
          return this.cmp(t5) === 1;
        }, a.prototype.gten = function(t5) {
          return this.cmpn(t5) >= 0;
        }, a.prototype.gte = function(t5) {
          return this.cmp(t5) >= 0;
        }, a.prototype.ltn = function(t5) {
          return this.cmpn(t5) === -1;
        }, a.prototype.lt = function(t5) {
          return this.cmp(t5) === -1;
        }, a.prototype.lten = function(t5) {
          return this.cmpn(t5) <= 0;
        }, a.prototype.lte = function(t5) {
          return this.cmp(t5) <= 0;
        }, a.prototype.eqn = function(t5) {
          return this.cmpn(t5) === 0;
        }, a.prototype.eq = function(t5) {
          return this.cmp(t5) === 0;
        }, a.red = function(t5) {
          return new E(t5);
        }, a.prototype.toRed = function(t5) {
          return i(!this.red, "Already a number in reduction context"), i(this.negative === 0, "red works only with positives"), t5.convertTo(this)._forceRed(t5);
        }, a.prototype.fromRed = function() {
          return i(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
        }, a.prototype._forceRed = function(t5) {
          return this.red = t5, this;
        }, a.prototype.forceRed = function(t5) {
          return i(!this.red, "Already a number in reduction context"), this._forceRed(t5);
        }, a.prototype.redAdd = function(t5) {
          return i(this.red, "redAdd works only with red numbers"), this.red.add(this, t5);
        }, a.prototype.redIAdd = function(t5) {
          return i(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t5);
        }, a.prototype.redSub = function(t5) {
          return i(this.red, "redSub works only with red numbers"), this.red.sub(this, t5);
        }, a.prototype.redISub = function(t5) {
          return i(this.red, "redISub works only with red numbers"), this.red.isub(this, t5);
        }, a.prototype.redShl = function(t5) {
          return i(this.red, "redShl works only with red numbers"), this.red.shl(this, t5);
        }, a.prototype.redMul = function(t5) {
          return i(this.red, "redMul works only with red numbers"), this.red._verify2(this, t5), this.red.mul(this, t5);
        }, a.prototype.redIMul = function(t5) {
          return i(this.red, "redMul works only with red numbers"), this.red._verify2(this, t5), this.red.imul(this, t5);
        }, a.prototype.redSqr = function() {
          return i(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
        }, a.prototype.redISqr = function() {
          return i(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
        }, a.prototype.redSqrt = function() {
          return i(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
        }, a.prototype.redInvm = function() {
          return i(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
        }, a.prototype.redNeg = function() {
          return i(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
        }, a.prototype.redPow = function(t5) {
          return i(this.red && !t5.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t5);
        };
        var w = { k256: null, p224: null, p192: null, p25519: null };
        function S(t5, e4) {
          this.name = t5, this.p = new a(e4, 16), this.n = this.p.bitLength(), this.k = new a(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
        }
        function O() {
          S.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
        }
        function j() {
          S.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
        }
        function $() {
          S.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
        }
        function A() {
          S.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
        }
        function E(t5) {
          if (typeof t5 == "string") {
            var e4 = a._prime(t5);
            this.m = e4.p, this.prime = e4;
          } else
            i(t5.gtn(1), "modulus must be greater than 1"), this.m = t5, this.prime = null;
        }
        function x(t5) {
          E.call(this, t5), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new a(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
        }
        S.prototype._tmp = function() {
          var t5 = new a(null);
          return t5.words = new Array(Math.ceil(this.n / 13)), t5;
        }, S.prototype.ireduce = function(t5) {
          var e4, r3 = t5;
          do {
            this.split(r3, this.tmp), e4 = (r3 = (r3 = this.imulK(r3)).iadd(this.tmp)).bitLength();
          } while (e4 > this.n);
          var n2 = e4 < this.n ? -1 : r3.ucmp(this.p);
          return n2 === 0 ? (r3.words[0] = 0, r3.length = 1) : n2 > 0 ? r3.isub(this.p) : r3.strip !== undefined ? r3.strip() : r3._strip(), r3;
        }, S.prototype.split = function(t5, e4) {
          t5.iushrn(this.n, 0, e4);
        }, S.prototype.imulK = function(t5) {
          return t5.imul(this.k);
        }, o(O, S), O.prototype.split = function(t5, e4) {
          for (var r3 = 4194303, n2 = Math.min(t5.length, 9), i2 = 0;i2 < n2; i2++)
            e4.words[i2] = t5.words[i2];
          if (e4.length = n2, t5.length <= 9)
            return t5.words[0] = 0, void (t5.length = 1);
          var o2 = t5.words[9];
          for (e4.words[e4.length++] = o2 & r3, i2 = 10;i2 < t5.length; i2++) {
            var a2 = 0 | t5.words[i2];
            t5.words[i2 - 10] = (a2 & r3) << 4 | o2 >>> 22, o2 = a2;
          }
          o2 >>>= 22, t5.words[i2 - 10] = o2, o2 === 0 && t5.length > 10 ? t5.length -= 10 : t5.length -= 9;
        }, O.prototype.imulK = function(t5) {
          t5.words[t5.length] = 0, t5.words[t5.length + 1] = 0, t5.length += 2;
          for (var e4 = 0, r3 = 0;r3 < t5.length; r3++) {
            var n2 = 0 | t5.words[r3];
            e4 += 977 * n2, t5.words[r3] = 67108863 & e4, e4 = 64 * n2 + (e4 / 67108864 | 0);
          }
          return t5.words[t5.length - 1] === 0 && (t5.length--, t5.words[t5.length - 1] === 0 && t5.length--), t5;
        }, o(j, S), o($, S), o(A, S), A.prototype.imulK = function(t5) {
          for (var e4 = 0, r3 = 0;r3 < t5.length; r3++) {
            var n2 = 19 * (0 | t5.words[r3]) + e4, i2 = 67108863 & n2;
            n2 >>>= 26, t5.words[r3] = i2, e4 = n2;
          }
          return e4 !== 0 && (t5.words[t5.length++] = e4), t5;
        }, a._prime = function(t5) {
          if (w[t5])
            return w[t5];
          var e4;
          if (t5 === "k256")
            e4 = new O;
          else if (t5 === "p224")
            e4 = new j;
          else if (t5 === "p192")
            e4 = new $;
          else {
            if (t5 !== "p25519")
              throw new Error("Unknown prime " + t5);
            e4 = new A;
          }
          return w[t5] = e4, e4;
        }, E.prototype._verify1 = function(t5) {
          i(t5.negative === 0, "red works only with positives"), i(t5.red, "red works only with red numbers");
        }, E.prototype._verify2 = function(t5, e4) {
          i(!(t5.negative | e4.negative), "red works only with positives"), i(t5.red && t5.red === e4.red, "red works only with red numbers");
        }, E.prototype.imod = function(t5) {
          return this.prime ? this.prime.ireduce(t5)._forceRed(this) : (l(t5, t5.umod(this.m)._forceRed(this)), t5);
        }, E.prototype.neg = function(t5) {
          return t5.isZero() ? t5.clone() : this.m.sub(t5)._forceRed(this);
        }, E.prototype.add = function(t5, e4) {
          this._verify2(t5, e4);
          var r3 = t5.add(e4);
          return r3.cmp(this.m) >= 0 && r3.isub(this.m), r3._forceRed(this);
        }, E.prototype.iadd = function(t5, e4) {
          this._verify2(t5, e4);
          var r3 = t5.iadd(e4);
          return r3.cmp(this.m) >= 0 && r3.isub(this.m), r3;
        }, E.prototype.sub = function(t5, e4) {
          this._verify2(t5, e4);
          var r3 = t5.sub(e4);
          return r3.cmpn(0) < 0 && r3.iadd(this.m), r3._forceRed(this);
        }, E.prototype.isub = function(t5, e4) {
          this._verify2(t5, e4);
          var r3 = t5.isub(e4);
          return r3.cmpn(0) < 0 && r3.iadd(this.m), r3;
        }, E.prototype.shl = function(t5, e4) {
          return this._verify1(t5), this.imod(t5.ushln(e4));
        }, E.prototype.imul = function(t5, e4) {
          return this._verify2(t5, e4), this.imod(t5.imul(e4));
        }, E.prototype.mul = function(t5, e4) {
          return this._verify2(t5, e4), this.imod(t5.mul(e4));
        }, E.prototype.isqr = function(t5) {
          return this.imul(t5, t5.clone());
        }, E.prototype.sqr = function(t5) {
          return this.mul(t5, t5);
        }, E.prototype.sqrt = function(t5) {
          if (t5.isZero())
            return t5.clone();
          var e4 = this.m.andln(3);
          if (i(e4 % 2 == 1), e4 === 3) {
            var r3 = this.m.add(new a(1)).iushrn(2);
            return this.pow(t5, r3);
          }
          for (var n2 = this.m.subn(1), o2 = 0;!n2.isZero() && n2.andln(1) === 0; )
            o2++, n2.iushrn(1);
          i(!n2.isZero());
          var s2 = new a(1).toRed(this), c2 = s2.redNeg(), u2 = this.m.subn(1).iushrn(1), f2 = this.m.bitLength();
          for (f2 = new a(2 * f2 * f2).toRed(this);this.pow(f2, u2).cmp(c2) !== 0; )
            f2.redIAdd(c2);
          for (var l2 = this.pow(f2, n2), h2 = this.pow(t5, n2.addn(1).iushrn(1)), p2 = this.pow(t5, n2), d2 = o2;p2.cmp(s2) !== 0; ) {
            for (var y2 = p2, b2 = 0;y2.cmp(s2) !== 0; b2++)
              y2 = y2.redSqr();
            i(b2 < d2);
            var m2 = this.pow(l2, new a(1).iushln(d2 - b2 - 1));
            h2 = h2.redMul(m2), l2 = m2.redSqr(), p2 = p2.redMul(l2), d2 = b2;
          }
          return h2;
        }, E.prototype.invm = function(t5) {
          var e4 = t5._invmp(this.m);
          return e4.negative !== 0 ? (e4.negative = 0, this.imod(e4).redNeg()) : this.imod(e4);
        }, E.prototype.pow = function(t5, e4) {
          if (e4.isZero())
            return new a(1).toRed(this);
          if (e4.cmpn(1) === 0)
            return t5.clone();
          var r3 = new Array(16);
          r3[0] = new a(1).toRed(this), r3[1] = t5;
          for (var n2 = 2;n2 < r3.length; n2++)
            r3[n2] = this.mul(r3[n2 - 1], t5);
          var i2 = r3[0], o2 = 0, s2 = 0, c2 = e4.bitLength() % 26;
          for (c2 === 0 && (c2 = 26), n2 = e4.length - 1;n2 >= 0; n2--) {
            for (var u2 = e4.words[n2], f2 = c2 - 1;f2 >= 0; f2--) {
              var l2 = u2 >> f2 & 1;
              i2 !== r3[0] && (i2 = this.sqr(i2)), l2 !== 0 || o2 !== 0 ? (o2 <<= 1, o2 |= l2, (++s2 == 4 || n2 === 0 && f2 === 0) && (i2 = this.mul(i2, r3[o2]), s2 = 0, o2 = 0)) : s2 = 0;
            }
            c2 = 26;
          }
          return i2;
        }, E.prototype.convertTo = function(t5) {
          var e4 = t5.umod(this.m);
          return e4 === t5 ? e4.clone() : e4;
        }, E.prototype.convertFrom = function(t5) {
          var e4 = t5.clone();
          return e4.red = null, e4;
        }, a.mont = function(t5) {
          return new x(t5);
        }, o(x, E), x.prototype.convertTo = function(t5) {
          return this.imod(t5.ushln(this.shift));
        }, x.prototype.convertFrom = function(t5) {
          var e4 = this.imod(t5.mul(this.rinv));
          return e4.red = null, e4;
        }, x.prototype.imul = function(t5, e4) {
          if (t5.isZero() || e4.isZero())
            return t5.words[0] = 0, t5.length = 1, t5;
          var r3 = t5.imul(e4), n2 = r3.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i2 = r3.isub(n2).iushrn(this.shift), o2 = i2;
          return i2.cmp(this.m) >= 0 ? o2 = i2.isub(this.m) : i2.cmpn(0) < 0 && (o2 = i2.iadd(this.m)), o2._forceRed(this);
        }, x.prototype.mul = function(t5, e4) {
          if (t5.isZero() || e4.isZero())
            return new a(0)._forceRed(this);
          var r3 = t5.mul(e4), n2 = r3.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i2 = r3.isub(n2).iushrn(this.shift), o2 = i2;
          return i2.cmp(this.m) >= 0 ? o2 = i2.isub(this.m) : i2.cmpn(0) < 0 && (o2 = i2.iadd(this.m)), o2._forceRed(this);
        }, x.prototype.invm = function(t5) {
          return this.imod(t5._invmp(this.m).mul(this.r2))._forceRed(this);
        };
      })(t3 = r2.nmd(t3), this);
    }, 8904: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      var i;
      function o(t4) {
        this.rand = t4;
      }
      if (t3.exports = function(t4) {
        return i || (i = new o(null)), i.generate(t4);
      }, t3.exports.Rand = o, o.prototype.generate = function(t4) {
        return this._rand(t4);
      }, o.prototype._rand = function(t4) {
        if (this.rand.getBytes)
          return this.rand.getBytes(t4);
        for (var e3 = new Uint8Array(t4), r3 = 0;r3 < e3.length; r3++)
          e3[r3] = this.rand.getByte();
        return e3;
      }, (typeof self == "undefined" ? "undefined" : n(self)) === "object")
        self.crypto && self.crypto.getRandomValues ? o.prototype._rand = function(t4) {
          var e3 = new Uint8Array(t4);
          return self.crypto.getRandomValues(e3), e3;
        } : self.msCrypto && self.msCrypto.getRandomValues ? o.prototype._rand = function(t4) {
          var e3 = new Uint8Array(t4);
          return self.msCrypto.getRandomValues(e3), e3;
        } : (typeof window == "undefined" ? "undefined" : n(window)) === "object" && (o.prototype._rand = function() {
          throw new Error("Not implemented yet");
        });
      else
        try {
          var a = r2(3776);
          if (typeof a.randomBytes != "function")
            throw new Error("Not supported");
          o.prototype._rand = function(t4) {
            return a.randomBytes(t4);
          };
        } catch (t4) {
        }
    }, 5401: (t3, e2, r2) => {
      var n = r2(9732).Buffer;
      function i(t4) {
        n.isBuffer(t4) || (t4 = n.from(t4));
        for (var e3 = t4.length / 4 | 0, r3 = new Array(e3), i2 = 0;i2 < e3; i2++)
          r3[i2] = t4.readUInt32BE(4 * i2);
        return r3;
      }
      function o(t4) {
        for (;0 < t4.length; t4++)
          t4[0] = 0;
      }
      function a(t4, e3, r3, n2, i2) {
        for (var o2, a2, s2, c2, u2 = r3[0], f = r3[1], l = r3[2], h = r3[3], p = t4[0] ^ e3[0], d = t4[1] ^ e3[1], y = t4[2] ^ e3[2], b = t4[3] ^ e3[3], m = 4, v = 1;v < i2; v++)
          o2 = u2[p >>> 24] ^ f[d >>> 16 & 255] ^ l[y >>> 8 & 255] ^ h[255 & b] ^ e3[m++], a2 = u2[d >>> 24] ^ f[y >>> 16 & 255] ^ l[b >>> 8 & 255] ^ h[255 & p] ^ e3[m++], s2 = u2[y >>> 24] ^ f[b >>> 16 & 255] ^ l[p >>> 8 & 255] ^ h[255 & d] ^ e3[m++], c2 = u2[b >>> 24] ^ f[p >>> 16 & 255] ^ l[d >>> 8 & 255] ^ h[255 & y] ^ e3[m++], p = o2, d = a2, y = s2, b = c2;
        return o2 = (n2[p >>> 24] << 24 | n2[d >>> 16 & 255] << 16 | n2[y >>> 8 & 255] << 8 | n2[255 & b]) ^ e3[m++], a2 = (n2[d >>> 24] << 24 | n2[y >>> 16 & 255] << 16 | n2[b >>> 8 & 255] << 8 | n2[255 & p]) ^ e3[m++], s2 = (n2[y >>> 24] << 24 | n2[b >>> 16 & 255] << 16 | n2[p >>> 8 & 255] << 8 | n2[255 & d]) ^ e3[m++], c2 = (n2[b >>> 24] << 24 | n2[p >>> 16 & 255] << 16 | n2[d >>> 8 & 255] << 8 | n2[255 & y]) ^ e3[m++], [o2 >>>= 0, a2 >>>= 0, s2 >>>= 0, c2 >>>= 0];
      }
      var s = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], c = function() {
        for (var t4 = new Array(256), e3 = 0;e3 < 256; e3++)
          t4[e3] = e3 < 128 ? e3 << 1 : e3 << 1 ^ 283;
        for (var r3 = [], n2 = [], i2 = [[], [], [], []], o2 = [[], [], [], []], a2 = 0, s2 = 0, c2 = 0;c2 < 256; ++c2) {
          var u2 = s2 ^ s2 << 1 ^ s2 << 2 ^ s2 << 3 ^ s2 << 4;
          u2 = u2 >>> 8 ^ 255 & u2 ^ 99, r3[a2] = u2, n2[u2] = a2;
          var f = t4[a2], l = t4[f], h = t4[l], p = 257 * t4[u2] ^ 16843008 * u2;
          i2[0][a2] = p << 24 | p >>> 8, i2[1][a2] = p << 16 | p >>> 16, i2[2][a2] = p << 8 | p >>> 24, i2[3][a2] = p, p = 16843009 * h ^ 65537 * l ^ 257 * f ^ 16843008 * a2, o2[0][u2] = p << 24 | p >>> 8, o2[1][u2] = p << 16 | p >>> 16, o2[2][u2] = p << 8 | p >>> 24, o2[3][u2] = p, a2 === 0 ? a2 = s2 = 1 : (a2 = f ^ t4[t4[t4[h ^ f]]], s2 ^= t4[t4[s2]]);
        }
        return { SBOX: r3, INV_SBOX: n2, SUB_MIX: i2, INV_SUB_MIX: o2 };
      }();
      function u(t4) {
        this._key = i(t4), this._reset();
      }
      u.blockSize = 16, u.keySize = 32, u.prototype.blockSize = u.blockSize, u.prototype.keySize = u.keySize, u.prototype._reset = function() {
        for (var t4 = this._key, e3 = t4.length, r3 = e3 + 6, n2 = 4 * (r3 + 1), i2 = [], o2 = 0;o2 < e3; o2++)
          i2[o2] = t4[o2];
        for (o2 = e3;o2 < n2; o2++) {
          var a2 = i2[o2 - 1];
          o2 % e3 == 0 ? (a2 = a2 << 8 | a2 >>> 24, a2 = c.SBOX[a2 >>> 24] << 24 | c.SBOX[a2 >>> 16 & 255] << 16 | c.SBOX[a2 >>> 8 & 255] << 8 | c.SBOX[255 & a2], a2 ^= s[o2 / e3 | 0] << 24) : e3 > 6 && o2 % e3 == 4 && (a2 = c.SBOX[a2 >>> 24] << 24 | c.SBOX[a2 >>> 16 & 255] << 16 | c.SBOX[a2 >>> 8 & 255] << 8 | c.SBOX[255 & a2]), i2[o2] = i2[o2 - e3] ^ a2;
        }
        for (var u2 = [], f = 0;f < n2; f++) {
          var l = n2 - f, h = i2[l - (f % 4 ? 0 : 4)];
          u2[f] = f < 4 || l <= 4 ? h : c.INV_SUB_MIX[0][c.SBOX[h >>> 24]] ^ c.INV_SUB_MIX[1][c.SBOX[h >>> 16 & 255]] ^ c.INV_SUB_MIX[2][c.SBOX[h >>> 8 & 255]] ^ c.INV_SUB_MIX[3][c.SBOX[255 & h]];
        }
        this._nRounds = r3, this._keySchedule = i2, this._invKeySchedule = u2;
      }, u.prototype.encryptBlockRaw = function(t4) {
        return a(t4 = i(t4), this._keySchedule, c.SUB_MIX, c.SBOX, this._nRounds);
      }, u.prototype.encryptBlock = function(t4) {
        var e3 = this.encryptBlockRaw(t4), r3 = n.allocUnsafe(16);
        return r3.writeUInt32BE(e3[0], 0), r3.writeUInt32BE(e3[1], 4), r3.writeUInt32BE(e3[2], 8), r3.writeUInt32BE(e3[3], 12), r3;
      }, u.prototype.decryptBlock = function(t4) {
        var e3 = (t4 = i(t4))[1];
        t4[1] = t4[3], t4[3] = e3;
        var r3 = a(t4, this._invKeySchedule, c.INV_SUB_MIX, c.INV_SBOX, this._nRounds), o2 = n.allocUnsafe(16);
        return o2.writeUInt32BE(r3[0], 0), o2.writeUInt32BE(r3[3], 4), o2.writeUInt32BE(r3[2], 8), o2.writeUInt32BE(r3[1], 12), o2;
      }, u.prototype.scrub = function() {
        o(this._keySchedule), o(this._invKeySchedule), o(this._key);
      }, t3.exports.AES = u;
    }, 1085: (t3, e2, r2) => {
      var n = r2(5401), i = r2(9732).Buffer, o = r2(2533), a = r2(1679), s = r2(9363), c = r2(6876), u = r2(9003);
      function f(t4, e3, r3, a2) {
        o.call(this);
        var c2 = i.alloc(4, 0);
        this._cipher = new n.AES(e3);
        var f2 = this._cipher.encryptBlock(c2);
        this._ghash = new s(f2), r3 = function(t5, e4, r4) {
          if (e4.length === 12)
            return t5._finID = i.concat([e4, i.from([0, 0, 0, 1])]), i.concat([e4, i.from([0, 0, 0, 2])]);
          var n2 = new s(r4), o2 = e4.length, a3 = o2 % 16;
          n2.update(e4), a3 && (a3 = 16 - a3, n2.update(i.alloc(a3, 0))), n2.update(i.alloc(8, 0));
          var c3 = 8 * o2, f3 = i.alloc(8);
          f3.writeUIntBE(c3, 0, 8), n2.update(f3), t5._finID = n2.state;
          var l = i.from(t5._finID);
          return u(l), l;
        }(this, r3, f2), this._prev = i.from(r3), this._cache = i.allocUnsafe(0), this._secCache = i.allocUnsafe(0), this._decrypt = a2, this._alen = 0, this._len = 0, this._mode = t4, this._authTag = null, this._called = false;
      }
      a(f, o), f.prototype._update = function(t4) {
        if (!this._called && this._alen) {
          var e3 = 16 - this._alen % 16;
          e3 < 16 && (e3 = i.alloc(e3, 0), this._ghash.update(e3));
        }
        this._called = true;
        var r3 = this._mode.encrypt(this, t4);
        return this._decrypt ? this._ghash.update(t4) : this._ghash.update(r3), this._len += t4.length, r3;
      }, f.prototype._final = function() {
        if (this._decrypt && !this._authTag)
          throw new Error("Unsupported state or unable to authenticate data");
        var t4 = c(this._ghash.final(8 * this._alen, 8 * this._len), this._cipher.encryptBlock(this._finID));
        if (this._decrypt && function(t5, e3) {
          var r3 = 0;
          t5.length !== e3.length && r3++;
          for (var n2 = Math.min(t5.length, e3.length), i2 = 0;i2 < n2; ++i2)
            r3 += t5[i2] ^ e3[i2];
          return r3;
        }(t4, this._authTag))
          throw new Error("Unsupported state or unable to authenticate data");
        this._authTag = t4, this._cipher.scrub();
      }, f.prototype.getAuthTag = function() {
        if (this._decrypt || !i.isBuffer(this._authTag))
          throw new Error("Attempting to get auth tag in unsupported state");
        return this._authTag;
      }, f.prototype.setAuthTag = function(t4) {
        if (!this._decrypt)
          throw new Error("Attempting to set auth tag in unsupported state");
        this._authTag = t4;
      }, f.prototype.setAAD = function(t4) {
        if (this._called)
          throw new Error("Attempting to set AAD in unsupported state");
        this._ghash.update(t4), this._alen += t4.length;
      }, t3.exports = f;
    }, 2098: (t3, e2, r2) => {
      var n = r2(3604), i = r2(1808), o = r2(3219);
      e2.createCipher = e2.Cipher = n.createCipher, e2.createCipheriv = e2.Cipheriv = n.createCipheriv, e2.createDecipher = e2.Decipher = i.createDecipher, e2.createDecipheriv = e2.Decipheriv = i.createDecipheriv, e2.listCiphers = e2.getCiphers = function() {
        return Object.keys(o);
      };
    }, 1808: (t3, e2, r2) => {
      var n = r2(1085), i = r2(9732).Buffer, o = r2(8629), a = r2(5407), s = r2(2533), c = r2(5401), u = r2(1685);
      function f(t4, e3, r3) {
        s.call(this), this._cache = new l, this._last = undefined, this._cipher = new c.AES(e3), this._prev = i.from(r3), this._mode = t4, this._autopadding = true;
      }
      function l() {
        this.cache = i.allocUnsafe(0);
      }
      function h(t4, e3, r3) {
        var s2 = o[t4.toLowerCase()];
        if (!s2)
          throw new TypeError("invalid suite type");
        if (typeof r3 == "string" && (r3 = i.from(r3)), s2.mode !== "GCM" && r3.length !== s2.iv)
          throw new TypeError("invalid iv length " + r3.length);
        if (typeof e3 == "string" && (e3 = i.from(e3)), e3.length !== s2.key / 8)
          throw new TypeError("invalid key length " + e3.length);
        return s2.type === "stream" ? new a(s2.module, e3, r3, true) : s2.type === "auth" ? new n(s2.module, e3, r3, true) : new f(s2.module, e3, r3);
      }
      r2(1679)(f, s), f.prototype._update = function(t4) {
        var e3, r3;
        this._cache.add(t4);
        for (var n2 = [];e3 = this._cache.get(this._autopadding); )
          r3 = this._mode.decrypt(this, e3), n2.push(r3);
        return i.concat(n2);
      }, f.prototype._final = function() {
        var t4 = this._cache.flush();
        if (this._autopadding)
          return function(t5) {
            var e3 = t5[15];
            if (e3 < 1 || e3 > 16)
              throw new Error("unable to decrypt data");
            for (var r3 = -1;++r3 < e3; )
              if (t5[r3 + (16 - e3)] !== e3)
                throw new Error("unable to decrypt data");
            if (e3 !== 16)
              return t5.slice(0, 16 - e3);
          }(this._mode.decrypt(this, t4));
        if (t4)
          throw new Error("data not multiple of block length");
      }, f.prototype.setAutoPadding = function(t4) {
        return this._autopadding = !!t4, this;
      }, l.prototype.add = function(t4) {
        this.cache = i.concat([this.cache, t4]);
      }, l.prototype.get = function(t4) {
        var e3;
        if (t4) {
          if (this.cache.length > 16)
            return e3 = this.cache.slice(0, 16), this.cache = this.cache.slice(16), e3;
        } else if (this.cache.length >= 16)
          return e3 = this.cache.slice(0, 16), this.cache = this.cache.slice(16), e3;
        return null;
      }, l.prototype.flush = function() {
        if (this.cache.length)
          return this.cache;
      }, e2.createDecipher = function(t4, e3) {
        var r3 = o[t4.toLowerCase()];
        if (!r3)
          throw new TypeError("invalid suite type");
        var n2 = u(e3, false, r3.key, r3.iv);
        return h(t4, n2.key, n2.iv);
      }, e2.createDecipheriv = h;
    }, 3604: (t3, e2, r2) => {
      var n = r2(8629), i = r2(1085), o = r2(9732).Buffer, a = r2(5407), s = r2(2533), c = r2(5401), u = r2(1685);
      function f(t4, e3, r3) {
        s.call(this), this._cache = new h, this._cipher = new c.AES(e3), this._prev = o.from(r3), this._mode = t4, this._autopadding = true;
      }
      r2(1679)(f, s), f.prototype._update = function(t4) {
        var e3, r3;
        this._cache.add(t4);
        for (var n2 = [];e3 = this._cache.get(); )
          r3 = this._mode.encrypt(this, e3), n2.push(r3);
        return o.concat(n2);
      };
      var l = o.alloc(16, 16);
      function h() {
        this.cache = o.allocUnsafe(0);
      }
      function p(t4, e3, r3) {
        var s2 = n[t4.toLowerCase()];
        if (!s2)
          throw new TypeError("invalid suite type");
        if (typeof e3 == "string" && (e3 = o.from(e3)), e3.length !== s2.key / 8)
          throw new TypeError("invalid key length " + e3.length);
        if (typeof r3 == "string" && (r3 = o.from(r3)), s2.mode !== "GCM" && r3.length !== s2.iv)
          throw new TypeError("invalid iv length " + r3.length);
        return s2.type === "stream" ? new a(s2.module, e3, r3) : s2.type === "auth" ? new i(s2.module, e3, r3) : new f(s2.module, e3, r3);
      }
      f.prototype._final = function() {
        var t4 = this._cache.flush();
        if (this._autopadding)
          return t4 = this._mode.encrypt(this, t4), this._cipher.scrub(), t4;
        if (!t4.equals(l))
          throw this._cipher.scrub(), new Error("data not multiple of block length");
      }, f.prototype.setAutoPadding = function(t4) {
        return this._autopadding = !!t4, this;
      }, h.prototype.add = function(t4) {
        this.cache = o.concat([this.cache, t4]);
      }, h.prototype.get = function() {
        if (this.cache.length > 15) {
          var t4 = this.cache.slice(0, 16);
          return this.cache = this.cache.slice(16), t4;
        }
        return null;
      }, h.prototype.flush = function() {
        for (var t4 = 16 - this.cache.length, e3 = o.allocUnsafe(t4), r3 = -1;++r3 < t4; )
          e3.writeUInt8(t4, r3);
        return o.concat([this.cache, e3]);
      }, e2.createCipheriv = p, e2.createCipher = function(t4, e3) {
        var r3 = n[t4.toLowerCase()];
        if (!r3)
          throw new TypeError("invalid suite type");
        var i2 = u(e3, false, r3.key, r3.iv);
        return p(t4, i2.key, i2.iv);
      };
    }, 9363: (t3, e2, r2) => {
      var n = r2(9732).Buffer, i = n.alloc(16, 0);
      function o(t4) {
        var e3 = n.allocUnsafe(16);
        return e3.writeUInt32BE(t4[0] >>> 0, 0), e3.writeUInt32BE(t4[1] >>> 0, 4), e3.writeUInt32BE(t4[2] >>> 0, 8), e3.writeUInt32BE(t4[3] >>> 0, 12), e3;
      }
      function a(t4) {
        this.h = t4, this.state = n.alloc(16, 0), this.cache = n.allocUnsafe(0);
      }
      a.prototype.ghash = function(t4) {
        for (var e3 = -1;++e3 < t4.length; )
          this.state[e3] ^= t4[e3];
        this._multiply();
      }, a.prototype._multiply = function() {
        for (var t4, e3, r3, n2 = [(t4 = this.h).readUInt32BE(0), t4.readUInt32BE(4), t4.readUInt32BE(8), t4.readUInt32BE(12)], i2 = [0, 0, 0, 0], a2 = -1;++a2 < 128; ) {
          for (!!(this.state[~~(a2 / 8)] & 1 << 7 - a2 % 8) && (i2[0] ^= n2[0], i2[1] ^= n2[1], i2[2] ^= n2[2], i2[3] ^= n2[3]), r3 = !!(1 & n2[3]), e3 = 3;e3 > 0; e3--)
            n2[e3] = n2[e3] >>> 1 | (1 & n2[e3 - 1]) << 31;
          n2[0] = n2[0] >>> 1, r3 && (n2[0] = n2[0] ^ 225 << 24);
        }
        this.state = o(i2);
      }, a.prototype.update = function(t4) {
        var e3;
        for (this.cache = n.concat([this.cache, t4]);this.cache.length >= 16; )
          e3 = this.cache.slice(0, 16), this.cache = this.cache.slice(16), this.ghash(e3);
      }, a.prototype.final = function(t4, e3) {
        return this.cache.length && this.ghash(n.concat([this.cache, i], 16)), this.ghash(o([0, t4, 0, e3])), this.state;
      }, t3.exports = a;
    }, 9003: (t3) => {
      t3.exports = function(t4) {
        for (var e2, r2 = t4.length;r2--; ) {
          if ((e2 = t4.readUInt8(r2)) !== 255) {
            e2++, t4.writeUInt8(e2, r2);
            break;
          }
          t4.writeUInt8(0, r2);
        }
      };
    }, 5459: (t3, e2, r2) => {
      var n = r2(6876);
      e2.encrypt = function(t4, e3) {
        var r3 = n(e3, t4._prev);
        return t4._prev = t4._cipher.encryptBlock(r3), t4._prev;
      }, e2.decrypt = function(t4, e3) {
        var r3 = t4._prev;
        t4._prev = e3;
        var i = t4._cipher.decryptBlock(e3);
        return n(i, r3);
      };
    }, 4488: (t3, e2, r2) => {
      var n = r2(9732).Buffer, i = r2(6876);
      function o(t4, e3, r3) {
        var o2 = e3.length, a = i(e3, t4._cache);
        return t4._cache = t4._cache.slice(o2), t4._prev = n.concat([t4._prev, r3 ? e3 : a]), a;
      }
      e2.encrypt = function(t4, e3, r3) {
        for (var i2, a = n.allocUnsafe(0);e3.length; ) {
          if (t4._cache.length === 0 && (t4._cache = t4._cipher.encryptBlock(t4._prev), t4._prev = n.allocUnsafe(0)), !(t4._cache.length <= e3.length)) {
            a = n.concat([a, o(t4, e3, r3)]);
            break;
          }
          i2 = t4._cache.length, a = n.concat([a, o(t4, e3.slice(0, i2), r3)]), e3 = e3.slice(i2);
        }
        return a;
      };
    }, 4937: (t3, e2, r2) => {
      var n = r2(9732).Buffer;
      function i(t4, e3, r3) {
        for (var n2, i2, a = -1, s = 0;++a < 8; )
          n2 = e3 & 1 << 7 - a ? 128 : 0, s += (128 & (i2 = t4._cipher.encryptBlock(t4._prev)[0] ^ n2)) >> a % 8, t4._prev = o(t4._prev, r3 ? n2 : i2);
        return s;
      }
      function o(t4, e3) {
        var r3 = t4.length, i2 = -1, o2 = n.allocUnsafe(t4.length);
        for (t4 = n.concat([t4, n.from([e3])]);++i2 < r3; )
          o2[i2] = t4[i2] << 1 | t4[i2 + 1] >> 7;
        return o2;
      }
      e2.encrypt = function(t4, e3, r3) {
        for (var o2 = e3.length, a = n.allocUnsafe(o2), s = -1;++s < o2; )
          a[s] = i(t4, e3[s], r3);
        return a;
      };
    }, 6322: (t3, e2, r2) => {
      var n = r2(9732).Buffer;
      function i(t4, e3, r3) {
        var i2 = t4._cipher.encryptBlock(t4._prev)[0] ^ e3;
        return t4._prev = n.concat([t4._prev.slice(1), n.from([r3 ? e3 : i2])]), i2;
      }
      e2.encrypt = function(t4, e3, r3) {
        for (var o = e3.length, a = n.allocUnsafe(o), s = -1;++s < o; )
          a[s] = i(t4, e3[s], r3);
        return a;
      };
    }, 2538: (t3, e2, r2) => {
      var n = r2(6876), i = r2(9732).Buffer, o = r2(9003);
      function a(t4) {
        var e3 = t4._cipher.encryptBlockRaw(t4._prev);
        return o(t4._prev), e3;
      }
      e2.encrypt = function(t4, e3) {
        var r3 = Math.ceil(e3.length / 16), o2 = t4._cache.length;
        t4._cache = i.concat([t4._cache, i.allocUnsafe(16 * r3)]);
        for (var s = 0;s < r3; s++) {
          var c = a(t4), u = o2 + 16 * s;
          t4._cache.writeUInt32BE(c[0], u + 0), t4._cache.writeUInt32BE(c[1], u + 4), t4._cache.writeUInt32BE(c[2], u + 8), t4._cache.writeUInt32BE(c[3], u + 12);
        }
        var f = t4._cache.slice(0, e3.length);
        return t4._cache = t4._cache.slice(e3.length), n(e3, f);
      };
    }, 9907: (t3, e2) => {
      e2.encrypt = function(t4, e3) {
        return t4._cipher.encryptBlock(e3);
      }, e2.decrypt = function(t4, e3) {
        return t4._cipher.decryptBlock(e3);
      };
    }, 8629: (t3, e2, r2) => {
      var n = { ECB: r2(9907), CBC: r2(5459), CFB: r2(4488), CFB8: r2(6322), CFB1: r2(4937), OFB: r2(4252), CTR: r2(2538), GCM: r2(2538) }, i = r2(3219);
      for (var o in i)
        i[o].module = n[i[o].mode];
      t3.exports = i;
    }, 4252: (t3, e2, r2) => {
      var n = r2(5832).Buffer, i = r2(6876);
      function o(t4) {
        return t4._prev = t4._cipher.encryptBlock(t4._prev), t4._prev;
      }
      e2.encrypt = function(t4, e3) {
        for (;t4._cache.length < e3.length; )
          t4._cache = n.concat([t4._cache, o(t4)]);
        var r3 = t4._cache.slice(0, e3.length);
        return t4._cache = t4._cache.slice(e3.length), i(e3, r3);
      };
    }, 5407: (t3, e2, r2) => {
      var n = r2(5401), i = r2(9732).Buffer, o = r2(2533);
      function a(t4, e3, r3, a2) {
        o.call(this), this._cipher = new n.AES(e3), this._prev = i.from(r3), this._cache = i.allocUnsafe(0), this._secCache = i.allocUnsafe(0), this._decrypt = a2, this._mode = t4;
      }
      r2(1679)(a, o), a.prototype._update = function(t4) {
        return this._mode.encrypt(this, t4, this._decrypt);
      }, a.prototype._final = function() {
        this._cipher.scrub();
      }, t3.exports = a;
    }, 9652: (t3, e2, r2) => {
      var n = r2(8201), i = r2(2098), o = r2(8629), a = r2(3849), s = r2(1685);
      function c(t4, e3, r3) {
        if (t4 = t4.toLowerCase(), o[t4])
          return i.createCipheriv(t4, e3, r3);
        if (a[t4])
          return new n({ key: e3, iv: r3, mode: t4 });
        throw new TypeError("invalid suite type");
      }
      function u(t4, e3, r3) {
        if (t4 = t4.toLowerCase(), o[t4])
          return i.createDecipheriv(t4, e3, r3);
        if (a[t4])
          return new n({ key: e3, iv: r3, mode: t4, decrypt: true });
        throw new TypeError("invalid suite type");
      }
      e2.createCipher = e2.Cipher = function(t4, e3) {
        var r3, n2;
        if (t4 = t4.toLowerCase(), o[t4])
          r3 = o[t4].key, n2 = o[t4].iv;
        else {
          if (!a[t4])
            throw new TypeError("invalid suite type");
          r3 = 8 * a[t4].key, n2 = a[t4].iv;
        }
        var i2 = s(e3, false, r3, n2);
        return c(t4, i2.key, i2.iv);
      }, e2.createCipheriv = e2.Cipheriv = c, e2.createDecipher = e2.Decipher = function(t4, e3) {
        var r3, n2;
        if (t4 = t4.toLowerCase(), o[t4])
          r3 = o[t4].key, n2 = o[t4].iv;
        else {
          if (!a[t4])
            throw new TypeError("invalid suite type");
          r3 = 8 * a[t4].key, n2 = a[t4].iv;
        }
        var i2 = s(e3, false, r3, n2);
        return u(t4, i2.key, i2.iv);
      }, e2.createDecipheriv = e2.Decipheriv = u, e2.listCiphers = e2.getCiphers = function() {
        return Object.keys(a).concat(i.getCiphers());
      };
    }, 8201: (t3, e2, r2) => {
      var n = r2(2533), i = r2(1471), o = r2(1679), a = r2(9732).Buffer, s = { "des-ede3-cbc": i.CBC.instantiate(i.EDE), "des-ede3": i.EDE, "des-ede-cbc": i.CBC.instantiate(i.EDE), "des-ede": i.EDE, "des-cbc": i.CBC.instantiate(i.DES), "des-ecb": i.DES };
      function c(t4) {
        n.call(this);
        var e3, r3 = t4.mode.toLowerCase(), i2 = s[r3];
        e3 = t4.decrypt ? "decrypt" : "encrypt";
        var o2 = t4.key;
        a.isBuffer(o2) || (o2 = a.from(o2)), r3 !== "des-ede" && r3 !== "des-ede-cbc" || (o2 = a.concat([o2, o2.slice(0, 8)]));
        var c2 = t4.iv;
        a.isBuffer(c2) || (c2 = a.from(c2)), this._des = i2.create({ key: o2, iv: c2, type: e3 });
      }
      s.des = s["des-cbc"], s.des3 = s["des-ede3-cbc"], t3.exports = c, o(c, n), c.prototype._update = function(t4) {
        return a.from(this._des.update(t4));
      }, c.prototype._final = function() {
        return a.from(this._des.final());
      };
    }, 3849: (t3, e2) => {
      e2["des-ecb"] = { key: 8, iv: 0 }, e2["des-cbc"] = e2.des = { key: 8, iv: 8 }, e2["des-ede3-cbc"] = e2.des3 = { key: 24, iv: 8 }, e2["des-ede3"] = { key: 24, iv: 0 }, e2["des-ede-cbc"] = { key: 16, iv: 8 }, e2["des-ede"] = { key: 16, iv: 0 };
    }, 1095: (t3, e2, r2) => {
      var n = r2(7799), i = r2(4276), o = r2(9732).Buffer;
      function a(t4) {
        var e3, r3 = t4.modulus.byteLength();
        do {
          e3 = new n(i(r3));
        } while (e3.cmp(t4.modulus) >= 0 || !e3.umod(t4.prime1) || !e3.umod(t4.prime2));
        return e3;
      }
      function s(t4, e3) {
        var r3 = function(t5) {
          var e4 = a(t5);
          return { blinder: e4.toRed(n.mont(t5.modulus)).redPow(new n(t5.publicExponent)).fromRed(), unblinder: e4.invm(t5.modulus) };
        }(e3), i2 = e3.modulus.byteLength(), s2 = new n(t4).mul(r3.blinder).umod(e3.modulus), c = s2.toRed(n.mont(e3.prime1)), u = s2.toRed(n.mont(e3.prime2)), f = e3.coefficient, l = e3.prime1, h = e3.prime2, p = c.redPow(e3.exponent1).fromRed(), d = u.redPow(e3.exponent2).fromRed(), y = p.isub(d).imul(f).umod(l).imul(h);
        return d.iadd(y).imul(r3.unblinder).umod(e3.modulus).toArrayLike(o, "be", i2);
      }
      s.getr = a, t3.exports = s;
    }, 4606: (t3, e2, r2) => {
      t3.exports = r2(2951);
    }, 7937: (t3, e2, r2) => {
      var n = r2(9732).Buffer, i = r2(5833), o = r2(3292), a = r2(1679), s = r2(6620), c = r2(7032), u = r2(2951);
      function f(t4) {
        o.Writable.call(this);
        var e3 = u[t4];
        if (!e3)
          throw new Error("Unknown message digest");
        this._hashType = e3.hash, this._hash = i(e3.hash), this._tag = e3.id, this._signType = e3.sign;
      }
      function l(t4) {
        o.Writable.call(this);
        var e3 = u[t4];
        if (!e3)
          throw new Error("Unknown message digest");
        this._hash = i(e3.hash), this._tag = e3.id, this._signType = e3.sign;
      }
      function h(t4) {
        return new f(t4);
      }
      function p(t4) {
        return new l(t4);
      }
      Object.keys(u).forEach(function(t4) {
        u[t4].id = n.from(u[t4].id, "hex"), u[t4.toLowerCase()] = u[t4];
      }), a(f, o.Writable), f.prototype._write = function(t4, e3, r3) {
        this._hash.update(t4), r3();
      }, f.prototype.update = function(t4, e3) {
        return this._hash.update(typeof t4 == "string" ? n.from(t4, e3) : t4), this;
      }, f.prototype.sign = function(t4, e3) {
        this.end();
        var r3 = this._hash.digest(), n2 = s(r3, t4, this._hashType, this._signType, this._tag);
        return e3 ? n2.toString(e3) : n2;
      }, a(l, o.Writable), l.prototype._write = function(t4, e3, r3) {
        this._hash.update(t4), r3();
      }, l.prototype.update = function(t4, e3) {
        return this._hash.update(typeof t4 == "string" ? n.from(t4, e3) : t4), this;
      }, l.prototype.verify = function(t4, e3, r3) {
        var i2 = typeof e3 == "string" ? n.from(e3, r3) : e3;
        this.end();
        var o2 = this._hash.digest();
        return c(i2, o2, t4, this._signType, this._tag);
      }, t3.exports = { Sign: h, Verify: p, createSign: h, createVerify: p };
    }, 6620: (t3, e2, r2) => {
      var n = r2(9732).Buffer, i = r2(2046), o = r2(1095), a = r2(7312).ec, s = r2(7799), c = r2(5053), u = r2(4589);
      function f(t4, e3, r3, o2) {
        if ((t4 = n.from(t4.toArray())).length < e3.byteLength()) {
          var a2 = n.alloc(e3.byteLength() - t4.length);
          t4 = n.concat([a2, t4]);
        }
        var s2 = r3.length, c2 = function(t5, e4) {
          t5 = (t5 = l(t5, e4)).mod(e4);
          var r4 = n.from(t5.toArray());
          if (r4.length < e4.byteLength()) {
            var i2 = n.alloc(e4.byteLength() - r4.length);
            r4 = n.concat([i2, r4]);
          }
          return r4;
        }(r3, e3), u2 = n.alloc(s2);
        u2.fill(1);
        var f2 = n.alloc(s2);
        return f2 = i(o2, f2).update(u2).update(n.from([0])).update(t4).update(c2).digest(), u2 = i(o2, f2).update(u2).digest(), { k: f2 = i(o2, f2).update(u2).update(n.from([1])).update(t4).update(c2).digest(), v: u2 = i(o2, f2).update(u2).digest() };
      }
      function l(t4, e3) {
        var r3 = new s(t4), n2 = (t4.length << 3) - e3.bitLength();
        return n2 > 0 && r3.ishrn(n2), r3;
      }
      function h(t4, e3, r3) {
        var o2, a2;
        do {
          for (o2 = n.alloc(0);8 * o2.length < t4.bitLength(); )
            e3.v = i(r3, e3.k).update(e3.v).digest(), o2 = n.concat([o2, e3.v]);
          a2 = l(o2, t4), e3.k = i(r3, e3.k).update(e3.v).update(n.from([0])).digest(), e3.v = i(r3, e3.k).update(e3.v).digest();
        } while (a2.cmp(t4) !== -1);
        return a2;
      }
      function p(t4, e3, r3, n2) {
        return t4.toRed(s.mont(r3)).redPow(e3).fromRed().mod(n2);
      }
      t3.exports = function(t4, e3, r3, i2, d) {
        var y = c(e3);
        if (y.curve) {
          if (i2 !== "ecdsa" && i2 !== "ecdsa/rsa")
            throw new Error("wrong private key type");
          return function(t5, e4) {
            var r4 = u[e4.curve.join(".")];
            if (!r4)
              throw new Error("unknown curve " + e4.curve.join("."));
            var i3 = new a(r4).keyFromPrivate(e4.privateKey).sign(t5);
            return n.from(i3.toDER());
          }(t4, y);
        }
        if (y.type === "dsa") {
          if (i2 !== "dsa")
            throw new Error("wrong private key type");
          return function(t5, e4, r4) {
            for (var i3, o2 = e4.params.priv_key, a2 = e4.params.p, c2 = e4.params.q, u2 = e4.params.g, d2 = new s(0), y2 = l(t5, c2).mod(c2), b2 = false, m2 = f(o2, c2, t5, r4);b2 === false; )
              d2 = p(u2, i3 = h(c2, m2, r4), a2, c2), (b2 = i3.invm(c2).imul(y2.add(o2.mul(d2))).mod(c2)).cmpn(0) === 0 && (b2 = false, d2 = new s(0));
            return function(t6, e5) {
              t6 = t6.toArray(), e5 = e5.toArray(), 128 & t6[0] && (t6 = [0].concat(t6)), 128 & e5[0] && (e5 = [0].concat(e5));
              var r5 = [48, t6.length + e5.length + 4, 2, t6.length];
              return r5 = r5.concat(t6, [2, e5.length], e5), n.from(r5);
            }(d2, b2);
          }(t4, y, r3);
        }
        if (i2 !== "rsa" && i2 !== "ecdsa/rsa")
          throw new Error("wrong private key type");
        if (e3.padding !== undefined && e3.padding !== 1)
          throw new Error("illegal or unsupported padding mode");
        t4 = n.concat([d, t4]);
        for (var b = y.modulus.byteLength(), m = [0, 1];t4.length + m.length + 1 < b; )
          m.push(255);
        m.push(0);
        for (var v = -1;++v < t4.length; )
          m.push(t4[v]);
        return o(m, y);
      }, t3.exports.getKey = f, t3.exports.makeKey = h;
    }, 7032: (t3, e2, r2) => {
      var n = r2(9732).Buffer, i = r2(7799), o = r2(7312).ec, a = r2(5053), s = r2(4589);
      function c(t4, e3) {
        if (t4.cmpn(0) <= 0)
          throw new Error("invalid sig");
        if (t4.cmp(e3) >= 0)
          throw new Error("invalid sig");
      }
      t3.exports = function(t4, e3, r3, u, f) {
        var l = a(r3);
        if (l.type === "ec") {
          if (u !== "ecdsa" && u !== "ecdsa/rsa")
            throw new Error("wrong public key type");
          return function(t5, e4, r4) {
            var n2 = s[r4.data.algorithm.curve.join(".")];
            if (!n2)
              throw new Error("unknown curve " + r4.data.algorithm.curve.join("."));
            var i2 = new o(n2), a2 = r4.data.subjectPrivateKey.data;
            return i2.verify(e4, t5, a2);
          }(t4, e3, l);
        }
        if (l.type === "dsa") {
          if (u !== "dsa")
            throw new Error("wrong public key type");
          return function(t5, e4, r4) {
            var n2 = r4.data.p, o2 = r4.data.q, s2 = r4.data.g, u2 = r4.data.pub_key, f2 = a.signature.decode(t5, "der"), l2 = f2.s, h2 = f2.r;
            c(l2, o2), c(h2, o2);
            var p2 = i.mont(n2), d2 = l2.invm(o2);
            return s2.toRed(p2).redPow(new i(e4).mul(d2).mod(o2)).fromRed().mul(u2.toRed(p2).redPow(h2.mul(d2).mod(o2)).fromRed()).mod(n2).mod(o2).cmp(h2) === 0;
          }(t4, e3, l);
        }
        if (u !== "rsa" && u !== "ecdsa/rsa")
          throw new Error("wrong public key type");
        e3 = n.concat([f, e3]);
        for (var h = l.modulus.byteLength(), p = [1], d = 0;e3.length + p.length + 2 < h; )
          p.push(255), d += 1;
        p.push(0);
        for (var y = -1;++y < e3.length; )
          p.push(e3[y]);
        p = n.from(p);
        var b = i.mont(l.modulus);
        t4 = (t4 = new i(t4).toRed(b)).redPow(new i(l.publicExponent)), t4 = n.from(t4.fromRed().toArray());
        var m = d < 8 ? 1 : 0;
        for (h = Math.min(t4.length, p.length), t4.length !== p.length && (m = 1), y = -1;++y < h; )
          m |= t4[y] ^ p[y];
        return m === 0;
      };
    }, 6876: (t3, e2, r2) => {
      var n = r2(5832).Buffer;
      t3.exports = function(t4, e3) {
        for (var r3 = Math.min(t4.length, e3.length), i = new n(r3), o = 0;o < r3; ++o)
          i[o] = t4[o] ^ e3[o];
        return i;
      };
    }, 5832: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      var i = r2(6775), o = r2(2486), a = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
      e2.Buffer = u, e2.SlowBuffer = function(t4) {
        return +t4 != t4 && (t4 = 0), u.alloc(+t4);
      }, e2.INSPECT_MAX_BYTES = 50;
      var s = 2147483647;
      function c(t4) {
        if (t4 > s)
          throw new RangeError('The value "' + t4 + '" is invalid for option "size"');
        var e3 = new Uint8Array(t4);
        return Object.setPrototypeOf(e3, u.prototype), e3;
      }
      function u(t4, e3, r3) {
        if (typeof t4 == "number") {
          if (typeof e3 == "string")
            throw new TypeError('The "string" argument must be of type string. Received type number');
          return h(t4);
        }
        return f(t4, e3, r3);
      }
      function f(t4, e3, r3) {
        if (typeof t4 == "string")
          return function(t5, e4) {
            if (typeof e4 == "string" && e4 !== "" || (e4 = "utf8"), !u.isEncoding(e4))
              throw new TypeError("Unknown encoding: " + e4);
            var r4 = 0 | b(t5, e4), n2 = c(r4), i3 = n2.write(t5, e4);
            return i3 !== r4 && (n2 = n2.slice(0, i3)), n2;
          }(t4, e3);
        if (ArrayBuffer.isView(t4))
          return function(t5) {
            if (F(t5, Uint8Array)) {
              var e4 = new Uint8Array(t5);
              return d(e4.buffer, e4.byteOffset, e4.byteLength);
            }
            return p(t5);
          }(t4);
        if (t4 == null)
          throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + n(t4));
        if (F(t4, ArrayBuffer) || t4 && F(t4.buffer, ArrayBuffer))
          return d(t4, e3, r3);
        if (typeof SharedArrayBuffer != "undefined" && (F(t4, SharedArrayBuffer) || t4 && F(t4.buffer, SharedArrayBuffer)))
          return d(t4, e3, r3);
        if (typeof t4 == "number")
          throw new TypeError('The "value" argument must not be of type number. Received type number');
        var i2 = t4.valueOf && t4.valueOf();
        if (i2 != null && i2 !== t4)
          return u.from(i2, e3, r3);
        var o2 = function(t5) {
          if (u.isBuffer(t5)) {
            var e4 = 0 | y(t5.length), r4 = c(e4);
            return r4.length === 0 || t5.copy(r4, 0, 0, e4), r4;
          }
          return t5.length !== undefined ? typeof t5.length != "number" || V(t5.length) ? c(0) : p(t5) : t5.type === "Buffer" && Array.isArray(t5.data) ? p(t5.data) : undefined;
        }(t4);
        if (o2)
          return o2;
        if (typeof Symbol != "undefined" && Symbol.toPrimitive != null && typeof t4[Symbol.toPrimitive] == "function")
          return u.from(t4[Symbol.toPrimitive]("string"), e3, r3);
        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + n(t4));
      }
      function l(t4) {
        if (typeof t4 != "number")
          throw new TypeError('"size" argument must be of type number');
        if (t4 < 0)
          throw new RangeError('The value "' + t4 + '" is invalid for option "size"');
      }
      function h(t4) {
        return l(t4), c(t4 < 0 ? 0 : 0 | y(t4));
      }
      function p(t4) {
        for (var e3 = t4.length < 0 ? 0 : 0 | y(t4.length), r3 = c(e3), n2 = 0;n2 < e3; n2 += 1)
          r3[n2] = 255 & t4[n2];
        return r3;
      }
      function d(t4, e3, r3) {
        if (e3 < 0 || t4.byteLength < e3)
          throw new RangeError('"offset" is outside of buffer bounds');
        if (t4.byteLength < e3 + (r3 || 0))
          throw new RangeError('"length" is outside of buffer bounds');
        var n2;
        return n2 = e3 === undefined && r3 === undefined ? new Uint8Array(t4) : r3 === undefined ? new Uint8Array(t4, e3) : new Uint8Array(t4, e3, r3), Object.setPrototypeOf(n2, u.prototype), n2;
      }
      function y(t4) {
        if (t4 >= s)
          throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + s.toString(16) + " bytes");
        return 0 | t4;
      }
      function b(t4, e3) {
        if (u.isBuffer(t4))
          return t4.length;
        if (ArrayBuffer.isView(t4) || F(t4, ArrayBuffer))
          return t4.byteLength;
        if (typeof t4 != "string")
          throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + n(t4));
        var r3 = t4.length, i2 = arguments.length > 2 && arguments[2] === true;
        if (!i2 && r3 === 0)
          return 0;
        for (var o2 = false;; )
          switch (e3) {
            case "ascii":
            case "latin1":
            case "binary":
              return r3;
            case "utf8":
            case "utf-8":
              return C(t4).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return 2 * r3;
            case "hex":
              return r3 >>> 1;
            case "base64":
              return U(t4).length;
            default:
              if (o2)
                return i2 ? -1 : C(t4).length;
              e3 = ("" + e3).toLowerCase(), o2 = true;
          }
      }
      function m(t4, e3, r3) {
        var n2 = false;
        if ((e3 === undefined || e3 < 0) && (e3 = 0), e3 > this.length)
          return "";
        if ((r3 === undefined || r3 > this.length) && (r3 = this.length), r3 <= 0)
          return "";
        if ((r3 >>>= 0) <= (e3 >>>= 0))
          return "";
        for (t4 || (t4 = "utf8");; )
          switch (t4) {
            case "hex":
              return M(this, e3, r3);
            case "utf8":
            case "utf-8":
              return E(this, e3, r3);
            case "ascii":
              return P(this, e3, r3);
            case "latin1":
            case "binary":
              return k(this, e3, r3);
            case "base64":
              return A(this, e3, r3);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return I(this, e3, r3);
            default:
              if (n2)
                throw new TypeError("Unknown encoding: " + t4);
              t4 = (t4 + "").toLowerCase(), n2 = true;
          }
      }
      function v(t4, e3, r3) {
        var n2 = t4[e3];
        t4[e3] = t4[r3], t4[r3] = n2;
      }
      function g(t4, e3, r3, n2, i2) {
        if (t4.length === 0)
          return -1;
        if (typeof r3 == "string" ? (n2 = r3, r3 = 0) : r3 > 2147483647 ? r3 = 2147483647 : r3 < -2147483648 && (r3 = -2147483648), V(r3 = +r3) && (r3 = i2 ? 0 : t4.length - 1), r3 < 0 && (r3 = t4.length + r3), r3 >= t4.length) {
          if (i2)
            return -1;
          r3 = t4.length - 1;
        } else if (r3 < 0) {
          if (!i2)
            return -1;
          r3 = 0;
        }
        if (typeof e3 == "string" && (e3 = u.from(e3, n2)), u.isBuffer(e3))
          return e3.length === 0 ? -1 : _(t4, e3, r3, n2, i2);
        if (typeof e3 == "number")
          return e3 &= 255, typeof Uint8Array.prototype.indexOf == "function" ? i2 ? Uint8Array.prototype.indexOf.call(t4, e3, r3) : Uint8Array.prototype.lastIndexOf.call(t4, e3, r3) : _(t4, [e3], r3, n2, i2);
        throw new TypeError("val must be string, number or Buffer");
      }
      function _(t4, e3, r3, n2, i2) {
        var o2, a2 = 1, s2 = t4.length, c2 = e3.length;
        if (n2 !== undefined && ((n2 = String(n2).toLowerCase()) === "ucs2" || n2 === "ucs-2" || n2 === "utf16le" || n2 === "utf-16le")) {
          if (t4.length < 2 || e3.length < 2)
            return -1;
          a2 = 2, s2 /= 2, c2 /= 2, r3 /= 2;
        }
        function u2(t5, e4) {
          return a2 === 1 ? t5[e4] : t5.readUInt16BE(e4 * a2);
        }
        if (i2) {
          var f2 = -1;
          for (o2 = r3;o2 < s2; o2++)
            if (u2(t4, o2) === u2(e3, f2 === -1 ? 0 : o2 - f2)) {
              if (f2 === -1 && (f2 = o2), o2 - f2 + 1 === c2)
                return f2 * a2;
            } else
              f2 !== -1 && (o2 -= o2 - f2), f2 = -1;
        } else
          for (r3 + c2 > s2 && (r3 = s2 - c2), o2 = r3;o2 >= 0; o2--) {
            for (var l2 = true, h2 = 0;h2 < c2; h2++)
              if (u2(t4, o2 + h2) !== u2(e3, h2)) {
                l2 = false;
                break;
              }
            if (l2)
              return o2;
          }
        return -1;
      }
      function w(t4, e3, r3, n2) {
        r3 = Number(r3) || 0;
        var i2 = t4.length - r3;
        n2 ? (n2 = Number(n2)) > i2 && (n2 = i2) : n2 = i2;
        var o2 = e3.length;
        n2 > o2 / 2 && (n2 = o2 / 2);
        for (var a2 = 0;a2 < n2; ++a2) {
          var s2 = parseInt(e3.substr(2 * a2, 2), 16);
          if (V(s2))
            return a2;
          t4[r3 + a2] = s2;
        }
        return a2;
      }
      function S(t4, e3, r3, n2) {
        return q(C(e3, t4.length - r3), t4, r3, n2);
      }
      function O(t4, e3, r3, n2) {
        return q(function(t5) {
          for (var e4 = [], r4 = 0;r4 < t5.length; ++r4)
            e4.push(255 & t5.charCodeAt(r4));
          return e4;
        }(e3), t4, r3, n2);
      }
      function j(t4, e3, r3, n2) {
        return q(U(e3), t4, r3, n2);
      }
      function $(t4, e3, r3, n2) {
        return q(function(t5, e4) {
          for (var r4, n3, i2, o2 = [], a2 = 0;a2 < t5.length && !((e4 -= 2) < 0); ++a2)
            n3 = (r4 = t5.charCodeAt(a2)) >> 8, i2 = r4 % 256, o2.push(i2), o2.push(n3);
          return o2;
        }(e3, t4.length - r3), t4, r3, n2);
      }
      function A(t4, e3, r3) {
        return e3 === 0 && r3 === t4.length ? i.fromByteArray(t4) : i.fromByteArray(t4.slice(e3, r3));
      }
      function E(t4, e3, r3) {
        r3 = Math.min(t4.length, r3);
        for (var n2 = [], i2 = e3;i2 < r3; ) {
          var o2, a2, s2, c2, u2 = t4[i2], f2 = null, l2 = u2 > 239 ? 4 : u2 > 223 ? 3 : u2 > 191 ? 2 : 1;
          if (i2 + l2 <= r3)
            switch (l2) {
              case 1:
                u2 < 128 && (f2 = u2);
                break;
              case 2:
                (192 & (o2 = t4[i2 + 1])) == 128 && (c2 = (31 & u2) << 6 | 63 & o2) > 127 && (f2 = c2);
                break;
              case 3:
                o2 = t4[i2 + 1], a2 = t4[i2 + 2], (192 & o2) == 128 && (192 & a2) == 128 && (c2 = (15 & u2) << 12 | (63 & o2) << 6 | 63 & a2) > 2047 && (c2 < 55296 || c2 > 57343) && (f2 = c2);
                break;
              case 4:
                o2 = t4[i2 + 1], a2 = t4[i2 + 2], s2 = t4[i2 + 3], (192 & o2) == 128 && (192 & a2) == 128 && (192 & s2) == 128 && (c2 = (15 & u2) << 18 | (63 & o2) << 12 | (63 & a2) << 6 | 63 & s2) > 65535 && c2 < 1114112 && (f2 = c2);
            }
          f2 === null ? (f2 = 65533, l2 = 1) : f2 > 65535 && (f2 -= 65536, n2.push(f2 >>> 10 & 1023 | 55296), f2 = 56320 | 1023 & f2), n2.push(f2), i2 += l2;
        }
        return function(t5) {
          var e4 = t5.length;
          if (e4 <= x)
            return String.fromCharCode.apply(String, t5);
          for (var r4 = "", n3 = 0;n3 < e4; )
            r4 += String.fromCharCode.apply(String, t5.slice(n3, n3 += x));
          return r4;
        }(n2);
      }
      e2.kMaxLength = s, u.TYPED_ARRAY_SUPPORT = function() {
        try {
          var t4 = new Uint8Array(1), e3 = { foo: function() {
            return 42;
          } };
          return Object.setPrototypeOf(e3, Uint8Array.prototype), Object.setPrototypeOf(t4, e3), t4.foo() === 42;
        } catch (t5) {
          return false;
        }
      }(), u.TYPED_ARRAY_SUPPORT || typeof console == "undefined" || typeof console.error != "function" || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(u.prototype, "parent", { enumerable: true, get: function() {
        if (u.isBuffer(this))
          return this.buffer;
      } }), Object.defineProperty(u.prototype, "offset", { enumerable: true, get: function() {
        if (u.isBuffer(this))
          return this.byteOffset;
      } }), u.poolSize = 8192, u.from = function(t4, e3, r3) {
        return f(t4, e3, r3);
      }, Object.setPrototypeOf(u.prototype, Uint8Array.prototype), Object.setPrototypeOf(u, Uint8Array), u.alloc = function(t4, e3, r3) {
        return function(t5, e4, r4) {
          return l(t5), t5 <= 0 ? c(t5) : e4 !== undefined ? typeof r4 == "string" ? c(t5).fill(e4, r4) : c(t5).fill(e4) : c(t5);
        }(t4, e3, r3);
      }, u.allocUnsafe = function(t4) {
        return h(t4);
      }, u.allocUnsafeSlow = function(t4) {
        return h(t4);
      }, u.isBuffer = function(t4) {
        return t4 != null && t4._isBuffer === true && t4 !== u.prototype;
      }, u.compare = function(t4, e3) {
        if (F(t4, Uint8Array) && (t4 = u.from(t4, t4.offset, t4.byteLength)), F(e3, Uint8Array) && (e3 = u.from(e3, e3.offset, e3.byteLength)), !u.isBuffer(t4) || !u.isBuffer(e3))
          throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
        if (t4 === e3)
          return 0;
        for (var r3 = t4.length, n2 = e3.length, i2 = 0, o2 = Math.min(r3, n2);i2 < o2; ++i2)
          if (t4[i2] !== e3[i2]) {
            r3 = t4[i2], n2 = e3[i2];
            break;
          }
        return r3 < n2 ? -1 : n2 < r3 ? 1 : 0;
      }, u.isEncoding = function(t4) {
        switch (String(t4).toLowerCase()) {
          case "hex":
          case "utf8":
          case "utf-8":
          case "ascii":
          case "latin1":
          case "binary":
          case "base64":
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return true;
          default:
            return false;
        }
      }, u.concat = function(t4, e3) {
        if (!Array.isArray(t4))
          throw new TypeError('"list" argument must be an Array of Buffers');
        if (t4.length === 0)
          return u.alloc(0);
        var r3;
        if (e3 === undefined)
          for (e3 = 0, r3 = 0;r3 < t4.length; ++r3)
            e3 += t4[r3].length;
        var n2 = u.allocUnsafe(e3), i2 = 0;
        for (r3 = 0;r3 < t4.length; ++r3) {
          var o2 = t4[r3];
          if (F(o2, Uint8Array))
            i2 + o2.length > n2.length ? u.from(o2).copy(n2, i2) : Uint8Array.prototype.set.call(n2, o2, i2);
          else {
            if (!u.isBuffer(o2))
              throw new TypeError('"list" argument must be an Array of Buffers');
            o2.copy(n2, i2);
          }
          i2 += o2.length;
        }
        return n2;
      }, u.byteLength = b, u.prototype._isBuffer = true, u.prototype.swap16 = function() {
        var t4 = this.length;
        if (t4 % 2 != 0)
          throw new RangeError("Buffer size must be a multiple of 16-bits");
        for (var e3 = 0;e3 < t4; e3 += 2)
          v(this, e3, e3 + 1);
        return this;
      }, u.prototype.swap32 = function() {
        var t4 = this.length;
        if (t4 % 4 != 0)
          throw new RangeError("Buffer size must be a multiple of 32-bits");
        for (var e3 = 0;e3 < t4; e3 += 4)
          v(this, e3, e3 + 3), v(this, e3 + 1, e3 + 2);
        return this;
      }, u.prototype.swap64 = function() {
        var t4 = this.length;
        if (t4 % 8 != 0)
          throw new RangeError("Buffer size must be a multiple of 64-bits");
        for (var e3 = 0;e3 < t4; e3 += 8)
          v(this, e3, e3 + 7), v(this, e3 + 1, e3 + 6), v(this, e3 + 2, e3 + 5), v(this, e3 + 3, e3 + 4);
        return this;
      }, u.prototype.toString = function() {
        var t4 = this.length;
        return t4 === 0 ? "" : arguments.length === 0 ? E(this, 0, t4) : m.apply(this, arguments);
      }, u.prototype.toLocaleString = u.prototype.toString, u.prototype.equals = function(t4) {
        if (!u.isBuffer(t4))
          throw new TypeError("Argument must be a Buffer");
        return this === t4 || u.compare(this, t4) === 0;
      }, u.prototype.inspect = function() {
        var t4 = "", r3 = e2.INSPECT_MAX_BYTES;
        return t4 = this.toString("hex", 0, r3).replace(/(.{2})/g, "$1 ").trim(), this.length > r3 && (t4 += " ... "), "<Buffer " + t4 + ">";
      }, a && (u.prototype[a] = u.prototype.inspect), u.prototype.compare = function(t4, e3, r3, i2, o2) {
        if (F(t4, Uint8Array) && (t4 = u.from(t4, t4.offset, t4.byteLength)), !u.isBuffer(t4))
          throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + n(t4));
        if (e3 === undefined && (e3 = 0), r3 === undefined && (r3 = t4 ? t4.length : 0), i2 === undefined && (i2 = 0), o2 === undefined && (o2 = this.length), e3 < 0 || r3 > t4.length || i2 < 0 || o2 > this.length)
          throw new RangeError("out of range index");
        if (i2 >= o2 && e3 >= r3)
          return 0;
        if (i2 >= o2)
          return -1;
        if (e3 >= r3)
          return 1;
        if (this === t4)
          return 0;
        for (var a2 = (o2 >>>= 0) - (i2 >>>= 0), s2 = (r3 >>>= 0) - (e3 >>>= 0), c2 = Math.min(a2, s2), f2 = this.slice(i2, o2), l2 = t4.slice(e3, r3), h2 = 0;h2 < c2; ++h2)
          if (f2[h2] !== l2[h2]) {
            a2 = f2[h2], s2 = l2[h2];
            break;
          }
        return a2 < s2 ? -1 : s2 < a2 ? 1 : 0;
      }, u.prototype.includes = function(t4, e3, r3) {
        return this.indexOf(t4, e3, r3) !== -1;
      }, u.prototype.indexOf = function(t4, e3, r3) {
        return g(this, t4, e3, r3, true);
      }, u.prototype.lastIndexOf = function(t4, e3, r3) {
        return g(this, t4, e3, r3, false);
      }, u.prototype.write = function(t4, e3, r3, n2) {
        if (e3 === undefined)
          n2 = "utf8", r3 = this.length, e3 = 0;
        else if (r3 === undefined && typeof e3 == "string")
          n2 = e3, r3 = this.length, e3 = 0;
        else {
          if (!isFinite(e3))
            throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
          e3 >>>= 0, isFinite(r3) ? (r3 >>>= 0, n2 === undefined && (n2 = "utf8")) : (n2 = r3, r3 = undefined);
        }
        var i2 = this.length - e3;
        if ((r3 === undefined || r3 > i2) && (r3 = i2), t4.length > 0 && (r3 < 0 || e3 < 0) || e3 > this.length)
          throw new RangeError("Attempt to write outside buffer bounds");
        n2 || (n2 = "utf8");
        for (var o2 = false;; )
          switch (n2) {
            case "hex":
              return w(this, t4, e3, r3);
            case "utf8":
            case "utf-8":
              return S(this, t4, e3, r3);
            case "ascii":
            case "latin1":
            case "binary":
              return O(this, t4, e3, r3);
            case "base64":
              return j(this, t4, e3, r3);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return $(this, t4, e3, r3);
            default:
              if (o2)
                throw new TypeError("Unknown encoding: " + n2);
              n2 = ("" + n2).toLowerCase(), o2 = true;
          }
      }, u.prototype.toJSON = function() {
        return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
      };
      var x = 4096;
      function P(t4, e3, r3) {
        var n2 = "";
        r3 = Math.min(t4.length, r3);
        for (var i2 = e3;i2 < r3; ++i2)
          n2 += String.fromCharCode(127 & t4[i2]);
        return n2;
      }
      function k(t4, e3, r3) {
        var n2 = "";
        r3 = Math.min(t4.length, r3);
        for (var i2 = e3;i2 < r3; ++i2)
          n2 += String.fromCharCode(t4[i2]);
        return n2;
      }
      function M(t4, e3, r3) {
        var n2 = t4.length;
        (!e3 || e3 < 0) && (e3 = 0), (!r3 || r3 < 0 || r3 > n2) && (r3 = n2);
        for (var i2 = "", o2 = e3;o2 < r3; ++o2)
          i2 += z[t4[o2]];
        return i2;
      }
      function I(t4, e3, r3) {
        for (var n2 = t4.slice(e3, r3), i2 = "", o2 = 0;o2 < n2.length - 1; o2 += 2)
          i2 += String.fromCharCode(n2[o2] + 256 * n2[o2 + 1]);
        return i2;
      }
      function T(t4, e3, r3) {
        if (t4 % 1 != 0 || t4 < 0)
          throw new RangeError("offset is not uint");
        if (t4 + e3 > r3)
          throw new RangeError("Trying to access beyond buffer length");
      }
      function B(t4, e3, r3, n2, i2, o2) {
        if (!u.isBuffer(t4))
          throw new TypeError('"buffer" argument must be a Buffer instance');
        if (e3 > i2 || e3 < o2)
          throw new RangeError('"value" argument is out of bounds');
        if (r3 + n2 > t4.length)
          throw new RangeError("Index out of range");
      }
      function R(t4, e3, r3, n2, i2, o2) {
        if (r3 + n2 > t4.length)
          throw new RangeError("Index out of range");
        if (r3 < 0)
          throw new RangeError("Index out of range");
      }
      function N(t4, e3, r3, n2, i2) {
        return e3 = +e3, r3 >>>= 0, i2 || R(t4, 0, r3, 4), o.write(t4, e3, r3, n2, 23, 4), r3 + 4;
      }
      function D(t4, e3, r3, n2, i2) {
        return e3 = +e3, r3 >>>= 0, i2 || R(t4, 0, r3, 8), o.write(t4, e3, r3, n2, 52, 8), r3 + 8;
      }
      u.prototype.slice = function(t4, e3) {
        var r3 = this.length;
        (t4 = ~~t4) < 0 ? (t4 += r3) < 0 && (t4 = 0) : t4 > r3 && (t4 = r3), (e3 = e3 === undefined ? r3 : ~~e3) < 0 ? (e3 += r3) < 0 && (e3 = 0) : e3 > r3 && (e3 = r3), e3 < t4 && (e3 = t4);
        var n2 = this.subarray(t4, e3);
        return Object.setPrototypeOf(n2, u.prototype), n2;
      }, u.prototype.readUintLE = u.prototype.readUIntLE = function(t4, e3, r3) {
        t4 >>>= 0, e3 >>>= 0, r3 || T(t4, e3, this.length);
        for (var n2 = this[t4], i2 = 1, o2 = 0;++o2 < e3 && (i2 *= 256); )
          n2 += this[t4 + o2] * i2;
        return n2;
      }, u.prototype.readUintBE = u.prototype.readUIntBE = function(t4, e3, r3) {
        t4 >>>= 0, e3 >>>= 0, r3 || T(t4, e3, this.length);
        for (var n2 = this[t4 + --e3], i2 = 1;e3 > 0 && (i2 *= 256); )
          n2 += this[t4 + --e3] * i2;
        return n2;
      }, u.prototype.readUint8 = u.prototype.readUInt8 = function(t4, e3) {
        return t4 >>>= 0, e3 || T(t4, 1, this.length), this[t4];
      }, u.prototype.readUint16LE = u.prototype.readUInt16LE = function(t4, e3) {
        return t4 >>>= 0, e3 || T(t4, 2, this.length), this[t4] | this[t4 + 1] << 8;
      }, u.prototype.readUint16BE = u.prototype.readUInt16BE = function(t4, e3) {
        return t4 >>>= 0, e3 || T(t4, 2, this.length), this[t4] << 8 | this[t4 + 1];
      }, u.prototype.readUint32LE = u.prototype.readUInt32LE = function(t4, e3) {
        return t4 >>>= 0, e3 || T(t4, 4, this.length), (this[t4] | this[t4 + 1] << 8 | this[t4 + 2] << 16) + 16777216 * this[t4 + 3];
      }, u.prototype.readUint32BE = u.prototype.readUInt32BE = function(t4, e3) {
        return t4 >>>= 0, e3 || T(t4, 4, this.length), 16777216 * this[t4] + (this[t4 + 1] << 16 | this[t4 + 2] << 8 | this[t4 + 3]);
      }, u.prototype.readIntLE = function(t4, e3, r3) {
        t4 >>>= 0, e3 >>>= 0, r3 || T(t4, e3, this.length);
        for (var n2 = this[t4], i2 = 1, o2 = 0;++o2 < e3 && (i2 *= 256); )
          n2 += this[t4 + o2] * i2;
        return n2 >= (i2 *= 128) && (n2 -= Math.pow(2, 8 * e3)), n2;
      }, u.prototype.readIntBE = function(t4, e3, r3) {
        t4 >>>= 0, e3 >>>= 0, r3 || T(t4, e3, this.length);
        for (var n2 = e3, i2 = 1, o2 = this[t4 + --n2];n2 > 0 && (i2 *= 256); )
          o2 += this[t4 + --n2] * i2;
        return o2 >= (i2 *= 128) && (o2 -= Math.pow(2, 8 * e3)), o2;
      }, u.prototype.readInt8 = function(t4, e3) {
        return t4 >>>= 0, e3 || T(t4, 1, this.length), 128 & this[t4] ? -1 * (255 - this[t4] + 1) : this[t4];
      }, u.prototype.readInt16LE = function(t4, e3) {
        t4 >>>= 0, e3 || T(t4, 2, this.length);
        var r3 = this[t4] | this[t4 + 1] << 8;
        return 32768 & r3 ? 4294901760 | r3 : r3;
      }, u.prototype.readInt16BE = function(t4, e3) {
        t4 >>>= 0, e3 || T(t4, 2, this.length);
        var r3 = this[t4 + 1] | this[t4] << 8;
        return 32768 & r3 ? 4294901760 | r3 : r3;
      }, u.prototype.readInt32LE = function(t4, e3) {
        return t4 >>>= 0, e3 || T(t4, 4, this.length), this[t4] | this[t4 + 1] << 8 | this[t4 + 2] << 16 | this[t4 + 3] << 24;
      }, u.prototype.readInt32BE = function(t4, e3) {
        return t4 >>>= 0, e3 || T(t4, 4, this.length), this[t4] << 24 | this[t4 + 1] << 16 | this[t4 + 2] << 8 | this[t4 + 3];
      }, u.prototype.readFloatLE = function(t4, e3) {
        return t4 >>>= 0, e3 || T(t4, 4, this.length), o.read(this, t4, true, 23, 4);
      }, u.prototype.readFloatBE = function(t4, e3) {
        return t4 >>>= 0, e3 || T(t4, 4, this.length), o.read(this, t4, false, 23, 4);
      }, u.prototype.readDoubleLE = function(t4, e3) {
        return t4 >>>= 0, e3 || T(t4, 8, this.length), o.read(this, t4, true, 52, 8);
      }, u.prototype.readDoubleBE = function(t4, e3) {
        return t4 >>>= 0, e3 || T(t4, 8, this.length), o.read(this, t4, false, 52, 8);
      }, u.prototype.writeUintLE = u.prototype.writeUIntLE = function(t4, e3, r3, n2) {
        t4 = +t4, e3 >>>= 0, r3 >>>= 0, n2 || B(this, t4, e3, r3, Math.pow(2, 8 * r3) - 1, 0);
        var i2 = 1, o2 = 0;
        for (this[e3] = 255 & t4;++o2 < r3 && (i2 *= 256); )
          this[e3 + o2] = t4 / i2 & 255;
        return e3 + r3;
      }, u.prototype.writeUintBE = u.prototype.writeUIntBE = function(t4, e3, r3, n2) {
        t4 = +t4, e3 >>>= 0, r3 >>>= 0, n2 || B(this, t4, e3, r3, Math.pow(2, 8 * r3) - 1, 0);
        var i2 = r3 - 1, o2 = 1;
        for (this[e3 + i2] = 255 & t4;--i2 >= 0 && (o2 *= 256); )
          this[e3 + i2] = t4 / o2 & 255;
        return e3 + r3;
      }, u.prototype.writeUint8 = u.prototype.writeUInt8 = function(t4, e3, r3) {
        return t4 = +t4, e3 >>>= 0, r3 || B(this, t4, e3, 1, 255, 0), this[e3] = 255 & t4, e3 + 1;
      }, u.prototype.writeUint16LE = u.prototype.writeUInt16LE = function(t4, e3, r3) {
        return t4 = +t4, e3 >>>= 0, r3 || B(this, t4, e3, 2, 65535, 0), this[e3] = 255 & t4, this[e3 + 1] = t4 >>> 8, e3 + 2;
      }, u.prototype.writeUint16BE = u.prototype.writeUInt16BE = function(t4, e3, r3) {
        return t4 = +t4, e3 >>>= 0, r3 || B(this, t4, e3, 2, 65535, 0), this[e3] = t4 >>> 8, this[e3 + 1] = 255 & t4, e3 + 2;
      }, u.prototype.writeUint32LE = u.prototype.writeUInt32LE = function(t4, e3, r3) {
        return t4 = +t4, e3 >>>= 0, r3 || B(this, t4, e3, 4, 4294967295, 0), this[e3 + 3] = t4 >>> 24, this[e3 + 2] = t4 >>> 16, this[e3 + 1] = t4 >>> 8, this[e3] = 255 & t4, e3 + 4;
      }, u.prototype.writeUint32BE = u.prototype.writeUInt32BE = function(t4, e3, r3) {
        return t4 = +t4, e3 >>>= 0, r3 || B(this, t4, e3, 4, 4294967295, 0), this[e3] = t4 >>> 24, this[e3 + 1] = t4 >>> 16, this[e3 + 2] = t4 >>> 8, this[e3 + 3] = 255 & t4, e3 + 4;
      }, u.prototype.writeIntLE = function(t4, e3, r3, n2) {
        if (t4 = +t4, e3 >>>= 0, !n2) {
          var i2 = Math.pow(2, 8 * r3 - 1);
          B(this, t4, e3, r3, i2 - 1, -i2);
        }
        var o2 = 0, a2 = 1, s2 = 0;
        for (this[e3] = 255 & t4;++o2 < r3 && (a2 *= 256); )
          t4 < 0 && s2 === 0 && this[e3 + o2 - 1] !== 0 && (s2 = 1), this[e3 + o2] = (t4 / a2 | 0) - s2 & 255;
        return e3 + r3;
      }, u.prototype.writeIntBE = function(t4, e3, r3, n2) {
        if (t4 = +t4, e3 >>>= 0, !n2) {
          var i2 = Math.pow(2, 8 * r3 - 1);
          B(this, t4, e3, r3, i2 - 1, -i2);
        }
        var o2 = r3 - 1, a2 = 1, s2 = 0;
        for (this[e3 + o2] = 255 & t4;--o2 >= 0 && (a2 *= 256); )
          t4 < 0 && s2 === 0 && this[e3 + o2 + 1] !== 0 && (s2 = 1), this[e3 + o2] = (t4 / a2 | 0) - s2 & 255;
        return e3 + r3;
      }, u.prototype.writeInt8 = function(t4, e3, r3) {
        return t4 = +t4, e3 >>>= 0, r3 || B(this, t4, e3, 1, 127, -128), t4 < 0 && (t4 = 255 + t4 + 1), this[e3] = 255 & t4, e3 + 1;
      }, u.prototype.writeInt16LE = function(t4, e3, r3) {
        return t4 = +t4, e3 >>>= 0, r3 || B(this, t4, e3, 2, 32767, -32768), this[e3] = 255 & t4, this[e3 + 1] = t4 >>> 8, e3 + 2;
      }, u.prototype.writeInt16BE = function(t4, e3, r3) {
        return t4 = +t4, e3 >>>= 0, r3 || B(this, t4, e3, 2, 32767, -32768), this[e3] = t4 >>> 8, this[e3 + 1] = 255 & t4, e3 + 2;
      }, u.prototype.writeInt32LE = function(t4, e3, r3) {
        return t4 = +t4, e3 >>>= 0, r3 || B(this, t4, e3, 4, 2147483647, -2147483648), this[e3] = 255 & t4, this[e3 + 1] = t4 >>> 8, this[e3 + 2] = t4 >>> 16, this[e3 + 3] = t4 >>> 24, e3 + 4;
      }, u.prototype.writeInt32BE = function(t4, e3, r3) {
        return t4 = +t4, e3 >>>= 0, r3 || B(this, t4, e3, 4, 2147483647, -2147483648), t4 < 0 && (t4 = 4294967295 + t4 + 1), this[e3] = t4 >>> 24, this[e3 + 1] = t4 >>> 16, this[e3 + 2] = t4 >>> 8, this[e3 + 3] = 255 & t4, e3 + 4;
      }, u.prototype.writeFloatLE = function(t4, e3, r3) {
        return N(this, t4, e3, true, r3);
      }, u.prototype.writeFloatBE = function(t4, e3, r3) {
        return N(this, t4, e3, false, r3);
      }, u.prototype.writeDoubleLE = function(t4, e3, r3) {
        return D(this, t4, e3, true, r3);
      }, u.prototype.writeDoubleBE = function(t4, e3, r3) {
        return D(this, t4, e3, false, r3);
      }, u.prototype.copy = function(t4, e3, r3, n2) {
        if (!u.isBuffer(t4))
          throw new TypeError("argument should be a Buffer");
        if (r3 || (r3 = 0), n2 || n2 === 0 || (n2 = this.length), e3 >= t4.length && (e3 = t4.length), e3 || (e3 = 0), n2 > 0 && n2 < r3 && (n2 = r3), n2 === r3)
          return 0;
        if (t4.length === 0 || this.length === 0)
          return 0;
        if (e3 < 0)
          throw new RangeError("targetStart out of bounds");
        if (r3 < 0 || r3 >= this.length)
          throw new RangeError("Index out of range");
        if (n2 < 0)
          throw new RangeError("sourceEnd out of bounds");
        n2 > this.length && (n2 = this.length), t4.length - e3 < n2 - r3 && (n2 = t4.length - e3 + r3);
        var i2 = n2 - r3;
        return this === t4 && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(e3, r3, n2) : Uint8Array.prototype.set.call(t4, this.subarray(r3, n2), e3), i2;
      }, u.prototype.fill = function(t4, e3, r3, n2) {
        if (typeof t4 == "string") {
          if (typeof e3 == "string" ? (n2 = e3, e3 = 0, r3 = this.length) : typeof r3 == "string" && (n2 = r3, r3 = this.length), n2 !== undefined && typeof n2 != "string")
            throw new TypeError("encoding must be a string");
          if (typeof n2 == "string" && !u.isEncoding(n2))
            throw new TypeError("Unknown encoding: " + n2);
          if (t4.length === 1) {
            var i2 = t4.charCodeAt(0);
            (n2 === "utf8" && i2 < 128 || n2 === "latin1") && (t4 = i2);
          }
        } else
          typeof t4 == "number" ? t4 &= 255 : typeof t4 == "boolean" && (t4 = Number(t4));
        if (e3 < 0 || this.length < e3 || this.length < r3)
          throw new RangeError("Out of range index");
        if (r3 <= e3)
          return this;
        var o2;
        if (e3 >>>= 0, r3 = r3 === undefined ? this.length : r3 >>> 0, t4 || (t4 = 0), typeof t4 == "number")
          for (o2 = e3;o2 < r3; ++o2)
            this[o2] = t4;
        else {
          var a2 = u.isBuffer(t4) ? t4 : u.from(t4, n2), s2 = a2.length;
          if (s2 === 0)
            throw new TypeError('The value "' + t4 + '" is invalid for argument "value"');
          for (o2 = 0;o2 < r3 - e3; ++o2)
            this[o2 + e3] = a2[o2 % s2];
        }
        return this;
      };
      var L = /[^+/0-9A-Za-z-_]/g;
      function C(t4, e3) {
        var r3;
        e3 = e3 || 1 / 0;
        for (var n2 = t4.length, i2 = null, o2 = [], a2 = 0;a2 < n2; ++a2) {
          if ((r3 = t4.charCodeAt(a2)) > 55295 && r3 < 57344) {
            if (!i2) {
              if (r3 > 56319) {
                (e3 -= 3) > -1 && o2.push(239, 191, 189);
                continue;
              }
              if (a2 + 1 === n2) {
                (e3 -= 3) > -1 && o2.push(239, 191, 189);
                continue;
              }
              i2 = r3;
              continue;
            }
            if (r3 < 56320) {
              (e3 -= 3) > -1 && o2.push(239, 191, 189), i2 = r3;
              continue;
            }
            r3 = 65536 + (i2 - 55296 << 10 | r3 - 56320);
          } else
            i2 && (e3 -= 3) > -1 && o2.push(239, 191, 189);
          if (i2 = null, r3 < 128) {
            if ((e3 -= 1) < 0)
              break;
            o2.push(r3);
          } else if (r3 < 2048) {
            if ((e3 -= 2) < 0)
              break;
            o2.push(r3 >> 6 | 192, 63 & r3 | 128);
          } else if (r3 < 65536) {
            if ((e3 -= 3) < 0)
              break;
            o2.push(r3 >> 12 | 224, r3 >> 6 & 63 | 128, 63 & r3 | 128);
          } else {
            if (!(r3 < 1114112))
              throw new Error("Invalid code point");
            if ((e3 -= 4) < 0)
              break;
            o2.push(r3 >> 18 | 240, r3 >> 12 & 63 | 128, r3 >> 6 & 63 | 128, 63 & r3 | 128);
          }
        }
        return o2;
      }
      function U(t4) {
        return i.toByteArray(function(t5) {
          if ((t5 = (t5 = t5.split("=")[0]).trim().replace(L, "")).length < 2)
            return "";
          for (;t5.length % 4 != 0; )
            t5 += "=";
          return t5;
        }(t4));
      }
      function q(t4, e3, r3, n2) {
        for (var i2 = 0;i2 < n2 && !(i2 + r3 >= e3.length || i2 >= t4.length); ++i2)
          e3[i2 + r3] = t4[i2];
        return i2;
      }
      function F(t4, e3) {
        return t4 instanceof e3 || t4 != null && t4.constructor != null && t4.constructor.name != null && t4.constructor.name === e3.name;
      }
      function V(t4) {
        return t4 != t4;
      }
      var z = function() {
        for (var t4 = "0123456789abcdef", e3 = new Array(256), r3 = 0;r3 < 16; ++r3)
          for (var n2 = 16 * r3, i2 = 0;i2 < 16; ++i2)
            e3[n2 + i2] = t4[r3] + t4[i2];
        return e3;
      }();
    }, 9466: (t3, e2, r2) => {
      var n = r2(6400), i = r2(9122), o = i(n("String.prototype.indexOf"));
      t3.exports = function(t4, e3) {
        var r3 = n(t4, !!e3);
        return typeof r3 == "function" && o(t4, ".prototype.") > -1 ? i(r3) : r3;
      };
    }, 9122: (t3, e2, r2) => {
      var n = r2(2354), i = r2(6400), o = r2(3900), a = r2(2268), s = i("%Function.prototype.apply%"), c = i("%Function.prototype.call%"), u = i("%Reflect.apply%", true) || n.call(c, s), f = r2(988), l = i("%Math.max%");
      t3.exports = function(t4) {
        if (typeof t4 != "function")
          throw new a("a function is required");
        var e3 = u(n, c, arguments);
        return o(e3, 1 + l(0, t4.length - (arguments.length - 1)), true);
      };
      var h = function() {
        return u(n, s, arguments);
      };
      f ? f(t3.exports, "apply", { value: h }) : t3.exports.apply = h;
    }, 2533: (t3, e2, r2) => {
      var n = r2(9732).Buffer, i = r2(7775).Transform, o = r2(136).I;
      function a(t4) {
        i.call(this), this.hashMode = typeof t4 == "string", this.hashMode ? this[t4] = this._finalOrDigest : this.final = this._finalOrDigest, this._final && (this.__final = this._final, this._final = null), this._decoder = null, this._encoding = null;
      }
      r2(1679)(a, i), a.prototype.update = function(t4, e3, r3) {
        typeof t4 == "string" && (t4 = n.from(t4, e3));
        var i2 = this._update(t4);
        return this.hashMode ? this : (r3 && (i2 = this._toString(i2, r3)), i2);
      }, a.prototype.setAutoPadding = function() {
      }, a.prototype.getAuthTag = function() {
        throw new Error("trying to get auth tag in unsupported state");
      }, a.prototype.setAuthTag = function() {
        throw new Error("trying to set auth tag in unsupported state");
      }, a.prototype.setAAD = function() {
        throw new Error("trying to set aad in unsupported state");
      }, a.prototype._transform = function(t4, e3, r3) {
        var n2;
        try {
          this.hashMode ? this._update(t4) : this.push(this._update(t4));
        } catch (t5) {
          n2 = t5;
        } finally {
          r3(n2);
        }
      }, a.prototype._flush = function(t4) {
        var e3;
        try {
          this.push(this.__final());
        } catch (t5) {
          e3 = t5;
        }
        t4(e3);
      }, a.prototype._finalOrDigest = function(t4) {
        var e3 = this.__final() || n.alloc(0);
        return t4 && (e3 = this._toString(e3, t4, true)), e3;
      }, a.prototype._toString = function(t4, e3, r3) {
        if (this._decoder || (this._decoder = new o(e3), this._encoding = e3), this._encoding !== e3)
          throw new Error("can't switch encodings");
        var n2 = this._decoder.write(t4);
        return r3 && (n2 += this._decoder.end()), n2;
      }, t3.exports = a;
    }, 7919: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4) {
        return Object.prototype.toString.call(t4);
      }
      e2.isArray = function(t4) {
        return Array.isArray ? Array.isArray(t4) : i(t4) === "[object Array]";
      }, e2.isBoolean = function(t4) {
        return typeof t4 == "boolean";
      }, e2.isNull = function(t4) {
        return t4 === null;
      }, e2.isNullOrUndefined = function(t4) {
        return t4 == null;
      }, e2.isNumber = function(t4) {
        return typeof t4 == "number";
      }, e2.isString = function(t4) {
        return typeof t4 == "string";
      }, e2.isSymbol = function(t4) {
        return n(t4) === "symbol";
      }, e2.isUndefined = function(t4) {
        return t4 === undefined;
      }, e2.isRegExp = function(t4) {
        return i(t4) === "[object RegExp]";
      }, e2.isObject = function(t4) {
        return n(t4) === "object" && t4 !== null;
      }, e2.isDate = function(t4) {
        return i(t4) === "[object Date]";
      }, e2.isError = function(t4) {
        return i(t4) === "[object Error]" || t4 instanceof Error;
      }, e2.isFunction = function(t4) {
        return typeof t4 == "function";
      }, e2.isPrimitive = function(t4) {
        return t4 === null || typeof t4 == "boolean" || typeof t4 == "number" || typeof t4 == "string" || n(t4) === "symbol" || t4 === undefined;
      }, e2.isBuffer = r2(5832).Buffer.isBuffer;
    }, 1005: (t3, e2, r2) => {
      var n = r2(5832).Buffer, i = r2(7312), o = r2(7799);
      t3.exports = function(t4) {
        return new s(t4);
      };
      var a = { secp256k1: { name: "secp256k1", byteLength: 32 }, secp224r1: { name: "p224", byteLength: 28 }, prime256v1: { name: "p256", byteLength: 32 }, prime192v1: { name: "p192", byteLength: 24 }, ed25519: { name: "ed25519", byteLength: 32 }, secp384r1: { name: "p384", byteLength: 48 }, secp521r1: { name: "p521", byteLength: 66 } };
      function s(t4) {
        this.curveType = a[t4], this.curveType || (this.curveType = { name: t4 }), this.curve = new i.ec(this.curveType.name), this.keys = undefined;
      }
      function c(t4, e3, r3) {
        Array.isArray(t4) || (t4 = t4.toArray());
        var i2 = new n(t4);
        if (r3 && i2.length < r3) {
          var o2 = new n(r3 - i2.length);
          o2.fill(0), i2 = n.concat([o2, i2]);
        }
        return e3 ? i2.toString(e3) : i2;
      }
      a.p224 = a.secp224r1, a.p256 = a.secp256r1 = a.prime256v1, a.p192 = a.secp192r1 = a.prime192v1, a.p384 = a.secp384r1, a.p521 = a.secp521r1, s.prototype.generateKeys = function(t4, e3) {
        return this.keys = this.curve.genKeyPair(), this.getPublicKey(t4, e3);
      }, s.prototype.computeSecret = function(t4, e3, r3) {
        return e3 = e3 || "utf8", n.isBuffer(t4) || (t4 = new n(t4, e3)), c(this.curve.keyFromPublic(t4).getPublic().mul(this.keys.getPrivate()).getX(), r3, this.curveType.byteLength);
      }, s.prototype.getPublicKey = function(t4, e3) {
        var r3 = this.keys.getPublic(e3 === "compressed", true);
        return e3 === "hybrid" && (r3[r3.length - 1] % 2 ? r3[0] = 7 : r3[0] = 6), c(r3, t4);
      }, s.prototype.getPrivateKey = function(t4) {
        return c(this.keys.getPrivate(), t4);
      }, s.prototype.setPublicKey = function(t4, e3) {
        return e3 = e3 || "utf8", n.isBuffer(t4) || (t4 = new n(t4, e3)), this.keys._importPublic(t4), this;
      }, s.prototype.setPrivateKey = function(t4, e3) {
        e3 = e3 || "utf8", n.isBuffer(t4) || (t4 = new n(t4, e3));
        var r3 = new o(t4);
        return r3 = r3.toString(16), this.keys = this.curve.genKeyPair(), this.keys._importPrivate(r3), this;
      };
    }, 5833: (t3, e2, r2) => {
      var n = r2(1679), i = r2(2635), o = r2(1058), a = r2(3261), s = r2(2533);
      function c(t4) {
        s.call(this, "digest"), this._hash = t4;
      }
      n(c, s), c.prototype._update = function(t4) {
        this._hash.update(t4);
      }, c.prototype._final = function() {
        return this._hash.digest();
      }, t3.exports = function(t4) {
        return (t4 = t4.toLowerCase()) === "md5" ? new i : t4 === "rmd160" || t4 === "ripemd160" ? new o : new c(a(t4));
      };
    }, 3989: (t3, e2, r2) => {
      var n = r2(2635);
      t3.exports = function(t4) {
        return new n().update(t4).digest();
      };
    }, 2046: (t3, e2, r2) => {
      var n = r2(1679), i = r2(6583), o = r2(2533), a = r2(9732).Buffer, s = r2(3989), c = r2(1058), u = r2(3261), f = a.alloc(128);
      function l(t4, e3) {
        o.call(this, "digest"), typeof e3 == "string" && (e3 = a.from(e3));
        var r3 = t4 === "sha512" || t4 === "sha384" ? 128 : 64;
        this._alg = t4, this._key = e3, e3.length > r3 ? e3 = (t4 === "rmd160" ? new c : u(t4)).update(e3).digest() : e3.length < r3 && (e3 = a.concat([e3, f], r3));
        for (var n2 = this._ipad = a.allocUnsafe(r3), i2 = this._opad = a.allocUnsafe(r3), s2 = 0;s2 < r3; s2++)
          n2[s2] = 54 ^ e3[s2], i2[s2] = 92 ^ e3[s2];
        this._hash = t4 === "rmd160" ? new c : u(t4), this._hash.update(n2);
      }
      n(l, o), l.prototype._update = function(t4) {
        this._hash.update(t4);
      }, l.prototype._final = function() {
        var t4 = this._hash.digest();
        return (this._alg === "rmd160" ? new c : u(this._alg)).update(this._opad).update(t4).digest();
      }, t3.exports = function(t4, e3) {
        return (t4 = t4.toLowerCase()) === "rmd160" || t4 === "ripemd160" ? new l("rmd160", e3) : t4 === "md5" ? new i(s, e3) : new l(t4, e3);
      };
    }, 6583: (t3, e2, r2) => {
      var n = r2(1679), i = r2(9732).Buffer, o = r2(2533), a = i.alloc(128), s = 64;
      function c(t4, e3) {
        o.call(this, "digest"), typeof e3 == "string" && (e3 = i.from(e3)), this._alg = t4, this._key = e3, e3.length > s ? e3 = t4(e3) : e3.length < s && (e3 = i.concat([e3, a], s));
        for (var r3 = this._ipad = i.allocUnsafe(s), n2 = this._opad = i.allocUnsafe(s), c2 = 0;c2 < s; c2++)
          r3[c2] = 54 ^ e3[c2], n2[c2] = 92 ^ e3[c2];
        this._hash = [r3];
      }
      n(c, o), c.prototype._update = function(t4) {
        this._hash.push(t4);
      }, c.prototype._final = function() {
        var t4 = this._alg(i.concat(this._hash));
        return this._alg(i.concat([this._opad, t4]));
      }, t3.exports = c;
    }, 8872: (t3, e2, r2) => {
      e2.po = r2(4276), r2(5833), r2(2046);
      var n = r2(4606), i = Object.keys(n), o = (["sha1", "sha224", "sha256", "sha384", "sha512", "md5", "rmd160"].concat(i), r2(8699));
      o.pbkdf2, o.pbkdf2Sync;
      var a = r2(9652);
      a.Cipher, a.createCipher, a.Cipheriv, a.createCipheriv, a.Decipher, a.createDecipher, a.Decipheriv, a.createDecipheriv, a.getCiphers, a.listCiphers;
      var s = r2(9803);
      s.DiffieHellmanGroup, s.createDiffieHellmanGroup, s.getDiffieHellman, s.createDiffieHellman, s.DiffieHellman;
      var c = r2(7937);
      c.createSign, c.Sign, c.createVerify, c.Verify, r2(1005);
      var u = r2(2327);
      u.publicEncrypt, u.privateEncrypt, u.publicDecrypt, u.privateDecrypt;
      var f = r2(7952);
      f.randomFill, f.randomFillSync;
    }, 6750: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      var i = r2(988), o = r2(2288), a = r2(2268), s = r2(1464);
      t3.exports = function(t4, e3, r3) {
        if (!t4 || n(t4) !== "object" && typeof t4 != "function")
          throw new a("`obj` must be an object or a function`");
        if (typeof e3 != "string" && n(e3) !== "symbol")
          throw new a("`property` must be a string or a symbol`");
        if (arguments.length > 3 && typeof arguments[3] != "boolean" && arguments[3] !== null)
          throw new a("`nonEnumerable`, if provided, must be a boolean or null");
        if (arguments.length > 4 && typeof arguments[4] != "boolean" && arguments[4] !== null)
          throw new a("`nonWritable`, if provided, must be a boolean or null");
        if (arguments.length > 5 && typeof arguments[5] != "boolean" && arguments[5] !== null)
          throw new a("`nonConfigurable`, if provided, must be a boolean or null");
        if (arguments.length > 6 && typeof arguments[6] != "boolean")
          throw new a("`loose`, if provided, must be a boolean");
        var c = arguments.length > 3 ? arguments[3] : null, u = arguments.length > 4 ? arguments[4] : null, f = arguments.length > 5 ? arguments[5] : null, l = arguments.length > 6 && arguments[6], h = !!s && s(t4, e3);
        if (i)
          i(t4, e3, { configurable: f === null && h ? h.configurable : !f, enumerable: c === null && h ? h.enumerable : !c, value: r3, writable: u === null && h ? h.writable : !u });
        else {
          if (!l && (c || u || f))
            throw new o("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
          t4[e3] = r3;
        }
      };
    }, 2273: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      var i = r2(668), o = typeof Symbol == "function" && n(Symbol("foo")) === "symbol", a = Object.prototype.toString, s = Array.prototype.concat, c = r2(6750), u = r2(3191)(), f = function(t4, e3, r3, n2) {
        if (e3 in t4) {
          if (n2 === true) {
            if (t4[e3] === r3)
              return;
          } else if (typeof (i2 = n2) != "function" || a.call(i2) !== "[object Function]" || !n2())
            return;
        }
        var i2;
        u ? c(t4, e3, r3, true) : c(t4, e3, r3);
      }, l = function(t4, e3) {
        var r3 = arguments.length > 2 ? arguments[2] : {}, n2 = i(e3);
        o && (n2 = s.call(n2, Object.getOwnPropertySymbols(e3)));
        for (var a2 = 0;a2 < n2.length; a2 += 1)
          f(t4, n2[a2], e3[n2[a2]], r3[n2[a2]]);
      };
      l.supportsDescriptors = !!u, t3.exports = l;
    }, 1471: (t3, e2, r2) => {
      e2.utils = r2(9473), e2.Cipher = r2(365), e2.DES = r2(1048), e2.CBC = r2(6754), e2.EDE = r2(1368);
    }, 6754: (t3, e2, r2) => {
      var n = r2(3528), i = r2(1679), o = {};
      function a(t4) {
        n.equal(t4.length, 8, "Invalid IV length"), this.iv = new Array(8);
        for (var e3 = 0;e3 < this.iv.length; e3++)
          this.iv[e3] = t4[e3];
      }
      e2.instantiate = function(t4) {
        function e3(e4) {
          t4.call(this, e4), this._cbcInit();
        }
        i(e3, t4);
        for (var r3 = Object.keys(o), n2 = 0;n2 < r3.length; n2++) {
          var a2 = r3[n2];
          e3.prototype[a2] = o[a2];
        }
        return e3.create = function(t5) {
          return new e3(t5);
        }, e3;
      }, o._cbcInit = function() {
        var t4 = new a(this.options.iv);
        this._cbcState = t4;
      }, o._update = function(t4, e3, r3, n2) {
        var i2 = this._cbcState, o2 = this.constructor.super_.prototype, a2 = i2.iv;
        if (this.type === "encrypt") {
          for (var s = 0;s < this.blockSize; s++)
            a2[s] ^= t4[e3 + s];
          for (o2._update.call(this, a2, 0, r3, n2), s = 0;s < this.blockSize; s++)
            a2[s] = r3[n2 + s];
        } else {
          for (o2._update.call(this, t4, e3, r3, n2), s = 0;s < this.blockSize; s++)
            r3[n2 + s] ^= a2[s];
          for (s = 0;s < this.blockSize; s++)
            a2[s] = t4[e3 + s];
        }
      };
    }, 365: (t3, e2, r2) => {
      var n = r2(3528);
      function i(t4) {
        this.options = t4, this.type = this.options.type, this.blockSize = 8, this._init(), this.buffer = new Array(this.blockSize), this.bufferOff = 0, this.padding = t4.padding !== false;
      }
      t3.exports = i, i.prototype._init = function() {
      }, i.prototype.update = function(t4) {
        return t4.length === 0 ? [] : this.type === "decrypt" ? this._updateDecrypt(t4) : this._updateEncrypt(t4);
      }, i.prototype._buffer = function(t4, e3) {
        for (var r3 = Math.min(this.buffer.length - this.bufferOff, t4.length - e3), n2 = 0;n2 < r3; n2++)
          this.buffer[this.bufferOff + n2] = t4[e3 + n2];
        return this.bufferOff += r3, r3;
      }, i.prototype._flushBuffer = function(t4, e3) {
        return this._update(this.buffer, 0, t4, e3), this.bufferOff = 0, this.blockSize;
      }, i.prototype._updateEncrypt = function(t4) {
        var e3 = 0, r3 = 0, n2 = (this.bufferOff + t4.length) / this.blockSize | 0, i2 = new Array(n2 * this.blockSize);
        this.bufferOff !== 0 && (e3 += this._buffer(t4, e3), this.bufferOff === this.buffer.length && (r3 += this._flushBuffer(i2, r3)));
        for (var o = t4.length - (t4.length - e3) % this.blockSize;e3 < o; e3 += this.blockSize)
          this._update(t4, e3, i2, r3), r3 += this.blockSize;
        for (;e3 < t4.length; e3++, this.bufferOff++)
          this.buffer[this.bufferOff] = t4[e3];
        return i2;
      }, i.prototype._updateDecrypt = function(t4) {
        for (var e3 = 0, r3 = 0, n2 = Math.ceil((this.bufferOff + t4.length) / this.blockSize) - 1, i2 = new Array(n2 * this.blockSize);n2 > 0; n2--)
          e3 += this._buffer(t4, e3), r3 += this._flushBuffer(i2, r3);
        return e3 += this._buffer(t4, e3), i2;
      }, i.prototype.final = function(t4) {
        var e3, r3;
        return t4 && (e3 = this.update(t4)), r3 = this.type === "encrypt" ? this._finalEncrypt() : this._finalDecrypt(), e3 ? e3.concat(r3) : r3;
      }, i.prototype._pad = function(t4, e3) {
        if (e3 === 0)
          return false;
        for (;e3 < t4.length; )
          t4[e3++] = 0;
        return true;
      }, i.prototype._finalEncrypt = function() {
        if (!this._pad(this.buffer, this.bufferOff))
          return [];
        var t4 = new Array(this.blockSize);
        return this._update(this.buffer, 0, t4, 0), t4;
      }, i.prototype._unpad = function(t4) {
        return t4;
      }, i.prototype._finalDecrypt = function() {
        n.equal(this.bufferOff, this.blockSize, "Not enough data to decrypt");
        var t4 = new Array(this.blockSize);
        return this._flushBuffer(t4, 0), this._unpad(t4);
      };
    }, 1048: (t3, e2, r2) => {
      var n = r2(3528), i = r2(1679), o = r2(9473), a = r2(365);
      function s() {
        this.tmp = new Array(2), this.keys = null;
      }
      function c(t4) {
        a.call(this, t4);
        var e3 = new s;
        this._desState = e3, this.deriveKeys(e3, t4.key);
      }
      i(c, a), t3.exports = c, c.create = function(t4) {
        return new c(t4);
      };
      var u = [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1];
      c.prototype.deriveKeys = function(t4, e3) {
        t4.keys = new Array(32), n.equal(e3.length, this.blockSize, "Invalid key length");
        var r3 = o.readUInt32BE(e3, 0), i2 = o.readUInt32BE(e3, 4);
        o.pc1(r3, i2, t4.tmp, 0), r3 = t4.tmp[0], i2 = t4.tmp[1];
        for (var a2 = 0;a2 < t4.keys.length; a2 += 2) {
          var s2 = u[a2 >>> 1];
          r3 = o.r28shl(r3, s2), i2 = o.r28shl(i2, s2), o.pc2(r3, i2, t4.keys, a2);
        }
      }, c.prototype._update = function(t4, e3, r3, n2) {
        var i2 = this._desState, a2 = o.readUInt32BE(t4, e3), s2 = o.readUInt32BE(t4, e3 + 4);
        o.ip(a2, s2, i2.tmp, 0), a2 = i2.tmp[0], s2 = i2.tmp[1], this.type === "encrypt" ? this._encrypt(i2, a2, s2, i2.tmp, 0) : this._decrypt(i2, a2, s2, i2.tmp, 0), a2 = i2.tmp[0], s2 = i2.tmp[1], o.writeUInt32BE(r3, a2, n2), o.writeUInt32BE(r3, s2, n2 + 4);
      }, c.prototype._pad = function(t4, e3) {
        if (this.padding === false)
          return false;
        for (var r3 = t4.length - e3, n2 = e3;n2 < t4.length; n2++)
          t4[n2] = r3;
        return true;
      }, c.prototype._unpad = function(t4) {
        if (this.padding === false)
          return t4;
        for (var e3 = t4[t4.length - 1], r3 = t4.length - e3;r3 < t4.length; r3++)
          n.equal(t4[r3], e3);
        return t4.slice(0, t4.length - e3);
      }, c.prototype._encrypt = function(t4, e3, r3, n2, i2) {
        for (var a2 = e3, s2 = r3, c2 = 0;c2 < t4.keys.length; c2 += 2) {
          var u2 = t4.keys[c2], f = t4.keys[c2 + 1];
          o.expand(s2, t4.tmp, 0), u2 ^= t4.tmp[0], f ^= t4.tmp[1];
          var l = o.substitute(u2, f), h = s2;
          s2 = (a2 ^ o.permute(l)) >>> 0, a2 = h;
        }
        o.rip(s2, a2, n2, i2);
      }, c.prototype._decrypt = function(t4, e3, r3, n2, i2) {
        for (var a2 = r3, s2 = e3, c2 = t4.keys.length - 2;c2 >= 0; c2 -= 2) {
          var u2 = t4.keys[c2], f = t4.keys[c2 + 1];
          o.expand(a2, t4.tmp, 0), u2 ^= t4.tmp[0], f ^= t4.tmp[1];
          var l = o.substitute(u2, f), h = a2;
          a2 = (s2 ^ o.permute(l)) >>> 0, s2 = h;
        }
        o.rip(a2, s2, n2, i2);
      };
    }, 1368: (t3, e2, r2) => {
      var n = r2(3528), i = r2(1679), o = r2(365), a = r2(1048);
      function s(t4, e3) {
        n.equal(e3.length, 24, "Invalid key length");
        var r3 = e3.slice(0, 8), i2 = e3.slice(8, 16), o2 = e3.slice(16, 24);
        this.ciphers = t4 === "encrypt" ? [a.create({ type: "encrypt", key: r3 }), a.create({ type: "decrypt", key: i2 }), a.create({ type: "encrypt", key: o2 })] : [a.create({ type: "decrypt", key: o2 }), a.create({ type: "encrypt", key: i2 }), a.create({ type: "decrypt", key: r3 })];
      }
      function c(t4) {
        o.call(this, t4);
        var e3 = new s(this.type, this.options.key);
        this._edeState = e3;
      }
      i(c, o), t3.exports = c, c.create = function(t4) {
        return new c(t4);
      }, c.prototype._update = function(t4, e3, r3, n2) {
        var i2 = this._edeState;
        i2.ciphers[0]._update(t4, e3, r3, n2), i2.ciphers[1]._update(r3, n2, r3, n2), i2.ciphers[2]._update(r3, n2, r3, n2);
      }, c.prototype._pad = a.prototype._pad, c.prototype._unpad = a.prototype._unpad;
    }, 9473: (t3, e2) => {
      e2.readUInt32BE = function(t4, e3) {
        return (t4[0 + e3] << 24 | t4[1 + e3] << 16 | t4[2 + e3] << 8 | t4[3 + e3]) >>> 0;
      }, e2.writeUInt32BE = function(t4, e3, r3) {
        t4[0 + r3] = e3 >>> 24, t4[1 + r3] = e3 >>> 16 & 255, t4[2 + r3] = e3 >>> 8 & 255, t4[3 + r3] = 255 & e3;
      }, e2.ip = function(t4, e3, r3, n2) {
        for (var i2 = 0, o = 0, a = 6;a >= 0; a -= 2) {
          for (var s = 0;s <= 24; s += 8)
            i2 <<= 1, i2 |= e3 >>> s + a & 1;
          for (s = 0;s <= 24; s += 8)
            i2 <<= 1, i2 |= t4 >>> s + a & 1;
        }
        for (a = 6;a >= 0; a -= 2) {
          for (s = 1;s <= 25; s += 8)
            o <<= 1, o |= e3 >>> s + a & 1;
          for (s = 1;s <= 25; s += 8)
            o <<= 1, o |= t4 >>> s + a & 1;
        }
        r3[n2 + 0] = i2 >>> 0, r3[n2 + 1] = o >>> 0;
      }, e2.rip = function(t4, e3, r3, n2) {
        for (var i2 = 0, o = 0, a = 0;a < 4; a++)
          for (var s = 24;s >= 0; s -= 8)
            i2 <<= 1, i2 |= e3 >>> s + a & 1, i2 <<= 1, i2 |= t4 >>> s + a & 1;
        for (a = 4;a < 8; a++)
          for (s = 24;s >= 0; s -= 8)
            o <<= 1, o |= e3 >>> s + a & 1, o <<= 1, o |= t4 >>> s + a & 1;
        r3[n2 + 0] = i2 >>> 0, r3[n2 + 1] = o >>> 0;
      }, e2.pc1 = function(t4, e3, r3, n2) {
        for (var i2 = 0, o = 0, a = 7;a >= 5; a--) {
          for (var s = 0;s <= 24; s += 8)
            i2 <<= 1, i2 |= e3 >> s + a & 1;
          for (s = 0;s <= 24; s += 8)
            i2 <<= 1, i2 |= t4 >> s + a & 1;
        }
        for (s = 0;s <= 24; s += 8)
          i2 <<= 1, i2 |= e3 >> s + a & 1;
        for (a = 1;a <= 3; a++) {
          for (s = 0;s <= 24; s += 8)
            o <<= 1, o |= e3 >> s + a & 1;
          for (s = 0;s <= 24; s += 8)
            o <<= 1, o |= t4 >> s + a & 1;
        }
        for (s = 0;s <= 24; s += 8)
          o <<= 1, o |= t4 >> s + a & 1;
        r3[n2 + 0] = i2 >>> 0, r3[n2 + 1] = o >>> 0;
      }, e2.r28shl = function(t4, e3) {
        return t4 << e3 & 268435455 | t4 >>> 28 - e3;
      };
      var r2 = [14, 11, 17, 4, 27, 23, 25, 0, 13, 22, 7, 18, 5, 9, 16, 24, 2, 20, 12, 21, 1, 8, 15, 26, 15, 4, 25, 19, 9, 1, 26, 16, 5, 11, 23, 8, 12, 7, 17, 0, 22, 3, 10, 14, 6, 20, 27, 24];
      e2.pc2 = function(t4, e3, n2, i2) {
        for (var o = 0, a = 0, s = r2.length >>> 1, c = 0;c < s; c++)
          o <<= 1, o |= t4 >>> r2[c] & 1;
        for (c = s;c < r2.length; c++)
          a <<= 1, a |= e3 >>> r2[c] & 1;
        n2[i2 + 0] = o >>> 0, n2[i2 + 1] = a >>> 0;
      }, e2.expand = function(t4, e3, r3) {
        var n2 = 0, i2 = 0;
        n2 = (1 & t4) << 5 | t4 >>> 27;
        for (var o = 23;o >= 15; o -= 4)
          n2 <<= 6, n2 |= t4 >>> o & 63;
        for (o = 11;o >= 3; o -= 4)
          i2 |= t4 >>> o & 63, i2 <<= 6;
        i2 |= (31 & t4) << 1 | t4 >>> 31, e3[r3 + 0] = n2 >>> 0, e3[r3 + 1] = i2 >>> 0;
      };
      var n = [14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1, 3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8, 4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7, 15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13, 15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14, 9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5, 0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2, 5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9, 10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10, 1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1, 13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7, 11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12, 7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3, 1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9, 10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8, 15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14, 2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1, 8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6, 4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13, 15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3, 12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5, 0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8, 9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10, 7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13, 4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10, 3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6, 1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7, 10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12, 13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4, 10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2, 7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13, 0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11];
      e2.substitute = function(t4, e3) {
        for (var r3 = 0, i2 = 0;i2 < 4; i2++)
          r3 <<= 4, r3 |= n[64 * i2 + (t4 >>> 18 - 6 * i2 & 63)];
        for (i2 = 0;i2 < 4; i2++)
          r3 <<= 4, r3 |= n[256 + 64 * i2 + (e3 >>> 18 - 6 * i2 & 63)];
        return r3 >>> 0;
      };
      var i = [16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22, 30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7];
      e2.permute = function(t4) {
        for (var e3 = 0, r3 = 0;r3 < i.length; r3++)
          e3 <<= 1, e3 |= t4 >>> i[r3] & 1;
        return e3 >>> 0;
      }, e2.padSplit = function(t4, e3, r3) {
        for (var n2 = t4.toString(2);n2.length < e3; )
          n2 = "0" + n2;
        for (var i2 = [], o = 0;o < e3; o += r3)
          i2.push(n2.slice(o, o + r3));
        return i2.join(" ");
      };
    }, 9803: (t3, e2, r2) => {
      var n = r2(5832).Buffer, i = r2(1673), o = r2(3241), a = r2(8151), s = { binary: true, hex: true, base64: true };
      e2.DiffieHellmanGroup = e2.createDiffieHellmanGroup = e2.getDiffieHellman = function(t4) {
        var e3 = new n(o[t4].prime, "hex"), r3 = new n(o[t4].gen, "hex");
        return new a(e3, r3);
      }, e2.createDiffieHellman = e2.DiffieHellman = function t(e3, r3, o2, c) {
        return n.isBuffer(r3) || s[r3] === undefined ? t(e3, "binary", r3, o2) : (r3 = r3 || "binary", c = c || "binary", o2 = o2 || new n([2]), n.isBuffer(o2) || (o2 = new n(o2, c)), typeof e3 == "number" ? new a(i(e3, o2), o2, true) : (n.isBuffer(e3) || (e3 = new n(e3, r3)), new a(e3, o2, true)));
      };
    }, 8151: (t3, e2, r2) => {
      var n = r2(5832).Buffer, i = r2(7799), o = new (r2(1257)), a = new i(24), s = new i(11), c = new i(10), u = new i(3), f = new i(7), l = r2(1673), h = r2(4276);
      function p(t4, e3) {
        return e3 = e3 || "utf8", n.isBuffer(t4) || (t4 = new n(t4, e3)), this._pub = new i(t4), this;
      }
      function d(t4, e3) {
        return e3 = e3 || "utf8", n.isBuffer(t4) || (t4 = new n(t4, e3)), this._priv = new i(t4), this;
      }
      t3.exports = b;
      var y = {};
      function b(t4, e3, r3) {
        this.setGenerator(e3), this.__prime = new i(t4), this._prime = i.mont(this.__prime), this._primeLen = t4.length, this._pub = undefined, this._priv = undefined, this._primeCode = undefined, r3 ? (this.setPublicKey = p, this.setPrivateKey = d) : this._primeCode = 8;
      }
      function m(t4, e3) {
        var r3 = new n(t4.toArray());
        return e3 ? r3.toString(e3) : r3;
      }
      Object.defineProperty(b.prototype, "verifyError", { enumerable: true, get: function() {
        return typeof this._primeCode != "number" && (this._primeCode = function(t4, e3) {
          var r3 = e3.toString("hex"), n2 = [r3, t4.toString(16)].join("_");
          if (n2 in y)
            return y[n2];
          var i2, h2 = 0;
          if (t4.isEven() || !l.simpleSieve || !l.fermatTest(t4) || !o.test(t4))
            return h2 += 1, h2 += r3 === "02" || r3 === "05" ? 8 : 4, y[n2] = h2, h2;
          switch (o.test(t4.shrn(1)) || (h2 += 2), r3) {
            case "02":
              t4.mod(a).cmp(s) && (h2 += 8);
              break;
            case "05":
              (i2 = t4.mod(c)).cmp(u) && i2.cmp(f) && (h2 += 8);
              break;
            default:
              h2 += 4;
          }
          return y[n2] = h2, h2;
        }(this.__prime, this.__gen)), this._primeCode;
      } }), b.prototype.generateKeys = function() {
        return this._priv || (this._priv = new i(h(this._primeLen))), this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed(), this.getPublicKey();
      }, b.prototype.computeSecret = function(t4) {
        var e3 = (t4 = (t4 = new i(t4)).toRed(this._prime)).redPow(this._priv).fromRed(), r3 = new n(e3.toArray()), o2 = this.getPrime();
        if (r3.length < o2.length) {
          var a2 = new n(o2.length - r3.length);
          a2.fill(0), r3 = n.concat([a2, r3]);
        }
        return r3;
      }, b.prototype.getPublicKey = function(t4) {
        return m(this._pub, t4);
      }, b.prototype.getPrivateKey = function(t4) {
        return m(this._priv, t4);
      }, b.prototype.getPrime = function(t4) {
        return m(this.__prime, t4);
      }, b.prototype.getGenerator = function(t4) {
        return m(this._gen, t4);
      }, b.prototype.setGenerator = function(t4, e3) {
        return e3 = e3 || "utf8", n.isBuffer(t4) || (t4 = new n(t4, e3)), this.__gen = t4, this._gen = new i(t4), this;
      };
    }, 1673: (t3, e2, r2) => {
      var n = r2(4276);
      t3.exports = v, v.simpleSieve = b, v.fermatTest = m;
      var i = r2(7799), o = new i(24), a = new (r2(1257)), s = new i(1), c = new i(2), u = new i(5), f = (new i(16), new i(8), new i(10)), l = new i(3), h = (new i(7), new i(11)), p = new i(4), d = (new i(12), null);
      function y() {
        if (d !== null)
          return d;
        var t4 = [];
        t4[0] = 2;
        for (var e3 = 1, r3 = 3;r3 < 1048576; r3 += 2) {
          for (var n2 = Math.ceil(Math.sqrt(r3)), i2 = 0;i2 < e3 && t4[i2] <= n2 && r3 % t4[i2] != 0; i2++)
            ;
          e3 !== i2 && t4[i2] <= n2 || (t4[e3++] = r3);
        }
        return d = t4, t4;
      }
      function b(t4) {
        for (var e3 = y(), r3 = 0;r3 < e3.length; r3++)
          if (t4.modn(e3[r3]) === 0)
            return t4.cmpn(e3[r3]) === 0;
        return true;
      }
      function m(t4) {
        var e3 = i.mont(t4);
        return c.toRed(e3).redPow(t4.subn(1)).fromRed().cmpn(1) === 0;
      }
      function v(t4, e3) {
        if (t4 < 16)
          return new i(e3 === 2 || e3 === 5 ? [140, 123] : [140, 39]);
        var r3, d2;
        for (e3 = new i(e3);; ) {
          for (r3 = new i(n(Math.ceil(t4 / 8)));r3.bitLength() > t4; )
            r3.ishrn(1);
          if (r3.isEven() && r3.iadd(s), r3.testn(1) || r3.iadd(c), e3.cmp(c)) {
            if (!e3.cmp(u))
              for (;r3.mod(f).cmp(l); )
                r3.iadd(p);
          } else
            for (;r3.mod(o).cmp(h); )
              r3.iadd(p);
          if (b(d2 = r3.shrn(1)) && b(r3) && m(d2) && m(r3) && a.test(d2) && a.test(r3))
            return r3;
        }
      }
    }, 7312: (t3, e2, r2) => {
      var n = e2;
      n.version = r2(1636).rE, n.utils = r2(1970), n.rand = r2(8904), n.curve = r2(5803), n.curves = r2(6379), n.ec = r2(7416), n.eddsa = r2(4919);
    }, 3334: (t3, e2, r2) => {
      var n = r2(7799), i = r2(1970), o = i.getNAF, a = i.getJSF, s = i.assert;
      function c(t4, e3) {
        this.type = t4, this.p = new n(e3.p, 16), this.red = e3.prime ? n.red(e3.prime) : n.mont(this.p), this.zero = new n(0).toRed(this.red), this.one = new n(1).toRed(this.red), this.two = new n(2).toRed(this.red), this.n = e3.n && new n(e3.n, 16), this.g = e3.g && this.pointFromJSON(e3.g, e3.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
        var r3 = this.n && this.p.div(this.n);
        !r3 || r3.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = true, this.redN = this.n.toRed(this.red));
      }
      function u(t4, e3) {
        this.curve = t4, this.type = e3, this.precomputed = null;
      }
      t3.exports = c, c.prototype.point = function() {
        throw new Error("Not implemented");
      }, c.prototype.validate = function() {
        throw new Error("Not implemented");
      }, c.prototype._fixedNafMul = function(t4, e3) {
        s(t4.precomputed);
        var r3 = t4._getDoubles(), n2 = o(e3, 1, this._bitLength), i2 = (1 << r3.step + 1) - (r3.step % 2 == 0 ? 2 : 1);
        i2 /= 3;
        var a2, c2, u2 = [];
        for (a2 = 0;a2 < n2.length; a2 += r3.step) {
          c2 = 0;
          for (var f = a2 + r3.step - 1;f >= a2; f--)
            c2 = (c2 << 1) + n2[f];
          u2.push(c2);
        }
        for (var l = this.jpoint(null, null, null), h = this.jpoint(null, null, null), p = i2;p > 0; p--) {
          for (a2 = 0;a2 < u2.length; a2++)
            (c2 = u2[a2]) === p ? h = h.mixedAdd(r3.points[a2]) : c2 === -p && (h = h.mixedAdd(r3.points[a2].neg()));
          l = l.add(h);
        }
        return l.toP();
      }, c.prototype._wnafMul = function(t4, e3) {
        var r3 = 4, n2 = t4._getNAFPoints(r3);
        r3 = n2.wnd;
        for (var i2 = n2.points, a2 = o(e3, r3, this._bitLength), c2 = this.jpoint(null, null, null), u2 = a2.length - 1;u2 >= 0; u2--) {
          for (var f = 0;u2 >= 0 && a2[u2] === 0; u2--)
            f++;
          if (u2 >= 0 && f++, c2 = c2.dblp(f), u2 < 0)
            break;
          var l = a2[u2];
          s(l !== 0), c2 = t4.type === "affine" ? l > 0 ? c2.mixedAdd(i2[l - 1 >> 1]) : c2.mixedAdd(i2[-l - 1 >> 1].neg()) : l > 0 ? c2.add(i2[l - 1 >> 1]) : c2.add(i2[-l - 1 >> 1].neg());
        }
        return t4.type === "affine" ? c2.toP() : c2;
      }, c.prototype._wnafMulAdd = function(t4, e3, r3, n2, i2) {
        var s2, c2, u2, f = this._wnafT1, l = this._wnafT2, h = this._wnafT3, p = 0;
        for (s2 = 0;s2 < n2; s2++) {
          var d = (u2 = e3[s2])._getNAFPoints(t4);
          f[s2] = d.wnd, l[s2] = d.points;
        }
        for (s2 = n2 - 1;s2 >= 1; s2 -= 2) {
          var y = s2 - 1, b = s2;
          if (f[y] === 1 && f[b] === 1) {
            var m = [e3[y], null, null, e3[b]];
            e3[y].y.cmp(e3[b].y) === 0 ? (m[1] = e3[y].add(e3[b]), m[2] = e3[y].toJ().mixedAdd(e3[b].neg())) : e3[y].y.cmp(e3[b].y.redNeg()) === 0 ? (m[1] = e3[y].toJ().mixedAdd(e3[b]), m[2] = e3[y].add(e3[b].neg())) : (m[1] = e3[y].toJ().mixedAdd(e3[b]), m[2] = e3[y].toJ().mixedAdd(e3[b].neg()));
            var v = [-3, -1, -5, -7, 0, 7, 5, 1, 3], g = a(r3[y], r3[b]);
            for (p = Math.max(g[0].length, p), h[y] = new Array(p), h[b] = new Array(p), c2 = 0;c2 < p; c2++) {
              var _ = 0 | g[0][c2], w = 0 | g[1][c2];
              h[y][c2] = v[3 * (_ + 1) + (w + 1)], h[b][c2] = 0, l[y] = m;
            }
          } else
            h[y] = o(r3[y], f[y], this._bitLength), h[b] = o(r3[b], f[b], this._bitLength), p = Math.max(h[y].length, p), p = Math.max(h[b].length, p);
        }
        var S = this.jpoint(null, null, null), O = this._wnafT4;
        for (s2 = p;s2 >= 0; s2--) {
          for (var j = 0;s2 >= 0; ) {
            var $ = true;
            for (c2 = 0;c2 < n2; c2++)
              O[c2] = 0 | h[c2][s2], O[c2] !== 0 && ($ = false);
            if (!$)
              break;
            j++, s2--;
          }
          if (s2 >= 0 && j++, S = S.dblp(j), s2 < 0)
            break;
          for (c2 = 0;c2 < n2; c2++) {
            var A = O[c2];
            A !== 0 && (A > 0 ? u2 = l[c2][A - 1 >> 1] : A < 0 && (u2 = l[c2][-A - 1 >> 1].neg()), S = u2.type === "affine" ? S.mixedAdd(u2) : S.add(u2));
          }
        }
        for (s2 = 0;s2 < n2; s2++)
          l[s2] = null;
        return i2 ? S : S.toP();
      }, c.BasePoint = u, u.prototype.eq = function() {
        throw new Error("Not implemented");
      }, u.prototype.validate = function() {
        return this.curve.validate(this);
      }, c.prototype.decodePoint = function(t4, e3) {
        t4 = i.toArray(t4, e3);
        var r3 = this.p.byteLength();
        if ((t4[0] === 4 || t4[0] === 6 || t4[0] === 7) && t4.length - 1 == 2 * r3)
          return t4[0] === 6 ? s(t4[t4.length - 1] % 2 == 0) : t4[0] === 7 && s(t4[t4.length - 1] % 2 == 1), this.point(t4.slice(1, 1 + r3), t4.slice(1 + r3, 1 + 2 * r3));
        if ((t4[0] === 2 || t4[0] === 3) && t4.length - 1 === r3)
          return this.pointFromX(t4.slice(1, 1 + r3), t4[0] === 3);
        throw new Error("Unknown point format");
      }, u.prototype.encodeCompressed = function(t4) {
        return this.encode(t4, true);
      }, u.prototype._encode = function(t4) {
        var e3 = this.curve.p.byteLength(), r3 = this.getX().toArray("be", e3);
        return t4 ? [this.getY().isEven() ? 2 : 3].concat(r3) : [4].concat(r3, this.getY().toArray("be", e3));
      }, u.prototype.encode = function(t4, e3) {
        return i.encode(this._encode(e3), t4);
      }, u.prototype.precompute = function(t4) {
        if (this.precomputed)
          return this;
        var e3 = { doubles: null, naf: null, beta: null };
        return e3.naf = this._getNAFPoints(8), e3.doubles = this._getDoubles(4, t4), e3.beta = this._getBeta(), this.precomputed = e3, this;
      }, u.prototype._hasDoubles = function(t4) {
        if (!this.precomputed)
          return false;
        var e3 = this.precomputed.doubles;
        return !!e3 && e3.points.length >= Math.ceil((t4.bitLength() + 1) / e3.step);
      }, u.prototype._getDoubles = function(t4, e3) {
        if (this.precomputed && this.precomputed.doubles)
          return this.precomputed.doubles;
        for (var r3 = [this], n2 = this, i2 = 0;i2 < e3; i2 += t4) {
          for (var o2 = 0;o2 < t4; o2++)
            n2 = n2.dbl();
          r3.push(n2);
        }
        return { step: t4, points: r3 };
      }, u.prototype._getNAFPoints = function(t4) {
        if (this.precomputed && this.precomputed.naf)
          return this.precomputed.naf;
        for (var e3 = [this], r3 = (1 << t4) - 1, n2 = r3 === 1 ? null : this.dbl(), i2 = 1;i2 < r3; i2++)
          e3[i2] = e3[i2 - 1].add(n2);
        return { wnd: t4, points: e3 };
      }, u.prototype._getBeta = function() {
        return null;
      }, u.prototype.dblp = function(t4) {
        for (var e3 = this, r3 = 0;r3 < t4; r3++)
          e3 = e3.dbl();
        return e3;
      };
    }, 9723: (t3, e2, r2) => {
      var n = r2(1970), i = r2(7799), o = r2(1679), a = r2(3334), s = n.assert;
      function c(t4) {
        this.twisted = (0 | t4.a) != 1, this.mOneA = this.twisted && (0 | t4.a) == -1, this.extended = this.mOneA, a.call(this, "edwards", t4), this.a = new i(t4.a, 16).umod(this.red.m), this.a = this.a.toRed(this.red), this.c = new i(t4.c, 16).toRed(this.red), this.c2 = this.c.redSqr(), this.d = new i(t4.d, 16).toRed(this.red), this.dd = this.d.redAdd(this.d), s(!this.twisted || this.c.fromRed().cmpn(1) === 0), this.oneC = (0 | t4.c) == 1;
      }
      function u(t4, e3, r3, n2, o2) {
        a.BasePoint.call(this, t4, "projective"), e3 === null && r3 === null && n2 === null ? (this.x = this.curve.zero, this.y = this.curve.one, this.z = this.curve.one, this.t = this.curve.zero, this.zOne = true) : (this.x = new i(e3, 16), this.y = new i(r3, 16), this.z = n2 ? new i(n2, 16) : this.curve.one, this.t = o2 && new i(o2, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)), this.zOne = this.z === this.curve.one, this.curve.extended && !this.t && (this.t = this.x.redMul(this.y), this.zOne || (this.t = this.t.redMul(this.z.redInvm()))));
      }
      o(c, a), t3.exports = c, c.prototype._mulA = function(t4) {
        return this.mOneA ? t4.redNeg() : this.a.redMul(t4);
      }, c.prototype._mulC = function(t4) {
        return this.oneC ? t4 : this.c.redMul(t4);
      }, c.prototype.jpoint = function(t4, e3, r3, n2) {
        return this.point(t4, e3, r3, n2);
      }, c.prototype.pointFromX = function(t4, e3) {
        (t4 = new i(t4, 16)).red || (t4 = t4.toRed(this.red));
        var r3 = t4.redSqr(), n2 = this.c2.redSub(this.a.redMul(r3)), o2 = this.one.redSub(this.c2.redMul(this.d).redMul(r3)), a2 = n2.redMul(o2.redInvm()), s2 = a2.redSqrt();
        if (s2.redSqr().redSub(a2).cmp(this.zero) !== 0)
          throw new Error("invalid point");
        var c2 = s2.fromRed().isOdd();
        return (e3 && !c2 || !e3 && c2) && (s2 = s2.redNeg()), this.point(t4, s2);
      }, c.prototype.pointFromY = function(t4, e3) {
        (t4 = new i(t4, 16)).red || (t4 = t4.toRed(this.red));
        var r3 = t4.redSqr(), n2 = r3.redSub(this.c2), o2 = r3.redMul(this.d).redMul(this.c2).redSub(this.a), a2 = n2.redMul(o2.redInvm());
        if (a2.cmp(this.zero) === 0) {
          if (e3)
            throw new Error("invalid point");
          return this.point(this.zero, t4);
        }
        var s2 = a2.redSqrt();
        if (s2.redSqr().redSub(a2).cmp(this.zero) !== 0)
          throw new Error("invalid point");
        return s2.fromRed().isOdd() !== e3 && (s2 = s2.redNeg()), this.point(s2, t4);
      }, c.prototype.validate = function(t4) {
        if (t4.isInfinity())
          return true;
        t4.normalize();
        var e3 = t4.x.redSqr(), r3 = t4.y.redSqr(), n2 = e3.redMul(this.a).redAdd(r3), i2 = this.c2.redMul(this.one.redAdd(this.d.redMul(e3).redMul(r3)));
        return n2.cmp(i2) === 0;
      }, o(u, a.BasePoint), c.prototype.pointFromJSON = function(t4) {
        return u.fromJSON(this, t4);
      }, c.prototype.point = function(t4, e3, r3, n2) {
        return new u(this, t4, e3, r3, n2);
      }, u.fromJSON = function(t4, e3) {
        return new u(t4, e3[0], e3[1], e3[2]);
      }, u.prototype.inspect = function() {
        return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
      }, u.prototype.isInfinity = function() {
        return this.x.cmpn(0) === 0 && (this.y.cmp(this.z) === 0 || this.zOne && this.y.cmp(this.curve.c) === 0);
      }, u.prototype._extDbl = function() {
        var t4 = this.x.redSqr(), e3 = this.y.redSqr(), r3 = this.z.redSqr();
        r3 = r3.redIAdd(r3);
        var n2 = this.curve._mulA(t4), i2 = this.x.redAdd(this.y).redSqr().redISub(t4).redISub(e3), o2 = n2.redAdd(e3), a2 = o2.redSub(r3), s2 = n2.redSub(e3), c2 = i2.redMul(a2), u2 = o2.redMul(s2), f = i2.redMul(s2), l = a2.redMul(o2);
        return this.curve.point(c2, u2, l, f);
      }, u.prototype._projDbl = function() {
        var t4, e3, r3, n2, i2, o2, a2 = this.x.redAdd(this.y).redSqr(), s2 = this.x.redSqr(), c2 = this.y.redSqr();
        if (this.curve.twisted) {
          var u2 = (n2 = this.curve._mulA(s2)).redAdd(c2);
          this.zOne ? (t4 = a2.redSub(s2).redSub(c2).redMul(u2.redSub(this.curve.two)), e3 = u2.redMul(n2.redSub(c2)), r3 = u2.redSqr().redSub(u2).redSub(u2)) : (i2 = this.z.redSqr(), o2 = u2.redSub(i2).redISub(i2), t4 = a2.redSub(s2).redISub(c2).redMul(o2), e3 = u2.redMul(n2.redSub(c2)), r3 = u2.redMul(o2));
        } else
          n2 = s2.redAdd(c2), i2 = this.curve._mulC(this.z).redSqr(), o2 = n2.redSub(i2).redSub(i2), t4 = this.curve._mulC(a2.redISub(n2)).redMul(o2), e3 = this.curve._mulC(n2).redMul(s2.redISub(c2)), r3 = n2.redMul(o2);
        return this.curve.point(t4, e3, r3);
      }, u.prototype.dbl = function() {
        return this.isInfinity() ? this : this.curve.extended ? this._extDbl() : this._projDbl();
      }, u.prototype._extAdd = function(t4) {
        var e3 = this.y.redSub(this.x).redMul(t4.y.redSub(t4.x)), r3 = this.y.redAdd(this.x).redMul(t4.y.redAdd(t4.x)), n2 = this.t.redMul(this.curve.dd).redMul(t4.t), i2 = this.z.redMul(t4.z.redAdd(t4.z)), o2 = r3.redSub(e3), a2 = i2.redSub(n2), s2 = i2.redAdd(n2), c2 = r3.redAdd(e3), u2 = o2.redMul(a2), f = s2.redMul(c2), l = o2.redMul(c2), h = a2.redMul(s2);
        return this.curve.point(u2, f, h, l);
      }, u.prototype._projAdd = function(t4) {
        var e3, r3, n2 = this.z.redMul(t4.z), i2 = n2.redSqr(), o2 = this.x.redMul(t4.x), a2 = this.y.redMul(t4.y), s2 = this.curve.d.redMul(o2).redMul(a2), c2 = i2.redSub(s2), u2 = i2.redAdd(s2), f = this.x.redAdd(this.y).redMul(t4.x.redAdd(t4.y)).redISub(o2).redISub(a2), l = n2.redMul(c2).redMul(f);
        return this.curve.twisted ? (e3 = n2.redMul(u2).redMul(a2.redSub(this.curve._mulA(o2))), r3 = c2.redMul(u2)) : (e3 = n2.redMul(u2).redMul(a2.redSub(o2)), r3 = this.curve._mulC(c2).redMul(u2)), this.curve.point(l, e3, r3);
      }, u.prototype.add = function(t4) {
        return this.isInfinity() ? t4 : t4.isInfinity() ? this : this.curve.extended ? this._extAdd(t4) : this._projAdd(t4);
      }, u.prototype.mul = function(t4) {
        return this._hasDoubles(t4) ? this.curve._fixedNafMul(this, t4) : this.curve._wnafMul(this, t4);
      }, u.prototype.mulAdd = function(t4, e3, r3) {
        return this.curve._wnafMulAdd(1, [this, e3], [t4, r3], 2, false);
      }, u.prototype.jmulAdd = function(t4, e3, r3) {
        return this.curve._wnafMulAdd(1, [this, e3], [t4, r3], 2, true);
      }, u.prototype.normalize = function() {
        if (this.zOne)
          return this;
        var t4 = this.z.redInvm();
        return this.x = this.x.redMul(t4), this.y = this.y.redMul(t4), this.t && (this.t = this.t.redMul(t4)), this.z = this.curve.one, this.zOne = true, this;
      }, u.prototype.neg = function() {
        return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());
      }, u.prototype.getX = function() {
        return this.normalize(), this.x.fromRed();
      }, u.prototype.getY = function() {
        return this.normalize(), this.y.fromRed();
      }, u.prototype.eq = function(t4) {
        return this === t4 || this.getX().cmp(t4.getX()) === 0 && this.getY().cmp(t4.getY()) === 0;
      }, u.prototype.eqXToP = function(t4) {
        var e3 = t4.toRed(this.curve.red).redMul(this.z);
        if (this.x.cmp(e3) === 0)
          return true;
        for (var r3 = t4.clone(), n2 = this.curve.redN.redMul(this.z);; ) {
          if (r3.iadd(this.curve.n), r3.cmp(this.curve.p) >= 0)
            return false;
          if (e3.redIAdd(n2), this.x.cmp(e3) === 0)
            return true;
        }
      }, u.prototype.toP = u.prototype.normalize, u.prototype.mixedAdd = u.prototype.add;
    }, 5803: (t3, e2, r2) => {
      var n = e2;
      n.base = r2(3334), n.short = r2(5045), n.mont = r2(3453), n.edwards = r2(9723);
    }, 3453: (t3, e2, r2) => {
      var n = r2(7799), i = r2(1679), o = r2(3334), a = r2(1970);
      function s(t4) {
        o.call(this, "mont", t4), this.a = new n(t4.a, 16).toRed(this.red), this.b = new n(t4.b, 16).toRed(this.red), this.i4 = new n(4).toRed(this.red).redInvm(), this.two = new n(2).toRed(this.red), this.a24 = this.i4.redMul(this.a.redAdd(this.two));
      }
      function c(t4, e3, r3) {
        o.BasePoint.call(this, t4, "projective"), e3 === null && r3 === null ? (this.x = this.curve.one, this.z = this.curve.zero) : (this.x = new n(e3, 16), this.z = new n(r3, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)));
      }
      i(s, o), t3.exports = s, s.prototype.validate = function(t4) {
        var e3 = t4.normalize().x, r3 = e3.redSqr(), n2 = r3.redMul(e3).redAdd(r3.redMul(this.a)).redAdd(e3);
        return n2.redSqrt().redSqr().cmp(n2) === 0;
      }, i(c, o.BasePoint), s.prototype.decodePoint = function(t4, e3) {
        return this.point(a.toArray(t4, e3), 1);
      }, s.prototype.point = function(t4, e3) {
        return new c(this, t4, e3);
      }, s.prototype.pointFromJSON = function(t4) {
        return c.fromJSON(this, t4);
      }, c.prototype.precompute = function() {
      }, c.prototype._encode = function() {
        return this.getX().toArray("be", this.curve.p.byteLength());
      }, c.fromJSON = function(t4, e3) {
        return new c(t4, e3[0], e3[1] || t4.one);
      }, c.prototype.inspect = function() {
        return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
      }, c.prototype.isInfinity = function() {
        return this.z.cmpn(0) === 0;
      }, c.prototype.dbl = function() {
        var t4 = this.x.redAdd(this.z).redSqr(), e3 = this.x.redSub(this.z).redSqr(), r3 = t4.redSub(e3), n2 = t4.redMul(e3), i2 = r3.redMul(e3.redAdd(this.curve.a24.redMul(r3)));
        return this.curve.point(n2, i2);
      }, c.prototype.add = function() {
        throw new Error("Not supported on Montgomery curve");
      }, c.prototype.diffAdd = function(t4, e3) {
        var r3 = this.x.redAdd(this.z), n2 = this.x.redSub(this.z), i2 = t4.x.redAdd(t4.z), o2 = t4.x.redSub(t4.z).redMul(r3), a2 = i2.redMul(n2), s2 = e3.z.redMul(o2.redAdd(a2).redSqr()), c2 = e3.x.redMul(o2.redISub(a2).redSqr());
        return this.curve.point(s2, c2);
      }, c.prototype.mul = function(t4) {
        for (var e3 = t4.clone(), r3 = this, n2 = this.curve.point(null, null), i2 = [];e3.cmpn(0) !== 0; e3.iushrn(1))
          i2.push(e3.andln(1));
        for (var o2 = i2.length - 1;o2 >= 0; o2--)
          i2[o2] === 0 ? (r3 = r3.diffAdd(n2, this), n2 = n2.dbl()) : (n2 = r3.diffAdd(n2, this), r3 = r3.dbl());
        return n2;
      }, c.prototype.mulAdd = function() {
        throw new Error("Not supported on Montgomery curve");
      }, c.prototype.jumlAdd = function() {
        throw new Error("Not supported on Montgomery curve");
      }, c.prototype.eq = function(t4) {
        return this.getX().cmp(t4.getX()) === 0;
      }, c.prototype.normalize = function() {
        return this.x = this.x.redMul(this.z.redInvm()), this.z = this.curve.one, this;
      }, c.prototype.getX = function() {
        return this.normalize(), this.x.fromRed();
      };
    }, 5045: (t3, e2, r2) => {
      var n = r2(1970), i = r2(7799), o = r2(1679), a = r2(3334), s = n.assert;
      function c(t4) {
        a.call(this, "short", t4), this.a = new i(t4.a, 16).toRed(this.red), this.b = new i(t4.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = this.a.fromRed().cmpn(0) === 0, this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0, this.endo = this._getEndomorphism(t4), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);
      }
      function u(t4, e3, r3, n2) {
        a.BasePoint.call(this, t4, "affine"), e3 === null && r3 === null ? (this.x = null, this.y = null, this.inf = true) : (this.x = new i(e3, 16), this.y = new i(r3, 16), n2 && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = false);
      }
      function f(t4, e3, r3, n2) {
        a.BasePoint.call(this, t4, "jacobian"), e3 === null && r3 === null && n2 === null ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new i(0)) : (this.x = new i(e3, 16), this.y = new i(r3, 16), this.z = new i(n2, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;
      }
      o(c, a), t3.exports = c, c.prototype._getEndomorphism = function(t4) {
        if (this.zeroA && this.g && this.n && this.p.modn(3) === 1) {
          var e3, r3;
          if (t4.beta)
            e3 = new i(t4.beta, 16).toRed(this.red);
          else {
            var n2 = this._getEndoRoots(this.p);
            e3 = (e3 = n2[0].cmp(n2[1]) < 0 ? n2[0] : n2[1]).toRed(this.red);
          }
          if (t4.lambda)
            r3 = new i(t4.lambda, 16);
          else {
            var o2 = this._getEndoRoots(this.n);
            this.g.mul(o2[0]).x.cmp(this.g.x.redMul(e3)) === 0 ? r3 = o2[0] : (r3 = o2[1], s(this.g.mul(r3).x.cmp(this.g.x.redMul(e3)) === 0));
          }
          return { beta: e3, lambda: r3, basis: t4.basis ? t4.basis.map(function(t5) {
            return { a: new i(t5.a, 16), b: new i(t5.b, 16) };
          }) : this._getEndoBasis(r3) };
        }
      }, c.prototype._getEndoRoots = function(t4) {
        var e3 = t4 === this.p ? this.red : i.mont(t4), r3 = new i(2).toRed(e3).redInvm(), n2 = r3.redNeg(), o2 = new i(3).toRed(e3).redNeg().redSqrt().redMul(r3);
        return [n2.redAdd(o2).fromRed(), n2.redSub(o2).fromRed()];
      }, c.prototype._getEndoBasis = function(t4) {
        for (var e3, r3, n2, o2, a2, s2, c2, u2, f2, l = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), h = t4, p = this.n.clone(), d = new i(1), y = new i(0), b = new i(0), m = new i(1), v = 0;h.cmpn(0) !== 0; ) {
          var g = p.div(h);
          u2 = p.sub(g.mul(h)), f2 = b.sub(g.mul(d));
          var _ = m.sub(g.mul(y));
          if (!n2 && u2.cmp(l) < 0)
            e3 = c2.neg(), r3 = d, n2 = u2.neg(), o2 = f2;
          else if (n2 && ++v == 2)
            break;
          c2 = u2, p = h, h = u2, b = d, d = f2, m = y, y = _;
        }
        a2 = u2.neg(), s2 = f2;
        var w = n2.sqr().add(o2.sqr());
        return a2.sqr().add(s2.sqr()).cmp(w) >= 0 && (a2 = e3, s2 = r3), n2.negative && (n2 = n2.neg(), o2 = o2.neg()), a2.negative && (a2 = a2.neg(), s2 = s2.neg()), [{ a: n2, b: o2 }, { a: a2, b: s2 }];
      }, c.prototype._endoSplit = function(t4) {
        var e3 = this.endo.basis, r3 = e3[0], n2 = e3[1], i2 = n2.b.mul(t4).divRound(this.n), o2 = r3.b.neg().mul(t4).divRound(this.n), a2 = i2.mul(r3.a), s2 = o2.mul(n2.a), c2 = i2.mul(r3.b), u2 = o2.mul(n2.b);
        return { k1: t4.sub(a2).sub(s2), k2: c2.add(u2).neg() };
      }, c.prototype.pointFromX = function(t4, e3) {
        (t4 = new i(t4, 16)).red || (t4 = t4.toRed(this.red));
        var r3 = t4.redSqr().redMul(t4).redIAdd(t4.redMul(this.a)).redIAdd(this.b), n2 = r3.redSqrt();
        if (n2.redSqr().redSub(r3).cmp(this.zero) !== 0)
          throw new Error("invalid point");
        var o2 = n2.fromRed().isOdd();
        return (e3 && !o2 || !e3 && o2) && (n2 = n2.redNeg()), this.point(t4, n2);
      }, c.prototype.validate = function(t4) {
        if (t4.inf)
          return true;
        var { x: e3, y: r3 } = t4, n2 = this.a.redMul(e3), i2 = e3.redSqr().redMul(e3).redIAdd(n2).redIAdd(this.b);
        return r3.redSqr().redISub(i2).cmpn(0) === 0;
      }, c.prototype._endoWnafMulAdd = function(t4, e3, r3) {
        for (var n2 = this._endoWnafT1, i2 = this._endoWnafT2, o2 = 0;o2 < t4.length; o2++) {
          var a2 = this._endoSplit(e3[o2]), s2 = t4[o2], c2 = s2._getBeta();
          a2.k1.negative && (a2.k1.ineg(), s2 = s2.neg(true)), a2.k2.negative && (a2.k2.ineg(), c2 = c2.neg(true)), n2[2 * o2] = s2, n2[2 * o2 + 1] = c2, i2[2 * o2] = a2.k1, i2[2 * o2 + 1] = a2.k2;
        }
        for (var u2 = this._wnafMulAdd(1, n2, i2, 2 * o2, r3), f2 = 0;f2 < 2 * o2; f2++)
          n2[f2] = null, i2[f2] = null;
        return u2;
      }, o(u, a.BasePoint), c.prototype.point = function(t4, e3, r3) {
        return new u(this, t4, e3, r3);
      }, c.prototype.pointFromJSON = function(t4, e3) {
        return u.fromJSON(this, t4, e3);
      }, u.prototype._getBeta = function() {
        if (this.curve.endo) {
          var t4 = this.precomputed;
          if (t4 && t4.beta)
            return t4.beta;
          var e3 = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
          if (t4) {
            var r3 = this.curve, n2 = function(t5) {
              return r3.point(t5.x.redMul(r3.endo.beta), t5.y);
            };
            t4.beta = e3, e3.precomputed = { beta: null, naf: t4.naf && { wnd: t4.naf.wnd, points: t4.naf.points.map(n2) }, doubles: t4.doubles && { step: t4.doubles.step, points: t4.doubles.points.map(n2) } };
          }
          return e3;
        }
      }, u.prototype.toJSON = function() {
        return this.precomputed ? [this.x, this.y, this.precomputed && { doubles: this.precomputed.doubles && { step: this.precomputed.doubles.step, points: this.precomputed.doubles.points.slice(1) }, naf: this.precomputed.naf && { wnd: this.precomputed.naf.wnd, points: this.precomputed.naf.points.slice(1) } }] : [this.x, this.y];
      }, u.fromJSON = function(t4, e3, r3) {
        typeof e3 == "string" && (e3 = JSON.parse(e3));
        var n2 = t4.point(e3[0], e3[1], r3);
        if (!e3[2])
          return n2;
        function i2(e4) {
          return t4.point(e4[0], e4[1], r3);
        }
        var o2 = e3[2];
        return n2.precomputed = { beta: null, doubles: o2.doubles && { step: o2.doubles.step, points: [n2].concat(o2.doubles.points.map(i2)) }, naf: o2.naf && { wnd: o2.naf.wnd, points: [n2].concat(o2.naf.points.map(i2)) } }, n2;
      }, u.prototype.inspect = function() {
        return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
      }, u.prototype.isInfinity = function() {
        return this.inf;
      }, u.prototype.add = function(t4) {
        if (this.inf)
          return t4;
        if (t4.inf)
          return this;
        if (this.eq(t4))
          return this.dbl();
        if (this.neg().eq(t4))
          return this.curve.point(null, null);
        if (this.x.cmp(t4.x) === 0)
          return this.curve.point(null, null);
        var e3 = this.y.redSub(t4.y);
        e3.cmpn(0) !== 0 && (e3 = e3.redMul(this.x.redSub(t4.x).redInvm()));
        var r3 = e3.redSqr().redISub(this.x).redISub(t4.x), n2 = e3.redMul(this.x.redSub(r3)).redISub(this.y);
        return this.curve.point(r3, n2);
      }, u.prototype.dbl = function() {
        if (this.inf)
          return this;
        var t4 = this.y.redAdd(this.y);
        if (t4.cmpn(0) === 0)
          return this.curve.point(null, null);
        var e3 = this.curve.a, r3 = this.x.redSqr(), n2 = t4.redInvm(), i2 = r3.redAdd(r3).redIAdd(r3).redIAdd(e3).redMul(n2), o2 = i2.redSqr().redISub(this.x.redAdd(this.x)), a2 = i2.redMul(this.x.redSub(o2)).redISub(this.y);
        return this.curve.point(o2, a2);
      }, u.prototype.getX = function() {
        return this.x.fromRed();
      }, u.prototype.getY = function() {
        return this.y.fromRed();
      }, u.prototype.mul = function(t4) {
        return t4 = new i(t4, 16), this.isInfinity() ? this : this._hasDoubles(t4) ? this.curve._fixedNafMul(this, t4) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [t4]) : this.curve._wnafMul(this, t4);
      }, u.prototype.mulAdd = function(t4, e3, r3) {
        var n2 = [this, e3], i2 = [t4, r3];
        return this.curve.endo ? this.curve._endoWnafMulAdd(n2, i2) : this.curve._wnafMulAdd(1, n2, i2, 2);
      }, u.prototype.jmulAdd = function(t4, e3, r3) {
        var n2 = [this, e3], i2 = [t4, r3];
        return this.curve.endo ? this.curve._endoWnafMulAdd(n2, i2, true) : this.curve._wnafMulAdd(1, n2, i2, 2, true);
      }, u.prototype.eq = function(t4) {
        return this === t4 || this.inf === t4.inf && (this.inf || this.x.cmp(t4.x) === 0 && this.y.cmp(t4.y) === 0);
      }, u.prototype.neg = function(t4) {
        if (this.inf)
          return this;
        var e3 = this.curve.point(this.x, this.y.redNeg());
        if (t4 && this.precomputed) {
          var r3 = this.precomputed, n2 = function(t5) {
            return t5.neg();
          };
          e3.precomputed = { naf: r3.naf && { wnd: r3.naf.wnd, points: r3.naf.points.map(n2) }, doubles: r3.doubles && { step: r3.doubles.step, points: r3.doubles.points.map(n2) } };
        }
        return e3;
      }, u.prototype.toJ = function() {
        return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one);
      }, o(f, a.BasePoint), c.prototype.jpoint = function(t4, e3, r3) {
        return new f(this, t4, e3, r3);
      }, f.prototype.toP = function() {
        if (this.isInfinity())
          return this.curve.point(null, null);
        var t4 = this.z.redInvm(), e3 = t4.redSqr(), r3 = this.x.redMul(e3), n2 = this.y.redMul(e3).redMul(t4);
        return this.curve.point(r3, n2);
      }, f.prototype.neg = function() {
        return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
      }, f.prototype.add = function(t4) {
        if (this.isInfinity())
          return t4;
        if (t4.isInfinity())
          return this;
        var e3 = t4.z.redSqr(), r3 = this.z.redSqr(), n2 = this.x.redMul(e3), i2 = t4.x.redMul(r3), o2 = this.y.redMul(e3.redMul(t4.z)), a2 = t4.y.redMul(r3.redMul(this.z)), s2 = n2.redSub(i2), c2 = o2.redSub(a2);
        if (s2.cmpn(0) === 0)
          return c2.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
        var u2 = s2.redSqr(), f2 = u2.redMul(s2), l = n2.redMul(u2), h = c2.redSqr().redIAdd(f2).redISub(l).redISub(l), p = c2.redMul(l.redISub(h)).redISub(o2.redMul(f2)), d = this.z.redMul(t4.z).redMul(s2);
        return this.curve.jpoint(h, p, d);
      }, f.prototype.mixedAdd = function(t4) {
        if (this.isInfinity())
          return t4.toJ();
        if (t4.isInfinity())
          return this;
        var e3 = this.z.redSqr(), r3 = this.x, n2 = t4.x.redMul(e3), i2 = this.y, o2 = t4.y.redMul(e3).redMul(this.z), a2 = r3.redSub(n2), s2 = i2.redSub(o2);
        if (a2.cmpn(0) === 0)
          return s2.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
        var c2 = a2.redSqr(), u2 = c2.redMul(a2), f2 = r3.redMul(c2), l = s2.redSqr().redIAdd(u2).redISub(f2).redISub(f2), h = s2.redMul(f2.redISub(l)).redISub(i2.redMul(u2)), p = this.z.redMul(a2);
        return this.curve.jpoint(l, h, p);
      }, f.prototype.dblp = function(t4) {
        if (t4 === 0)
          return this;
        if (this.isInfinity())
          return this;
        if (!t4)
          return this.dbl();
        var e3;
        if (this.curve.zeroA || this.curve.threeA) {
          var r3 = this;
          for (e3 = 0;e3 < t4; e3++)
            r3 = r3.dbl();
          return r3;
        }
        var n2 = this.curve.a, i2 = this.curve.tinv, o2 = this.x, a2 = this.y, s2 = this.z, c2 = s2.redSqr().redSqr(), u2 = a2.redAdd(a2);
        for (e3 = 0;e3 < t4; e3++) {
          var f2 = o2.redSqr(), l = u2.redSqr(), h = l.redSqr(), p = f2.redAdd(f2).redIAdd(f2).redIAdd(n2.redMul(c2)), d = o2.redMul(l), y = p.redSqr().redISub(d.redAdd(d)), b = d.redISub(y), m = p.redMul(b);
          m = m.redIAdd(m).redISub(h);
          var v = u2.redMul(s2);
          e3 + 1 < t4 && (c2 = c2.redMul(h)), o2 = y, s2 = v, u2 = m;
        }
        return this.curve.jpoint(o2, u2.redMul(i2), s2);
      }, f.prototype.dbl = function() {
        return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
      }, f.prototype._zeroDbl = function() {
        var t4, e3, r3;
        if (this.zOne) {
          var n2 = this.x.redSqr(), i2 = this.y.redSqr(), o2 = i2.redSqr(), a2 = this.x.redAdd(i2).redSqr().redISub(n2).redISub(o2);
          a2 = a2.redIAdd(a2);
          var s2 = n2.redAdd(n2).redIAdd(n2), c2 = s2.redSqr().redISub(a2).redISub(a2), u2 = o2.redIAdd(o2);
          u2 = (u2 = u2.redIAdd(u2)).redIAdd(u2), t4 = c2, e3 = s2.redMul(a2.redISub(c2)).redISub(u2), r3 = this.y.redAdd(this.y);
        } else {
          var f2 = this.x.redSqr(), l = this.y.redSqr(), h = l.redSqr(), p = this.x.redAdd(l).redSqr().redISub(f2).redISub(h);
          p = p.redIAdd(p);
          var d = f2.redAdd(f2).redIAdd(f2), y = d.redSqr(), b = h.redIAdd(h);
          b = (b = b.redIAdd(b)).redIAdd(b), t4 = y.redISub(p).redISub(p), e3 = d.redMul(p.redISub(t4)).redISub(b), r3 = (r3 = this.y.redMul(this.z)).redIAdd(r3);
        }
        return this.curve.jpoint(t4, e3, r3);
      }, f.prototype._threeDbl = function() {
        var t4, e3, r3;
        if (this.zOne) {
          var n2 = this.x.redSqr(), i2 = this.y.redSqr(), o2 = i2.redSqr(), a2 = this.x.redAdd(i2).redSqr().redISub(n2).redISub(o2);
          a2 = a2.redIAdd(a2);
          var s2 = n2.redAdd(n2).redIAdd(n2).redIAdd(this.curve.a), c2 = s2.redSqr().redISub(a2).redISub(a2);
          t4 = c2;
          var u2 = o2.redIAdd(o2);
          u2 = (u2 = u2.redIAdd(u2)).redIAdd(u2), e3 = s2.redMul(a2.redISub(c2)).redISub(u2), r3 = this.y.redAdd(this.y);
        } else {
          var f2 = this.z.redSqr(), l = this.y.redSqr(), h = this.x.redMul(l), p = this.x.redSub(f2).redMul(this.x.redAdd(f2));
          p = p.redAdd(p).redIAdd(p);
          var d = h.redIAdd(h), y = (d = d.redIAdd(d)).redAdd(d);
          t4 = p.redSqr().redISub(y), r3 = this.y.redAdd(this.z).redSqr().redISub(l).redISub(f2);
          var b = l.redSqr();
          b = (b = (b = b.redIAdd(b)).redIAdd(b)).redIAdd(b), e3 = p.redMul(d.redISub(t4)).redISub(b);
        }
        return this.curve.jpoint(t4, e3, r3);
      }, f.prototype._dbl = function() {
        var t4 = this.curve.a, e3 = this.x, r3 = this.y, n2 = this.z, i2 = n2.redSqr().redSqr(), o2 = e3.redSqr(), a2 = r3.redSqr(), s2 = o2.redAdd(o2).redIAdd(o2).redIAdd(t4.redMul(i2)), c2 = e3.redAdd(e3), u2 = (c2 = c2.redIAdd(c2)).redMul(a2), f2 = s2.redSqr().redISub(u2.redAdd(u2)), l = u2.redISub(f2), h = a2.redSqr();
        h = (h = (h = h.redIAdd(h)).redIAdd(h)).redIAdd(h);
        var p = s2.redMul(l).redISub(h), d = r3.redAdd(r3).redMul(n2);
        return this.curve.jpoint(f2, p, d);
      }, f.prototype.trpl = function() {
        if (!this.curve.zeroA)
          return this.dbl().add(this);
        var t4 = this.x.redSqr(), e3 = this.y.redSqr(), r3 = this.z.redSqr(), n2 = e3.redSqr(), i2 = t4.redAdd(t4).redIAdd(t4), o2 = i2.redSqr(), a2 = this.x.redAdd(e3).redSqr().redISub(t4).redISub(n2), s2 = (a2 = (a2 = (a2 = a2.redIAdd(a2)).redAdd(a2).redIAdd(a2)).redISub(o2)).redSqr(), c2 = n2.redIAdd(n2);
        c2 = (c2 = (c2 = c2.redIAdd(c2)).redIAdd(c2)).redIAdd(c2);
        var u2 = i2.redIAdd(a2).redSqr().redISub(o2).redISub(s2).redISub(c2), f2 = e3.redMul(u2);
        f2 = (f2 = f2.redIAdd(f2)).redIAdd(f2);
        var l = this.x.redMul(s2).redISub(f2);
        l = (l = l.redIAdd(l)).redIAdd(l);
        var h = this.y.redMul(u2.redMul(c2.redISub(u2)).redISub(a2.redMul(s2)));
        h = (h = (h = h.redIAdd(h)).redIAdd(h)).redIAdd(h);
        var p = this.z.redAdd(a2).redSqr().redISub(r3).redISub(s2);
        return this.curve.jpoint(l, h, p);
      }, f.prototype.mul = function(t4, e3) {
        return t4 = new i(t4, e3), this.curve._wnafMul(this, t4);
      }, f.prototype.eq = function(t4) {
        if (t4.type === "affine")
          return this.eq(t4.toJ());
        if (this === t4)
          return true;
        var e3 = this.z.redSqr(), r3 = t4.z.redSqr();
        if (this.x.redMul(r3).redISub(t4.x.redMul(e3)).cmpn(0) !== 0)
          return false;
        var n2 = e3.redMul(this.z), i2 = r3.redMul(t4.z);
        return this.y.redMul(i2).redISub(t4.y.redMul(n2)).cmpn(0) === 0;
      }, f.prototype.eqXToP = function(t4) {
        var e3 = this.z.redSqr(), r3 = t4.toRed(this.curve.red).redMul(e3);
        if (this.x.cmp(r3) === 0)
          return true;
        for (var n2 = t4.clone(), i2 = this.curve.redN.redMul(e3);; ) {
          if (n2.iadd(this.curve.n), n2.cmp(this.curve.p) >= 0)
            return false;
          if (r3.redIAdd(i2), this.x.cmp(r3) === 0)
            return true;
        }
      }, f.prototype.inspect = function() {
        return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
      }, f.prototype.isInfinity = function() {
        return this.z.cmpn(0) === 0;
      };
    }, 6379: (t3, e2, r2) => {
      var n, i = e2, o = r2(2859), a = r2(5803), s = r2(1970).assert;
      function c(t4) {
        t4.type === "short" ? this.curve = new a.short(t4) : t4.type === "edwards" ? this.curve = new a.edwards(t4) : this.curve = new a.mont(t4), this.g = this.curve.g, this.n = this.curve.n, this.hash = t4.hash, s(this.g.validate(), "Invalid curve"), s(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
      }
      function u(t4, e3) {
        Object.defineProperty(i, t4, { configurable: true, enumerable: true, get: function() {
          var r3 = new c(e3);
          return Object.defineProperty(i, t4, { configurable: true, enumerable: true, value: r3 }), r3;
        } });
      }
      i.PresetCurve = c, u("p192", { type: "short", prime: "p192", p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff", a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc", b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1", n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831", hash: o.sha256, gRed: false, g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"] }), u("p224", { type: "short", prime: "p224", p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001", a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe", b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4", n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d", hash: o.sha256, gRed: false, g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"] }), u("p256", { type: "short", prime: null, p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff", a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc", b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b", n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551", hash: o.sha256, gRed: false, g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"] }), u("p384", { type: "short", prime: null, p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff", a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc", b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef", n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973", hash: o.sha384, gRed: false, g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"] }), u("p521", { type: "short", prime: null, p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff", a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc", b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00", n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409", hash: o.sha512, gRed: false, g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"] }), u("curve25519", { type: "mont", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "76d06", b: "1", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: o.sha256, gRed: false, g: ["9"] }), u("ed25519", { type: "edwards", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "-1", c: "1", d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: o.sha256, gRed: false, g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"] });
      try {
        n = r2(5586);
      } catch (t4) {
        n = undefined;
      }
      u("secp256k1", { type: "short", prime: "k256", p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f", a: "0", b: "7", n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141", h: "1", hash: o.sha256, beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee", lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72", basis: [{ a: "3086d221a7d46bcde86c90e49284eb15", b: "-e4437ed6010e88286f547fa90abfe4c3" }, { a: "114ca50f7a8e2f3f657c1108d9d44cfd8", b: "3086d221a7d46bcde86c90e49284eb15" }], gRed: false, g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", n] });
    }, 7416: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      var i = r2(7799), o = r2(6934), a = r2(1970), s = r2(6379), c = r2(8904), u = a.assert, f = r2(3643), l = r2(3686);
      function h(t4) {
        if (!(this instanceof h))
          return new h(t4);
        typeof t4 == "string" && (u(Object.prototype.hasOwnProperty.call(s, t4), "Unknown curve " + t4), t4 = s[t4]), t4 instanceof s.PresetCurve && (t4 = { curve: t4 }), this.curve = t4.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = t4.curve.g, this.g.precompute(t4.curve.n.bitLength() + 1), this.hash = t4.hash || t4.curve.hash;
      }
      t3.exports = h, h.prototype.keyPair = function(t4) {
        return new f(this, t4);
      }, h.prototype.keyFromPrivate = function(t4, e3) {
        return f.fromPrivate(this, t4, e3);
      }, h.prototype.keyFromPublic = function(t4, e3) {
        return f.fromPublic(this, t4, e3);
      }, h.prototype.genKeyPair = function(t4) {
        t4 || (t4 = {});
        for (var e3 = new o({ hash: this.hash, pers: t4.pers, persEnc: t4.persEnc || "utf8", entropy: t4.entropy || c(this.hash.hmacStrength), entropyEnc: t4.entropy && t4.entropyEnc || "utf8", nonce: this.n.toArray() }), r3 = this.n.byteLength(), n2 = this.n.sub(new i(2));; ) {
          var a2 = new i(e3.generate(r3));
          if (!(a2.cmp(n2) > 0))
            return a2.iaddn(1), this.keyFromPrivate(a2);
        }
      }, h.prototype._truncateToN = function(t4, e3) {
        var r3 = 8 * t4.byteLength() - this.n.bitLength();
        return r3 > 0 && (t4 = t4.ushrn(r3)), !e3 && t4.cmp(this.n) >= 0 ? t4.sub(this.n) : t4;
      }, h.prototype.sign = function(t4, e3, r3, a2) {
        n(r3) === "object" && (a2 = r3, r3 = null), a2 || (a2 = {}), e3 = this.keyFromPrivate(e3, r3), t4 = this._truncateToN(new i(t4, 16));
        for (var s2 = this.n.byteLength(), c2 = e3.getPrivate().toArray("be", s2), u2 = t4.toArray("be", s2), f2 = new o({ hash: this.hash, entropy: c2, nonce: u2, pers: a2.pers, persEnc: a2.persEnc || "utf8" }), h2 = this.n.sub(new i(1)), p = 0;; p++) {
          var d = a2.k ? a2.k(p) : new i(f2.generate(this.n.byteLength()));
          if (!((d = this._truncateToN(d, true)).cmpn(1) <= 0 || d.cmp(h2) >= 0)) {
            var y = this.g.mul(d);
            if (!y.isInfinity()) {
              var b = y.getX(), m = b.umod(this.n);
              if (m.cmpn(0) !== 0) {
                var v = d.invm(this.n).mul(m.mul(e3.getPrivate()).iadd(t4));
                if ((v = v.umod(this.n)).cmpn(0) !== 0) {
                  var g = (y.getY().isOdd() ? 1 : 0) | (b.cmp(m) !== 0 ? 2 : 0);
                  return a2.canonical && v.cmp(this.nh) > 0 && (v = this.n.sub(v), g ^= 1), new l({ r: m, s: v, recoveryParam: g });
                }
              }
            }
          }
        }
      }, h.prototype.verify = function(t4, e3, r3, n2) {
        t4 = this._truncateToN(new i(t4, 16)), r3 = this.keyFromPublic(r3, n2);
        var o2 = (e3 = new l(e3, "hex")).r, a2 = e3.s;
        if (o2.cmpn(1) < 0 || o2.cmp(this.n) >= 0)
          return false;
        if (a2.cmpn(1) < 0 || a2.cmp(this.n) >= 0)
          return false;
        var s2, c2 = a2.invm(this.n), u2 = c2.mul(t4).umod(this.n), f2 = c2.mul(o2).umod(this.n);
        return this.curve._maxwellTrick ? !(s2 = this.g.jmulAdd(u2, r3.getPublic(), f2)).isInfinity() && s2.eqXToP(o2) : !(s2 = this.g.mulAdd(u2, r3.getPublic(), f2)).isInfinity() && s2.getX().umod(this.n).cmp(o2) === 0;
      }, h.prototype.recoverPubKey = function(t4, e3, r3, n2) {
        u((3 & r3) === r3, "The recovery param is more than two bits"), e3 = new l(e3, n2);
        var o2 = this.n, a2 = new i(t4), s2 = e3.r, c2 = e3.s, f2 = 1 & r3, h2 = r3 >> 1;
        if (s2.cmp(this.curve.p.umod(this.curve.n)) >= 0 && h2)
          throw new Error("Unable to find sencond key candinate");
        s2 = h2 ? this.curve.pointFromX(s2.add(this.curve.n), f2) : this.curve.pointFromX(s2, f2);
        var p = e3.r.invm(o2), d = o2.sub(a2).mul(p).umod(o2), y = c2.mul(p).umod(o2);
        return this.g.mulAdd(d, s2, y);
      }, h.prototype.getKeyRecoveryParam = function(t4, e3, r3, n2) {
        if ((e3 = new l(e3, n2)).recoveryParam !== null)
          return e3.recoveryParam;
        for (var i2 = 0;i2 < 4; i2++) {
          var o2;
          try {
            o2 = this.recoverPubKey(t4, e3, i2);
          } catch (t5) {
            continue;
          }
          if (o2.eq(r3))
            return i2;
        }
        throw new Error("Unable to find valid recovery factor");
      };
    }, 3643: (t3, e2, r2) => {
      var n = r2(7799), i = r2(1970).assert;
      function o(t4, e3) {
        this.ec = t4, this.priv = null, this.pub = null, e3.priv && this._importPrivate(e3.priv, e3.privEnc), e3.pub && this._importPublic(e3.pub, e3.pubEnc);
      }
      t3.exports = o, o.fromPublic = function(t4, e3, r3) {
        return e3 instanceof o ? e3 : new o(t4, { pub: e3, pubEnc: r3 });
      }, o.fromPrivate = function(t4, e3, r3) {
        return e3 instanceof o ? e3 : new o(t4, { priv: e3, privEnc: r3 });
      }, o.prototype.validate = function() {
        var t4 = this.getPublic();
        return t4.isInfinity() ? { result: false, reason: "Invalid public key" } : t4.validate() ? t4.mul(this.ec.curve.n).isInfinity() ? { result: true, reason: null } : { result: false, reason: "Public key * N != O" } : { result: false, reason: "Public key is not a point" };
      }, o.prototype.getPublic = function(t4, e3) {
        return typeof t4 == "string" && (e3 = t4, t4 = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), e3 ? this.pub.encode(e3, t4) : this.pub;
      }, o.prototype.getPrivate = function(t4) {
        return t4 === "hex" ? this.priv.toString(16, 2) : this.priv;
      }, o.prototype._importPrivate = function(t4, e3) {
        this.priv = new n(t4, e3 || 16), this.priv = this.priv.umod(this.ec.curve.n);
      }, o.prototype._importPublic = function(t4, e3) {
        if (t4.x || t4.y)
          return this.ec.curve.type === "mont" ? i(t4.x, "Need x coordinate") : this.ec.curve.type !== "short" && this.ec.curve.type !== "edwards" || i(t4.x && t4.y, "Need both x and y coordinate"), void (this.pub = this.ec.curve.point(t4.x, t4.y));
        this.pub = this.ec.curve.decodePoint(t4, e3);
      }, o.prototype.derive = function(t4) {
        return t4.validate() || i(t4.validate(), "public point not validated"), t4.mul(this.priv).getX();
      }, o.prototype.sign = function(t4, e3, r3) {
        return this.ec.sign(t4, this, e3, r3);
      }, o.prototype.verify = function(t4, e3) {
        return this.ec.verify(t4, e3, this);
      }, o.prototype.inspect = function() {
        return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
      };
    }, 3686: (t3, e2, r2) => {
      var n = r2(7799), i = r2(1970), o = i.assert;
      function a(t4, e3) {
        if (t4 instanceof a)
          return t4;
        this._importDER(t4, e3) || (o(t4.r && t4.s, "Signature without r or s"), this.r = new n(t4.r, 16), this.s = new n(t4.s, 16), t4.recoveryParam === undefined ? this.recoveryParam = null : this.recoveryParam = t4.recoveryParam);
      }
      function s() {
        this.place = 0;
      }
      function c(t4, e3) {
        var r3 = t4[e3.place++];
        if (!(128 & r3))
          return r3;
        var n2 = 15 & r3;
        if (n2 === 0 || n2 > 4)
          return false;
        if (t4[e3.place] === 0)
          return false;
        for (var i2 = 0, o2 = 0, a2 = e3.place;o2 < n2; o2++, a2++)
          i2 <<= 8, i2 |= t4[a2], i2 >>>= 0;
        return !(i2 <= 127) && (e3.place = a2, i2);
      }
      function u(t4) {
        for (var e3 = 0, r3 = t4.length - 1;!t4[e3] && !(128 & t4[e3 + 1]) && e3 < r3; )
          e3++;
        return e3 === 0 ? t4 : t4.slice(e3);
      }
      function f(t4, e3) {
        if (e3 < 128)
          t4.push(e3);
        else {
          var r3 = 1 + (Math.log(e3) / Math.LN2 >>> 3);
          for (t4.push(128 | r3);--r3; )
            t4.push(e3 >>> (r3 << 3) & 255);
          t4.push(e3);
        }
      }
      t3.exports = a, a.prototype._importDER = function(t4, e3) {
        t4 = i.toArray(t4, e3);
        var r3 = new s;
        if (t4[r3.place++] !== 48)
          return false;
        var o2 = c(t4, r3);
        if (o2 === false)
          return false;
        if (o2 + r3.place !== t4.length)
          return false;
        if (t4[r3.place++] !== 2)
          return false;
        var a2 = c(t4, r3);
        if (a2 === false)
          return false;
        if (128 & t4[r3.place])
          return false;
        var u2 = t4.slice(r3.place, a2 + r3.place);
        if (r3.place += a2, t4[r3.place++] !== 2)
          return false;
        var f2 = c(t4, r3);
        if (f2 === false)
          return false;
        if (t4.length !== f2 + r3.place)
          return false;
        if (128 & t4[r3.place])
          return false;
        var l = t4.slice(r3.place, f2 + r3.place);
        if (u2[0] === 0) {
          if (!(128 & u2[1]))
            return false;
          u2 = u2.slice(1);
        }
        if (l[0] === 0) {
          if (!(128 & l[1]))
            return false;
          l = l.slice(1);
        }
        return this.r = new n(u2), this.s = new n(l), this.recoveryParam = null, true;
      }, a.prototype.toDER = function(t4) {
        var e3 = this.r.toArray(), r3 = this.s.toArray();
        for (128 & e3[0] && (e3 = [0].concat(e3)), 128 & r3[0] && (r3 = [0].concat(r3)), e3 = u(e3), r3 = u(r3);!(r3[0] || 128 & r3[1]); )
          r3 = r3.slice(1);
        var n2 = [2];
        f(n2, e3.length), (n2 = n2.concat(e3)).push(2), f(n2, r3.length);
        var o2 = n2.concat(r3), a2 = [48];
        return f(a2, o2.length), a2 = a2.concat(o2), i.encode(a2, t4);
      };
    }, 4919: (t3, e2, r2) => {
      var n = r2(2859), i = r2(6379), o = r2(1970), a = o.assert, s = o.parseBytes, c = r2(208), u = r2(8433);
      function f(t4) {
        if (a(t4 === "ed25519", "only tested with ed25519 so far"), !(this instanceof f))
          return new f(t4);
        t4 = i[t4].curve, this.curve = t4, this.g = t4.g, this.g.precompute(t4.n.bitLength() + 1), this.pointClass = t4.point().constructor, this.encodingLength = Math.ceil(t4.n.bitLength() / 8), this.hash = n.sha512;
      }
      t3.exports = f, f.prototype.sign = function(t4, e3) {
        t4 = s(t4);
        var r3 = this.keyFromSecret(e3), n2 = this.hashInt(r3.messagePrefix(), t4), i2 = this.g.mul(n2), o2 = this.encodePoint(i2), a2 = this.hashInt(o2, r3.pubBytes(), t4).mul(r3.priv()), c2 = n2.add(a2).umod(this.curve.n);
        return this.makeSignature({ R: i2, S: c2, Rencoded: o2 });
      }, f.prototype.verify = function(t4, e3, r3) {
        if (t4 = s(t4), (e3 = this.makeSignature(e3)).S().gte(e3.eddsa.curve.n) || e3.S().isNeg())
          return false;
        var n2 = this.keyFromPublic(r3), i2 = this.hashInt(e3.Rencoded(), n2.pubBytes(), t4), o2 = this.g.mul(e3.S());
        return e3.R().add(n2.pub().mul(i2)).eq(o2);
      }, f.prototype.hashInt = function() {
        for (var t4 = this.hash(), e3 = 0;e3 < arguments.length; e3++)
          t4.update(arguments[e3]);
        return o.intFromLE(t4.digest()).umod(this.curve.n);
      }, f.prototype.keyFromPublic = function(t4) {
        return c.fromPublic(this, t4);
      }, f.prototype.keyFromSecret = function(t4) {
        return c.fromSecret(this, t4);
      }, f.prototype.makeSignature = function(t4) {
        return t4 instanceof u ? t4 : new u(this, t4);
      }, f.prototype.encodePoint = function(t4) {
        var e3 = t4.getY().toArray("le", this.encodingLength);
        return e3[this.encodingLength - 1] |= t4.getX().isOdd() ? 128 : 0, e3;
      }, f.prototype.decodePoint = function(t4) {
        var e3 = (t4 = o.parseBytes(t4)).length - 1, r3 = t4.slice(0, e3).concat(-129 & t4[e3]), n2 = !!(128 & t4[e3]), i2 = o.intFromLE(r3);
        return this.curve.pointFromY(i2, n2);
      }, f.prototype.encodeInt = function(t4) {
        return t4.toArray("le", this.encodingLength);
      }, f.prototype.decodeInt = function(t4) {
        return o.intFromLE(t4);
      }, f.prototype.isPoint = function(t4) {
        return t4 instanceof this.pointClass;
      };
    }, 208: (t3, e2, r2) => {
      var n = r2(1970), i = n.assert, o = n.parseBytes, a = n.cachedProperty;
      function s(t4, e3) {
        this.eddsa = t4, this._secret = o(e3.secret), t4.isPoint(e3.pub) ? this._pub = e3.pub : this._pubBytes = o(e3.pub);
      }
      s.fromPublic = function(t4, e3) {
        return e3 instanceof s ? e3 : new s(t4, { pub: e3 });
      }, s.fromSecret = function(t4, e3) {
        return e3 instanceof s ? e3 : new s(t4, { secret: e3 });
      }, s.prototype.secret = function() {
        return this._secret;
      }, a(s, "pubBytes", function() {
        return this.eddsa.encodePoint(this.pub());
      }), a(s, "pub", function() {
        return this._pubBytes ? this.eddsa.decodePoint(this._pubBytes) : this.eddsa.g.mul(this.priv());
      }), a(s, "privBytes", function() {
        var t4 = this.eddsa, e3 = this.hash(), r3 = t4.encodingLength - 1, n2 = e3.slice(0, t4.encodingLength);
        return n2[0] &= 248, n2[r3] &= 127, n2[r3] |= 64, n2;
      }), a(s, "priv", function() {
        return this.eddsa.decodeInt(this.privBytes());
      }), a(s, "hash", function() {
        return this.eddsa.hash().update(this.secret()).digest();
      }), a(s, "messagePrefix", function() {
        return this.hash().slice(this.eddsa.encodingLength);
      }), s.prototype.sign = function(t4) {
        return i(this._secret, "KeyPair can only verify"), this.eddsa.sign(t4, this);
      }, s.prototype.verify = function(t4, e3) {
        return this.eddsa.verify(t4, e3, this);
      }, s.prototype.getSecret = function(t4) {
        return i(this._secret, "KeyPair is public only"), n.encode(this.secret(), t4);
      }, s.prototype.getPublic = function(t4) {
        return n.encode(this.pubBytes(), t4);
      }, t3.exports = s;
    }, 8433: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      var i = r2(7799), o = r2(1970), a = o.assert, s = o.cachedProperty, c = o.parseBytes;
      function u(t4, e3) {
        this.eddsa = t4, n(e3) !== "object" && (e3 = c(e3)), Array.isArray(e3) && (a(e3.length === 2 * t4.encodingLength, "Signature has invalid size"), e3 = { R: e3.slice(0, t4.encodingLength), S: e3.slice(t4.encodingLength) }), a(e3.R && e3.S, "Signature without R or S"), t4.isPoint(e3.R) && (this._R = e3.R), e3.S instanceof i && (this._S = e3.S), this._Rencoded = Array.isArray(e3.R) ? e3.R : e3.Rencoded, this._Sencoded = Array.isArray(e3.S) ? e3.S : e3.Sencoded;
      }
      s(u, "S", function() {
        return this.eddsa.decodeInt(this.Sencoded());
      }), s(u, "R", function() {
        return this.eddsa.decodePoint(this.Rencoded());
      }), s(u, "Rencoded", function() {
        return this.eddsa.encodePoint(this.R());
      }), s(u, "Sencoded", function() {
        return this.eddsa.encodeInt(this.S());
      }), u.prototype.toBytes = function() {
        return this.Rencoded().concat(this.Sencoded());
      }, u.prototype.toHex = function() {
        return o.encode(this.toBytes(), "hex").toUpperCase();
      }, t3.exports = u;
    }, 5586: (t3) => {
      t3.exports = { doubles: { step: 4, points: [["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a", "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"], ["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508", "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"], ["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739", "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"], ["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640", "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"], ["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c", "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"], ["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda", "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"], ["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa", "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"], ["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0", "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"], ["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d", "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"], ["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d", "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"], ["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1", "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"], ["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0", "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"], ["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047", "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"], ["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862", "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"], ["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7", "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"], ["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd", "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"], ["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83", "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"], ["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a", "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"], ["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8", "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"], ["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d", "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"], ["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725", "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"], ["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754", "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"], ["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c", "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"], ["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6", "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"], ["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39", "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"], ["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891", "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"], ["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b", "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"], ["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03", "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"], ["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d", "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"], ["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070", "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"], ["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4", "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"], ["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da", "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"], ["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11", "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"], ["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e", "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"], ["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41", "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"], ["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef", "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"], ["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8", "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"], ["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d", "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"], ["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96", "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"], ["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd", "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"], ["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5", "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"], ["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266", "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"], ["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71", "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"], ["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac", "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"], ["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751", "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"], ["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e", "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"], ["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241", "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"], ["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3", "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"], ["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f", "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"], ["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19", "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"], ["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be", "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"], ["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9", "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"], ["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2", "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"], ["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13", "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"], ["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c", "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"], ["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba", "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"], ["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151", "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"], ["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073", "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"], ["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458", "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"], ["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b", "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"], ["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366", "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"], ["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa", "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"], ["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0", "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"], ["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787", "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"], ["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e", "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]] }, naf: { wnd: 7, points: [["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9", "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"], ["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4", "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"], ["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc", "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"], ["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe", "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"], ["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb", "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"], ["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8", "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"], ["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e", "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"], ["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34", "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"], ["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c", "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"], ["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5", "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"], ["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f", "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"], ["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714", "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"], ["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729", "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"], ["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db", "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"], ["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4", "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"], ["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5", "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"], ["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479", "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"], ["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d", "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"], ["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f", "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"], ["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb", "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"], ["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9", "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"], ["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963", "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"], ["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74", "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"], ["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530", "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"], ["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b", "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"], ["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247", "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"], ["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1", "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"], ["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120", "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"], ["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435", "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"], ["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18", "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"], ["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8", "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"], ["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb", "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"], ["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f", "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"], ["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143", "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"], ["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba", "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"], ["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45", "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"], ["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a", "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"], ["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e", "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"], ["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8", "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"], ["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c", "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"], ["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519", "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"], ["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab", "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"], ["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca", "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"], ["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf", "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"], ["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610", "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"], ["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4", "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"], ["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c", "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"], ["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940", "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"], ["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980", "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"], ["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3", "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"], ["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf", "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"], ["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63", "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"], ["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448", "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"], ["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf", "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"], ["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5", "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"], ["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6", "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"], ["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5", "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"], ["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99", "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"], ["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51", "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"], ["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5", "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"], ["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5", "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"], ["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997", "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"], ["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881", "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"], ["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5", "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"], ["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66", "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"], ["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726", "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"], ["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede", "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"], ["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94", "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"], ["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31", "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"], ["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51", "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"], ["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252", "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"], ["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5", "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"], ["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b", "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"], ["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4", "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"], ["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f", "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"], ["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889", "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"], ["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246", "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"], ["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984", "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"], ["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a", "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"], ["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030", "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"], ["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197", "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"], ["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593", "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"], ["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef", "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"], ["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38", "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"], ["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a", "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"], ["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111", "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"], ["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502", "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"], ["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea", "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"], ["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26", "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"], ["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986", "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"], ["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e", "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"], ["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4", "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"], ["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda", "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"], ["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859", "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"], ["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f", "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"], ["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c", "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"], ["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942", "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"], ["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a", "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"], ["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80", "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"], ["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d", "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"], ["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1", "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"], ["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63", "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"], ["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352", "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"], ["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193", "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"], ["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00", "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"], ["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58", "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"], ["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7", "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"], ["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8", "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"], ["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e", "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"], ["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d", "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"], ["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b", "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"], ["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f", "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"], ["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6", "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"], ["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297", "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"], ["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a", "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"], ["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c", "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"], ["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52", "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"], ["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb", "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"], ["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065", "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"], ["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917", "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"], ["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9", "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"], ["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3", "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"], ["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57", "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"], ["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66", "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"], ["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8", "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"], ["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721", "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"], ["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180", "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]] } };
    }, 1970: (t3, e2, r2) => {
      var n = e2, i = r2(7799), o = r2(3528), a = r2(6706);
      n.assert = o, n.toArray = a.toArray, n.zero2 = a.zero2, n.toHex = a.toHex, n.encode = a.encode, n.getNAF = function(t4, e3, r3) {
        var n2, i2 = new Array(Math.max(t4.bitLength(), r3) + 1);
        for (n2 = 0;n2 < i2.length; n2 += 1)
          i2[n2] = 0;
        var o2 = 1 << e3 + 1, a2 = t4.clone();
        for (n2 = 0;n2 < i2.length; n2++) {
          var s, c = a2.andln(o2 - 1);
          a2.isOdd() ? (s = c > (o2 >> 1) - 1 ? (o2 >> 1) - c : c, a2.isubn(s)) : s = 0, i2[n2] = s, a2.iushrn(1);
        }
        return i2;
      }, n.getJSF = function(t4, e3) {
        var r3 = [[], []];
        t4 = t4.clone(), e3 = e3.clone();
        for (var n2, i2 = 0, o2 = 0;t4.cmpn(-i2) > 0 || e3.cmpn(-o2) > 0; ) {
          var a2, s, c = t4.andln(3) + i2 & 3, u = e3.andln(3) + o2 & 3;
          c === 3 && (c = -1), u === 3 && (u = -1), a2 = 1 & c ? (n2 = t4.andln(7) + i2 & 7) != 3 && n2 !== 5 || u !== 2 ? c : -c : 0, r3[0].push(a2), s = 1 & u ? (n2 = e3.andln(7) + o2 & 7) != 3 && n2 !== 5 || c !== 2 ? u : -u : 0, r3[1].push(s), 2 * i2 === a2 + 1 && (i2 = 1 - i2), 2 * o2 === s + 1 && (o2 = 1 - o2), t4.iushrn(1), e3.iushrn(1);
        }
        return r3;
      }, n.cachedProperty = function(t4, e3, r3) {
        var n2 = "_" + e3;
        t4.prototype[e3] = function() {
          return this[n2] !== undefined ? this[n2] : this[n2] = r3.call(this);
        };
      }, n.parseBytes = function(t4) {
        return typeof t4 == "string" ? n.toArray(t4, "hex") : t4;
      }, n.intFromLE = function(t4) {
        return new i(t4, "hex", "le");
      };
    }, 988: (t3, e2, r2) => {
      var n = r2(6400)("%Object.defineProperty%", true) || false;
      if (n)
        try {
          n({}, "a", { value: 1 });
        } catch (t4) {
          n = false;
        }
      t3.exports = n;
    }, 9206: (t3) => {
      t3.exports = EvalError;
    }, 9870: (t3) => {
      t3.exports = Error;
    }, 9939: (t3) => {
      t3.exports = RangeError;
    }, 783: (t3) => {
      t3.exports = ReferenceError;
    }, 2288: (t3) => {
      t3.exports = SyntaxError;
    }, 2268: (t3) => {
      t3.exports = TypeError;
    }, 8188: (t3) => {
      t3.exports = URIError;
    }, 6182: (t3) => {
      function e2(t4, e3) {
        if (t4 == null)
          throw new TypeError("Cannot convert first argument to object");
        for (var r2 = Object(t4), n = 1;n < arguments.length; n++) {
          var i = arguments[n];
          if (i != null)
            for (var o = Object.keys(Object(i)), a = 0, s = o.length;a < s; a++) {
              var c = o[a], u = Object.getOwnPropertyDescriptor(i, c);
              u !== undefined && u.enumerable && (r2[c] = i[c]);
            }
        }
        return r2;
      }
      t3.exports = { assign: e2, polyfill: function() {
        Object.assign || Object.defineProperty(Object, "assign", { enumerable: false, configurable: true, writable: true, value: e2 });
      } };
    }, 3550: (t3) => {
      function e2(t4) {
        return e2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, e2(t4);
      }
      var r2, n = (typeof Reflect == "undefined" ? "undefined" : e2(Reflect)) === "object" ? Reflect : null, i = n && typeof n.apply == "function" ? n.apply : function(t4, e3, r3) {
        return Function.prototype.apply.call(t4, e3, r3);
      };
      r2 = n && typeof n.ownKeys == "function" ? n.ownKeys : Object.getOwnPropertySymbols ? function(t4) {
        return Object.getOwnPropertyNames(t4).concat(Object.getOwnPropertySymbols(t4));
      } : function(t4) {
        return Object.getOwnPropertyNames(t4);
      };
      var o = Number.isNaN || function(t4) {
        return t4 != t4;
      };
      function a() {
        a.init.call(this);
      }
      t3.exports = a, t3.exports.once = function(t4, e3) {
        return new Promise(function(r3, n2) {
          function i2(r4) {
            t4.removeListener(e3, o2), n2(r4);
          }
          function o2() {
            typeof t4.removeListener == "function" && t4.removeListener("error", i2), r3([].slice.call(arguments));
          }
          b(t4, e3, o2, { once: true }), e3 !== "error" && function(t5, e4) {
            typeof t5.on == "function" && b(t5, "error", e4, { once: true });
          }(t4, i2);
        });
      }, a.EventEmitter = a, a.prototype._events = undefined, a.prototype._eventsCount = 0, a.prototype._maxListeners = undefined;
      var s = 10;
      function c(t4) {
        if (typeof t4 != "function")
          throw new TypeError('The "listener" argument must be of type Function. Received type ' + e2(t4));
      }
      function u(t4) {
        return t4._maxListeners === undefined ? a.defaultMaxListeners : t4._maxListeners;
      }
      function f(t4, e3, r3, n2) {
        var i2, o2, a2, s2;
        if (c(r3), (o2 = t4._events) === undefined ? (o2 = t4._events = Object.create(null), t4._eventsCount = 0) : (o2.newListener !== undefined && (t4.emit("newListener", e3, r3.listener ? r3.listener : r3), o2 = t4._events), a2 = o2[e3]), a2 === undefined)
          a2 = o2[e3] = r3, ++t4._eventsCount;
        else if (typeof a2 == "function" ? a2 = o2[e3] = n2 ? [r3, a2] : [a2, r3] : n2 ? a2.unshift(r3) : a2.push(r3), (i2 = u(t4)) > 0 && a2.length > i2 && !a2.warned) {
          a2.warned = true;
          var f2 = new Error("Possible EventEmitter memory leak detected. " + a2.length + " " + String(e3) + " listeners added. Use emitter.setMaxListeners() to increase limit");
          f2.name = "MaxListenersExceededWarning", f2.emitter = t4, f2.type = e3, f2.count = a2.length, s2 = f2, console && console.warn && console.warn(s2);
        }
        return t4;
      }
      function l() {
        if (!this.fired)
          return this.target.removeListener(this.type, this.wrapFn), this.fired = true, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
      }
      function h(t4, e3, r3) {
        var n2 = { fired: false, wrapFn: undefined, target: t4, type: e3, listener: r3 }, i2 = l.bind(n2);
        return i2.listener = r3, n2.wrapFn = i2, i2;
      }
      function p(t4, e3, r3) {
        var n2 = t4._events;
        if (n2 === undefined)
          return [];
        var i2 = n2[e3];
        return i2 === undefined ? [] : typeof i2 == "function" ? r3 ? [i2.listener || i2] : [i2] : r3 ? function(t5) {
          for (var e4 = new Array(t5.length), r4 = 0;r4 < e4.length; ++r4)
            e4[r4] = t5[r4].listener || t5[r4];
          return e4;
        }(i2) : y(i2, i2.length);
      }
      function d(t4) {
        var e3 = this._events;
        if (e3 !== undefined) {
          var r3 = e3[t4];
          if (typeof r3 == "function")
            return 1;
          if (r3 !== undefined)
            return r3.length;
        }
        return 0;
      }
      function y(t4, e3) {
        for (var r3 = new Array(e3), n2 = 0;n2 < e3; ++n2)
          r3[n2] = t4[n2];
        return r3;
      }
      function b(t4, r3, n2, i2) {
        if (typeof t4.on == "function")
          i2.once ? t4.once(r3, n2) : t4.on(r3, n2);
        else {
          if (typeof t4.addEventListener != "function")
            throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + e2(t4));
          t4.addEventListener(r3, function e(o2) {
            i2.once && t4.removeEventListener(r3, e), n2(o2);
          });
        }
      }
      Object.defineProperty(a, "defaultMaxListeners", { enumerable: true, get: function() {
        return s;
      }, set: function(t4) {
        if (typeof t4 != "number" || t4 < 0 || o(t4))
          throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + t4 + ".");
        s = t4;
      } }), a.init = function() {
        this._events !== undefined && this._events !== Object.getPrototypeOf(this)._events || (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || undefined;
      }, a.prototype.setMaxListeners = function(t4) {
        if (typeof t4 != "number" || t4 < 0 || o(t4))
          throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + t4 + ".");
        return this._maxListeners = t4, this;
      }, a.prototype.getMaxListeners = function() {
        return u(this);
      }, a.prototype.emit = function(t4) {
        for (var e3 = [], r3 = 1;r3 < arguments.length; r3++)
          e3.push(arguments[r3]);
        var n2 = t4 === "error", o2 = this._events;
        if (o2 !== undefined)
          n2 = n2 && o2.error === undefined;
        else if (!n2)
          return false;
        if (n2) {
          var a2;
          if (e3.length > 0 && (a2 = e3[0]), a2 instanceof Error)
            throw a2;
          var s2 = new Error("Unhandled error." + (a2 ? " (" + a2.message + ")" : ""));
          throw s2.context = a2, s2;
        }
        var c2 = o2[t4];
        if (c2 === undefined)
          return false;
        if (typeof c2 == "function")
          i(c2, this, e3);
        else {
          var u2 = c2.length, f2 = y(c2, u2);
          for (r3 = 0;r3 < u2; ++r3)
            i(f2[r3], this, e3);
        }
        return true;
      }, a.prototype.addListener = function(t4, e3) {
        return f(this, t4, e3, false);
      }, a.prototype.on = a.prototype.addListener, a.prototype.prependListener = function(t4, e3) {
        return f(this, t4, e3, true);
      }, a.prototype.once = function(t4, e3) {
        return c(e3), this.on(t4, h(this, t4, e3)), this;
      }, a.prototype.prependOnceListener = function(t4, e3) {
        return c(e3), this.prependListener(t4, h(this, t4, e3)), this;
      }, a.prototype.removeListener = function(t4, e3) {
        var r3, n2, i2, o2, a2;
        if (c(e3), (n2 = this._events) === undefined)
          return this;
        if ((r3 = n2[t4]) === undefined)
          return this;
        if (r3 === e3 || r3.listener === e3)
          --this._eventsCount == 0 ? this._events = Object.create(null) : (delete n2[t4], n2.removeListener && this.emit("removeListener", t4, r3.listener || e3));
        else if (typeof r3 != "function") {
          for (i2 = -1, o2 = r3.length - 1;o2 >= 0; o2--)
            if (r3[o2] === e3 || r3[o2].listener === e3) {
              a2 = r3[o2].listener, i2 = o2;
              break;
            }
          if (i2 < 0)
            return this;
          i2 === 0 ? r3.shift() : function(t5, e4) {
            for (;e4 + 1 < t5.length; e4++)
              t5[e4] = t5[e4 + 1];
            t5.pop();
          }(r3, i2), r3.length === 1 && (n2[t4] = r3[0]), n2.removeListener !== undefined && this.emit("removeListener", t4, a2 || e3);
        }
        return this;
      }, a.prototype.off = a.prototype.removeListener, a.prototype.removeAllListeners = function(t4) {
        var e3, r3, n2;
        if ((r3 = this._events) === undefined)
          return this;
        if (r3.removeListener === undefined)
          return arguments.length === 0 ? (this._events = Object.create(null), this._eventsCount = 0) : r3[t4] !== undefined && (--this._eventsCount == 0 ? this._events = Object.create(null) : delete r3[t4]), this;
        if (arguments.length === 0) {
          var i2, o2 = Object.keys(r3);
          for (n2 = 0;n2 < o2.length; ++n2)
            (i2 = o2[n2]) !== "removeListener" && this.removeAllListeners(i2);
          return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this;
        }
        if (typeof (e3 = r3[t4]) == "function")
          this.removeListener(t4, e3);
        else if (e3 !== undefined)
          for (n2 = e3.length - 1;n2 >= 0; n2--)
            this.removeListener(t4, e3[n2]);
        return this;
      }, a.prototype.listeners = function(t4) {
        return p(this, t4, true);
      }, a.prototype.rawListeners = function(t4) {
        return p(this, t4, false);
      }, a.listenerCount = function(t4, e3) {
        return typeof t4.listenerCount == "function" ? t4.listenerCount(e3) : d.call(t4, e3);
      }, a.prototype.listenerCount = d, a.prototype.eventNames = function() {
        return this._eventsCount > 0 ? r2(this._events) : [];
      };
    }, 1685: (t3, e2, r2) => {
      var n = r2(9732).Buffer, i = r2(2635);
      t3.exports = function(t4, e3, r3, o) {
        if (n.isBuffer(t4) || (t4 = n.from(t4, "binary")), e3 && (n.isBuffer(e3) || (e3 = n.from(e3, "binary")), e3.length !== 8))
          throw new RangeError("salt should be Buffer with 8 byte length");
        for (var a = r3 / 8, s = n.alloc(a), c = n.alloc(o || 0), u = n.alloc(0);a > 0 || o > 0; ) {
          var f = new i;
          f.update(u), f.update(t4), e3 && f.update(e3), u = f.digest();
          var l = 0;
          if (a > 0) {
            var h = s.length - a;
            l = Math.min(a, u.length), u.copy(s, h, 0, l), a -= l;
          }
          if (l < u.length && o > 0) {
            var p = c.length - o, d = Math.min(o, u.length - l);
            u.copy(c, p, l, l + d), o -= d;
          }
        }
        return u.fill(0), { key: s, iv: c };
      };
    }, 3777: (t3, e2, r2) => {
      var n = r2(9809), i = Object.prototype.toString, o = Object.prototype.hasOwnProperty;
      t3.exports = function(t4, e3, r3) {
        if (!n(e3))
          throw new TypeError("iterator must be a function");
        var a;
        arguments.length >= 3 && (a = r3), i.call(t4) === "[object Array]" ? function(t5, e4, r4) {
          for (var n2 = 0, i2 = t5.length;n2 < i2; n2++)
            o.call(t5, n2) && (r4 == null ? e4(t5[n2], n2, t5) : e4.call(r4, t5[n2], n2, t5));
        }(t4, e3, a) : typeof t4 == "string" ? function(t5, e4, r4) {
          for (var n2 = 0, i2 = t5.length;n2 < i2; n2++)
            r4 == null ? e4(t5.charAt(n2), n2, t5) : e4.call(r4, t5.charAt(n2), n2, t5);
        }(t4, e3, a) : function(t5, e4, r4) {
          for (var n2 in t5)
            o.call(t5, n2) && (r4 == null ? e4(t5[n2], n2, t5) : e4.call(r4, t5[n2], n2, t5));
        }(t4, e3, a);
      };
    }, 6730: (t3) => {
      var e2 = Object.prototype.toString, r2 = Math.max, n = function(t4, e3) {
        for (var r3 = [], n2 = 0;n2 < t4.length; n2 += 1)
          r3[n2] = t4[n2];
        for (var i = 0;i < e3.length; i += 1)
          r3[i + t4.length] = e3[i];
        return r3;
      };
      t3.exports = function(t4) {
        var i = this;
        if (typeof i != "function" || e2.apply(i) !== "[object Function]")
          throw new TypeError("Function.prototype.bind called on incompatible " + i);
        for (var o, a = function(t5) {
          for (var e3 = [], r3 = 1, n2 = 0;r3 < t5.length; r3 += 1, n2 += 1)
            e3[n2] = t5[r3];
          return e3;
        }(arguments), s = r2(0, i.length - a.length), c = [], u = 0;u < s; u++)
          c[u] = "$" + u;
        if (o = Function("binder", "return function (" + function(t5) {
          for (var e3 = "", r3 = 0;r3 < t5.length; r3 += 1)
            e3 += t5[r3], r3 + 1 < t5.length && (e3 += ",");
          return e3;
        }(c) + "){ return binder.apply(this,arguments); }")(function() {
          if (this instanceof o) {
            var e3 = i.apply(this, n(a, arguments));
            return Object(e3) === e3 ? e3 : this;
          }
          return i.apply(t4, n(a, arguments));
        }), i.prototype) {
          var f = function() {
          };
          f.prototype = i.prototype, o.prototype = new f, f.prototype = null;
        }
        return o;
      };
    }, 2354: (t3, e2, r2) => {
      var n = r2(6730);
      t3.exports = Function.prototype.bind || n;
    }, 6400: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      var i, o = r2(9870), a = r2(9206), s = r2(9939), c = r2(783), u = r2(2288), f = r2(2268), l = r2(8188), h = Function, p = function(t4) {
        try {
          return h('"use strict"; return (' + t4 + ").constructor;")();
        } catch (t5) {
        }
      }, d = Object.getOwnPropertyDescriptor;
      if (d)
        try {
          d({}, "");
        } catch (t4) {
          d = null;
        }
      var y = function() {
        throw new f;
      }, b = d ? function() {
        try {
          return y;
        } catch (t4) {
          try {
            return d(arguments, "callee").get;
          } catch (t5) {
            return y;
          }
        }
      }() : y, m = r2(5510)(), v = r2(309)(), g = Object.getPrototypeOf || (v ? function(t4) {
        return t4.__proto__;
      } : null), _ = {}, w = typeof Uint8Array != "undefined" && g ? g(Uint8Array) : i, S = { __proto__: null, "%AggregateError%": typeof AggregateError == "undefined" ? i : AggregateError, "%Array%": Array, "%ArrayBuffer%": typeof ArrayBuffer == "undefined" ? i : ArrayBuffer, "%ArrayIteratorPrototype%": m && g ? g([][Symbol.iterator]()) : i, "%AsyncFromSyncIteratorPrototype%": i, "%AsyncFunction%": _, "%AsyncGenerator%": _, "%AsyncGeneratorFunction%": _, "%AsyncIteratorPrototype%": _, "%Atomics%": typeof Atomics == "undefined" ? i : Atomics, "%BigInt%": typeof BigInt == "undefined" ? i : BigInt, "%BigInt64Array%": typeof BigInt64Array == "undefined" ? i : BigInt64Array, "%BigUint64Array%": typeof BigUint64Array == "undefined" ? i : BigUint64Array, "%Boolean%": Boolean, "%DataView%": typeof DataView == "undefined" ? i : DataView, "%Date%": Date, "%decodeURI%": decodeURI, "%decodeURIComponent%": decodeURIComponent, "%encodeURI%": encodeURI, "%encodeURIComponent%": encodeURIComponent, "%Error%": o, "%eval%": eval, "%EvalError%": a, "%Float32Array%": typeof Float32Array == "undefined" ? i : Float32Array, "%Float64Array%": typeof Float64Array == "undefined" ? i : Float64Array, "%FinalizationRegistry%": typeof FinalizationRegistry == "undefined" ? i : FinalizationRegistry, "%Function%": h, "%GeneratorFunction%": _, "%Int8Array%": typeof Int8Array == "undefined" ? i : Int8Array, "%Int16Array%": typeof Int16Array == "undefined" ? i : Int16Array, "%Int32Array%": typeof Int32Array == "undefined" ? i : Int32Array, "%isFinite%": isFinite, "%isNaN%": isNaN, "%IteratorPrototype%": m && g ? g(g([][Symbol.iterator]())) : i, "%JSON%": (typeof JSON == "undefined" ? "undefined" : n(JSON)) === "object" ? JSON : i, "%Map%": typeof Map == "undefined" ? i : Map, "%MapIteratorPrototype%": typeof Map != "undefined" && m && g ? g(new Map()[Symbol.iterator]()) : i, "%Math%": Math, "%Number%": Number, "%Object%": Object, "%parseFloat%": parseFloat, "%parseInt%": parseInt, "%Promise%": typeof Promise == "undefined" ? i : Promise, "%Proxy%": typeof Proxy == "undefined" ? i : Proxy, "%RangeError%": s, "%ReferenceError%": c, "%Reflect%": typeof Reflect == "undefined" ? i : Reflect, "%RegExp%": RegExp, "%Set%": typeof Set == "undefined" ? i : Set, "%SetIteratorPrototype%": typeof Set != "undefined" && m && g ? g(new Set()[Symbol.iterator]()) : i, "%SharedArrayBuffer%": typeof SharedArrayBuffer == "undefined" ? i : SharedArrayBuffer, "%String%": String, "%StringIteratorPrototype%": m && g ? g(""[Symbol.iterator]()) : i, "%Symbol%": m ? Symbol : i, "%SyntaxError%": u, "%ThrowTypeError%": b, "%TypedArray%": w, "%TypeError%": f, "%Uint8Array%": typeof Uint8Array == "undefined" ? i : Uint8Array, "%Uint8ClampedArray%": typeof Uint8ClampedArray == "undefined" ? i : Uint8ClampedArray, "%Uint16Array%": typeof Uint16Array == "undefined" ? i : Uint16Array, "%Uint32Array%": typeof Uint32Array == "undefined" ? i : Uint32Array, "%URIError%": l, "%WeakMap%": typeof WeakMap == "undefined" ? i : WeakMap, "%WeakRef%": typeof WeakRef == "undefined" ? i : WeakRef, "%WeakSet%": typeof WeakSet == "undefined" ? i : WeakSet };
      if (g)
        try {
          null.error;
        } catch (t4) {
          var O = g(g(t4));
          S["%Error.prototype%"] = O;
        }
      var j = function t(e3) {
        var r3;
        if (e3 === "%AsyncFunction%")
          r3 = p("async function () {}");
        else if (e3 === "%GeneratorFunction%")
          r3 = p("function* () {}");
        else if (e3 === "%AsyncGeneratorFunction%")
          r3 = p("async function* () {}");
        else if (e3 === "%AsyncGenerator%") {
          var n2 = t("%AsyncGeneratorFunction%");
          n2 && (r3 = n2.prototype);
        } else if (e3 === "%AsyncIteratorPrototype%") {
          var i2 = t("%AsyncGenerator%");
          i2 && g && (r3 = g(i2.prototype));
        }
        return S[e3] = r3, r3;
      }, $ = { __proto__: null, "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"], "%ArrayPrototype%": ["Array", "prototype"], "%ArrayProto_entries%": ["Array", "prototype", "entries"], "%ArrayProto_forEach%": ["Array", "prototype", "forEach"], "%ArrayProto_keys%": ["Array", "prototype", "keys"], "%ArrayProto_values%": ["Array", "prototype", "values"], "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"], "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"], "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"], "%BooleanPrototype%": ["Boolean", "prototype"], "%DataViewPrototype%": ["DataView", "prototype"], "%DatePrototype%": ["Date", "prototype"], "%ErrorPrototype%": ["Error", "prototype"], "%EvalErrorPrototype%": ["EvalError", "prototype"], "%Float32ArrayPrototype%": ["Float32Array", "prototype"], "%Float64ArrayPrototype%": ["Float64Array", "prototype"], "%FunctionPrototype%": ["Function", "prototype"], "%Generator%": ["GeneratorFunction", "prototype"], "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"], "%Int8ArrayPrototype%": ["Int8Array", "prototype"], "%Int16ArrayPrototype%": ["Int16Array", "prototype"], "%Int32ArrayPrototype%": ["Int32Array", "prototype"], "%JSONParse%": ["JSON", "parse"], "%JSONStringify%": ["JSON", "stringify"], "%MapPrototype%": ["Map", "prototype"], "%NumberPrototype%": ["Number", "prototype"], "%ObjectPrototype%": ["Object", "prototype"], "%ObjProto_toString%": ["Object", "prototype", "toString"], "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"], "%PromisePrototype%": ["Promise", "prototype"], "%PromiseProto_then%": ["Promise", "prototype", "then"], "%Promise_all%": ["Promise", "all"], "%Promise_reject%": ["Promise", "reject"], "%Promise_resolve%": ["Promise", "resolve"], "%RangeErrorPrototype%": ["RangeError", "prototype"], "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"], "%RegExpPrototype%": ["RegExp", "prototype"], "%SetPrototype%": ["Set", "prototype"], "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"], "%StringPrototype%": ["String", "prototype"], "%SymbolPrototype%": ["Symbol", "prototype"], "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"], "%TypedArrayPrototype%": ["TypedArray", "prototype"], "%TypeErrorPrototype%": ["TypeError", "prototype"], "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"], "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"], "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"], "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"], "%URIErrorPrototype%": ["URIError", "prototype"], "%WeakMapPrototype%": ["WeakMap", "prototype"], "%WeakSetPrototype%": ["WeakSet", "prototype"] }, A = r2(2354), E = r2(5994), x = A.call(Function.call, Array.prototype.concat), P = A.call(Function.apply, Array.prototype.splice), k = A.call(Function.call, String.prototype.replace), M = A.call(Function.call, String.prototype.slice), I = A.call(Function.call, RegExp.prototype.exec), T = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, B = /\\(\\)?/g, R = function(t4, e3) {
        var r3, n2 = t4;
        if (E($, n2) && (n2 = "%" + (r3 = $[n2])[0] + "%"), E(S, n2)) {
          var i2 = S[n2];
          if (i2 === _ && (i2 = j(n2)), i2 === undefined && !e3)
            throw new f("intrinsic " + t4 + " exists, but is not available. Please file an issue!");
          return { alias: r3, name: n2, value: i2 };
        }
        throw new u("intrinsic " + t4 + " does not exist!");
      };
      t3.exports = function(t4, e3) {
        if (typeof t4 != "string" || t4.length === 0)
          throw new f("intrinsic name must be a non-empty string");
        if (arguments.length > 1 && typeof e3 != "boolean")
          throw new f('"allowMissing" argument must be a boolean');
        if (I(/^%?[^%]*%?$/, t4) === null)
          throw new u("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
        var r3 = function(t5) {
          var e4 = M(t5, 0, 1), r4 = M(t5, -1);
          if (e4 === "%" && r4 !== "%")
            throw new u("invalid intrinsic syntax, expected closing `%`");
          if (r4 === "%" && e4 !== "%")
            throw new u("invalid intrinsic syntax, expected opening `%`");
          var n3 = [];
          return k(t5, T, function(t6, e5, r5, i3) {
            n3[n3.length] = r5 ? k(i3, B, "$1") : e5 || t6;
          }), n3;
        }(t4), n2 = r3.length > 0 ? r3[0] : "", i2 = R("%" + n2 + "%", e3), o2 = i2.name, a2 = i2.value, s2 = false, c2 = i2.alias;
        c2 && (n2 = c2[0], P(r3, x([0, 1], c2)));
        for (var l2 = 1, h2 = true;l2 < r3.length; l2 += 1) {
          var p2 = r3[l2], y2 = M(p2, 0, 1), b2 = M(p2, -1);
          if ((y2 === '"' || y2 === "'" || y2 === "`" || b2 === '"' || b2 === "'" || b2 === "`") && y2 !== b2)
            throw new u("property names with quotes must have matching quotes");
          if (p2 !== "constructor" && h2 || (s2 = true), E(S, o2 = "%" + (n2 += "." + p2) + "%"))
            a2 = S[o2];
          else if (a2 != null) {
            if (!(p2 in a2)) {
              if (!e3)
                throw new f("base intrinsic for " + t4 + " exists, but the property is not available.");
              return;
            }
            if (d && l2 + 1 >= r3.length) {
              var m2 = d(a2, p2);
              a2 = (h2 = !!m2) && "get" in m2 && !("originalValue" in m2.get) ? m2.get : a2[p2];
            } else
              h2 = E(a2, p2), a2 = a2[p2];
            h2 && !s2 && (S[o2] = a2);
          }
        }
        return a2;
      };
    }, 1464: (t3, e2, r2) => {
      var n = r2(6400)("%Object.getOwnPropertyDescriptor%", true);
      if (n)
        try {
          n([], "length");
        } catch (t4) {
          n = null;
        }
      t3.exports = n;
    }, 3191: (t3, e2, r2) => {
      var n = r2(988), i = function() {
        return !!n;
      };
      i.hasArrayLengthDefineBug = function() {
        if (!n)
          return null;
        try {
          return n([], "length", { value: 1 }).length !== 1;
        } catch (t4) {
          return true;
        }
      }, t3.exports = i;
    }, 309: (t3) => {
      var e2 = { __proto__: null, foo: {} }, r2 = Object;
      t3.exports = function() {
        return { __proto__: e2 }.foo === e2.foo && !(e2 instanceof r2);
      };
    }, 5510: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      var i = typeof Symbol != "undefined" && Symbol, o = r2(5484);
      t3.exports = function() {
        return typeof i == "function" && typeof Symbol == "function" && n(i("foo")) === "symbol" && n(Symbol("bar")) === "symbol" && o();
      };
    }, 5484: (t3) => {
      function e2(t4) {
        return e2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, e2(t4);
      }
      t3.exports = function() {
        if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function")
          return false;
        if (e2(Symbol.iterator) === "symbol")
          return true;
        var t4 = {}, r2 = Symbol("test"), n = Object(r2);
        if (typeof r2 == "string")
          return false;
        if (Object.prototype.toString.call(r2) !== "[object Symbol]")
          return false;
        if (Object.prototype.toString.call(n) !== "[object Symbol]")
          return false;
        for (r2 in t4[r2] = 42, t4)
          return false;
        if (typeof Object.keys == "function" && Object.keys(t4).length !== 0)
          return false;
        if (typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(t4).length !== 0)
          return false;
        var i = Object.getOwnPropertySymbols(t4);
        if (i.length !== 1 || i[0] !== r2)
          return false;
        if (!Object.prototype.propertyIsEnumerable.call(t4, r2))
          return false;
        if (typeof Object.getOwnPropertyDescriptor == "function") {
          var o = Object.getOwnPropertyDescriptor(t4, r2);
          if (o.value !== 42 || o.enumerable !== true)
            return false;
        }
        return true;
      };
    }, 953: (t3, e2, r2) => {
      var n = r2(5484);
      t3.exports = function() {
        return n() && !!Symbol.toStringTag;
      };
    }, 6936: (t3, e2, r2) => {
      var n = r2(9732).Buffer, i = r2(7775).Transform;
      function o(t4) {
        i.call(this), this._block = n.allocUnsafe(t4), this._blockSize = t4, this._blockOffset = 0, this._length = [0, 0, 0, 0], this._finalized = false;
      }
      r2(1679)(o, i), o.prototype._transform = function(t4, e3, r3) {
        var n2 = null;
        try {
          this.update(t4, e3);
        } catch (t5) {
          n2 = t5;
        }
        r3(n2);
      }, o.prototype._flush = function(t4) {
        var e3 = null;
        try {
          this.push(this.digest());
        } catch (t5) {
          e3 = t5;
        }
        t4(e3);
      }, o.prototype.update = function(t4, e3) {
        if (function(t5) {
          if (!n.isBuffer(t5) && typeof t5 != "string")
            throw new TypeError("Data must be a string or a buffer");
        }(t4), this._finalized)
          throw new Error("Digest already called");
        n.isBuffer(t4) || (t4 = n.from(t4, e3));
        for (var r3 = this._block, i2 = 0;this._blockOffset + t4.length - i2 >= this._blockSize; ) {
          for (var o2 = this._blockOffset;o2 < this._blockSize; )
            r3[o2++] = t4[i2++];
          this._update(), this._blockOffset = 0;
        }
        for (;i2 < t4.length; )
          r3[this._blockOffset++] = t4[i2++];
        for (var a = 0, s = 8 * t4.length;s > 0; ++a)
          this._length[a] += s, (s = this._length[a] / 4294967296 | 0) > 0 && (this._length[a] -= 4294967296 * s);
        return this;
      }, o.prototype._update = function() {
        throw new Error("_update is not implemented");
      }, o.prototype.digest = function(t4) {
        if (this._finalized)
          throw new Error("Digest already called");
        this._finalized = true;
        var e3 = this._digest();
        t4 !== undefined && (e3 = e3.toString(t4)), this._block.fill(0), this._blockOffset = 0;
        for (var r3 = 0;r3 < 4; ++r3)
          this._length[r3] = 0;
        return e3;
      }, o.prototype._digest = function() {
        throw new Error("_digest is not implemented");
      }, t3.exports = o;
    }, 2859: (t3, e2, r2) => {
      var n = e2;
      n.utils = r2(4685), n.common = r2(7695), n.sha = r2(690), n.ripemd = r2(601), n.hmac = r2(9313), n.sha1 = n.sha.sha1, n.sha256 = n.sha.sha256, n.sha224 = n.sha.sha224, n.sha384 = n.sha.sha384, n.sha512 = n.sha.sha512, n.ripemd160 = n.ripemd.ripemd160;
    }, 7695: (t3, e2, r2) => {
      var n = r2(4685), i = r2(3528);
      function o() {
        this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;
      }
      e2.BlockHash = o, o.prototype.update = function(t4, e3) {
        if (t4 = n.toArray(t4, e3), this.pending ? this.pending = this.pending.concat(t4) : this.pending = t4, this.pendingTotal += t4.length, this.pending.length >= this._delta8) {
          var r3 = (t4 = this.pending).length % this._delta8;
          this.pending = t4.slice(t4.length - r3, t4.length), this.pending.length === 0 && (this.pending = null), t4 = n.join32(t4, 0, t4.length - r3, this.endian);
          for (var i2 = 0;i2 < t4.length; i2 += this._delta32)
            this._update(t4, i2, i2 + this._delta32);
        }
        return this;
      }, o.prototype.digest = function(t4) {
        return this.update(this._pad()), i(this.pending === null), this._digest(t4);
      }, o.prototype._pad = function() {
        var t4 = this.pendingTotal, e3 = this._delta8, r3 = e3 - (t4 + this.padLength) % e3, n2 = new Array(r3 + this.padLength);
        n2[0] = 128;
        for (var i2 = 1;i2 < r3; i2++)
          n2[i2] = 0;
        if (t4 <<= 3, this.endian === "big") {
          for (var o2 = 8;o2 < this.padLength; o2++)
            n2[i2++] = 0;
          n2[i2++] = 0, n2[i2++] = 0, n2[i2++] = 0, n2[i2++] = 0, n2[i2++] = t4 >>> 24 & 255, n2[i2++] = t4 >>> 16 & 255, n2[i2++] = t4 >>> 8 & 255, n2[i2++] = 255 & t4;
        } else
          for (n2[i2++] = 255 & t4, n2[i2++] = t4 >>> 8 & 255, n2[i2++] = t4 >>> 16 & 255, n2[i2++] = t4 >>> 24 & 255, n2[i2++] = 0, n2[i2++] = 0, n2[i2++] = 0, n2[i2++] = 0, o2 = 8;o2 < this.padLength; o2++)
            n2[i2++] = 0;
        return n2;
      };
    }, 9313: (t3, e2, r2) => {
      var n = r2(4685), i = r2(3528);
      function o(t4, e3, r3) {
        if (!(this instanceof o))
          return new o(t4, e3, r3);
        this.Hash = t4, this.blockSize = t4.blockSize / 8, this.outSize = t4.outSize / 8, this.inner = null, this.outer = null, this._init(n.toArray(e3, r3));
      }
      t3.exports = o, o.prototype._init = function(t4) {
        t4.length > this.blockSize && (t4 = new this.Hash().update(t4).digest()), i(t4.length <= this.blockSize);
        for (var e3 = t4.length;e3 < this.blockSize; e3++)
          t4.push(0);
        for (e3 = 0;e3 < t4.length; e3++)
          t4[e3] ^= 54;
        for (this.inner = new this.Hash().update(t4), e3 = 0;e3 < t4.length; e3++)
          t4[e3] ^= 106;
        this.outer = new this.Hash().update(t4);
      }, o.prototype.update = function(t4, e3) {
        return this.inner.update(t4, e3), this;
      }, o.prototype.digest = function(t4) {
        return this.outer.update(this.inner.digest()), this.outer.digest(t4);
      };
    }, 601: (t3, e2, r2) => {
      var n = r2(4685), i = r2(7695), o = n.rotl32, a = n.sum32, s = n.sum32_3, c = n.sum32_4, u = i.BlockHash;
      function f() {
        if (!(this instanceof f))
          return new f;
        u.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.endian = "little";
      }
      function l(t4, e3, r3, n2) {
        return t4 <= 15 ? e3 ^ r3 ^ n2 : t4 <= 31 ? e3 & r3 | ~e3 & n2 : t4 <= 47 ? (e3 | ~r3) ^ n2 : t4 <= 63 ? e3 & n2 | r3 & ~n2 : e3 ^ (r3 | ~n2);
      }
      function h(t4) {
        return t4 <= 15 ? 0 : t4 <= 31 ? 1518500249 : t4 <= 47 ? 1859775393 : t4 <= 63 ? 2400959708 : 2840853838;
      }
      function p(t4) {
        return t4 <= 15 ? 1352829926 : t4 <= 31 ? 1548603684 : t4 <= 47 ? 1836072691 : t4 <= 63 ? 2053994217 : 0;
      }
      n.inherits(f, u), e2.ripemd160 = f, f.blockSize = 512, f.outSize = 160, f.hmacStrength = 192, f.padLength = 64, f.prototype._update = function(t4, e3) {
        for (var r3 = this.h[0], n2 = this.h[1], i2 = this.h[2], u2 = this.h[3], f2 = this.h[4], v = r3, g = n2, _ = i2, w = u2, S = f2, O = 0;O < 80; O++) {
          var j = a(o(c(r3, l(O, n2, i2, u2), t4[d[O] + e3], h(O)), b[O]), f2);
          r3 = f2, f2 = u2, u2 = o(i2, 10), i2 = n2, n2 = j, j = a(o(c(v, l(79 - O, g, _, w), t4[y[O] + e3], p(O)), m[O]), S), v = S, S = w, w = o(_, 10), _ = g, g = j;
        }
        j = s(this.h[1], i2, w), this.h[1] = s(this.h[2], u2, S), this.h[2] = s(this.h[3], f2, v), this.h[3] = s(this.h[4], r3, g), this.h[4] = s(this.h[0], n2, _), this.h[0] = j;
      }, f.prototype._digest = function(t4) {
        return t4 === "hex" ? n.toHex32(this.h, "little") : n.split32(this.h, "little");
      };
      var d = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13], y = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11], b = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6], m = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];
    }, 690: (t3, e2, r2) => {
      e2.sha1 = r2(4042), e2.sha224 = r2(3329), e2.sha256 = r2(2344), e2.sha384 = r2(3420), e2.sha512 = r2(6749);
    }, 4042: (t3, e2, r2) => {
      var n = r2(4685), i = r2(7695), o = r2(4104), a = n.rotl32, s = n.sum32, c = n.sum32_5, u = o.ft_1, f = i.BlockHash, l = [1518500249, 1859775393, 2400959708, 3395469782];
      function h() {
        if (!(this instanceof h))
          return new h;
        f.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.W = new Array(80);
      }
      n.inherits(h, f), t3.exports = h, h.blockSize = 512, h.outSize = 160, h.hmacStrength = 80, h.padLength = 64, h.prototype._update = function(t4, e3) {
        for (var r3 = this.W, n2 = 0;n2 < 16; n2++)
          r3[n2] = t4[e3 + n2];
        for (;n2 < r3.length; n2++)
          r3[n2] = a(r3[n2 - 3] ^ r3[n2 - 8] ^ r3[n2 - 14] ^ r3[n2 - 16], 1);
        var i2 = this.h[0], o2 = this.h[1], f2 = this.h[2], h2 = this.h[3], p = this.h[4];
        for (n2 = 0;n2 < r3.length; n2++) {
          var d = ~~(n2 / 20), y = c(a(i2, 5), u(d, o2, f2, h2), p, r3[n2], l[d]);
          p = h2, h2 = f2, f2 = a(o2, 30), o2 = i2, i2 = y;
        }
        this.h[0] = s(this.h[0], i2), this.h[1] = s(this.h[1], o2), this.h[2] = s(this.h[2], f2), this.h[3] = s(this.h[3], h2), this.h[4] = s(this.h[4], p);
      }, h.prototype._digest = function(t4) {
        return t4 === "hex" ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
      };
    }, 3329: (t3, e2, r2) => {
      var n = r2(4685), i = r2(2344);
      function o() {
        if (!(this instanceof o))
          return new o;
        i.call(this), this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428];
      }
      n.inherits(o, i), t3.exports = o, o.blockSize = 512, o.outSize = 224, o.hmacStrength = 192, o.padLength = 64, o.prototype._digest = function(t4) {
        return t4 === "hex" ? n.toHex32(this.h.slice(0, 7), "big") : n.split32(this.h.slice(0, 7), "big");
      };
    }, 2344: (t3, e2, r2) => {
      var n = r2(4685), i = r2(7695), o = r2(4104), a = r2(3528), s = n.sum32, c = n.sum32_4, u = n.sum32_5, f = o.ch32, l = o.maj32, h = o.s0_256, p = o.s1_256, d = o.g0_256, y = o.g1_256, b = i.BlockHash, m = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];
      function v() {
        if (!(this instanceof v))
          return new v;
        b.call(this), this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], this.k = m, this.W = new Array(64);
      }
      n.inherits(v, b), t3.exports = v, v.blockSize = 512, v.outSize = 256, v.hmacStrength = 192, v.padLength = 64, v.prototype._update = function(t4, e3) {
        for (var r3 = this.W, n2 = 0;n2 < 16; n2++)
          r3[n2] = t4[e3 + n2];
        for (;n2 < r3.length; n2++)
          r3[n2] = c(y(r3[n2 - 2]), r3[n2 - 7], d(r3[n2 - 15]), r3[n2 - 16]);
        var i2 = this.h[0], o2 = this.h[1], b2 = this.h[2], m2 = this.h[3], v2 = this.h[4], g = this.h[5], _ = this.h[6], w = this.h[7];
        for (a(this.k.length === r3.length), n2 = 0;n2 < r3.length; n2++) {
          var S = u(w, p(v2), f(v2, g, _), this.k[n2], r3[n2]), O = s(h(i2), l(i2, o2, b2));
          w = _, _ = g, g = v2, v2 = s(m2, S), m2 = b2, b2 = o2, o2 = i2, i2 = s(S, O);
        }
        this.h[0] = s(this.h[0], i2), this.h[1] = s(this.h[1], o2), this.h[2] = s(this.h[2], b2), this.h[3] = s(this.h[3], m2), this.h[4] = s(this.h[4], v2), this.h[5] = s(this.h[5], g), this.h[6] = s(this.h[6], _), this.h[7] = s(this.h[7], w);
      }, v.prototype._digest = function(t4) {
        return t4 === "hex" ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
      };
    }, 3420: (t3, e2, r2) => {
      var n = r2(4685), i = r2(6749);
      function o() {
        if (!(this instanceof o))
          return new o;
        i.call(this), this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428];
      }
      n.inherits(o, i), t3.exports = o, o.blockSize = 1024, o.outSize = 384, o.hmacStrength = 192, o.padLength = 128, o.prototype._digest = function(t4) {
        return t4 === "hex" ? n.toHex32(this.h.slice(0, 12), "big") : n.split32(this.h.slice(0, 12), "big");
      };
    }, 6749: (t3, e2, r2) => {
      var n = r2(4685), i = r2(7695), o = r2(3528), a = n.rotr64_hi, s = n.rotr64_lo, c = n.shr64_hi, u = n.shr64_lo, f = n.sum64, l = n.sum64_hi, h = n.sum64_lo, p = n.sum64_4_hi, d = n.sum64_4_lo, y = n.sum64_5_hi, b = n.sum64_5_lo, m = i.BlockHash, v = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];
      function g() {
        if (!(this instanceof g))
          return new g;
        m.call(this), this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209], this.k = v, this.W = new Array(160);
      }
      function _(t4, e3, r3, n2, i2) {
        var o2 = t4 & r3 ^ ~t4 & i2;
        return o2 < 0 && (o2 += 4294967296), o2;
      }
      function w(t4, e3, r3, n2, i2, o2) {
        var a2 = e3 & n2 ^ ~e3 & o2;
        return a2 < 0 && (a2 += 4294967296), a2;
      }
      function S(t4, e3, r3, n2, i2) {
        var o2 = t4 & r3 ^ t4 & i2 ^ r3 & i2;
        return o2 < 0 && (o2 += 4294967296), o2;
      }
      function O(t4, e3, r3, n2, i2, o2) {
        var a2 = e3 & n2 ^ e3 & o2 ^ n2 & o2;
        return a2 < 0 && (a2 += 4294967296), a2;
      }
      function j(t4, e3) {
        var r3 = a(t4, e3, 28) ^ a(e3, t4, 2) ^ a(e3, t4, 7);
        return r3 < 0 && (r3 += 4294967296), r3;
      }
      function $(t4, e3) {
        var r3 = s(t4, e3, 28) ^ s(e3, t4, 2) ^ s(e3, t4, 7);
        return r3 < 0 && (r3 += 4294967296), r3;
      }
      function A(t4, e3) {
        var r3 = s(t4, e3, 14) ^ s(t4, e3, 18) ^ s(e3, t4, 9);
        return r3 < 0 && (r3 += 4294967296), r3;
      }
      function E(t4, e3) {
        var r3 = a(t4, e3, 1) ^ a(t4, e3, 8) ^ c(t4, e3, 7);
        return r3 < 0 && (r3 += 4294967296), r3;
      }
      function x(t4, e3) {
        var r3 = s(t4, e3, 1) ^ s(t4, e3, 8) ^ u(t4, e3, 7);
        return r3 < 0 && (r3 += 4294967296), r3;
      }
      function P(t4, e3) {
        var r3 = s(t4, e3, 19) ^ s(e3, t4, 29) ^ u(t4, e3, 6);
        return r3 < 0 && (r3 += 4294967296), r3;
      }
      n.inherits(g, m), t3.exports = g, g.blockSize = 1024, g.outSize = 512, g.hmacStrength = 192, g.padLength = 128, g.prototype._prepareBlock = function(t4, e3) {
        for (var r3 = this.W, n2 = 0;n2 < 32; n2++)
          r3[n2] = t4[e3 + n2];
        for (;n2 < r3.length; n2 += 2) {
          var i2 = (b2 = r3[n2 - 4], m2 = r3[n2 - 3], v2 = undefined, (v2 = a(b2, m2, 19) ^ a(m2, b2, 29) ^ c(b2, m2, 6)) < 0 && (v2 += 4294967296), v2), o2 = P(r3[n2 - 4], r3[n2 - 3]), s2 = r3[n2 - 14], u2 = r3[n2 - 13], f2 = E(r3[n2 - 30], r3[n2 - 29]), l2 = x(r3[n2 - 30], r3[n2 - 29]), h2 = r3[n2 - 32], y2 = r3[n2 - 31];
          r3[n2] = p(i2, o2, s2, u2, f2, l2, h2, y2), r3[n2 + 1] = d(i2, o2, s2, u2, f2, l2, h2, y2);
        }
        var b2, m2, v2;
      }, g.prototype._update = function(t4, e3) {
        this._prepareBlock(t4, e3);
        var r3, n2, i2, s2 = this.W, c2 = this.h[0], u2 = this.h[1], p2 = this.h[2], d2 = this.h[3], m2 = this.h[4], v2 = this.h[5], g2 = this.h[6], E2 = this.h[7], x2 = this.h[8], P2 = this.h[9], k = this.h[10], M = this.h[11], I = this.h[12], T = this.h[13], B = this.h[14], R = this.h[15];
        o(this.k.length === s2.length);
        for (var N = 0;N < s2.length; N += 2) {
          var D = B, L = R, C = (i2 = undefined, (i2 = a(r3 = x2, n2 = P2, 14) ^ a(r3, n2, 18) ^ a(n2, r3, 9)) < 0 && (i2 += 4294967296), i2), U = A(x2, P2), q = _(x2, 0, k, 0, I), F = w(0, P2, 0, M, 0, T), V = this.k[N], z = this.k[N + 1], K = s2[N], H = s2[N + 1], W = y(D, L, C, U, q, F, V, z, K, H), J = b(D, L, C, U, q, F, V, z, K, H);
          D = j(c2, u2), L = $(c2, u2), C = S(c2, 0, p2, 0, m2), U = O(0, u2, 0, d2, 0, v2);
          var G = l(D, L, C, U), Y = h(D, L, C, U);
          B = I, R = T, I = k, T = M, k = x2, M = P2, x2 = l(g2, E2, W, J), P2 = h(E2, E2, W, J), g2 = m2, E2 = v2, m2 = p2, v2 = d2, p2 = c2, d2 = u2, c2 = l(W, J, G, Y), u2 = h(W, J, G, Y);
        }
        f(this.h, 0, c2, u2), f(this.h, 2, p2, d2), f(this.h, 4, m2, v2), f(this.h, 6, g2, E2), f(this.h, 8, x2, P2), f(this.h, 10, k, M), f(this.h, 12, I, T), f(this.h, 14, B, R);
      }, g.prototype._digest = function(t4) {
        return t4 === "hex" ? n.toHex32(this.h, "big") : n.split32(this.h, "big");
      };
    }, 4104: (t3, e2, r2) => {
      var n = r2(4685).rotr32;
      function i(t4, e3, r3) {
        return t4 & e3 ^ ~t4 & r3;
      }
      function o(t4, e3, r3) {
        return t4 & e3 ^ t4 & r3 ^ e3 & r3;
      }
      function a(t4, e3, r3) {
        return t4 ^ e3 ^ r3;
      }
      e2.ft_1 = function(t4, e3, r3, n2) {
        return t4 === 0 ? i(e3, r3, n2) : t4 === 1 || t4 === 3 ? a(e3, r3, n2) : t4 === 2 ? o(e3, r3, n2) : undefined;
      }, e2.ch32 = i, e2.maj32 = o, e2.p32 = a, e2.s0_256 = function(t4) {
        return n(t4, 2) ^ n(t4, 13) ^ n(t4, 22);
      }, e2.s1_256 = function(t4) {
        return n(t4, 6) ^ n(t4, 11) ^ n(t4, 25);
      }, e2.g0_256 = function(t4) {
        return n(t4, 7) ^ n(t4, 18) ^ t4 >>> 3;
      }, e2.g1_256 = function(t4) {
        return n(t4, 17) ^ n(t4, 19) ^ t4 >>> 10;
      };
    }, 4685: (t3, e2, r2) => {
      var n = r2(3528), i = r2(1679);
      function o(t4, e3) {
        return (64512 & t4.charCodeAt(e3)) == 55296 && !(e3 < 0 || e3 + 1 >= t4.length) && (64512 & t4.charCodeAt(e3 + 1)) == 56320;
      }
      function a(t4) {
        return (t4 >>> 24 | t4 >>> 8 & 65280 | t4 << 8 & 16711680 | (255 & t4) << 24) >>> 0;
      }
      function s(t4) {
        return t4.length === 1 ? "0" + t4 : t4;
      }
      function c(t4) {
        return t4.length === 7 ? "0" + t4 : t4.length === 6 ? "00" + t4 : t4.length === 5 ? "000" + t4 : t4.length === 4 ? "0000" + t4 : t4.length === 3 ? "00000" + t4 : t4.length === 2 ? "000000" + t4 : t4.length === 1 ? "0000000" + t4 : t4;
      }
      e2.inherits = i, e2.toArray = function(t4, e3) {
        if (Array.isArray(t4))
          return t4.slice();
        if (!t4)
          return [];
        var r3 = [];
        if (typeof t4 == "string")
          if (e3) {
            if (e3 === "hex")
              for ((t4 = t4.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (t4 = "0" + t4), i2 = 0;i2 < t4.length; i2 += 2)
                r3.push(parseInt(t4[i2] + t4[i2 + 1], 16));
          } else
            for (var n2 = 0, i2 = 0;i2 < t4.length; i2++) {
              var a2 = t4.charCodeAt(i2);
              a2 < 128 ? r3[n2++] = a2 : a2 < 2048 ? (r3[n2++] = a2 >> 6 | 192, r3[n2++] = 63 & a2 | 128) : o(t4, i2) ? (a2 = 65536 + ((1023 & a2) << 10) + (1023 & t4.charCodeAt(++i2)), r3[n2++] = a2 >> 18 | 240, r3[n2++] = a2 >> 12 & 63 | 128, r3[n2++] = a2 >> 6 & 63 | 128, r3[n2++] = 63 & a2 | 128) : (r3[n2++] = a2 >> 12 | 224, r3[n2++] = a2 >> 6 & 63 | 128, r3[n2++] = 63 & a2 | 128);
            }
        else
          for (i2 = 0;i2 < t4.length; i2++)
            r3[i2] = 0 | t4[i2];
        return r3;
      }, e2.toHex = function(t4) {
        for (var e3 = "", r3 = 0;r3 < t4.length; r3++)
          e3 += s(t4[r3].toString(16));
        return e3;
      }, e2.htonl = a, e2.toHex32 = function(t4, e3) {
        for (var r3 = "", n2 = 0;n2 < t4.length; n2++) {
          var i2 = t4[n2];
          e3 === "little" && (i2 = a(i2)), r3 += c(i2.toString(16));
        }
        return r3;
      }, e2.zero2 = s, e2.zero8 = c, e2.join32 = function(t4, e3, r3, i2) {
        var o2 = r3 - e3;
        n(o2 % 4 == 0);
        for (var a2 = new Array(o2 / 4), s2 = 0, c2 = e3;s2 < a2.length; s2++, c2 += 4) {
          var u;
          u = i2 === "big" ? t4[c2] << 24 | t4[c2 + 1] << 16 | t4[c2 + 2] << 8 | t4[c2 + 3] : t4[c2 + 3] << 24 | t4[c2 + 2] << 16 | t4[c2 + 1] << 8 | t4[c2], a2[s2] = u >>> 0;
        }
        return a2;
      }, e2.split32 = function(t4, e3) {
        for (var r3 = new Array(4 * t4.length), n2 = 0, i2 = 0;n2 < t4.length; n2++, i2 += 4) {
          var o2 = t4[n2];
          e3 === "big" ? (r3[i2] = o2 >>> 24, r3[i2 + 1] = o2 >>> 16 & 255, r3[i2 + 2] = o2 >>> 8 & 255, r3[i2 + 3] = 255 & o2) : (r3[i2 + 3] = o2 >>> 24, r3[i2 + 2] = o2 >>> 16 & 255, r3[i2 + 1] = o2 >>> 8 & 255, r3[i2] = 255 & o2);
        }
        return r3;
      }, e2.rotr32 = function(t4, e3) {
        return t4 >>> e3 | t4 << 32 - e3;
      }, e2.rotl32 = function(t4, e3) {
        return t4 << e3 | t4 >>> 32 - e3;
      }, e2.sum32 = function(t4, e3) {
        return t4 + e3 >>> 0;
      }, e2.sum32_3 = function(t4, e3, r3) {
        return t4 + e3 + r3 >>> 0;
      }, e2.sum32_4 = function(t4, e3, r3, n2) {
        return t4 + e3 + r3 + n2 >>> 0;
      }, e2.sum32_5 = function(t4, e3, r3, n2, i2) {
        return t4 + e3 + r3 + n2 + i2 >>> 0;
      }, e2.sum64 = function(t4, e3, r3, n2) {
        var i2 = t4[e3], o2 = n2 + t4[e3 + 1] >>> 0, a2 = (o2 < n2 ? 1 : 0) + r3 + i2;
        t4[e3] = a2 >>> 0, t4[e3 + 1] = o2;
      }, e2.sum64_hi = function(t4, e3, r3, n2) {
        return (e3 + n2 >>> 0 < e3 ? 1 : 0) + t4 + r3 >>> 0;
      }, e2.sum64_lo = function(t4, e3, r3, n2) {
        return e3 + n2 >>> 0;
      }, e2.sum64_4_hi = function(t4, e3, r3, n2, i2, o2, a2, s2) {
        var c2 = 0, u = e3;
        return c2 += (u = u + n2 >>> 0) < e3 ? 1 : 0, c2 += (u = u + o2 >>> 0) < o2 ? 1 : 0, t4 + r3 + i2 + a2 + (c2 += (u = u + s2 >>> 0) < s2 ? 1 : 0) >>> 0;
      }, e2.sum64_4_lo = function(t4, e3, r3, n2, i2, o2, a2, s2) {
        return e3 + n2 + o2 + s2 >>> 0;
      }, e2.sum64_5_hi = function(t4, e3, r3, n2, i2, o2, a2, s2, c2, u) {
        var f = 0, l = e3;
        return f += (l = l + n2 >>> 0) < e3 ? 1 : 0, f += (l = l + o2 >>> 0) < o2 ? 1 : 0, f += (l = l + s2 >>> 0) < s2 ? 1 : 0, t4 + r3 + i2 + a2 + c2 + (f += (l = l + u >>> 0) < u ? 1 : 0) >>> 0;
      }, e2.sum64_5_lo = function(t4, e3, r3, n2, i2, o2, a2, s2, c2, u) {
        return e3 + n2 + o2 + s2 + u >>> 0;
      }, e2.rotr64_hi = function(t4, e3, r3) {
        return (e3 << 32 - r3 | t4 >>> r3) >>> 0;
      }, e2.rotr64_lo = function(t4, e3, r3) {
        return (t4 << 32 - r3 | e3 >>> r3) >>> 0;
      }, e2.shr64_hi = function(t4, e3, r3) {
        return t4 >>> r3;
      }, e2.shr64_lo = function(t4, e3, r3) {
        return (t4 << 32 - r3 | e3 >>> r3) >>> 0;
      };
    }, 5994: (t3, e2, r2) => {
      var n = Function.prototype.call, i = Object.prototype.hasOwnProperty, o = r2(2354);
      t3.exports = o.call(n, i);
    }, 6934: (t3, e2, r2) => {
      var n = r2(2859), i = r2(6706), o = r2(3528);
      function a(t4) {
        if (!(this instanceof a))
          return new a(t4);
        this.hash = t4.hash, this.predResist = !!t4.predResist, this.outLen = this.hash.outSize, this.minEntropy = t4.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
        var e3 = i.toArray(t4.entropy, t4.entropyEnc || "hex"), r3 = i.toArray(t4.nonce, t4.nonceEnc || "hex"), n2 = i.toArray(t4.pers, t4.persEnc || "hex");
        o(e3.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(e3, r3, n2);
      }
      t3.exports = a, a.prototype._init = function(t4, e3, r3) {
        var n2 = t4.concat(e3).concat(r3);
        this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
        for (var i2 = 0;i2 < this.V.length; i2++)
          this.K[i2] = 0, this.V[i2] = 1;
        this._update(n2), this._reseed = 1, this.reseedInterval = 281474976710656;
      }, a.prototype._hmac = function() {
        return new n.hmac(this.hash, this.K);
      }, a.prototype._update = function(t4) {
        var e3 = this._hmac().update(this.V).update([0]);
        t4 && (e3 = e3.update(t4)), this.K = e3.digest(), this.V = this._hmac().update(this.V).digest(), t4 && (this.K = this._hmac().update(this.V).update([1]).update(t4).digest(), this.V = this._hmac().update(this.V).digest());
      }, a.prototype.reseed = function(t4, e3, r3, n2) {
        typeof e3 != "string" && (n2 = r3, r3 = e3, e3 = null), t4 = i.toArray(t4, e3), r3 = i.toArray(r3, n2), o(t4.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(t4.concat(r3 || [])), this._reseed = 1;
      }, a.prototype.generate = function(t4, e3, r3, n2) {
        if (this._reseed > this.reseedInterval)
          throw new Error("Reseed is required");
        typeof e3 != "string" && (n2 = r3, r3 = e3, e3 = null), r3 && (r3 = i.toArray(r3, n2 || "hex"), this._update(r3));
        for (var o2 = [];o2.length < t4; )
          this.V = this._hmac().update(this.V).digest(), o2 = o2.concat(this.V);
        var a2 = o2.slice(0, t4);
        return this._update(r3), this._reseed++, i.encode(a2, e3);
      };
    }, 2486: (t3, e2) => {
      e2.read = function(t4, e3, r2, n, i) {
        var o, a, s = 8 * i - n - 1, c = (1 << s) - 1, u = c >> 1, f = -7, l = r2 ? i - 1 : 0, h = r2 ? -1 : 1, p = t4[e3 + l];
        for (l += h, o = p & (1 << -f) - 1, p >>= -f, f += s;f > 0; o = 256 * o + t4[e3 + l], l += h, f -= 8)
          ;
        for (a = o & (1 << -f) - 1, o >>= -f, f += n;f > 0; a = 256 * a + t4[e3 + l], l += h, f -= 8)
          ;
        if (o === 0)
          o = 1 - u;
        else {
          if (o === c)
            return a ? NaN : 1 / 0 * (p ? -1 : 1);
          a += Math.pow(2, n), o -= u;
        }
        return (p ? -1 : 1) * a * Math.pow(2, o - n);
      }, e2.write = function(t4, e3, r2, n, i, o) {
        var a, s, c, u = 8 * o - i - 1, f = (1 << u) - 1, l = f >> 1, h = i === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, p = n ? 0 : o - 1, d = n ? 1 : -1, y = e3 < 0 || e3 === 0 && 1 / e3 < 0 ? 1 : 0;
        for (e3 = Math.abs(e3), isNaN(e3) || e3 === 1 / 0 ? (s = isNaN(e3) ? 1 : 0, a = f) : (a = Math.floor(Math.log(e3) / Math.LN2), e3 * (c = Math.pow(2, -a)) < 1 && (a--, c *= 2), (e3 += a + l >= 1 ? h / c : h * Math.pow(2, 1 - l)) * c >= 2 && (a++, c /= 2), a + l >= f ? (s = 0, a = f) : a + l >= 1 ? (s = (e3 * c - 1) * Math.pow(2, i), a += l) : (s = e3 * Math.pow(2, l - 1) * Math.pow(2, i), a = 0));i >= 8; t4[r2 + p] = 255 & s, p += d, s /= 256, i -= 8)
          ;
        for (a = a << i | s, u += i;u > 0; t4[r2 + p] = 255 & a, p += d, a /= 256, u -= 8)
          ;
        t4[r2 + p - d] |= 128 * y;
      };
    }, 1679: (t3) => {
      typeof Object.create == "function" ? t3.exports = function(t4, e2) {
        e2 && (t4.super_ = e2, t4.prototype = Object.create(e2.prototype, { constructor: { value: t4, enumerable: false, writable: true, configurable: true } }));
      } : t3.exports = function(t4, e2) {
        if (e2) {
          t4.super_ = e2;
          var r2 = function() {
          };
          r2.prototype = e2.prototype, t4.prototype = new r2, t4.prototype.constructor = t4;
        }
      };
    }, 5899: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      var i = r2(953)(), o = r2(9466)("Object.prototype.toString"), a = function(t4) {
        return !(i && t4 && n(t4) === "object" && (Symbol.toStringTag in t4)) && o(t4) === "[object Arguments]";
      }, s = function(t4) {
        return !!a(t4) || t4 !== null && n(t4) === "object" && typeof t4.length == "number" && t4.length >= 0 && o(t4) !== "[object Array]" && o(t4.callee) === "[object Function]";
      }, c = function() {
        return a(arguments);
      }();
      a.isLegacyArguments = s, t3.exports = c ? a : s;
    }, 9809: (t3) => {
      function e2(t4) {
        return e2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, e2(t4);
      }
      var r2, n, i = Function.prototype.toString, o = (typeof Reflect == "undefined" ? "undefined" : e2(Reflect)) === "object" && Reflect !== null && Reflect.apply;
      if (typeof o == "function" && typeof Object.defineProperty == "function")
        try {
          r2 = Object.defineProperty({}, "length", { get: function() {
            throw n;
          } }), n = {}, o(function() {
            throw 42;
          }, null, r2);
        } catch (t4) {
          t4 !== n && (o = null);
        }
      else
        o = null;
      var a = /^\s*class\b/, s = function(t4) {
        try {
          var e3 = i.call(t4);
          return a.test(e3);
        } catch (t5) {
          return false;
        }
      }, c = function(t4) {
        try {
          return !s(t4) && (i.call(t4), true);
        } catch (t5) {
          return false;
        }
      }, u = Object.prototype.toString, f = typeof Symbol == "function" && !!Symbol.toStringTag, l = !(0 in [,]), h = function() {
        return false;
      };
      if ((typeof document == "undefined" ? "undefined" : e2(document)) === "object") {
        var p = document.all;
        u.call(p) === u.call(document.all) && (h = function(t4) {
          if ((l || !t4) && (t4 === undefined || e2(t4) === "object"))
            try {
              var r3 = u.call(t4);
              return (r3 === "[object HTMLAllCollection]" || r3 === "[object HTML document.all class]" || r3 === "[object HTMLCollection]" || r3 === "[object Object]") && t4("") == null;
            } catch (t5) {
            }
          return false;
        });
      }
      t3.exports = o ? function(t4) {
        if (h(t4))
          return true;
        if (!t4)
          return false;
        if (typeof t4 != "function" && e2(t4) !== "object")
          return false;
        try {
          o(t4, null, r2);
        } catch (t5) {
          if (t5 !== n)
            return false;
        }
        return !s(t4) && c(t4);
      } : function(t4) {
        if (h(t4))
          return true;
        if (!t4)
          return false;
        if (typeof t4 != "function" && e2(t4) !== "object")
          return false;
        if (f)
          return c(t4);
        if (s(t4))
          return false;
        var r3 = u.call(t4);
        return !(r3 !== "[object Function]" && r3 !== "[object GeneratorFunction]" && !/^\[object HTML/.test(r3)) && c(t4);
      };
    }, 1905: (t3, e2, r2) => {
      var n, i = Object.prototype.toString, o = Function.prototype.toString, a = /^\s*(?:function)?\*/, s = r2(953)(), c = Object.getPrototypeOf;
      t3.exports = function(t4) {
        if (typeof t4 != "function")
          return false;
        if (a.test(o.call(t4)))
          return true;
        if (!s)
          return i.call(t4) === "[object GeneratorFunction]";
        if (!c)
          return false;
        if (n === undefined) {
          var e3 = function() {
            if (!s)
              return false;
            try {
              return Function("return function*() {}")();
            } catch (t5) {
            }
          }();
          n = !!e3 && c(e3);
        }
        return c(t4) === n;
      };
    }, 118: (t3) => {
      t3.exports = function(t4) {
        return t4 != t4;
      };
    }, 6062: (t3, e2, r2) => {
      var n = r2(9122), i = r2(2273), o = r2(118), a = r2(4183), s = r2(5497), c = n(a(), Number);
      i(c, { getPolyfill: a, implementation: o, shim: s }), t3.exports = c;
    }, 4183: (t3, e2, r2) => {
      var n = r2(118);
      t3.exports = function() {
        return Number.isNaN && Number.isNaN(NaN) && !Number.isNaN("a") ? Number.isNaN : n;
      };
    }, 5497: (t3, e2, r2) => {
      var n = r2(2273), i = r2(4183);
      t3.exports = function() {
        var t4 = i();
        return n(Number, { isNaN: t4 }, { isNaN: function() {
          return Number.isNaN !== t4;
        } }), t4;
      };
    }, 7911: (t3, e2, r2) => {
      var n = r2(9834);
      t3.exports = function(t4) {
        return !!n(t4);
      };
    }, 5455: (t3) => {
      var e2 = {}.toString;
      t3.exports = Array.isArray || function(t4) {
        return e2.call(t4) == "[object Array]";
      };
    }, 8297: (t3) => {
      function e2(t4, e3) {
        var r3 = typeof Symbol != "undefined" && t4[Symbol.iterator] || t4["@@iterator"];
        if (!r3) {
          if (Array.isArray(t4) || (r3 = n(t4)) || e3 && t4 && typeof t4.length == "number") {
            r3 && (t4 = r3);
            var i2 = 0, o2 = function() {
            };
            return { s: o2, n: function() {
              return i2 >= t4.length ? { done: true } : { done: false, value: t4[i2++] };
            }, e: function(t5) {
              throw t5;
            }, f: o2 };
          }
          throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        var a2, s2 = true, c2 = false;
        return { s: function() {
          r3 = r3.call(t4);
        }, n: function() {
          var t5 = r3.next();
          return s2 = t5.done, t5;
        }, e: function(t5) {
          c2 = true, a2 = t5;
        }, f: function() {
          try {
            s2 || r3.return == null || r3.return();
          } finally {
            if (c2)
              throw a2;
          }
        } };
      }
      function r2(t4) {
        return r2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, r2(t4);
      }
      function n(t4, e3) {
        if (t4) {
          if (typeof t4 == "string")
            return i(t4, e3);
          var r3 = {}.toString.call(t4).slice(8, -1);
          return r3 === "Object" && t4.constructor && (r3 = t4.constructor.name), r3 === "Map" || r3 === "Set" ? Array.from(t4) : r3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r3) ? i(t4, e3) : undefined;
        }
      }
      function i(t4, e3) {
        (e3 == null || e3 > t4.length) && (e3 = t4.length);
        for (var r3 = 0, n2 = Array(e3);r3 < e3; r3++)
          n2[r3] = t4[r3];
        return n2;
      }
      function o(t4, e3, r3) {
        if (s())
          return Reflect.construct.apply(null, arguments);
        var n2 = [null];
        n2.push.apply(n2, e3);
        var i2 = new (t4.bind.apply(t4, n2));
        return r3 && a(i2, r3.prototype), i2;
      }
      function a(t4, e3) {
        return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, e4) {
          return t5.__proto__ = e4, t5;
        }, a(t4, e3);
      }
      function s() {
        try {
          var t4 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          }));
        } catch (t5) {
        }
        return (s = function() {
          return !!t4;
        })();
      }
      function c() {
        this._pres = new Map, this._posts = new Map;
      }
      function u(t4, e3, r3, n2, i2, o2, a2) {
        return o2.useErrorHandlers ? t4.execPost(r3, n2, i2, { error: e3 }, function(t5) {
          return typeof a2 == "function" && a2(t5);
        }) : typeof a2 == "function" && a2(e3);
      }
      function f(t4, e3, r3, n2) {
        var i2;
        try {
          i2 = t4.apply(e3, r3);
        } catch (t5) {
          return n2(t5);
        }
        l(i2) && i2.then(function() {
          return n2();
        }, function(t5) {
          return n2(t5);
        });
      }
      function l(t4) {
        return r2(t4) === "object" && t4 !== null && typeof t4.then == "function";
      }
      function h(t4) {
        var e3 = false, r3 = this;
        return function() {
          var n2 = arguments;
          if (!e3)
            return e3 = true, p(function() {
              return t4.apply(r3, n2);
            });
        };
      }
      c.skipWrappedFunction = function() {
        if (!(this instanceof c.skipWrappedFunction))
          return o(c.skipWrappedFunction, Array.prototype.slice.call(arguments));
        this.args = Array.prototype.slice.call(arguments);
      }, c.overwriteResult = function() {
        if (!(this instanceof c.overwriteResult))
          return o(c.overwriteResult, Array.prototype.slice.call(arguments));
        this.args = Array.prototype.slice.call(arguments);
      }, c.prototype.execPre = function(t4, e3, r3, n2) {
        arguments.length === 3 && (n2 = r3, r3 = []);
        var i2 = this._pres.get(t4) || [], o2 = i2.length, a2 = i2.numAsync || 0, s2 = 0, u2 = a2, d2 = false, y = r3, b = null;
        if (!o2)
          return p(function() {
            n2(null);
          });
        function m() {
          if (!(s2 >= o2)) {
            var t5 = i2[s2];
            if (t5.isAsync) {
              var r4 = [h(v), h(function(t6) {
                if (t6) {
                  if (d2)
                    return;
                  if (!(t6 instanceof c.skipWrappedFunction))
                    return d2 = true, n2(t6);
                  b = t6;
                }
                if (--u2 == 0 && s2 >= o2)
                  return n2(b);
              })];
              f(t5.fn, e3, r4, r4[0]);
            } else if (t5.fn.length > 0) {
              for (var a3 = [h(v)], g = arguments.length >= 2 ? arguments : [null].concat(y), _ = 1;_ < g.length; ++_)
                _ === g.length - 1 && typeof g[_] == "function" || a3.push(g[_]);
              f(t5.fn, e3, a3, a3[0]);
            } else {
              var w = null;
              try {
                w = t5.fn.call(e3);
              } catch (t6) {
                if (t6 != null)
                  return n2(t6);
              }
              if (l(w))
                w.then(function() {
                  return v();
                }, function(t6) {
                  return v(t6);
                });
              else {
                if (++s2 >= o2)
                  return u2 > 0 ? undefined : p(function() {
                    n2(b);
                  });
                m();
              }
            }
          }
        }
        function v(t5) {
          if (t5) {
            if (d2)
              return;
            if (!(t5 instanceof c.skipWrappedFunction))
              return d2 = true, n2(t5);
            b = t5;
          }
          if (++s2 >= o2)
            return u2 > 0 ? undefined : n2(b);
          m.apply(e3, arguments);
        }
        m.apply(null, [null].concat(r3));
      }, c.prototype.execPreSync = function(t4, e3, r3) {
        for (var n2 = this._pres.get(t4) || [], i2 = n2.length, o2 = 0;o2 < i2; ++o2)
          n2[o2].fn.apply(e3, r3 || []);
      }, c.prototype.execPost = function(t4, e3, r3, n2, i2) {
        arguments.length < 5 && (i2 = n2, n2 = null);
        var o2 = this._posts.get(t4) || [], a2 = o2.length, s2 = 0, u2 = null;
        if (n2 && n2.error && (u2 = n2.error), !a2)
          return p(function() {
            i2.apply(null, [u2].concat(r3));
          });
        (function t() {
          for (var n3 = o2[s2].fn, p2 = 0, y = r3.length, b = [], m = 0;m < y; ++m)
            p2 += r3[m] && r3[m]._kareemIgnore ? 0 : 1, r3[m] && r3[m]._kareemIgnore || b.push(r3[m]);
          if (u2)
            if (d(o2[s2], p2)) {
              var v = h(function(e4) {
                if (e4) {
                  if (e4 instanceof c.overwriteResult)
                    return r3 = e4.args, ++s2 >= a2 ? i2.call(null, u2) : t();
                  u2 = e4;
                }
                if (++s2 >= a2)
                  return i2.call(null, u2);
                t();
              });
              f(n3, e3, [u2].concat(b).concat([v]), v);
            } else {
              if (++s2 >= a2)
                return i2.call(null, u2);
              t();
            }
          else {
            var g = h(function(e4) {
              return e4 ? e4 instanceof c.overwriteResult ? (r3 = e4.args, ++s2 >= a2 ? i2.apply(null, [null].concat(r3)) : t()) : (u2 = e4, t()) : ++s2 >= a2 ? i2.apply(null, [null].concat(r3)) : void t();
            });
            if (d(o2[s2], p2))
              return ++s2 >= a2 ? i2.apply(null, [null].concat(r3)) : t();
            if (n3.length === p2 + 1)
              f(n3, e3, b.concat([g]), g);
            else {
              var _, w;
              try {
                w = n3.apply(e3, b);
              } catch (t5) {
                _ = t5, u2 = t5;
              }
              if (l(w))
                return w.then(function(t5) {
                  g(t5 instanceof c.overwriteResult ? t5 : null);
                }, function(t5) {
                  return g(t5);
                });
              if (w instanceof c.overwriteResult && (r3 = w.args), ++s2 >= a2)
                return i2.apply(null, [_].concat(r3));
              t();
            }
          }
        })();
      }, c.prototype.execPostSync = function(t4, e3, r3) {
        for (var n2 = this._posts.get(t4) || [], i2 = n2.length, o2 = 0;o2 < i2; ++o2) {
          var a2 = n2[o2].fn.apply(e3, r3 || []);
          a2 instanceof c.overwriteResult && (r3 = a2.args);
        }
        return r3;
      }, c.prototype.createWrapperSync = function(t4, e3) {
        var r3 = this;
        return function() {
          r3.execPreSync(t4, this, arguments);
          var n2 = e3.apply(this, arguments);
          return r3.execPostSync(t4, this, [n2])[0];
        };
      }, c.prototype.wrap = function(t4, e3, r3, o2, a2) {
        var s2 = o2.length > 0 ? o2[o2.length - 1] : null, f2 = Array.from(o2);
        typeof s2 == "function" && f2.pop();
        var h2 = this, p2 = (a2 = a2 || {}).checkForPromise;
        this.execPre(t4, r3, o2, function(o3) {
          if (o3 && !(o3 instanceof c.skipWrappedFunction)) {
            for (var d2 = a2.numCallbackParams || 0, y = a2.contextParameter ? [r3] : [], b = y.length;b < d2; ++b)
              y.push(null);
            return u(h2, o3, t4, r3, y, a2, s2);
          }
          var m, v, g = e3.length;
          if (o3 instanceof c.skipWrappedFunction)
            return m = o3.args[0], _.apply(undefined, [null].concat(function(t5) {
              if (Array.isArray(t5))
                return i(t5);
            }(v = o3.args) || function(t5) {
              if (typeof Symbol != "undefined" && t5[Symbol.iterator] != null || t5["@@iterator"] != null)
                return Array.from(t5);
            }(v) || n(v) || function() {
              throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }()));
          try {
            m = e3.apply(r3, f2.concat(_));
          } catch (t5) {
            return _(t5);
          }
          if (p2) {
            if (l(m))
              return m.then(function(t5) {
                return _(null, t5);
              }, function(t5) {
                return _(t5);
              });
            if (g < f2.length + 1)
              return _(null, m);
          }
          function _() {
            var e4 = Array.from(arguments);
            if (e4.shift(), a2.nullResultByDefault && e4.length === 0 && e4.push(null), arguments[0])
              return u(h2, arguments[0], t4, r3, e4, a2, s2);
            h2.execPost(t4, r3, e4, function() {
              s2 !== null && (arguments[0] ? s2(arguments[0]) : s2.apply(r3, arguments));
            });
          }
        });
      }, c.prototype.filter = function(t4) {
        for (var e3 = this, r3 = this.clone(), n2 = Array.from(r3._pres.keys()), i2 = function() {
          var n3 = a2[o2], i3 = e3._pres.get(n3).map(function(t5) {
            return Object.assign({}, t5, { name: n3 });
          }).filter(t4);
          if (i3.length === 0)
            return r3._pres.delete(n3), 1;
          i3.numAsync = i3.filter(function(t5) {
            return t5.isAsync;
          }).length, r3._pres.set(n3, i3);
        }, o2 = 0, a2 = n2;o2 < a2.length; o2++)
          i2();
        for (var s2 = Array.from(r3._posts.keys()), c2 = function() {
          var n3 = f2[u2], i3 = e3._posts.get(n3).map(function(t5) {
            return Object.assign({}, t5, { name: n3 });
          }).filter(t4);
          if (i3.length === 0)
            return r3._posts.delete(n3), 1;
          r3._posts.set(n3, i3);
        }, u2 = 0, f2 = s2;u2 < f2.length; u2++)
          c2();
        return r3;
      }, c.prototype.hasHooks = function(t4) {
        return this._pres.has(t4) || this._posts.has(t4);
      }, c.prototype.createWrapper = function(t4, e3, r3, n2) {
        var i2 = this;
        return this.hasHooks(t4) ? function() {
          var o2 = r3 || this;
          i2.wrap(t4, e3, o2, Array.from(arguments), n2);
        } : function() {
          var t5 = arguments, r4 = this;
          p(function() {
            return e3.apply(r4, t5);
          });
        };
      }, c.prototype.pre = function(t4, e3, n2, i2, o2) {
        var a2 = {};
        r2(e3) === "object" && e3 !== null ? e3 = (a2 = e3).isAsync : typeof arguments[1] != "boolean" && (n2 = e3, e3 = false);
        var s2 = this._pres.get(t4) || [];
        if (this._pres.set(t4, s2), e3 && (s2.numAsync = s2.numAsync || 0, ++s2.numAsync), typeof n2 != "function")
          throw new Error('pre() requires a function, got "' + r2(n2) + '"');
        return o2 ? s2.unshift(Object.assign({}, a2, { fn: n2, isAsync: e3 })) : s2.push(Object.assign({}, a2, { fn: n2, isAsync: e3 })), this;
      }, c.prototype.post = function(t4, e3, n2, i2) {
        var o2 = this._posts.get(t4) || [];
        if (typeof e3 == "function" && (i2 = !!n2, n2 = e3, e3 = {}), typeof n2 != "function")
          throw new Error('post() requires a function, got "' + r2(n2) + '"');
        return i2 ? o2.unshift(Object.assign({}, e3, { fn: n2 })) : o2.push(Object.assign({}, e3, { fn: n2 })), this._posts.set(t4, o2), this;
      }, c.prototype.clone = function() {
        var t4, r3 = new c, n2 = e2(this._pres.keys());
        try {
          for (n2.s();!(t4 = n2.n()).done; ) {
            var i2 = t4.value, o2 = this._pres.get(i2).slice();
            o2.numAsync = this._pres.get(i2).numAsync, r3._pres.set(i2, o2);
          }
        } catch (t5) {
          n2.e(t5);
        } finally {
          n2.f();
        }
        var a2, s2 = e2(this._posts.keys());
        try {
          for (s2.s();!(a2 = s2.n()).done; ) {
            var u2 = a2.value;
            r3._posts.set(u2, this._posts.get(u2).slice());
          }
        } catch (t5) {
          s2.e(t5);
        } finally {
          s2.f();
        }
        return r3;
      }, c.prototype.merge = function(t4, r3) {
        var n2, i2 = (r3 = arguments.length === 1 || r3) ? this.clone() : this, o2 = e2(t4._pres.keys());
        try {
          var a2 = function() {
            var e3 = n2.value, r4 = i2._pres.get(e3) || [], o3 = t4._pres.get(e3).filter(function(t5) {
              return r4.map(function(t6) {
                return t6.fn;
              }).indexOf(t5.fn) === -1;
            }), a3 = r4.concat(o3);
            a3.numAsync = r4.numAsync || 0, a3.numAsync += o3.filter(function(t5) {
              return t5.isAsync;
            }).length, i2._pres.set(e3, a3);
          };
          for (o2.s();!(n2 = o2.n()).done; )
            a2();
        } catch (t5) {
          o2.e(t5);
        } finally {
          o2.f();
        }
        var s2, c2 = e2(t4._posts.keys());
        try {
          var u2 = function() {
            var e3 = s2.value, r4 = i2._posts.get(e3) || [], n3 = t4._posts.get(e3).filter(function(t5) {
              return r4.indexOf(t5) === -1;
            });
            i2._posts.set(e3, r4.concat(n3));
          };
          for (c2.s();!(s2 = c2.n()).done; )
            u2();
        } catch (t5) {
          c2.e(t5);
        } finally {
          c2.f();
        }
        return i2;
      };
      var p = r2({ env: {} }) === "object" && { env: {} } !== null && { env: {} }.nextTick || function(t4) {
        setTimeout(t4, 0);
      };
      function d(t4, e3) {
        return !!t4.errorHandler || t4.fn.length === e3 + 2;
      }
      t3.exports = c;
    }, 2635: (t3, e2, r2) => {
      var n = r2(1679), i = r2(6936), o = r2(9732).Buffer, a = new Array(16);
      function s() {
        i.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878;
      }
      function c(t4, e3) {
        return t4 << e3 | t4 >>> 32 - e3;
      }
      function u(t4, e3, r3, n2, i2, o2, a2) {
        return c(t4 + (e3 & r3 | ~e3 & n2) + i2 + o2 | 0, a2) + e3 | 0;
      }
      function f(t4, e3, r3, n2, i2, o2, a2) {
        return c(t4 + (e3 & n2 | r3 & ~n2) + i2 + o2 | 0, a2) + e3 | 0;
      }
      function l(t4, e3, r3, n2, i2, o2, a2) {
        return c(t4 + (e3 ^ r3 ^ n2) + i2 + o2 | 0, a2) + e3 | 0;
      }
      function h(t4, e3, r3, n2, i2, o2, a2) {
        return c(t4 + (r3 ^ (e3 | ~n2)) + i2 + o2 | 0, a2) + e3 | 0;
      }
      n(s, i), s.prototype._update = function() {
        for (var t4 = a, e3 = 0;e3 < 16; ++e3)
          t4[e3] = this._block.readInt32LE(4 * e3);
        var r3 = this._a, n2 = this._b, i2 = this._c, o2 = this._d;
        r3 = u(r3, n2, i2, o2, t4[0], 3614090360, 7), o2 = u(o2, r3, n2, i2, t4[1], 3905402710, 12), i2 = u(i2, o2, r3, n2, t4[2], 606105819, 17), n2 = u(n2, i2, o2, r3, t4[3], 3250441966, 22), r3 = u(r3, n2, i2, o2, t4[4], 4118548399, 7), o2 = u(o2, r3, n2, i2, t4[5], 1200080426, 12), i2 = u(i2, o2, r3, n2, t4[6], 2821735955, 17), n2 = u(n2, i2, o2, r3, t4[7], 4249261313, 22), r3 = u(r3, n2, i2, o2, t4[8], 1770035416, 7), o2 = u(o2, r3, n2, i2, t4[9], 2336552879, 12), i2 = u(i2, o2, r3, n2, t4[10], 4294925233, 17), n2 = u(n2, i2, o2, r3, t4[11], 2304563134, 22), r3 = u(r3, n2, i2, o2, t4[12], 1804603682, 7), o2 = u(o2, r3, n2, i2, t4[13], 4254626195, 12), i2 = u(i2, o2, r3, n2, t4[14], 2792965006, 17), r3 = f(r3, n2 = u(n2, i2, o2, r3, t4[15], 1236535329, 22), i2, o2, t4[1], 4129170786, 5), o2 = f(o2, r3, n2, i2, t4[6], 3225465664, 9), i2 = f(i2, o2, r3, n2, t4[11], 643717713, 14), n2 = f(n2, i2, o2, r3, t4[0], 3921069994, 20), r3 = f(r3, n2, i2, o2, t4[5], 3593408605, 5), o2 = f(o2, r3, n2, i2, t4[10], 38016083, 9), i2 = f(i2, o2, r3, n2, t4[15], 3634488961, 14), n2 = f(n2, i2, o2, r3, t4[4], 3889429448, 20), r3 = f(r3, n2, i2, o2, t4[9], 568446438, 5), o2 = f(o2, r3, n2, i2, t4[14], 3275163606, 9), i2 = f(i2, o2, r3, n2, t4[3], 4107603335, 14), n2 = f(n2, i2, o2, r3, t4[8], 1163531501, 20), r3 = f(r3, n2, i2, o2, t4[13], 2850285829, 5), o2 = f(o2, r3, n2, i2, t4[2], 4243563512, 9), i2 = f(i2, o2, r3, n2, t4[7], 1735328473, 14), r3 = l(r3, n2 = f(n2, i2, o2, r3, t4[12], 2368359562, 20), i2, o2, t4[5], 4294588738, 4), o2 = l(o2, r3, n2, i2, t4[8], 2272392833, 11), i2 = l(i2, o2, r3, n2, t4[11], 1839030562, 16), n2 = l(n2, i2, o2, r3, t4[14], 4259657740, 23), r3 = l(r3, n2, i2, o2, t4[1], 2763975236, 4), o2 = l(o2, r3, n2, i2, t4[4], 1272893353, 11), i2 = l(i2, o2, r3, n2, t4[7], 4139469664, 16), n2 = l(n2, i2, o2, r3, t4[10], 3200236656, 23), r3 = l(r3, n2, i2, o2, t4[13], 681279174, 4), o2 = l(o2, r3, n2, i2, t4[0], 3936430074, 11), i2 = l(i2, o2, r3, n2, t4[3], 3572445317, 16), n2 = l(n2, i2, o2, r3, t4[6], 76029189, 23), r3 = l(r3, n2, i2, o2, t4[9], 3654602809, 4), o2 = l(o2, r3, n2, i2, t4[12], 3873151461, 11), i2 = l(i2, o2, r3, n2, t4[15], 530742520, 16), r3 = h(r3, n2 = l(n2, i2, o2, r3, t4[2], 3299628645, 23), i2, o2, t4[0], 4096336452, 6), o2 = h(o2, r3, n2, i2, t4[7], 1126891415, 10), i2 = h(i2, o2, r3, n2, t4[14], 2878612391, 15), n2 = h(n2, i2, o2, r3, t4[5], 4237533241, 21), r3 = h(r3, n2, i2, o2, t4[12], 1700485571, 6), o2 = h(o2, r3, n2, i2, t4[3], 2399980690, 10), i2 = h(i2, o2, r3, n2, t4[10], 4293915773, 15), n2 = h(n2, i2, o2, r3, t4[1], 2240044497, 21), r3 = h(r3, n2, i2, o2, t4[8], 1873313359, 6), o2 = h(o2, r3, n2, i2, t4[15], 4264355552, 10), i2 = h(i2, o2, r3, n2, t4[6], 2734768916, 15), n2 = h(n2, i2, o2, r3, t4[13], 1309151649, 21), r3 = h(r3, n2, i2, o2, t4[4], 4149444226, 6), o2 = h(o2, r3, n2, i2, t4[11], 3174756917, 10), i2 = h(i2, o2, r3, n2, t4[2], 718787259, 15), n2 = h(n2, i2, o2, r3, t4[9], 3951481745, 21), this._a = this._a + r3 | 0, this._b = this._b + n2 | 0, this._c = this._c + i2 | 0, this._d = this._d + o2 | 0;
      }, s.prototype._digest = function() {
        this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
        var t4 = o.allocUnsafe(16);
        return t4.writeInt32LE(this._a, 0), t4.writeInt32LE(this._b, 4), t4.writeInt32LE(this._c, 8), t4.writeInt32LE(this._d, 12), t4;
      }, t3.exports = s;
    }, 1257: (t3, e2, r2) => {
      var n = r2(7799), i = r2(8904);
      function o(t4) {
        this.rand = t4 || new i.Rand;
      }
      t3.exports = o, o.create = function(t4) {
        return new o(t4);
      }, o.prototype._randbelow = function(t4) {
        var e3 = t4.bitLength(), r3 = Math.ceil(e3 / 8);
        do {
          var i2 = new n(this.rand.generate(r3));
        } while (i2.cmp(t4) >= 0);
        return i2;
      }, o.prototype._randrange = function(t4, e3) {
        var r3 = e3.sub(t4);
        return t4.add(this._randbelow(r3));
      }, o.prototype.test = function(t4, e3, r3) {
        var i2 = t4.bitLength(), o2 = n.mont(t4), a = new n(1).toRed(o2);
        e3 || (e3 = Math.max(1, i2 / 48 | 0));
        for (var s = t4.subn(1), c = 0;!s.testn(c); c++)
          ;
        for (var u = t4.shrn(c), f = s.toRed(o2);e3 > 0; e3--) {
          var l = this._randrange(new n(2), s);
          r3 && r3(l);
          var h = l.toRed(o2).redPow(u);
          if (h.cmp(a) !== 0 && h.cmp(f) !== 0) {
            for (var p = 1;p < c; p++) {
              if ((h = h.redSqr()).cmp(a) === 0)
                return false;
              if (h.cmp(f) === 0)
                break;
            }
            if (p === c)
              return false;
          }
        }
        return true;
      }, o.prototype.getDivisor = function(t4, e3) {
        var r3 = t4.bitLength(), i2 = n.mont(t4), o2 = new n(1).toRed(i2);
        e3 || (e3 = Math.max(1, r3 / 48 | 0));
        for (var a = t4.subn(1), s = 0;!a.testn(s); s++)
          ;
        for (var c = t4.shrn(s), u = a.toRed(i2);e3 > 0; e3--) {
          var f = this._randrange(new n(2), a), l = t4.gcd(f);
          if (l.cmpn(1) !== 0)
            return l;
          var h = f.toRed(i2).redPow(c);
          if (h.cmp(o2) !== 0 && h.cmp(u) !== 0) {
            for (var p = 1;p < s; p++) {
              if ((h = h.redSqr()).cmp(o2) === 0)
                return h.fromRed().subn(1).gcd(t4);
              if (h.cmp(u) === 0)
                break;
            }
            if (p === s)
              return (h = h.redSqr()).fromRed().subn(1).gcd(t4);
          }
        }
        return false;
      };
    }, 3528: (t3) => {
      function e2(t4, e3) {
        if (!t4)
          throw new Error(e3 || "Assertion failed");
      }
      t3.exports = e2, e2.equal = function(t4, e3, r2) {
        if (t4 != e3)
          throw new Error(r2 || "Assertion failed: " + t4 + " != " + e3);
      };
    }, 6706: (t3, e2) => {
      var r2 = e2;
      function n(t4) {
        return t4.length === 1 ? "0" + t4 : t4;
      }
      function i(t4) {
        for (var e3 = "", r3 = 0;r3 < t4.length; r3++)
          e3 += n(t4[r3].toString(16));
        return e3;
      }
      r2.toArray = function(t4, e3) {
        if (Array.isArray(t4))
          return t4.slice();
        if (!t4)
          return [];
        var r3 = [];
        if (typeof t4 != "string") {
          for (var n2 = 0;n2 < t4.length; n2++)
            r3[n2] = 0 | t4[n2];
          return r3;
        }
        if (e3 === "hex")
          for ((t4 = t4.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (t4 = "0" + t4), n2 = 0;n2 < t4.length; n2 += 2)
            r3.push(parseInt(t4[n2] + t4[n2 + 1], 16));
        else
          for (n2 = 0;n2 < t4.length; n2++) {
            var i2 = t4.charCodeAt(n2), o = i2 >> 8, a = 255 & i2;
            o ? r3.push(o, a) : r3.push(a);
          }
        return r3;
      }, r2.zero2 = n, r2.toHex = i, r2.encode = function(t4, e3) {
        return e3 === "hex" ? i(t4) : t4;
      };
    }, 5678: (t3, e2, r2) => {
      t3.exports = r2(2914);
    }, 2914: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      var i = r2(7860), o = ["__proto__", "constructor", "prototype"];
      function a(t4, e3, r3, n2, i2, o2) {
        for (var s2, c = 0;c < t4.length && c < e3.length; ++c)
          s2 = t4[c], Array.isArray(s2) && Array.isArray(e3[c]) ? a(s2, e3[c], r3, n2, i2, o2) : s2 && (n2 ? n2(s2, r3, o2(e3[c])) : (s2[i2] && (s2 = s2[i2]), s2[r3] = o2(e3[c])));
      }
      function s(t4) {
        return t4;
      }
      e2.get = function(t4, r3, o2, a2) {
        var c;
        typeof o2 == "function" && (o2.length < 2 ? (a2 = o2, o2 = undefined) : (c = o2, o2 = undefined)), a2 || (a2 = s);
        var u = typeof t4 == "string" ? i(t4) : t4;
        if (!Array.isArray(u))
          throw new TypeError("Invalid `path`. Must be either string or array");
        for (var f, l = r3, h = 0;h < u.length; ++h) {
          if (f = u[h], typeof u[h] != "string" && typeof u[h] != "number")
            throw new TypeError("Each segment of path to `get()` must be a string or number, got " + n(u[h]));
          if (Array.isArray(l) && !/^\d+$/.test(f)) {
            var p = u.slice(h);
            return [].concat(l).map(function(t5) {
              return t5 ? e2.get(p, t5, o2 || c, a2) : a2(undefined);
            });
          }
          if (c)
            l = c(l, f);
          else {
            var d = o2 && l[o2] ? l[o2] : l;
            l = d instanceof Map ? d.get(f) : d[f];
          }
          if (!l)
            return a2(l);
        }
        return a2(l);
      }, e2.has = function(t4, e3) {
        var r3 = typeof t4 == "string" ? i(t4) : t4;
        if (!Array.isArray(r3))
          throw new TypeError("Invalid `path`. Must be either string or array");
        for (var o2 = r3.length, a2 = e3, s2 = 0;s2 < o2; ++s2) {
          if (typeof r3[s2] != "string" && typeof r3[s2] != "number")
            throw new TypeError("Each segment of path to `has()` must be a string or number, got " + n(r3[s2]));
          if (a2 == null || n(a2) !== "object" || !(r3[s2] in a2))
            return false;
          a2 = a2[r3[s2]];
        }
        return true;
      }, e2.unset = function(t4, e3) {
        var r3 = typeof t4 == "string" ? i(t4) : t4;
        if (!Array.isArray(r3))
          throw new TypeError("Invalid `path`. Must be either string or array");
        for (var a2 = r3.length, s2 = e3, c = 0;c < a2; ++c) {
          if (s2 == null || n(s2) !== "object" || !(r3[c] in s2))
            return false;
          if (typeof r3[c] != "string" && typeof r3[c] != "number")
            throw new TypeError("Each segment of path to `unset()` must be a string or number, got " + n(r3[c]));
          if (o.indexOf(r3[c]) !== -1)
            return false;
          if (c === a2 - 1)
            return delete s2[r3[c]], true;
          s2 = s2 instanceof Map ? s2.get(r3[c]) : s2[r3[c]];
        }
        return true;
      }, e2.set = function(t4, r3, c, u, f, l) {
        var h;
        typeof u == "function" && (u.length < 2 ? (f = u, u = undefined) : (h = u, u = undefined)), f || (f = s);
        var p = typeof t4 == "string" ? i(t4) : t4;
        if (!Array.isArray(p))
          throw new TypeError("Invalid `path`. Must be either string or array");
        if (c != null) {
          for (var d = 0;d < p.length; ++d) {
            if (typeof p[d] != "string" && typeof p[d] != "number")
              throw new TypeError("Each segment of path to `set()` must be a string or number, got " + n(p[d]));
            if (o.indexOf(p[d]) !== -1)
              return;
          }
          for (var y, b = l || /\$/.test(t4) && l !== false, m = c, v = (d = 0, p.length - 1);d < v; ++d)
            if ((y = p[d]) != "$") {
              if (Array.isArray(m) && !/^\d+$/.test(y)) {
                var g = p.slice(d);
                if (!b && Array.isArray(r3))
                  for (var _ = 0;_ < m.length && _ < r3.length; ++_)
                    e2.set(g, r3[_], m[_], u || h, f, b);
                else
                  for (_ = 0;_ < m.length; ++_)
                    e2.set(g, r3, m[_], u || h, f, b);
                return;
              }
              if (h)
                m = h(m, y);
              else {
                var w = u && m[u] ? m[u] : m;
                m = w instanceof Map ? w.get(y) : w[y];
              }
              if (!m)
                return;
            } else if (d == v - 1)
              break;
          if (y = p[v], u && m[u] && (m = m[u]), Array.isArray(m) && !/^\d+$/.test(y))
            if (!b && Array.isArray(r3))
              a(m, r3, y, h, u, f);
            else
              for (_ = 0;_ < m.length; ++_) {
                var S = m[_];
                S && (h ? h(S, y, f(r3)) : (S[u] && (S = S[u]), S[y] = f(r3)));
              }
          else
            h ? h(m, y, f(r3)) : m instanceof Map ? m.set(y, f(r3)) : m[y] = f(r3);
        }
      }, e2.stringToParts = i;
    }, 7860: (t3) => {
      t3.exports = function(t4) {
        for (var e2 = [], r2 = "", n = "DEFAULT", i = 0;i < t4.length; ++i)
          n !== "IN_SQUARE_BRACKETS" || /\d/.test(t4[i]) || t4[i] === "]" || (n = "DEFAULT", r2 = e2[e2.length - 1] + "[" + r2, e2.splice(e2.length - 1, 1)), t4[i] === "[" ? (n !== "IMMEDIATELY_AFTER_SQUARE_BRACKETS" && (e2.push(r2), r2 = ""), n = "IN_SQUARE_BRACKETS") : t4[i] === "]" ? n === "IN_SQUARE_BRACKETS" ? (n = "IMMEDIATELY_AFTER_SQUARE_BRACKETS", e2.push(r2), r2 = "") : (n = "DEFAULT", r2 += t4[i]) : t4[i] === "." ? (n !== "IMMEDIATELY_AFTER_SQUARE_BRACKETS" && (e2.push(r2), r2 = ""), n = "DEFAULT") : r2 += t4[i];
        return n !== "IMMEDIATELY_AFTER_SQUARE_BRACKETS" && e2.push(r2), e2;
      };
    }, 354: (t3) => {
      function e2(t4) {
        return e2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, e2(t4);
      }
      var r2 = 1000, n = 60 * r2, i = 60 * n, o = 24 * i, a = 7 * o;
      function s(t4, e3, r3, n2) {
        var i2 = e3 >= 1.5 * r3;
        return Math.round(t4 / r3) + " " + n2 + (i2 ? "s" : "");
      }
      t3.exports = function(t4, c) {
        c = c || {};
        var u, f, l = e2(t4);
        if (l === "string" && t4.length > 0)
          return function(t5) {
            if (!((t5 = String(t5)).length > 100)) {
              var e3 = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(t5);
              if (e3) {
                var s2 = parseFloat(e3[1]);
                switch ((e3[2] || "ms").toLowerCase()) {
                  case "years":
                  case "year":
                  case "yrs":
                  case "yr":
                  case "y":
                    return 31557600000 * s2;
                  case "weeks":
                  case "week":
                  case "w":
                    return s2 * a;
                  case "days":
                  case "day":
                  case "d":
                    return s2 * o;
                  case "hours":
                  case "hour":
                  case "hrs":
                  case "hr":
                  case "h":
                    return s2 * i;
                  case "minutes":
                  case "minute":
                  case "mins":
                  case "min":
                  case "m":
                    return s2 * n;
                  case "seconds":
                  case "second":
                  case "secs":
                  case "sec":
                  case "s":
                    return s2 * r2;
                  case "milliseconds":
                  case "millisecond":
                  case "msecs":
                  case "msec":
                  case "ms":
                    return s2;
                  default:
                    return;
                }
              }
            }
          }(t4);
        if (l === "number" && isFinite(t4))
          return c.long ? (u = t4, (f = Math.abs(u)) >= o ? s(u, f, o, "day") : f >= i ? s(u, f, i, "hour") : f >= n ? s(u, f, n, "minute") : f >= r2 ? s(u, f, r2, "second") : u + " ms") : function(t5) {
            var e3 = Math.abs(t5);
            return e3 >= o ? Math.round(t5 / o) + "d" : e3 >= i ? Math.round(t5 / i) + "h" : e3 >= n ? Math.round(t5 / n) + "m" : e3 >= r2 ? Math.round(t5 / r2) + "s" : t5 + "ms";
          }(t4);
        throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(t4));
      };
    }, 4756: (t3) => {
      var e2 = function(t4) {
        return t4 != t4;
      };
      t3.exports = function(t4, r2) {
        return t4 === 0 && r2 === 0 ? 1 / t4 == 1 / r2 : t4 === r2 || !(!e2(t4) || !e2(r2));
      };
    }, 2064: (t3, e2, r2) => {
      var n = r2(2273), i = r2(9122), o = r2(4756), a = r2(2481), s = r2(9247), c = i(a(), Object);
      n(c, { getPolyfill: a, implementation: o, shim: s }), t3.exports = c;
    }, 2481: (t3, e2, r2) => {
      var n = r2(4756);
      t3.exports = function() {
        return typeof Object.is == "function" ? Object.is : n;
      };
    }, 9247: (t3, e2, r2) => {
      var n = r2(2481), i = r2(2273);
      t3.exports = function() {
        var t4 = n();
        return i(Object, { is: t4 }, { is: function() {
          return Object.is !== t4;
        } }), t4;
      };
    }, 6544: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      var i;
      if (!Object.keys) {
        var o = Object.prototype.hasOwnProperty, a = Object.prototype.toString, s = r2(6312), c = Object.prototype.propertyIsEnumerable, u = !c.call({ toString: null }, "toString"), f = c.call(function() {
        }, "prototype"), l = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"], h = function(t4) {
          var e3 = t4.constructor;
          return e3 && e3.prototype === t4;
        }, p = { $applicationCache: true, $console: true, $external: true, $frame: true, $frameElement: true, $frames: true, $innerHeight: true, $innerWidth: true, $onmozfullscreenchange: true, $onmozfullscreenerror: true, $outerHeight: true, $outerWidth: true, $pageXOffset: true, $pageYOffset: true, $parent: true, $scrollLeft: true, $scrollTop: true, $scrollX: true, $scrollY: true, $self: true, $webkitIndexedDB: true, $webkitStorageInfo: true, $window: true }, d = function() {
          if (typeof window == "undefined")
            return false;
          for (var t4 in window)
            try {
              if (!p["$" + t4] && o.call(window, t4) && window[t4] !== null && n(window[t4]) === "object")
                try {
                  h(window[t4]);
                } catch (t5) {
                  return true;
                }
            } catch (t5) {
              return true;
            }
          return false;
        }();
        i = function(t4) {
          var e3 = t4 !== null && n(t4) === "object", r3 = a.call(t4) === "[object Function]", i2 = s(t4), c2 = e3 && a.call(t4) === "[object String]", p2 = [];
          if (!e3 && !r3 && !i2)
            throw new TypeError("Object.keys called on a non-object");
          var y = f && r3;
          if (c2 && t4.length > 0 && !o.call(t4, 0))
            for (var b = 0;b < t4.length; ++b)
              p2.push(String(b));
          if (i2 && t4.length > 0)
            for (var m = 0;m < t4.length; ++m)
              p2.push(String(m));
          else
            for (var v in t4)
              y && v === "prototype" || !o.call(t4, v) || p2.push(String(v));
          if (u)
            for (var g = function(t5) {
              if (typeof window == "undefined" || !d)
                return h(t5);
              try {
                return h(t5);
              } catch (t6) {
                return false;
              }
            }(t4), _ = 0;_ < l.length; ++_)
              g && l[_] === "constructor" || !o.call(t4, l[_]) || p2.push(l[_]);
          return p2;
        };
      }
      t3.exports = i;
    }, 668: (t3, e2, r2) => {
      var n = Array.prototype.slice, i = r2(6312), o = Object.keys, a = o ? function(t4) {
        return o(t4);
      } : r2(6544), s = Object.keys;
      a.shim = function() {
        if (Object.keys) {
          var t4 = function() {
            var t5 = Object.keys(arguments);
            return t5 && t5.length === arguments.length;
          }(1, 2);
          t4 || (Object.keys = function(t5) {
            return i(t5) ? s(n.call(t5)) : s(t5);
          });
        } else
          Object.keys = a;
        return Object.keys || a;
      }, t3.exports = a;
    }, 6312: (t3) => {
      function e2(t4) {
        return e2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, e2(t4);
      }
      var r2 = Object.prototype.toString;
      t3.exports = function(t4) {
        var n = r2.call(t4), i = n === "[object Arguments]";
        return i || (i = n !== "[object Array]" && t4 !== null && e2(t4) === "object" && typeof t4.length == "number" && t4.length >= 0 && r2.call(t4.callee) === "[object Function]"), i;
      };
    }, 6292: (t3, e2, r2) => {
      var n = r2(1419);
      e2.certificate = r2(6170);
      var i = n.define("RSAPrivateKey", function() {
        this.seq().obj(this.key("version").int(), this.key("modulus").int(), this.key("publicExponent").int(), this.key("privateExponent").int(), this.key("prime1").int(), this.key("prime2").int(), this.key("exponent1").int(), this.key("exponent2").int(), this.key("coefficient").int());
      });
      e2.RSAPrivateKey = i;
      var o = n.define("RSAPublicKey", function() {
        this.seq().obj(this.key("modulus").int(), this.key("publicExponent").int());
      });
      e2.RSAPublicKey = o;
      var a = n.define("AlgorithmIdentifier", function() {
        this.seq().obj(this.key("algorithm").objid(), this.key("none").null_().optional(), this.key("curve").objid().optional(), this.key("params").seq().obj(this.key("p").int(), this.key("q").int(), this.key("g").int()).optional());
      }), s = n.define("SubjectPublicKeyInfo", function() {
        this.seq().obj(this.key("algorithm").use(a), this.key("subjectPublicKey").bitstr());
      });
      e2.PublicKey = s;
      var c = n.define("PrivateKeyInfo", function() {
        this.seq().obj(this.key("version").int(), this.key("algorithm").use(a), this.key("subjectPrivateKey").octstr());
      });
      e2.PrivateKey = c;
      var u = n.define("EncryptedPrivateKeyInfo", function() {
        this.seq().obj(this.key("algorithm").seq().obj(this.key("id").objid(), this.key("decrypt").seq().obj(this.key("kde").seq().obj(this.key("id").objid(), this.key("kdeparams").seq().obj(this.key("salt").octstr(), this.key("iters").int())), this.key("cipher").seq().obj(this.key("algo").objid(), this.key("iv").octstr()))), this.key("subjectPrivateKey").octstr());
      });
      e2.EncryptedPrivateKey = u;
      var f = n.define("DSAPrivateKey", function() {
        this.seq().obj(this.key("version").int(), this.key("p").int(), this.key("q").int(), this.key("g").int(), this.key("pub_key").int(), this.key("priv_key").int());
      });
      e2.DSAPrivateKey = f, e2.DSAparam = n.define("DSAparam", function() {
        this.int();
      });
      var l = n.define("ECParameters", function() {
        this.choice({ namedCurve: this.objid() });
      }), h = n.define("ECPrivateKey", function() {
        this.seq().obj(this.key("version").int(), this.key("privateKey").octstr(), this.key("parameters").optional().explicit(0).use(l), this.key("publicKey").optional().explicit(1).bitstr());
      });
      e2.ECPrivateKey = h, e2.signature = n.define("signature", function() {
        this.seq().obj(this.key("r").int(), this.key("s").int());
      });
    }, 6170: (t3, e2, r2) => {
      var n = r2(1419), i = n.define("Time", function() {
        this.choice({ utcTime: this.utctime(), generalTime: this.gentime() });
      }), o = n.define("AttributeTypeValue", function() {
        this.seq().obj(this.key("type").objid(), this.key("value").any());
      }), a = n.define("AlgorithmIdentifier", function() {
        this.seq().obj(this.key("algorithm").objid(), this.key("parameters").optional(), this.key("curve").objid().optional());
      }), s = n.define("SubjectPublicKeyInfo", function() {
        this.seq().obj(this.key("algorithm").use(a), this.key("subjectPublicKey").bitstr());
      }), c = n.define("RelativeDistinguishedName", function() {
        this.setof(o);
      }), u = n.define("RDNSequence", function() {
        this.seqof(c);
      }), f = n.define("Name", function() {
        this.choice({ rdnSequence: this.use(u) });
      }), l = n.define("Validity", function() {
        this.seq().obj(this.key("notBefore").use(i), this.key("notAfter").use(i));
      }), h = n.define("Extension", function() {
        this.seq().obj(this.key("extnID").objid(), this.key("critical").bool().def(false), this.key("extnValue").octstr());
      }), p = n.define("TBSCertificate", function() {
        this.seq().obj(this.key("version").explicit(0).int().optional(), this.key("serialNumber").int(), this.key("signature").use(a), this.key("issuer").use(f), this.key("validity").use(l), this.key("subject").use(f), this.key("subjectPublicKeyInfo").use(s), this.key("issuerUniqueID").implicit(1).bitstr().optional(), this.key("subjectUniqueID").implicit(2).bitstr().optional(), this.key("extensions").explicit(3).seqof(h).optional());
      }), d = n.define("X509Certificate", function() {
        this.seq().obj(this.key("tbsCertificate").use(p), this.key("signatureAlgorithm").use(a), this.key("signatureValue").bitstr());
      });
      t3.exports = d;
    }, 3446: (t3, e2, r2) => {
      var n = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m, i = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m, o = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m, a = r2(1685), s = r2(2098), c = r2(9732).Buffer;
      t3.exports = function(t4, e3) {
        var r3, u = t4.toString(), f = u.match(n);
        if (f) {
          var l = "aes" + f[1], h = c.from(f[2], "hex"), p = c.from(f[3].replace(/[\r\n]/g, ""), "base64"), d = a(e3, h.slice(0, 8), parseInt(f[1], 10)).key, y = [], b = s.createDecipheriv(l, d, h);
          y.push(b.update(p)), y.push(b.final()), r3 = c.concat(y);
        } else {
          var m = u.match(o);
          r3 = c.from(m[2].replace(/[\r\n]/g, ""), "base64");
        }
        return { tag: u.match(i)[1], data: r3 };
      };
    }, 5053: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      var i = r2(6292), o = r2(5579), a = r2(3446), s = r2(2098), c = r2(8699), u = r2(9732).Buffer;
      function f(t4) {
        var e3;
        n(t4) !== "object" || u.isBuffer(t4) || (e3 = t4.passphrase, t4 = t4.key), typeof t4 == "string" && (t4 = u.from(t4));
        var r3, f2, l = a(t4, e3), h = l.tag, p = l.data;
        switch (h) {
          case "CERTIFICATE":
            f2 = i.certificate.decode(p, "der").tbsCertificate.subjectPublicKeyInfo;
          case "PUBLIC KEY":
            switch (f2 || (f2 = i.PublicKey.decode(p, "der")), r3 = f2.algorithm.algorithm.join(".")) {
              case "1.2.840.113549.1.1.1":
                return i.RSAPublicKey.decode(f2.subjectPublicKey.data, "der");
              case "1.2.840.10045.2.1":
                return f2.subjectPrivateKey = f2.subjectPublicKey, { type: "ec", data: f2 };
              case "1.2.840.10040.4.1":
                return f2.algorithm.params.pub_key = i.DSAparam.decode(f2.subjectPublicKey.data, "der"), { type: "dsa", data: f2.algorithm.params };
              default:
                throw new Error("unknown key id " + r3);
            }
          case "ENCRYPTED PRIVATE KEY":
            p = function(t5, e4) {
              var r4 = t5.algorithm.decrypt.kde.kdeparams.salt, n2 = parseInt(t5.algorithm.decrypt.kde.kdeparams.iters.toString(), 10), i2 = o[t5.algorithm.decrypt.cipher.algo.join(".")], a2 = t5.algorithm.decrypt.cipher.iv, f3 = t5.subjectPrivateKey, l2 = parseInt(i2.split("-")[1], 10) / 8, h2 = c.pbkdf2Sync(e4, r4, n2, l2, "sha1"), p2 = s.createDecipheriv(i2, h2, a2), d = [];
              return d.push(p2.update(f3)), d.push(p2.final()), u.concat(d);
            }(p = i.EncryptedPrivateKey.decode(p, "der"), e3);
          case "PRIVATE KEY":
            switch (r3 = (f2 = i.PrivateKey.decode(p, "der")).algorithm.algorithm.join(".")) {
              case "1.2.840.113549.1.1.1":
                return i.RSAPrivateKey.decode(f2.subjectPrivateKey, "der");
              case "1.2.840.10045.2.1":
                return { curve: f2.algorithm.curve, privateKey: i.ECPrivateKey.decode(f2.subjectPrivateKey, "der").privateKey };
              case "1.2.840.10040.4.1":
                return f2.algorithm.params.priv_key = i.DSAparam.decode(f2.subjectPrivateKey, "der"), { type: "dsa", params: f2.algorithm.params };
              default:
                throw new Error("unknown key id " + r3);
            }
          case "RSA PUBLIC KEY":
            return i.RSAPublicKey.decode(p, "der");
          case "RSA PRIVATE KEY":
            return i.RSAPrivateKey.decode(p, "der");
          case "DSA PRIVATE KEY":
            return { type: "dsa", params: i.DSAPrivateKey.decode(p, "der") };
          case "EC PRIVATE KEY":
            return { curve: (p = i.ECPrivateKey.decode(p, "der")).parameters.value, privateKey: p.privateKey };
          default:
            throw new Error("unknown key type " + h);
        }
      }
      f.signature = i.signature, t3.exports = f;
    }, 8699: (t3, e2, r2) => {
      e2.pbkdf2 = r2(2367), e2.pbkdf2Sync = r2(245);
    }, 2367: (t3, e2, r2) => {
      var n, i, o = r2(9732).Buffer, a = r2(9217), s = r2(594), c = r2(245), u = r2(6661), f = r2.g.crypto && r2.g.crypto.subtle, l = { sha: "SHA-1", "sha-1": "SHA-1", sha1: "SHA-1", sha256: "SHA-256", "sha-256": "SHA-256", sha384: "SHA-384", "sha-384": "SHA-384", "sha-512": "SHA-512", sha512: "SHA-512" }, h = [];
      function p() {
        return i || (i = r2.g.process && r2.g.process.nextTick ? r2.g.process.nextTick : r2.g.queueMicrotask ? r2.g.queueMicrotask : r2.g.setImmediate ? r2.g.setImmediate : r2.g.setTimeout);
      }
      function d(t4, e3, r3, n2, i2) {
        return f.importKey("raw", t4, { name: "PBKDF2" }, false, ["deriveBits"]).then(function(t5) {
          return f.deriveBits({ name: "PBKDF2", salt: e3, iterations: r3, hash: { name: i2 } }, t5, n2 << 3);
        }).then(function(t5) {
          return o.from(t5);
        });
      }
      t3.exports = function(t4, e3, i2, y, b, m) {
        typeof b == "function" && (m = b, b = undefined);
        var v = l[(b = b || "sha1").toLowerCase()];
        if (v && typeof r2.g.Promise == "function") {
          if (a(i2, y), t4 = u(t4, s, "Password"), e3 = u(e3, s, "Salt"), typeof m != "function")
            throw new Error("No callback provided to pbkdf2");
          (function(t5, e4) {
            t5.then(function(t6) {
              p()(function() {
                e4(null, t6);
              });
            }, function(t6) {
              p()(function() {
                e4(t6);
              });
            });
          })(function(t5) {
            if (r2.g.process && !r2.g.process.browser)
              return Promise.resolve(false);
            if (!f || !f.importKey || !f.deriveBits)
              return Promise.resolve(false);
            if (h[t5] !== undefined)
              return h[t5];
            var e4 = d(n = n || o.alloc(8), n, 10, 128, t5).then(function() {
              return true;
            }).catch(function() {
              return false;
            });
            return h[t5] = e4, e4;
          }(v).then(function(r3) {
            return r3 ? d(t4, e3, i2, y, v) : c(t4, e3, i2, y, b);
          }), m);
        } else
          p()(function() {
            var r3;
            try {
              r3 = c(t4, e3, i2, y, b);
            } catch (t5) {
              return m(t5);
            }
            m(null, r3);
          });
      };
    }, 594: (t3, e2, r2) => {
      var n;
      n = r2.g.process && r2.g.process.browser ? "utf-8" : r2.g.process && r2.g.process.version ? parseInt({ env: {} }.version.split(".")[0].slice(1), 10) >= 6 ? "utf-8" : "binary" : "utf-8", t3.exports = n;
    }, 9217: (t3) => {
      var e2 = Math.pow(2, 30) - 1;
      t3.exports = function(t4, r2) {
        if (typeof t4 != "number")
          throw new TypeError("Iterations not a number");
        if (t4 < 0)
          throw new TypeError("Bad iterations");
        if (typeof r2 != "number")
          throw new TypeError("Key length not a number");
        if (r2 < 0 || r2 > e2 || r2 != r2)
          throw new TypeError("Bad key length");
      };
    }, 245: (t3, e2, r2) => {
      var n = r2(3989), i = r2(1058), o = r2(3261), a = r2(9732).Buffer, s = r2(9217), c = r2(594), u = r2(6661), f = a.alloc(128), l = { md5: 16, sha1: 20, sha224: 28, sha256: 32, sha384: 48, sha512: 64, rmd160: 20, ripemd160: 20 };
      function h(t4, e3, r3) {
        var s2 = function(t5) {
          return t5 === "rmd160" || t5 === "ripemd160" ? function(t6) {
            return new i().update(t6).digest();
          } : t5 === "md5" ? n : function(e4) {
            return o(t5).update(e4).digest();
          };
        }(t4), c2 = t4 === "sha512" || t4 === "sha384" ? 128 : 64;
        e3.length > c2 ? e3 = s2(e3) : e3.length < c2 && (e3 = a.concat([e3, f], c2));
        for (var u2 = a.allocUnsafe(c2 + l[t4]), h2 = a.allocUnsafe(c2 + l[t4]), p = 0;p < c2; p++)
          u2[p] = 54 ^ e3[p], h2[p] = 92 ^ e3[p];
        var d = a.allocUnsafe(c2 + r3 + 4);
        u2.copy(d, 0, 0, c2), this.ipad1 = d, this.ipad2 = u2, this.opad = h2, this.alg = t4, this.blocksize = c2, this.hash = s2, this.size = l[t4];
      }
      h.prototype.run = function(t4, e3) {
        return t4.copy(e3, this.blocksize), this.hash(e3).copy(this.opad, this.blocksize), this.hash(this.opad);
      }, t3.exports = function(t4, e3, r3, n2, i2) {
        s(r3, n2);
        var o2 = new h(i2 = i2 || "sha1", t4 = u(t4, c, "Password"), (e3 = u(e3, c, "Salt")).length), f2 = a.allocUnsafe(n2), p = a.allocUnsafe(e3.length + 4);
        e3.copy(p, 0, 0, e3.length);
        for (var d = 0, y = l[i2], b = Math.ceil(n2 / y), m = 1;m <= b; m++) {
          p.writeUInt32BE(m, e3.length);
          for (var v = o2.run(p, o2.ipad1), g = v, _ = 1;_ < r3; _++) {
            g = o2.run(g, o2.ipad2);
            for (var w = 0;w < y; w++)
              v[w] ^= g[w];
          }
          v.copy(f2, d), d += y;
        }
        return f2;
      };
    }, 6661: (t3, e2, r2) => {
      var n = r2(9732).Buffer;
      t3.exports = function(t4, e3, r3) {
        if (n.isBuffer(t4))
          return t4;
        if (typeof t4 == "string")
          return n.from(t4, e3);
        if (ArrayBuffer.isView(t4))
          return n.from(t4.buffer);
        throw new TypeError(r3 + " must be a string, a Buffer, a typed array or a DataView");
      };
    }, 2653: (t3) => {
      t3.exports = ["Float32Array", "Float64Array", "Int8Array", "Int16Array", "Int32Array", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "BigInt64Array", "BigUint64Array"];
    }, 4758: (t3) => {
      !{ env: {} }.version || { env: {} }.version.indexOf("v0.") === 0 || { env: {} }.version.indexOf("v1.") === 0 && { env: {} }.version.indexOf("v1.8.") !== 0 ? t3.exports = { nextTick: function(t4, e2, r2, n) {
        if (typeof t4 != "function")
          throw new TypeError('"callback" argument must be a function');
        var i, o, a = arguments.length;
        switch (a) {
          case 0:
          case 1:
            return { env: {} }.nextTick(t4);
          case 2:
            return { env: {} }.nextTick(function() {
              t4.call(null, e2);
            });
          case 3:
            return { env: {} }.nextTick(function() {
              t4.call(null, e2, r2);
            });
          case 4:
            return { env: {} }.nextTick(function() {
              t4.call(null, e2, r2, n);
            });
          default:
            for (i = new Array(a - 1), o = 0;o < i.length; )
              i[o++] = arguments[o];
            return { env: {} }.nextTick(function() {
              t4.apply(null, i);
            });
        }
      } } : t3.exports = { env: {} };
    }, 2327: (t3, e2, r2) => {
      e2.publicEncrypt = r2(2937), e2.privateDecrypt = r2(5443), e2.privateEncrypt = function(t4, r3) {
        return e2.publicEncrypt(t4, r3, true);
      }, e2.publicDecrypt = function(t4, r3) {
        return e2.privateDecrypt(t4, r3, true);
      };
    }, 7797: (t3, e2, r2) => {
      var n = r2(5833), i = r2(9732).Buffer;
      function o(t4) {
        var e3 = i.allocUnsafe(4);
        return e3.writeUInt32BE(t4, 0), e3;
      }
      t3.exports = function(t4, e3) {
        for (var r3, a = i.alloc(0), s = 0;a.length < e3; )
          r3 = o(s++), a = i.concat([a, n("sha1").update(t4).update(r3).digest()]);
        return a.slice(0, e3);
      };
    }, 5443: (t3, e2, r2) => {
      var n = r2(5053), i = r2(7797), o = r2(1190), a = r2(7799), s = r2(1095), c = r2(5833), u = r2(5218), f = r2(9732).Buffer;
      t3.exports = function(t4, e3, r3) {
        var l;
        l = t4.padding ? t4.padding : r3 ? 1 : 4;
        var h, p = n(t4), d = p.modulus.byteLength();
        if (e3.length > d || new a(e3).cmp(p.modulus) >= 0)
          throw new Error("decryption error");
        h = r3 ? u(new a(e3), p) : s(e3, p);
        var y = f.alloc(d - h.length);
        if (h = f.concat([y, h], d), l === 4)
          return function(t5, e4) {
            var r4 = t5.modulus.byteLength(), n2 = c("sha1").update(f.alloc(0)).digest(), a2 = n2.length;
            if (e4[0] !== 0)
              throw new Error("decryption error");
            var s2 = e4.slice(1, a2 + 1), u2 = e4.slice(a2 + 1), l2 = o(s2, i(u2, a2)), h2 = o(u2, i(l2, r4 - a2 - 1));
            if (function(t6, e5) {
              t6 = f.from(t6), e5 = f.from(e5);
              var r5 = 0, n3 = t6.length;
              t6.length !== e5.length && (r5++, n3 = Math.min(t6.length, e5.length));
              for (var i2 = -1;++i2 < n3; )
                r5 += t6[i2] ^ e5[i2];
              return r5;
            }(n2, h2.slice(0, a2)))
              throw new Error("decryption error");
            for (var p2 = a2;h2[p2] === 0; )
              p2++;
            if (h2[p2++] !== 1)
              throw new Error("decryption error");
            return h2.slice(p2);
          }(p, h);
        if (l === 1)
          return function(t5, e4, r4) {
            for (var n2 = e4.slice(0, 2), i2 = 2, o2 = 0;e4[i2++] !== 0; )
              if (i2 >= e4.length) {
                o2++;
                break;
              }
            var a2 = e4.slice(2, i2 - 1);
            if ((n2.toString("hex") !== "0002" && !r4 || n2.toString("hex") !== "0001" && r4) && o2++, a2.length < 8 && o2++, o2)
              throw new Error("decryption error");
            return e4.slice(i2);
          }(0, h, r3);
        if (l === 3)
          return h;
        throw new Error("unknown padding");
      };
    }, 2937: (t3, e2, r2) => {
      var n = r2(5053), i = r2(4276), o = r2(5833), a = r2(7797), s = r2(1190), c = r2(7799), u = r2(5218), f = r2(1095), l = r2(9732).Buffer;
      t3.exports = function(t4, e3, r3) {
        var h;
        h = t4.padding ? t4.padding : r3 ? 1 : 4;
        var p, d = n(t4);
        if (h === 4)
          p = function(t5, e4) {
            var r4 = t5.modulus.byteLength(), n2 = e4.length, u2 = o("sha1").update(l.alloc(0)).digest(), f2 = u2.length, h2 = 2 * f2;
            if (n2 > r4 - h2 - 2)
              throw new Error("message too long");
            var p2 = l.alloc(r4 - n2 - h2 - 2), d2 = r4 - f2 - 1, y = i(f2), b = s(l.concat([u2, p2, l.alloc(1, 1), e4], d2), a(y, d2)), m = s(y, a(b, f2));
            return new c(l.concat([l.alloc(1), m, b], r4));
          }(d, e3);
        else if (h === 1)
          p = function(t5, e4, r4) {
            var n2, o2 = e4.length, a2 = t5.modulus.byteLength();
            if (o2 > a2 - 11)
              throw new Error("message too long");
            return n2 = r4 ? l.alloc(a2 - o2 - 3, 255) : function(t6) {
              for (var e5, r5 = l.allocUnsafe(t6), n3 = 0, o3 = i(2 * t6), a3 = 0;n3 < t6; )
                a3 === o3.length && (o3 = i(2 * t6), a3 = 0), (e5 = o3[a3++]) && (r5[n3++] = e5);
              return r5;
            }(a2 - o2 - 3), new c(l.concat([l.from([0, r4 ? 1 : 2]), n2, l.alloc(1), e4], a2));
          }(d, e3, r3);
        else {
          if (h !== 3)
            throw new Error("unknown padding");
          if ((p = new c(e3)).cmp(d.modulus) >= 0)
            throw new Error("data too long for modulus");
        }
        return r3 ? f(p, d) : u(p, d);
      };
    }, 5218: (t3, e2, r2) => {
      var n = r2(7799), i = r2(9732).Buffer;
      t3.exports = function(t4, e3) {
        return i.from(t4.toRed(n.mont(e3.modulus)).redPow(new n(e3.publicExponent)).fromRed().toArray());
      };
    }, 1190: (t3) => {
      t3.exports = function(t4, e2) {
        for (var r2 = t4.length, n = -1;++n < r2; )
          t4[n] ^= e2[n];
        return t4;
      };
    }, 4276: (t3, e2, r2) => {
      var n = 65536, i = r2(9732).Buffer, o = r2.g.crypto || r2.g.msCrypto;
      o && o.getRandomValues ? t3.exports = function(t4, e3) {
        if (t4 > 4294967295)
          throw new RangeError("requested too many random bytes");
        var r3 = i.allocUnsafe(t4);
        if (t4 > 0)
          if (t4 > n)
            for (var a = 0;a < t4; a += n)
              o.getRandomValues(r3.slice(a, a + n));
          else
            o.getRandomValues(r3);
        return typeof e3 == "function" ? { env: {} }.nextTick(function() {
          e3(null, r3);
        }) : r3;
      } : t3.exports = function() {
        throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11");
      };
    }, 7952: (t3, e2, r2) => {
      function n() {
        throw new Error("secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11");
      }
      var i = r2(9732), o = r2(4276), a = i.Buffer, s = i.kMaxLength, c = r2.g.crypto || r2.g.msCrypto, u = Math.pow(2, 32) - 1;
      function f(t4, e3) {
        if (typeof t4 != "number" || t4 != t4)
          throw new TypeError("offset must be a number");
        if (t4 > u || t4 < 0)
          throw new TypeError("offset must be a uint32");
        if (t4 > s || t4 > e3)
          throw new RangeError("offset out of range");
      }
      function l(t4, e3, r3) {
        if (typeof t4 != "number" || t4 != t4)
          throw new TypeError("size must be a number");
        if (t4 > u || t4 < 0)
          throw new TypeError("size must be a uint32");
        if (t4 + e3 > r3 || t4 > s)
          throw new RangeError("buffer too small");
      }
      function h(t4, e3, r3, n2) {
        if ({ env: {} }.browser) {
          var i2 = t4.buffer, a2 = new Uint8Array(i2, e3, r3);
          return c.getRandomValues(a2), n2 ? void { env: {} }.nextTick(function() {
            n2(null, t4);
          }) : t4;
        }
        if (!n2)
          return o(r3).copy(t4, e3), t4;
        o(r3, function(r4, i3) {
          if (r4)
            return n2(r4);
          i3.copy(t4, e3), n2(null, t4);
        });
      }
      c && c.getRandomValues || !{ env: {} }.browser ? (e2.randomFill = function(t4, e3, n2, i2) {
        if (!(a.isBuffer(t4) || t4 instanceof r2.g.Uint8Array))
          throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
        if (typeof e3 == "function")
          i2 = e3, e3 = 0, n2 = t4.length;
        else if (typeof n2 == "function")
          i2 = n2, n2 = t4.length - e3;
        else if (typeof i2 != "function")
          throw new TypeError('"cb" argument must be a function');
        return f(e3, t4.length), l(n2, e3, t4.length), h(t4, e3, n2, i2);
      }, e2.randomFillSync = function(t4, e3, n2) {
        if (e3 === undefined && (e3 = 0), !(a.isBuffer(t4) || t4 instanceof r2.g.Uint8Array))
          throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
        return f(e3, t4.length), n2 === undefined && (n2 = t4.length - e3), l(n2, e3, t4.length), h(t4, e3, n2);
      }) : (e2.randomFill = n, e2.randomFillSync = n);
    }, 1313: (t3, e2, r2) => {
      var n = r2(4758), i = Object.keys || function(t4) {
        var e3 = [];
        for (var r3 in t4)
          e3.push(r3);
        return e3;
      };
      t3.exports = l;
      var o = Object.create(r2(7919));
      o.inherits = r2(1679);
      var a = r2(7991), s = r2(9147);
      o.inherits(l, a);
      for (var c = i(s.prototype), u = 0;u < c.length; u++) {
        var f = c[u];
        l.prototype[f] || (l.prototype[f] = s.prototype[f]);
      }
      function l(t4) {
        if (!(this instanceof l))
          return new l(t4);
        a.call(this, t4), s.call(this, t4), t4 && t4.readable === false && (this.readable = false), t4 && t4.writable === false && (this.writable = false), this.allowHalfOpen = true, t4 && t4.allowHalfOpen === false && (this.allowHalfOpen = false), this.once("end", h);
      }
      function h() {
        this.allowHalfOpen || this._writableState.ended || n.nextTick(p, this);
      }
      function p(t4) {
        t4.end();
      }
      Object.defineProperty(l.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
        return this._writableState.highWaterMark;
      } }), Object.defineProperty(l.prototype, "destroyed", { get: function() {
        return this._readableState !== undefined && this._writableState !== undefined && this._readableState.destroyed && this._writableState.destroyed;
      }, set: function(t4) {
        this._readableState !== undefined && this._writableState !== undefined && (this._readableState.destroyed = t4, this._writableState.destroyed = t4);
      } }), l.prototype._destroy = function(t4, e3) {
        this.push(null), this.end(), n.nextTick(e3, t4);
      };
    }, 9125: (t3, e2, r2) => {
      t3.exports = o;
      var n = r2(1191), i = Object.create(r2(7919));
      function o(t4) {
        if (!(this instanceof o))
          return new o(t4);
        n.call(this, t4);
      }
      i.inherits = r2(1679), i.inherits(o, n), o.prototype._transform = function(t4, e3, r3) {
        r3(null, t4);
      };
    }, 7991: (t3, e2, r2) => {
      var n = r2(4758);
      t3.exports = v;
      var i, o = r2(5455);
      v.ReadableState = m, r2(3550).EventEmitter;
      var a = function(t4, e3) {
        return t4.listeners(e3).length;
      }, s = r2(5864), c = r2(8317).Buffer, u = (r2.g !== undefined ? r2.g : typeof window != "undefined" ? window : typeof self != "undefined" ? self : {}).Uint8Array || function() {
      }, f = Object.create(r2(7919));
      f.inherits = r2(1679);
      var l = r2(9838), h = undefined;
      h = l && l.debuglog ? l.debuglog("stream") : function() {
      };
      var p, d = r2(6567), y = r2(8639);
      f.inherits(v, s);
      var b = ["error", "close", "destroy", "pause", "resume"];
      function m(t4, e3) {
        t4 = t4 || {};
        var n2 = e3 instanceof (i = i || r2(1313));
        this.objectMode = !!t4.objectMode, n2 && (this.objectMode = this.objectMode || !!t4.readableObjectMode);
        var { highWaterMark: o2, readableHighWaterMark: a2 } = t4, s2 = this.objectMode ? 16 : 16384;
        this.highWaterMark = o2 || o2 === 0 ? o2 : n2 && (a2 || a2 === 0) ? a2 : s2, this.highWaterMark = Math.floor(this.highWaterMark), this.buffer = new d, this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.destroyed = false, this.defaultEncoding = t4.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, t4.encoding && (p || (p = r2(136).I), this.decoder = new p(t4.encoding), this.encoding = t4.encoding);
      }
      function v(t4) {
        if (i = i || r2(1313), !(this instanceof v))
          return new v(t4);
        this._readableState = new m(t4, this), this.readable = true, t4 && (typeof t4.read == "function" && (this._read = t4.read), typeof t4.destroy == "function" && (this._destroy = t4.destroy)), s.call(this);
      }
      function g(t4, e3, r3, n2, i2) {
        var o2, a2 = t4._readableState;
        return e3 === null ? (a2.reading = false, function(t5, e4) {
          if (!e4.ended) {
            if (e4.decoder) {
              var r4 = e4.decoder.end();
              r4 && r4.length && (e4.buffer.push(r4), e4.length += e4.objectMode ? 1 : r4.length);
            }
            e4.ended = true, O(t5);
          }
        }(t4, a2)) : (i2 || (o2 = function(t5, e4) {
          var r4, n3;
          return n3 = e4, c.isBuffer(n3) || n3 instanceof u || typeof e4 == "string" || e4 === undefined || t5.objectMode || (r4 = new TypeError("Invalid non-string/buffer chunk")), r4;
        }(a2, e3)), o2 ? t4.emit("error", o2) : a2.objectMode || e3 && e3.length > 0 ? (typeof e3 == "string" || a2.objectMode || Object.getPrototypeOf(e3) === c.prototype || (e3 = function(t5) {
          return c.from(t5);
        }(e3)), n2 ? a2.endEmitted ? t4.emit("error", new Error("stream.unshift() after end event")) : _(t4, a2, e3, true) : a2.ended ? t4.emit("error", new Error("stream.push() after EOF")) : (a2.reading = false, a2.decoder && !r3 ? (e3 = a2.decoder.write(e3), a2.objectMode || e3.length !== 0 ? _(t4, a2, e3, false) : $(t4, a2)) : _(t4, a2, e3, false))) : n2 || (a2.reading = false)), function(t5) {
          return !t5.ended && (t5.needReadable || t5.length < t5.highWaterMark || t5.length === 0);
        }(a2);
      }
      function _(t4, e3, r3, n2) {
        e3.flowing && e3.length === 0 && !e3.sync ? (t4.emit("data", r3), t4.read(0)) : (e3.length += e3.objectMode ? 1 : r3.length, n2 ? e3.buffer.unshift(r3) : e3.buffer.push(r3), e3.needReadable && O(t4)), $(t4, e3);
      }
      Object.defineProperty(v.prototype, "destroyed", { get: function() {
        return this._readableState !== undefined && this._readableState.destroyed;
      }, set: function(t4) {
        this._readableState && (this._readableState.destroyed = t4);
      } }), v.prototype.destroy = y.destroy, v.prototype._undestroy = y.undestroy, v.prototype._destroy = function(t4, e3) {
        this.push(null), e3(t4);
      }, v.prototype.push = function(t4, e3) {
        var r3, n2 = this._readableState;
        return n2.objectMode ? r3 = true : typeof t4 == "string" && ((e3 = e3 || n2.defaultEncoding) !== n2.encoding && (t4 = c.from(t4, e3), e3 = ""), r3 = true), g(this, t4, e3, false, r3);
      }, v.prototype.unshift = function(t4) {
        return g(this, t4, null, true, false);
      }, v.prototype.isPaused = function() {
        return this._readableState.flowing === false;
      }, v.prototype.setEncoding = function(t4) {
        return p || (p = r2(136).I), this._readableState.decoder = new p(t4), this._readableState.encoding = t4, this;
      };
      var w = 8388608;
      function S(t4, e3) {
        return t4 <= 0 || e3.length === 0 && e3.ended ? 0 : e3.objectMode ? 1 : t4 != t4 ? e3.flowing && e3.length ? e3.buffer.head.data.length : e3.length : (t4 > e3.highWaterMark && (e3.highWaterMark = function(t5) {
          return t5 >= w ? t5 = w : (t5--, t5 |= t5 >>> 1, t5 |= t5 >>> 2, t5 |= t5 >>> 4, t5 |= t5 >>> 8, t5 |= t5 >>> 16, t5++), t5;
        }(t4)), t4 <= e3.length ? t4 : e3.ended ? e3.length : (e3.needReadable = true, 0));
      }
      function O(t4) {
        var e3 = t4._readableState;
        e3.needReadable = false, e3.emittedReadable || (h("emitReadable", e3.flowing), e3.emittedReadable = true, e3.sync ? n.nextTick(j, t4) : j(t4));
      }
      function j(t4) {
        h("emit readable"), t4.emit("readable"), P(t4);
      }
      function $(t4, e3) {
        e3.readingMore || (e3.readingMore = true, n.nextTick(A, t4, e3));
      }
      function A(t4, e3) {
        for (var r3 = e3.length;!e3.reading && !e3.flowing && !e3.ended && e3.length < e3.highWaterMark && (h("maybeReadMore read 0"), t4.read(0), r3 !== e3.length); )
          r3 = e3.length;
        e3.readingMore = false;
      }
      function E(t4) {
        h("readable nexttick read 0"), t4.read(0);
      }
      function x(t4, e3) {
        e3.reading || (h("resume read 0"), t4.read(0)), e3.resumeScheduled = false, e3.awaitDrain = 0, t4.emit("resume"), P(t4), e3.flowing && !e3.reading && t4.read(0);
      }
      function P(t4) {
        var e3 = t4._readableState;
        for (h("flow", e3.flowing);e3.flowing && t4.read() !== null; )
          ;
      }
      function k(t4, e3) {
        return e3.length === 0 ? null : (e3.objectMode ? r3 = e3.buffer.shift() : !t4 || t4 >= e3.length ? (r3 = e3.decoder ? e3.buffer.join("") : e3.buffer.length === 1 ? e3.buffer.head.data : e3.buffer.concat(e3.length), e3.buffer.clear()) : r3 = function(t5, e4, r4) {
          var n2;
          return t5 < e4.head.data.length ? (n2 = e4.head.data.slice(0, t5), e4.head.data = e4.head.data.slice(t5)) : n2 = t5 === e4.head.data.length ? e4.shift() : r4 ? function(t6, e5) {
            var r5 = e5.head, n3 = 1, i2 = r5.data;
            for (t6 -= i2.length;r5 = r5.next; ) {
              var o2 = r5.data, a2 = t6 > o2.length ? o2.length : t6;
              if (a2 === o2.length ? i2 += o2 : i2 += o2.slice(0, t6), (t6 -= a2) == 0) {
                a2 === o2.length ? (++n3, r5.next ? e5.head = r5.next : e5.head = e5.tail = null) : (e5.head = r5, r5.data = o2.slice(a2));
                break;
              }
              ++n3;
            }
            return e5.length -= n3, i2;
          }(t5, e4) : function(t6, e5) {
            var r5 = c.allocUnsafe(t6), n3 = e5.head, i2 = 1;
            for (n3.data.copy(r5), t6 -= n3.data.length;n3 = n3.next; ) {
              var o2 = n3.data, a2 = t6 > o2.length ? o2.length : t6;
              if (o2.copy(r5, r5.length - t6, 0, a2), (t6 -= a2) == 0) {
                a2 === o2.length ? (++i2, n3.next ? e5.head = n3.next : e5.head = e5.tail = null) : (e5.head = n3, n3.data = o2.slice(a2));
                break;
              }
              ++i2;
            }
            return e5.length -= i2, r5;
          }(t5, e4), n2;
        }(t4, e3.buffer, e3.decoder), r3);
        var r3;
      }
      function M(t4) {
        var e3 = t4._readableState;
        if (e3.length > 0)
          throw new Error('"endReadable()" called on non-empty stream');
        e3.endEmitted || (e3.ended = true, n.nextTick(I, e3, t4));
      }
      function I(t4, e3) {
        t4.endEmitted || t4.length !== 0 || (t4.endEmitted = true, e3.readable = false, e3.emit("end"));
      }
      function T(t4, e3) {
        for (var r3 = 0, n2 = t4.length;r3 < n2; r3++)
          if (t4[r3] === e3)
            return r3;
        return -1;
      }
      v.prototype.read = function(t4) {
        h("read", t4), t4 = parseInt(t4, 10);
        var e3 = this._readableState, r3 = t4;
        if (t4 !== 0 && (e3.emittedReadable = false), t4 === 0 && e3.needReadable && (e3.length >= e3.highWaterMark || e3.ended))
          return h("read: emitReadable", e3.length, e3.ended), e3.length === 0 && e3.ended ? M(this) : O(this), null;
        if ((t4 = S(t4, e3)) === 0 && e3.ended)
          return e3.length === 0 && M(this), null;
        var n2, i2 = e3.needReadable;
        return h("need readable", i2), (e3.length === 0 || e3.length - t4 < e3.highWaterMark) && h("length less than watermark", i2 = true), e3.ended || e3.reading ? h("reading or ended", i2 = false) : i2 && (h("do read"), e3.reading = true, e3.sync = true, e3.length === 0 && (e3.needReadable = true), this._read(e3.highWaterMark), e3.sync = false, e3.reading || (t4 = S(r3, e3))), (n2 = t4 > 0 ? k(t4, e3) : null) === null ? (e3.needReadable = true, t4 = 0) : e3.length -= t4, e3.length === 0 && (e3.ended || (e3.needReadable = true), r3 !== t4 && e3.ended && M(this)), n2 !== null && this.emit("data", n2), n2;
      }, v.prototype._read = function(t4) {
        this.emit("error", new Error("_read() is not implemented"));
      }, v.prototype.pipe = function(t4, e3) {
        var r3 = this, i2 = this._readableState;
        switch (i2.pipesCount) {
          case 0:
            i2.pipes = t4;
            break;
          case 1:
            i2.pipes = [i2.pipes, t4];
            break;
          default:
            i2.pipes.push(t4);
        }
        i2.pipesCount += 1, h("pipe count=%d opts=%j", i2.pipesCount, e3);
        var s2 = e3 && e3.end === false || t4 === { env: {} }.stdout || t4 === { env: {} }.stderr ? m2 : c2;
        function c2() {
          h("onend"), t4.end();
        }
        i2.endEmitted ? n.nextTick(s2) : r3.once("end", s2), t4.on("unpipe", function e(n2, o2) {
          h("onunpipe"), n2 === r3 && o2 && o2.hasUnpiped === false && (o2.hasUnpiped = true, h("cleanup"), t4.removeListener("close", y2), t4.removeListener("finish", b2), t4.removeListener("drain", u2), t4.removeListener("error", d2), t4.removeListener("unpipe", e), r3.removeListener("end", c2), r3.removeListener("end", m2), r3.removeListener("data", p2), f2 = true, !i2.awaitDrain || t4._writableState && !t4._writableState.needDrain || u2());
        });
        var u2 = function(t5) {
          return function() {
            var e4 = t5._readableState;
            h("pipeOnDrain", e4.awaitDrain), e4.awaitDrain && e4.awaitDrain--, e4.awaitDrain === 0 && a(t5, "data") && (e4.flowing = true, P(t5));
          };
        }(r3);
        t4.on("drain", u2);
        var f2 = false, l2 = false;
        function p2(e4) {
          h("ondata"), l2 = false, t4.write(e4) !== false || l2 || ((i2.pipesCount === 1 && i2.pipes === t4 || i2.pipesCount > 1 && T(i2.pipes, t4) !== -1) && !f2 && (h("false write response, pause", i2.awaitDrain), i2.awaitDrain++, l2 = true), r3.pause());
        }
        function d2(e4) {
          h("onerror", e4), m2(), t4.removeListener("error", d2), a(t4, "error") === 0 && t4.emit("error", e4);
        }
        function y2() {
          t4.removeListener("finish", b2), m2();
        }
        function b2() {
          h("onfinish"), t4.removeListener("close", y2), m2();
        }
        function m2() {
          h("unpipe"), r3.unpipe(t4);
        }
        return r3.on("data", p2), function(t5, e4, r4) {
          if (typeof t5.prependListener == "function")
            return t5.prependListener(e4, r4);
          t5._events && t5._events[e4] ? o(t5._events[e4]) ? t5._events[e4].unshift(r4) : t5._events[e4] = [r4, t5._events[e4]] : t5.on(e4, r4);
        }(t4, "error", d2), t4.once("close", y2), t4.once("finish", b2), t4.emit("pipe", r3), i2.flowing || (h("pipe resume"), r3.resume()), t4;
      }, v.prototype.unpipe = function(t4) {
        var e3 = this._readableState, r3 = { hasUnpiped: false };
        if (e3.pipesCount === 0)
          return this;
        if (e3.pipesCount === 1)
          return t4 && t4 !== e3.pipes || (t4 || (t4 = e3.pipes), e3.pipes = null, e3.pipesCount = 0, e3.flowing = false, t4 && t4.emit("unpipe", this, r3)), this;
        if (!t4) {
          var { pipes: n2, pipesCount: i2 } = e3;
          e3.pipes = null, e3.pipesCount = 0, e3.flowing = false;
          for (var o2 = 0;o2 < i2; o2++)
            n2[o2].emit("unpipe", this, { hasUnpiped: false });
          return this;
        }
        var a2 = T(e3.pipes, t4);
        return a2 === -1 || (e3.pipes.splice(a2, 1), e3.pipesCount -= 1, e3.pipesCount === 1 && (e3.pipes = e3.pipes[0]), t4.emit("unpipe", this, r3)), this;
      }, v.prototype.on = function(t4, e3) {
        var r3 = s.prototype.on.call(this, t4, e3);
        if (t4 === "data")
          this._readableState.flowing !== false && this.resume();
        else if (t4 === "readable") {
          var i2 = this._readableState;
          i2.endEmitted || i2.readableListening || (i2.readableListening = i2.needReadable = true, i2.emittedReadable = false, i2.reading ? i2.length && O(this) : n.nextTick(E, this));
        }
        return r3;
      }, v.prototype.addListener = v.prototype.on, v.prototype.resume = function() {
        var t4 = this._readableState;
        return t4.flowing || (h("resume"), t4.flowing = true, function(t5, e3) {
          e3.resumeScheduled || (e3.resumeScheduled = true, n.nextTick(x, t5, e3));
        }(this, t4)), this;
      }, v.prototype.pause = function() {
        return h("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== false && (h("pause"), this._readableState.flowing = false, this.emit("pause")), this;
      }, v.prototype.wrap = function(t4) {
        var e3 = this, r3 = this._readableState, n2 = false;
        for (var i2 in t4.on("end", function() {
          if (h("wrapped end"), r3.decoder && !r3.ended) {
            var t5 = r3.decoder.end();
            t5 && t5.length && e3.push(t5);
          }
          e3.push(null);
        }), t4.on("data", function(i3) {
          h("wrapped data"), r3.decoder && (i3 = r3.decoder.write(i3)), r3.objectMode && i3 == null || (r3.objectMode || i3 && i3.length) && (e3.push(i3) || (n2 = true, t4.pause()));
        }), t4)
          this[i2] === undefined && typeof t4[i2] == "function" && (this[i2] = function(e4) {
            return function() {
              return t4[e4].apply(t4, arguments);
            };
          }(i2));
        for (var o2 = 0;o2 < b.length; o2++)
          t4.on(b[o2], this.emit.bind(this, b[o2]));
        return this._read = function(e4) {
          h("wrapped _read", e4), n2 && (n2 = false, t4.resume());
        }, this;
      }, Object.defineProperty(v.prototype, "readableHighWaterMark", { enumerable: false, get: function() {
        return this._readableState.highWaterMark;
      } }), v._fromList = k;
    }, 1191: (t3, e2, r2) => {
      t3.exports = a;
      var n = r2(1313), i = Object.create(r2(7919));
      function o(t4, e3) {
        var r3 = this._transformState;
        r3.transforming = false;
        var n2 = r3.writecb;
        if (!n2)
          return this.emit("error", new Error("write callback called multiple times"));
        r3.writechunk = null, r3.writecb = null, e3 != null && this.push(e3), n2(t4);
        var i2 = this._readableState;
        i2.reading = false, (i2.needReadable || i2.length < i2.highWaterMark) && this._read(i2.highWaterMark);
      }
      function a(t4) {
        if (!(this instanceof a))
          return new a(t4);
        n.call(this, t4), this._transformState = { afterTransform: o.bind(this), needTransform: false, transforming: false, writecb: null, writechunk: null, writeencoding: null }, this._readableState.needReadable = true, this._readableState.sync = false, t4 && (typeof t4.transform == "function" && (this._transform = t4.transform), typeof t4.flush == "function" && (this._flush = t4.flush)), this.on("prefinish", s);
      }
      function s() {
        var t4 = this;
        typeof this._flush == "function" ? this._flush(function(e3, r3) {
          c(t4, e3, r3);
        }) : c(this, null, null);
      }
      function c(t4, e3, r3) {
        if (e3)
          return t4.emit("error", e3);
        if (r3 != null && t4.push(r3), t4._writableState.length)
          throw new Error("Calling transform done when ws.length != 0");
        if (t4._transformState.transforming)
          throw new Error("Calling transform done when still transforming");
        return t4.push(null);
      }
      i.inherits = r2(1679), i.inherits(a, n), a.prototype.push = function(t4, e3) {
        return this._transformState.needTransform = false, n.prototype.push.call(this, t4, e3);
      }, a.prototype._transform = function(t4, e3, r3) {
        throw new Error("_transform() is not implemented");
      }, a.prototype._write = function(t4, e3, r3) {
        var n2 = this._transformState;
        if (n2.writecb = r3, n2.writechunk = t4, n2.writeencoding = e3, !n2.transforming) {
          var i2 = this._readableState;
          (n2.needTransform || i2.needReadable || i2.length < i2.highWaterMark) && this._read(i2.highWaterMark);
        }
      }, a.prototype._read = function(t4) {
        var e3 = this._transformState;
        e3.writechunk !== null && e3.writecb && !e3.transforming ? (e3.transforming = true, this._transform(e3.writechunk, e3.writeencoding, e3.afterTransform)) : e3.needTransform = true;
      }, a.prototype._destroy = function(t4, e3) {
        var r3 = this;
        n.prototype._destroy.call(this, t4, function(t5) {
          e3(t5), r3.emit("close");
        });
      };
    }, 9147: (t3, e2, r2) => {
      var n = r2(4758);
      function i(t4) {
        var e3 = this;
        this.next = null, this.entry = null, this.finish = function() {
          (function(t5, e4) {
            var r3 = t5.entry;
            for (t5.entry = null;r3; ) {
              var n2 = r3.callback;
              e4.pendingcb--, n2(undefined), r3 = r3.next;
            }
            e4.corkedRequestsFree.next = t5;
          })(e3, t4);
        };
      }
      t3.exports = b;
      var o, a = !{ env: {} }.browser && ["v0.10", "v0.9."].indexOf({ env: {} }.version.slice(0, 5)) > -1 ? setImmediate : n.nextTick;
      b.WritableState = y;
      var s = Object.create(r2(7919));
      s.inherits = r2(1679);
      var c, u = { deprecate: r2(3340) }, f = r2(5864), l = r2(8317).Buffer, h = (r2.g !== undefined ? r2.g : typeof window != "undefined" ? window : typeof self != "undefined" ? self : {}).Uint8Array || function() {
      }, p = r2(8639);
      function d() {
      }
      function y(t4, e3) {
        o = o || r2(1313), t4 = t4 || {};
        var s2 = e3 instanceof o;
        this.objectMode = !!t4.objectMode, s2 && (this.objectMode = this.objectMode || !!t4.writableObjectMode);
        var { highWaterMark: c2, writableHighWaterMark: u2 } = t4, f2 = this.objectMode ? 16 : 16384;
        this.highWaterMark = c2 || c2 === 0 ? c2 : s2 && (u2 || u2 === 0) ? u2 : f2, this.highWaterMark = Math.floor(this.highWaterMark), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
        var l2 = t4.decodeStrings === false;
        this.decodeStrings = !l2, this.defaultEncoding = t4.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function(t5) {
          (function(t6, e4) {
            var r3 = t6._writableState, i2 = r3.sync, o2 = r3.writecb;
            if (function(t7) {
              t7.writing = false, t7.writecb = null, t7.length -= t7.writelen, t7.writelen = 0;
            }(r3), e4)
              (function(t7, e5, r4, i3, o3) {
                --e5.pendingcb, r4 ? (n.nextTick(o3, i3), n.nextTick(S, t7, e5), t7._writableState.errorEmitted = true, t7.emit("error", i3)) : (o3(i3), t7._writableState.errorEmitted = true, t7.emit("error", i3), S(t7, e5));
              })(t6, r3, i2, e4, o2);
            else {
              var s3 = _(r3);
              s3 || r3.corked || r3.bufferProcessing || !r3.bufferedRequest || g(t6, r3), i2 ? a(v, t6, r3, s3, o2) : v(t6, r3, s3, o2);
            }
          })(e3, t5);
        }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.bufferedRequestCount = 0, this.corkedRequestsFree = new i(this);
      }
      function b(t4) {
        if (o = o || r2(1313), !(c.call(b, this) || this instanceof o))
          return new b(t4);
        this._writableState = new y(t4, this), this.writable = true, t4 && (typeof t4.write == "function" && (this._write = t4.write), typeof t4.writev == "function" && (this._writev = t4.writev), typeof t4.destroy == "function" && (this._destroy = t4.destroy), typeof t4.final == "function" && (this._final = t4.final)), f.call(this);
      }
      function m(t4, e3, r3, n2, i2, o2, a2) {
        e3.writelen = n2, e3.writecb = a2, e3.writing = true, e3.sync = true, r3 ? t4._writev(i2, e3.onwrite) : t4._write(i2, o2, e3.onwrite), e3.sync = false;
      }
      function v(t4, e3, r3, n2) {
        r3 || function(t5, e4) {
          e4.length === 0 && e4.needDrain && (e4.needDrain = false, t5.emit("drain"));
        }(t4, e3), e3.pendingcb--, n2(), S(t4, e3);
      }
      function g(t4, e3) {
        e3.bufferProcessing = true;
        var r3 = e3.bufferedRequest;
        if (t4._writev && r3 && r3.next) {
          var n2 = e3.bufferedRequestCount, o2 = new Array(n2), a2 = e3.corkedRequestsFree;
          a2.entry = r3;
          for (var s2 = 0, c2 = true;r3; )
            o2[s2] = r3, r3.isBuf || (c2 = false), r3 = r3.next, s2 += 1;
          o2.allBuffers = c2, m(t4, e3, true, e3.length, o2, "", a2.finish), e3.pendingcb++, e3.lastBufferedRequest = null, a2.next ? (e3.corkedRequestsFree = a2.next, a2.next = null) : e3.corkedRequestsFree = new i(e3), e3.bufferedRequestCount = 0;
        } else {
          for (;r3; ) {
            var { chunk: u2, encoding: f2, callback: l2 } = r3;
            if (m(t4, e3, false, e3.objectMode ? 1 : u2.length, u2, f2, l2), r3 = r3.next, e3.bufferedRequestCount--, e3.writing)
              break;
          }
          r3 === null && (e3.lastBufferedRequest = null);
        }
        e3.bufferedRequest = r3, e3.bufferProcessing = false;
      }
      function _(t4) {
        return t4.ending && t4.length === 0 && t4.bufferedRequest === null && !t4.finished && !t4.writing;
      }
      function w(t4, e3) {
        t4._final(function(r3) {
          e3.pendingcb--, r3 && t4.emit("error", r3), e3.prefinished = true, t4.emit("prefinish"), S(t4, e3);
        });
      }
      function S(t4, e3) {
        var r3 = _(e3);
        return r3 && (function(t5, e4) {
          e4.prefinished || e4.finalCalled || (typeof t5._final == "function" ? (e4.pendingcb++, e4.finalCalled = true, n.nextTick(w, t5, e4)) : (e4.prefinished = true, t5.emit("prefinish")));
        }(t4, e3), e3.pendingcb === 0 && (e3.finished = true, t4.emit("finish"))), r3;
      }
      s.inherits(b, f), y.prototype.getBuffer = function() {
        for (var t4 = this.bufferedRequest, e3 = [];t4; )
          e3.push(t4), t4 = t4.next;
        return e3;
      }, function() {
        try {
          Object.defineProperty(y.prototype, "buffer", { get: u.deprecate(function() {
            return this.getBuffer();
          }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
        } catch (t4) {
        }
      }(), typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (c = Function.prototype[Symbol.hasInstance], Object.defineProperty(b, Symbol.hasInstance, { value: function(t4) {
        return !!c.call(this, t4) || this === b && t4 && t4._writableState instanceof y;
      } })) : c = function(t4) {
        return t4 instanceof this;
      }, b.prototype.pipe = function() {
        this.emit("error", new Error("Cannot pipe, not readable"));
      }, b.prototype.write = function(t4, e3, r3) {
        var i2, o2 = this._writableState, a2 = false, s2 = !o2.objectMode && (i2 = t4, l.isBuffer(i2) || i2 instanceof h);
        return s2 && !l.isBuffer(t4) && (t4 = function(t5) {
          return l.from(t5);
        }(t4)), typeof e3 == "function" && (r3 = e3, e3 = null), s2 ? e3 = "buffer" : e3 || (e3 = o2.defaultEncoding), typeof r3 != "function" && (r3 = d), o2.ended ? function(t5, e4) {
          var r4 = new Error("write after end");
          t5.emit("error", r4), n.nextTick(e4, r4);
        }(this, r3) : (s2 || function(t5, e4, r4, i3) {
          var o3 = true, a3 = false;
          return r4 === null ? a3 = new TypeError("May not write null values to stream") : typeof r4 == "string" || r4 === undefined || e4.objectMode || (a3 = new TypeError("Invalid non-string/buffer chunk")), a3 && (t5.emit("error", a3), n.nextTick(i3, a3), o3 = false), o3;
        }(this, o2, t4, r3)) && (o2.pendingcb++, a2 = function(t5, e4, r4, n2, i3, o3) {
          if (!r4) {
            var a3 = function(t6, e5, r5) {
              return t6.objectMode || t6.decodeStrings === false || typeof e5 != "string" || (e5 = l.from(e5, r5)), e5;
            }(e4, n2, i3);
            n2 !== a3 && (r4 = true, i3 = "buffer", n2 = a3);
          }
          var s3 = e4.objectMode ? 1 : n2.length;
          e4.length += s3;
          var c2 = e4.length < e4.highWaterMark;
          if (c2 || (e4.needDrain = true), e4.writing || e4.corked) {
            var u2 = e4.lastBufferedRequest;
            e4.lastBufferedRequest = { chunk: n2, encoding: i3, isBuf: r4, callback: o3, next: null }, u2 ? u2.next = e4.lastBufferedRequest : e4.bufferedRequest = e4.lastBufferedRequest, e4.bufferedRequestCount += 1;
          } else
            m(t5, e4, false, s3, n2, i3, o3);
          return c2;
        }(this, o2, s2, t4, e3, r3)), a2;
      }, b.prototype.cork = function() {
        this._writableState.corked++;
      }, b.prototype.uncork = function() {
        var t4 = this._writableState;
        t4.corked && (t4.corked--, t4.writing || t4.corked || t4.bufferProcessing || !t4.bufferedRequest || g(this, t4));
      }, b.prototype.setDefaultEncoding = function(t4) {
        if (typeof t4 == "string" && (t4 = t4.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((t4 + "").toLowerCase()) > -1))
          throw new TypeError("Unknown encoding: " + t4);
        return this._writableState.defaultEncoding = t4, this;
      }, Object.defineProperty(b.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
        return this._writableState.highWaterMark;
      } }), b.prototype._write = function(t4, e3, r3) {
        r3(new Error("_write() is not implemented"));
      }, b.prototype._writev = null, b.prototype.end = function(t4, e3, r3) {
        var i2 = this._writableState;
        typeof t4 == "function" ? (r3 = t4, t4 = null, e3 = null) : typeof e3 == "function" && (r3 = e3, e3 = null), t4 != null && this.write(t4, e3), i2.corked && (i2.corked = 1, this.uncork()), i2.ending || function(t5, e4, r4) {
          e4.ending = true, S(t5, e4), r4 && (e4.finished ? n.nextTick(r4) : t5.once("finish", r4)), e4.ended = true, t5.writable = false;
        }(this, i2, r3);
      }, Object.defineProperty(b.prototype, "destroyed", { get: function() {
        return this._writableState !== undefined && this._writableState.destroyed;
      }, set: function(t4) {
        this._writableState && (this._writableState.destroyed = t4);
      } }), b.prototype.destroy = p.destroy, b.prototype._undestroy = p.undestroy, b.prototype._destroy = function(t4, e3) {
        this.end(), e3(t4);
      };
    }, 6567: (t3, e2, r2) => {
      var n = r2(8317).Buffer, i = r2(5340);
      t3.exports = function() {
        function t4() {
          (function(t5, e3) {
            if (!(t5 instanceof e3))
              throw new TypeError("Cannot call a class as a function");
          })(this, t4), this.head = null, this.tail = null, this.length = 0;
        }
        return t4.prototype.push = function(t5) {
          var e3 = { data: t5, next: null };
          this.length > 0 ? this.tail.next = e3 : this.head = e3, this.tail = e3, ++this.length;
        }, t4.prototype.unshift = function(t5) {
          var e3 = { data: t5, next: this.head };
          this.length === 0 && (this.tail = e3), this.head = e3, ++this.length;
        }, t4.prototype.shift = function() {
          if (this.length !== 0) {
            var t5 = this.head.data;
            return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, t5;
          }
        }, t4.prototype.clear = function() {
          this.head = this.tail = null, this.length = 0;
        }, t4.prototype.join = function(t5) {
          if (this.length === 0)
            return "";
          for (var e3 = this.head, r3 = "" + e3.data;e3 = e3.next; )
            r3 += t5 + e3.data;
          return r3;
        }, t4.prototype.concat = function(t5) {
          if (this.length === 0)
            return n.alloc(0);
          for (var e3, r3, i2 = n.allocUnsafe(t5 >>> 0), o = this.head, a = 0;o; )
            e3 = i2, r3 = a, o.data.copy(e3, r3), a += o.data.length, o = o.next;
          return i2;
        }, t4;
      }(), i && i.inspect && i.inspect.custom && (t3.exports.prototype[i.inspect.custom] = function() {
        var t4 = i.inspect({ length: this.length });
        return this.constructor.name + " " + t4;
      });
    }, 8639: (t3, e2, r2) => {
      var n = r2(4758);
      function i(t4, e3) {
        t4.emit("error", e3);
      }
      t3.exports = { destroy: function(t4, e3) {
        var r3 = this, o = this._readableState && this._readableState.destroyed, a = this._writableState && this._writableState.destroyed;
        return o || a ? (e3 ? e3(t4) : t4 && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = true, n.nextTick(i, this, t4)) : n.nextTick(i, this, t4)), this) : (this._readableState && (this._readableState.destroyed = true), this._writableState && (this._writableState.destroyed = true), this._destroy(t4 || null, function(t5) {
          !e3 && t5 ? r3._writableState ? r3._writableState.errorEmitted || (r3._writableState.errorEmitted = true, n.nextTick(i, r3, t5)) : n.nextTick(i, r3, t5) : e3 && e3(t5);
        }), this);
      }, undestroy: function() {
        this._readableState && (this._readableState.destroyed = false, this._readableState.reading = false, this._readableState.ended = false, this._readableState.endEmitted = false), this._writableState && (this._writableState.destroyed = false, this._writableState.ended = false, this._writableState.ending = false, this._writableState.finalCalled = false, this._writableState.prefinished = false, this._writableState.finished = false, this._writableState.errorEmitted = false);
      } };
    }, 5864: (t3, e2, r2) => {
      t3.exports = r2(3550).EventEmitter;
    }, 8317: (t3, e2, r2) => {
      var n = r2(5832), i = n.Buffer;
      function o(t4, e3) {
        for (var r3 in t4)
          e3[r3] = t4[r3];
      }
      function a(t4, e3, r3) {
        return i(t4, e3, r3);
      }
      i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? t3.exports = n : (o(n, e2), e2.Buffer = a), o(i, a), a.from = function(t4, e3, r3) {
        if (typeof t4 == "number")
          throw new TypeError("Argument must not be a number");
        return i(t4, e3, r3);
      }, a.alloc = function(t4, e3, r3) {
        if (typeof t4 != "number")
          throw new TypeError("Argument must be a number");
        var n2 = i(t4);
        return e3 !== undefined ? typeof r3 == "string" ? n2.fill(e3, r3) : n2.fill(e3) : n2.fill(0), n2;
      }, a.allocUnsafe = function(t4) {
        if (typeof t4 != "number")
          throw new TypeError("Argument must be a number");
        return i(t4);
      }, a.allocUnsafeSlow = function(t4) {
        if (typeof t4 != "number")
          throw new TypeError("Argument must be a number");
        return n.SlowBuffer(t4);
      };
    }, 3292: (t3, e2, r2) => {
      (e2 = t3.exports = r2(7991)).Stream = e2, e2.Readable = e2, e2.Writable = r2(9147), e2.Duplex = r2(1313), e2.Transform = r2(1191), e2.PassThrough = r2(9125);
    }, 1058: (t3, e2, r2) => {
      var n = r2(5832).Buffer, i = r2(1679), o = r2(6936), a = new Array(16), s = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13], c = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11], u = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6], f = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11], l = [0, 1518500249, 1859775393, 2400959708, 2840853838], h = [1352829926, 1548603684, 1836072691, 2053994217, 0];
      function p() {
        o.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520;
      }
      function d(t4, e3) {
        return t4 << e3 | t4 >>> 32 - e3;
      }
      function y(t4, e3, r3, n2, i2, o2, a2, s2) {
        return d(t4 + (e3 ^ r3 ^ n2) + o2 + a2 | 0, s2) + i2 | 0;
      }
      function b(t4, e3, r3, n2, i2, o2, a2, s2) {
        return d(t4 + (e3 & r3 | ~e3 & n2) + o2 + a2 | 0, s2) + i2 | 0;
      }
      function m(t4, e3, r3, n2, i2, o2, a2, s2) {
        return d(t4 + ((e3 | ~r3) ^ n2) + o2 + a2 | 0, s2) + i2 | 0;
      }
      function v(t4, e3, r3, n2, i2, o2, a2, s2) {
        return d(t4 + (e3 & n2 | r3 & ~n2) + o2 + a2 | 0, s2) + i2 | 0;
      }
      function g(t4, e3, r3, n2, i2, o2, a2, s2) {
        return d(t4 + (e3 ^ (r3 | ~n2)) + o2 + a2 | 0, s2) + i2 | 0;
      }
      i(p, o), p.prototype._update = function() {
        for (var t4 = a, e3 = 0;e3 < 16; ++e3)
          t4[e3] = this._block.readInt32LE(4 * e3);
        for (var r3 = 0 | this._a, n2 = 0 | this._b, i2 = 0 | this._c, o2 = 0 | this._d, p2 = 0 | this._e, _ = 0 | this._a, w = 0 | this._b, S = 0 | this._c, O = 0 | this._d, j = 0 | this._e, $ = 0;$ < 80; $ += 1) {
          var A, E;
          $ < 16 ? (A = y(r3, n2, i2, o2, p2, t4[s[$]], l[0], u[$]), E = g(_, w, S, O, j, t4[c[$]], h[0], f[$])) : $ < 32 ? (A = b(r3, n2, i2, o2, p2, t4[s[$]], l[1], u[$]), E = v(_, w, S, O, j, t4[c[$]], h[1], f[$])) : $ < 48 ? (A = m(r3, n2, i2, o2, p2, t4[s[$]], l[2], u[$]), E = m(_, w, S, O, j, t4[c[$]], h[2], f[$])) : $ < 64 ? (A = v(r3, n2, i2, o2, p2, t4[s[$]], l[3], u[$]), E = b(_, w, S, O, j, t4[c[$]], h[3], f[$])) : (A = g(r3, n2, i2, o2, p2, t4[s[$]], l[4], u[$]), E = y(_, w, S, O, j, t4[c[$]], h[4], f[$])), r3 = p2, p2 = o2, o2 = d(i2, 10), i2 = n2, n2 = A, _ = j, j = O, O = d(S, 10), S = w, w = E;
        }
        var x = this._b + i2 + O | 0;
        this._b = this._c + o2 + j | 0, this._c = this._d + p2 + _ | 0, this._d = this._e + r3 + w | 0, this._e = this._a + n2 + S | 0, this._a = x;
      }, p.prototype._digest = function() {
        this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
        var t4 = n.alloc ? n.alloc(20) : new n(20);
        return t4.writeInt32LE(this._a, 0), t4.writeInt32LE(this._b, 4), t4.writeInt32LE(this._c, 8), t4.writeInt32LE(this._d, 12), t4.writeInt32LE(this._e, 16), t4;
      }, t3.exports = p;
    }, 9732: (t3, e2, r2) => {
      var n = r2(5832), i = n.Buffer;
      function o(t4, e3) {
        for (var r3 in t4)
          e3[r3] = t4[r3];
      }
      function a(t4, e3, r3) {
        return i(t4, e3, r3);
      }
      i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? t3.exports = n : (o(n, e2), e2.Buffer = a), a.prototype = Object.create(i.prototype), o(i, a), a.from = function(t4, e3, r3) {
        if (typeof t4 == "number")
          throw new TypeError("Argument must not be a number");
        return i(t4, e3, r3);
      }, a.alloc = function(t4, e3, r3) {
        if (typeof t4 != "number")
          throw new TypeError("Argument must be a number");
        var n2 = i(t4);
        return e3 !== undefined ? typeof r3 == "string" ? n2.fill(e3, r3) : n2.fill(e3) : n2.fill(0), n2;
      }, a.allocUnsafe = function(t4) {
        if (typeof t4 != "number")
          throw new TypeError("Argument must be a number");
        return i(t4);
      }, a.allocUnsafeSlow = function(t4) {
        if (typeof t4 != "number")
          throw new TypeError("Argument must be a number");
        return n.SlowBuffer(t4);
      };
    }, 3900: (t3, e2, r2) => {
      var n = r2(6400), i = r2(6750), o = r2(3191)(), a = r2(1464), s = r2(2268), c = n("%Math.floor%");
      t3.exports = function(t4, e3) {
        if (typeof t4 != "function")
          throw new s("`fn` is not a function");
        if (typeof e3 != "number" || e3 < 0 || e3 > 4294967295 || c(e3) !== e3)
          throw new s("`length` must be a positive 32-bit integer");
        var r3 = arguments.length > 2 && !!arguments[2], n2 = true, u = true;
        if ("length" in t4 && a) {
          var f = a(t4, "length");
          f && !f.configurable && (n2 = false), f && !f.writable && (u = false);
        }
        return (n2 || u || !r3) && (o ? i(t4, "length", e3, true, true) : i(t4, "length", e3)), t4;
      };
    }, 1485: (t3, e2, r2) => {
      var n = r2(9732).Buffer;
      function i(t4, e3) {
        this._block = n.alloc(t4), this._finalSize = e3, this._blockSize = t4, this._len = 0;
      }
      i.prototype.update = function(t4, e3) {
        typeof t4 == "string" && (e3 = e3 || "utf8", t4 = n.from(t4, e3));
        for (var r3 = this._block, i2 = this._blockSize, o = t4.length, a = this._len, s = 0;s < o; ) {
          for (var c = a % i2, u = Math.min(o - s, i2 - c), f = 0;f < u; f++)
            r3[c + f] = t4[s + f];
          s += u, (a += u) % i2 == 0 && this._update(r3);
        }
        return this._len += o, this;
      }, i.prototype.digest = function(t4) {
        var e3 = this._len % this._blockSize;
        this._block[e3] = 128, this._block.fill(0, e3 + 1), e3 >= this._finalSize && (this._update(this._block), this._block.fill(0));
        var r3 = 8 * this._len;
        if (r3 <= 4294967295)
          this._block.writeUInt32BE(r3, this._blockSize - 4);
        else {
          var n2 = (4294967295 & r3) >>> 0, i2 = (r3 - n2) / 4294967296;
          this._block.writeUInt32BE(i2, this._blockSize - 8), this._block.writeUInt32BE(n2, this._blockSize - 4);
        }
        this._update(this._block);
        var o = this._hash();
        return t4 ? o.toString(t4) : o;
      }, i.prototype._update = function() {
        throw new Error("_update must be implemented by subclass");
      }, t3.exports = i;
    }, 3261: (t3, e2, r2) => {
      var n = t3.exports = function(t4) {
        t4 = t4.toLowerCase();
        var e3 = n[t4];
        if (!e3)
          throw new Error(t4 + " is not supported (we accept pull requests)");
        return new e3;
      };
      n.sha = r2(2219), n.sha1 = r2(68), n.sha224 = r2(3027), n.sha256 = r2(8890), n.sha384 = r2(5938), n.sha512 = r2(6467);
    }, 2219: (t3, e2, r2) => {
      var n = r2(1679), i = r2(1485), o = r2(9732).Buffer, a = [1518500249, 1859775393, -1894007588, -899497514], s = new Array(80);
      function c() {
        this.init(), this._w = s, i.call(this, 64, 56);
      }
      function u(t4) {
        return t4 << 30 | t4 >>> 2;
      }
      function f(t4, e3, r3, n2) {
        return t4 === 0 ? e3 & r3 | ~e3 & n2 : t4 === 2 ? e3 & r3 | e3 & n2 | r3 & n2 : e3 ^ r3 ^ n2;
      }
      n(c, i), c.prototype.init = function() {
        return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
      }, c.prototype._update = function(t4) {
        for (var e3, r3 = this._w, n2 = 0 | this._a, i2 = 0 | this._b, o2 = 0 | this._c, s2 = 0 | this._d, c2 = 0 | this._e, l = 0;l < 16; ++l)
          r3[l] = t4.readInt32BE(4 * l);
        for (;l < 80; ++l)
          r3[l] = r3[l - 3] ^ r3[l - 8] ^ r3[l - 14] ^ r3[l - 16];
        for (var h = 0;h < 80; ++h) {
          var p = ~~(h / 20), d = 0 | ((e3 = n2) << 5 | e3 >>> 27) + f(p, i2, o2, s2) + c2 + r3[h] + a[p];
          c2 = s2, s2 = o2, o2 = u(i2), i2 = n2, n2 = d;
        }
        this._a = n2 + this._a | 0, this._b = i2 + this._b | 0, this._c = o2 + this._c | 0, this._d = s2 + this._d | 0, this._e = c2 + this._e | 0;
      }, c.prototype._hash = function() {
        var t4 = o.allocUnsafe(20);
        return t4.writeInt32BE(0 | this._a, 0), t4.writeInt32BE(0 | this._b, 4), t4.writeInt32BE(0 | this._c, 8), t4.writeInt32BE(0 | this._d, 12), t4.writeInt32BE(0 | this._e, 16), t4;
      }, t3.exports = c;
    }, 68: (t3, e2, r2) => {
      var n = r2(1679), i = r2(1485), o = r2(9732).Buffer, a = [1518500249, 1859775393, -1894007588, -899497514], s = new Array(80);
      function c() {
        this.init(), this._w = s, i.call(this, 64, 56);
      }
      function u(t4) {
        return t4 << 5 | t4 >>> 27;
      }
      function f(t4) {
        return t4 << 30 | t4 >>> 2;
      }
      function l(t4, e3, r3, n2) {
        return t4 === 0 ? e3 & r3 | ~e3 & n2 : t4 === 2 ? e3 & r3 | e3 & n2 | r3 & n2 : e3 ^ r3 ^ n2;
      }
      n(c, i), c.prototype.init = function() {
        return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
      }, c.prototype._update = function(t4) {
        for (var e3, r3 = this._w, n2 = 0 | this._a, i2 = 0 | this._b, o2 = 0 | this._c, s2 = 0 | this._d, c2 = 0 | this._e, h = 0;h < 16; ++h)
          r3[h] = t4.readInt32BE(4 * h);
        for (;h < 80; ++h)
          r3[h] = (e3 = r3[h - 3] ^ r3[h - 8] ^ r3[h - 14] ^ r3[h - 16]) << 1 | e3 >>> 31;
        for (var p = 0;p < 80; ++p) {
          var d = ~~(p / 20), y = u(n2) + l(d, i2, o2, s2) + c2 + r3[p] + a[d] | 0;
          c2 = s2, s2 = o2, o2 = f(i2), i2 = n2, n2 = y;
        }
        this._a = n2 + this._a | 0, this._b = i2 + this._b | 0, this._c = o2 + this._c | 0, this._d = s2 + this._d | 0, this._e = c2 + this._e | 0;
      }, c.prototype._hash = function() {
        var t4 = o.allocUnsafe(20);
        return t4.writeInt32BE(0 | this._a, 0), t4.writeInt32BE(0 | this._b, 4), t4.writeInt32BE(0 | this._c, 8), t4.writeInt32BE(0 | this._d, 12), t4.writeInt32BE(0 | this._e, 16), t4;
      }, t3.exports = c;
    }, 3027: (t3, e2, r2) => {
      var n = r2(1679), i = r2(8890), o = r2(1485), a = r2(9732).Buffer, s = new Array(64);
      function c() {
        this.init(), this._w = s, o.call(this, 64, 56);
      }
      n(c, i), c.prototype.init = function() {
        return this._a = 3238371032, this._b = 914150663, this._c = 812702999, this._d = 4144912697, this._e = 4290775857, this._f = 1750603025, this._g = 1694076839, this._h = 3204075428, this;
      }, c.prototype._hash = function() {
        var t4 = a.allocUnsafe(28);
        return t4.writeInt32BE(this._a, 0), t4.writeInt32BE(this._b, 4), t4.writeInt32BE(this._c, 8), t4.writeInt32BE(this._d, 12), t4.writeInt32BE(this._e, 16), t4.writeInt32BE(this._f, 20), t4.writeInt32BE(this._g, 24), t4;
      }, t3.exports = c;
    }, 8890: (t3, e2, r2) => {
      var n = r2(1679), i = r2(1485), o = r2(9732).Buffer, a = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298], s = new Array(64);
      function c() {
        this.init(), this._w = s, i.call(this, 64, 56);
      }
      function u(t4, e3, r3) {
        return r3 ^ t4 & (e3 ^ r3);
      }
      function f(t4, e3, r3) {
        return t4 & e3 | r3 & (t4 | e3);
      }
      function l(t4) {
        return (t4 >>> 2 | t4 << 30) ^ (t4 >>> 13 | t4 << 19) ^ (t4 >>> 22 | t4 << 10);
      }
      function h(t4) {
        return (t4 >>> 6 | t4 << 26) ^ (t4 >>> 11 | t4 << 21) ^ (t4 >>> 25 | t4 << 7);
      }
      function p(t4) {
        return (t4 >>> 7 | t4 << 25) ^ (t4 >>> 18 | t4 << 14) ^ t4 >>> 3;
      }
      n(c, i), c.prototype.init = function() {
        return this._a = 1779033703, this._b = 3144134277, this._c = 1013904242, this._d = 2773480762, this._e = 1359893119, this._f = 2600822924, this._g = 528734635, this._h = 1541459225, this;
      }, c.prototype._update = function(t4) {
        for (var e3, r3 = this._w, n2 = 0 | this._a, i2 = 0 | this._b, o2 = 0 | this._c, s2 = 0 | this._d, c2 = 0 | this._e, d = 0 | this._f, y = 0 | this._g, b = 0 | this._h, m = 0;m < 16; ++m)
          r3[m] = t4.readInt32BE(4 * m);
        for (;m < 64; ++m)
          r3[m] = 0 | (((e3 = r3[m - 2]) >>> 17 | e3 << 15) ^ (e3 >>> 19 | e3 << 13) ^ e3 >>> 10) + r3[m - 7] + p(r3[m - 15]) + r3[m - 16];
        for (var v = 0;v < 64; ++v) {
          var g = b + h(c2) + u(c2, d, y) + a[v] + r3[v] | 0, _ = l(n2) + f(n2, i2, o2) | 0;
          b = y, y = d, d = c2, c2 = s2 + g | 0, s2 = o2, o2 = i2, i2 = n2, n2 = g + _ | 0;
        }
        this._a = n2 + this._a | 0, this._b = i2 + this._b | 0, this._c = o2 + this._c | 0, this._d = s2 + this._d | 0, this._e = c2 + this._e | 0, this._f = d + this._f | 0, this._g = y + this._g | 0, this._h = b + this._h | 0;
      }, c.prototype._hash = function() {
        var t4 = o.allocUnsafe(32);
        return t4.writeInt32BE(this._a, 0), t4.writeInt32BE(this._b, 4), t4.writeInt32BE(this._c, 8), t4.writeInt32BE(this._d, 12), t4.writeInt32BE(this._e, 16), t4.writeInt32BE(this._f, 20), t4.writeInt32BE(this._g, 24), t4.writeInt32BE(this._h, 28), t4;
      }, t3.exports = c;
    }, 5938: (t3, e2, r2) => {
      var n = r2(1679), i = r2(6467), o = r2(1485), a = r2(9732).Buffer, s = new Array(160);
      function c() {
        this.init(), this._w = s, o.call(this, 128, 112);
      }
      n(c, i), c.prototype.init = function() {
        return this._ah = 3418070365, this._bh = 1654270250, this._ch = 2438529370, this._dh = 355462360, this._eh = 1731405415, this._fh = 2394180231, this._gh = 3675008525, this._hh = 1203062813, this._al = 3238371032, this._bl = 914150663, this._cl = 812702999, this._dl = 4144912697, this._el = 4290775857, this._fl = 1750603025, this._gl = 1694076839, this._hl = 3204075428, this;
      }, c.prototype._hash = function() {
        var t4 = a.allocUnsafe(48);
        function e3(e4, r3, n2) {
          t4.writeInt32BE(e4, n2), t4.writeInt32BE(r3, n2 + 4);
        }
        return e3(this._ah, this._al, 0), e3(this._bh, this._bl, 8), e3(this._ch, this._cl, 16), e3(this._dh, this._dl, 24), e3(this._eh, this._el, 32), e3(this._fh, this._fl, 40), t4;
      }, t3.exports = c;
    }, 6467: (t3, e2, r2) => {
      var n = r2(1679), i = r2(1485), o = r2(9732).Buffer, a = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591], s = new Array(160);
      function c() {
        this.init(), this._w = s, i.call(this, 128, 112);
      }
      function u(t4, e3, r3) {
        return r3 ^ t4 & (e3 ^ r3);
      }
      function f(t4, e3, r3) {
        return t4 & e3 | r3 & (t4 | e3);
      }
      function l(t4, e3) {
        return (t4 >>> 28 | e3 << 4) ^ (e3 >>> 2 | t4 << 30) ^ (e3 >>> 7 | t4 << 25);
      }
      function h(t4, e3) {
        return (t4 >>> 14 | e3 << 18) ^ (t4 >>> 18 | e3 << 14) ^ (e3 >>> 9 | t4 << 23);
      }
      function p(t4, e3) {
        return (t4 >>> 1 | e3 << 31) ^ (t4 >>> 8 | e3 << 24) ^ t4 >>> 7;
      }
      function d(t4, e3) {
        return (t4 >>> 1 | e3 << 31) ^ (t4 >>> 8 | e3 << 24) ^ (t4 >>> 7 | e3 << 25);
      }
      function y(t4, e3) {
        return (t4 >>> 19 | e3 << 13) ^ (e3 >>> 29 | t4 << 3) ^ t4 >>> 6;
      }
      function b(t4, e3) {
        return (t4 >>> 19 | e3 << 13) ^ (e3 >>> 29 | t4 << 3) ^ (t4 >>> 6 | e3 << 26);
      }
      function m(t4, e3) {
        return t4 >>> 0 < e3 >>> 0 ? 1 : 0;
      }
      n(c, i), c.prototype.init = function() {
        return this._ah = 1779033703, this._bh = 3144134277, this._ch = 1013904242, this._dh = 2773480762, this._eh = 1359893119, this._fh = 2600822924, this._gh = 528734635, this._hh = 1541459225, this._al = 4089235720, this._bl = 2227873595, this._cl = 4271175723, this._dl = 1595750129, this._el = 2917565137, this._fl = 725511199, this._gl = 4215389547, this._hl = 327033209, this;
      }, c.prototype._update = function(t4) {
        for (var e3 = this._w, r3 = 0 | this._ah, n2 = 0 | this._bh, i2 = 0 | this._ch, o2 = 0 | this._dh, s2 = 0 | this._eh, c2 = 0 | this._fh, v = 0 | this._gh, g = 0 | this._hh, _ = 0 | this._al, w = 0 | this._bl, S = 0 | this._cl, O = 0 | this._dl, j = 0 | this._el, $ = 0 | this._fl, A = 0 | this._gl, E = 0 | this._hl, x = 0;x < 32; x += 2)
          e3[x] = t4.readInt32BE(4 * x), e3[x + 1] = t4.readInt32BE(4 * x + 4);
        for (;x < 160; x += 2) {
          var P = e3[x - 30], k = e3[x - 30 + 1], M = p(P, k), I = d(k, P), T = y(P = e3[x - 4], k = e3[x - 4 + 1]), B = b(k, P), R = e3[x - 14], N = e3[x - 14 + 1], D = e3[x - 32], L = e3[x - 32 + 1], C = I + N | 0, U = M + R + m(C, I) | 0;
          U = (U = U + T + m(C = C + B | 0, B) | 0) + D + m(C = C + L | 0, L) | 0, e3[x] = U, e3[x + 1] = C;
        }
        for (var q = 0;q < 160; q += 2) {
          U = e3[q], C = e3[q + 1];
          var F = f(r3, n2, i2), V = f(_, w, S), z = l(r3, _), K = l(_, r3), H = h(s2, j), W = h(j, s2), J = a[q], G = a[q + 1], Y = u(s2, c2, v), Q = u(j, $, A), X = E + W | 0, Z = g + H + m(X, E) | 0;
          Z = (Z = (Z = Z + Y + m(X = X + Q | 0, Q) | 0) + J + m(X = X + G | 0, G) | 0) + U + m(X = X + C | 0, C) | 0;
          var tt = K + V | 0, et = z + F + m(tt, K) | 0;
          g = v, E = A, v = c2, A = $, c2 = s2, $ = j, s2 = o2 + Z + m(j = O + X | 0, O) | 0, o2 = i2, O = S, i2 = n2, S = w, n2 = r3, w = _, r3 = Z + et + m(_ = X + tt | 0, X) | 0;
        }
        this._al = this._al + _ | 0, this._bl = this._bl + w | 0, this._cl = this._cl + S | 0, this._dl = this._dl + O | 0, this._el = this._el + j | 0, this._fl = this._fl + $ | 0, this._gl = this._gl + A | 0, this._hl = this._hl + E | 0, this._ah = this._ah + r3 + m(this._al, _) | 0, this._bh = this._bh + n2 + m(this._bl, w) | 0, this._ch = this._ch + i2 + m(this._cl, S) | 0, this._dh = this._dh + o2 + m(this._dl, O) | 0, this._eh = this._eh + s2 + m(this._el, j) | 0, this._fh = this._fh + c2 + m(this._fl, $) | 0, this._gh = this._gh + v + m(this._gl, A) | 0, this._hh = this._hh + g + m(this._hl, E) | 0;
      }, c.prototype._hash = function() {
        var t4 = o.allocUnsafe(64);
        function e3(e4, r3, n2) {
          t4.writeInt32BE(e4, n2), t4.writeInt32BE(r3, n2 + 4);
        }
        return e3(this._ah, this._al, 0), e3(this._bh, this._bl, 8), e3(this._ch, this._cl, 16), e3(this._dh, this._dl, 24), e3(this._eh, this._el, 32), e3(this._fh, this._fl, 40), e3(this._gh, this._gl, 48), e3(this._hh, this._hl, 56), t4;
      }, t3.exports = c;
    }, 7775: (t3, e2, r2) => {
      t3.exports = i;
      var n = r2(3550).EventEmitter;
      function i() {
        n.call(this);
      }
      r2(1679)(i, n), i.Readable = r2(8134), i.Writable = r2(4186), i.Duplex = r2(4560), i.Transform = r2(8784), i.PassThrough = r2(1026), i.finished = r2(8500), i.pipeline = r2(1144), i.Stream = i, i.prototype.pipe = function(t4, e3) {
        var r3 = this;
        function i2(e4) {
          t4.writable && t4.write(e4) === false && r3.pause && r3.pause();
        }
        function o() {
          r3.readable && r3.resume && r3.resume();
        }
        r3.on("data", i2), t4.on("drain", o), t4._isStdio || e3 && e3.end === false || (r3.on("end", s), r3.on("close", c));
        var a = false;
        function s() {
          a || (a = true, t4.end());
        }
        function c() {
          a || (a = true, typeof t4.destroy == "function" && t4.destroy());
        }
        function u(t5) {
          if (f(), n.listenerCount(this, "error") === 0)
            throw t5;
        }
        function f() {
          r3.removeListener("data", i2), t4.removeListener("drain", o), r3.removeListener("end", s), r3.removeListener("close", c), r3.removeListener("error", u), t4.removeListener("error", u), r3.removeListener("end", f), r3.removeListener("close", f), t4.removeListener("close", f);
        }
        return r3.on("error", u), t4.on("error", u), r3.on("end", f), r3.on("close", f), t4.on("close", f), t4.emit("pipe", r3), t4;
      };
    }, 198: (t3) => {
      function e2(t4) {
        return e2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, e2(t4);
      }
      var r2 = {};
      function n(t4, e3, n2) {
        n2 || (n2 = Error);
        var i2 = function(t5) {
          var r3, n3;
          function i3(r4, n4, i4) {
            return t5.call(this, function(t6, r5, n5) {
              return typeof e3 == "string" ? e3 : e3(t6, r5, n5);
            }(r4, n4, i4)) || this;
          }
          return n3 = t5, (r3 = i3).prototype = Object.create(n3.prototype), r3.prototype.constructor = r3, r3.__proto__ = n3, i3;
        }(n2);
        i2.prototype.name = n2.name, i2.prototype.code = t4, r2[t4] = i2;
      }
      function i(t4, e3) {
        if (Array.isArray(t4)) {
          var r3 = t4.length;
          return t4 = t4.map(function(t5) {
            return String(t5);
          }), r3 > 2 ? "one of ".concat(e3, " ").concat(t4.slice(0, r3 - 1).join(", "), ", or ") + t4[r3 - 1] : r3 === 2 ? "one of ".concat(e3, " ").concat(t4[0], " or ").concat(t4[1]) : "of ".concat(e3, " ").concat(t4[0]);
        }
        return "of ".concat(e3, " ").concat(String(t4));
      }
      n("ERR_INVALID_OPT_VALUE", function(t4, e3) {
        return 'The value "' + e3 + '" is invalid for option "' + t4 + '"';
      }, TypeError), n("ERR_INVALID_ARG_TYPE", function(t4, r3, n2) {
        var o, a, s, c, u;
        if (typeof r3 == "string" && (a = "not ", r3.substr(0, 4) === a) ? (o = "must not be", r3 = r3.replace(/^not /, "")) : o = "must be", function(t5, e3, r4) {
          return (r4 === undefined || r4 > t5.length) && (r4 = t5.length), t5.substring(r4 - 9, r4) === e3;
        }(t4, " argument"))
          s = "The ".concat(t4, " ").concat(o, " ").concat(i(r3, "type"));
        else {
          var f = (typeof u != "number" && (u = 0), u + 1 > (c = t4).length || c.indexOf(".", u) === -1 ? "argument" : "property");
          s = 'The "'.concat(t4, '" ').concat(f, " ").concat(o, " ").concat(i(r3, "type"));
        }
        return s + ". Received type ".concat(e2(n2));
      }, TypeError), n("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), n("ERR_METHOD_NOT_IMPLEMENTED", function(t4) {
        return "The " + t4 + " method is not implemented";
      }), n("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), n("ERR_STREAM_DESTROYED", function(t4) {
        return "Cannot call " + t4 + " after a stream was destroyed";
      }), n("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), n("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), n("ERR_STREAM_WRITE_AFTER_END", "write after end"), n("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), n("ERR_UNKNOWN_ENCODING", function(t4) {
        return "Unknown encoding: " + t4;
      }, TypeError), n("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), t3.exports.F = r2;
    }, 4560: (t3, e2, r2) => {
      var n = Object.keys || function(t4) {
        var e3 = [];
        for (var r3 in t4)
          e3.push(r3);
        return e3;
      };
      t3.exports = u;
      var i = r2(8134), o = r2(4186);
      r2(1679)(u, i);
      for (var a = n(o.prototype), s = 0;s < a.length; s++) {
        var c = a[s];
        u.prototype[c] || (u.prototype[c] = o.prototype[c]);
      }
      function u(t4) {
        if (!(this instanceof u))
          return new u(t4);
        i.call(this, t4), o.call(this, t4), this.allowHalfOpen = true, t4 && (t4.readable === false && (this.readable = false), t4.writable === false && (this.writable = false), t4.allowHalfOpen === false && (this.allowHalfOpen = false, this.once("end", f)));
      }
      function f() {
        this._writableState.ended || { env: {} }.nextTick(l, this);
      }
      function l(t4) {
        t4.end();
      }
      Object.defineProperty(u.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
        return this._writableState.highWaterMark;
      } }), Object.defineProperty(u.prototype, "writableBuffer", { enumerable: false, get: function() {
        return this._writableState && this._writableState.getBuffer();
      } }), Object.defineProperty(u.prototype, "writableLength", { enumerable: false, get: function() {
        return this._writableState.length;
      } }), Object.defineProperty(u.prototype, "destroyed", { enumerable: false, get: function() {
        return this._readableState !== undefined && this._writableState !== undefined && this._readableState.destroyed && this._writableState.destroyed;
      }, set: function(t4) {
        this._readableState !== undefined && this._writableState !== undefined && (this._readableState.destroyed = t4, this._writableState.destroyed = t4);
      } });
    }, 1026: (t3, e2, r2) => {
      t3.exports = i;
      var n = r2(8784);
      function i(t4) {
        if (!(this instanceof i))
          return new i(t4);
        n.call(this, t4);
      }
      r2(1679)(i, n), i.prototype._transform = function(t4, e3, r3) {
        r3(null, t4);
      };
    }, 8134: (t3, e2, r2) => {
      var n;
      t3.exports = j, j.ReadableState = O, r2(3550).EventEmitter;
      var i, o = function(t4, e3) {
        return t4.listeners(e3).length;
      }, a = r2(6871), s = r2(5832).Buffer, c = (r2.g !== undefined ? r2.g : typeof window != "undefined" ? window : typeof self != "undefined" ? self : {}).Uint8Array || function() {
      }, u = r2(7199);
      i = u && u.debuglog ? u.debuglog("stream") : function() {
      };
      var f, l, h, p = r2(6811), d = r2(6222), y = r2(9681).getHighWaterMark, b = r2(198).F, m = b.ERR_INVALID_ARG_TYPE, v = b.ERR_STREAM_PUSH_AFTER_EOF, g = b.ERR_METHOD_NOT_IMPLEMENTED, _ = b.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
      r2(1679)(j, a);
      var w = d.errorOrDestroy, S = ["error", "close", "destroy", "pause", "resume"];
      function O(t4, e3, i2) {
        n = n || r2(4560), t4 = t4 || {}, typeof i2 != "boolean" && (i2 = e3 instanceof n), this.objectMode = !!t4.objectMode, i2 && (this.objectMode = this.objectMode || !!t4.readableObjectMode), this.highWaterMark = y(this, t4, "readableHighWaterMark", i2), this.buffer = new p, this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.paused = true, this.emitClose = t4.emitClose !== false, this.autoDestroy = !!t4.autoDestroy, this.destroyed = false, this.defaultEncoding = t4.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, t4.encoding && (f || (f = r2(136).I), this.decoder = new f(t4.encoding), this.encoding = t4.encoding);
      }
      function j(t4) {
        if (n = n || r2(4560), !(this instanceof j))
          return new j(t4);
        var e3 = this instanceof n;
        this._readableState = new O(t4, this, e3), this.readable = true, t4 && (typeof t4.read == "function" && (this._read = t4.read), typeof t4.destroy == "function" && (this._destroy = t4.destroy)), a.call(this);
      }
      function $(t4, e3, r3, n2, o2) {
        i("readableAddChunk", e3);
        var a2, u2 = t4._readableState;
        if (e3 === null)
          u2.reading = false, function(t5, e4) {
            if (i("onEofChunk"), !e4.ended) {
              if (e4.decoder) {
                var r4 = e4.decoder.end();
                r4 && r4.length && (e4.buffer.push(r4), e4.length += e4.objectMode ? 1 : r4.length);
              }
              e4.ended = true, e4.sync ? P(t5) : (e4.needReadable = false, e4.emittedReadable || (e4.emittedReadable = true, k(t5)));
            }
          }(t4, u2);
        else if (o2 || (a2 = function(t5, e4) {
          var r4, n3;
          return n3 = e4, s.isBuffer(n3) || n3 instanceof c || typeof e4 == "string" || e4 === undefined || t5.objectMode || (r4 = new m("chunk", ["string", "Buffer", "Uint8Array"], e4)), r4;
        }(u2, e3)), a2)
          w(t4, a2);
        else if (u2.objectMode || e3 && e3.length > 0)
          if (typeof e3 == "string" || u2.objectMode || Object.getPrototypeOf(e3) === s.prototype || (e3 = function(t5) {
            return s.from(t5);
          }(e3)), n2)
            u2.endEmitted ? w(t4, new _) : A(t4, u2, e3, true);
          else if (u2.ended)
            w(t4, new v);
          else {
            if (u2.destroyed)
              return false;
            u2.reading = false, u2.decoder && !r3 ? (e3 = u2.decoder.write(e3), u2.objectMode || e3.length !== 0 ? A(t4, u2, e3, false) : M(t4, u2)) : A(t4, u2, e3, false);
          }
        else
          n2 || (u2.reading = false, M(t4, u2));
        return !u2.ended && (u2.length < u2.highWaterMark || u2.length === 0);
      }
      function A(t4, e3, r3, n2) {
        e3.flowing && e3.length === 0 && !e3.sync ? (e3.awaitDrain = 0, t4.emit("data", r3)) : (e3.length += e3.objectMode ? 1 : r3.length, n2 ? e3.buffer.unshift(r3) : e3.buffer.push(r3), e3.needReadable && P(t4)), M(t4, e3);
      }
      Object.defineProperty(j.prototype, "destroyed", { enumerable: false, get: function() {
        return this._readableState !== undefined && this._readableState.destroyed;
      }, set: function(t4) {
        this._readableState && (this._readableState.destroyed = t4);
      } }), j.prototype.destroy = d.destroy, j.prototype._undestroy = d.undestroy, j.prototype._destroy = function(t4, e3) {
        e3(t4);
      }, j.prototype.push = function(t4, e3) {
        var r3, n2 = this._readableState;
        return n2.objectMode ? r3 = true : typeof t4 == "string" && ((e3 = e3 || n2.defaultEncoding) !== n2.encoding && (t4 = s.from(t4, e3), e3 = ""), r3 = true), $(this, t4, e3, false, r3);
      }, j.prototype.unshift = function(t4) {
        return $(this, t4, null, true, false);
      }, j.prototype.isPaused = function() {
        return this._readableState.flowing === false;
      }, j.prototype.setEncoding = function(t4) {
        f || (f = r2(136).I);
        var e3 = new f(t4);
        this._readableState.decoder = e3, this._readableState.encoding = this._readableState.decoder.encoding;
        for (var n2 = this._readableState.buffer.head, i2 = "";n2 !== null; )
          i2 += e3.write(n2.data), n2 = n2.next;
        return this._readableState.buffer.clear(), i2 !== "" && this._readableState.buffer.push(i2), this._readableState.length = i2.length, this;
      };
      var E = 1073741824;
      function x(t4, e3) {
        return t4 <= 0 || e3.length === 0 && e3.ended ? 0 : e3.objectMode ? 1 : t4 != t4 ? e3.flowing && e3.length ? e3.buffer.head.data.length : e3.length : (t4 > e3.highWaterMark && (e3.highWaterMark = function(t5) {
          return t5 >= E ? t5 = E : (t5--, t5 |= t5 >>> 1, t5 |= t5 >>> 2, t5 |= t5 >>> 4, t5 |= t5 >>> 8, t5 |= t5 >>> 16, t5++), t5;
        }(t4)), t4 <= e3.length ? t4 : e3.ended ? e3.length : (e3.needReadable = true, 0));
      }
      function P(t4) {
        var e3 = t4._readableState;
        i("emitReadable", e3.needReadable, e3.emittedReadable), e3.needReadable = false, e3.emittedReadable || (i("emitReadable", e3.flowing), e3.emittedReadable = true, { env: {} }.nextTick(k, t4));
      }
      function k(t4) {
        var e3 = t4._readableState;
        i("emitReadable_", e3.destroyed, e3.length, e3.ended), e3.destroyed || !e3.length && !e3.ended || (t4.emit("readable"), e3.emittedReadable = false), e3.needReadable = !e3.flowing && !e3.ended && e3.length <= e3.highWaterMark, N(t4);
      }
      function M(t4, e3) {
        e3.readingMore || (e3.readingMore = true, { env: {} }.nextTick(I, t4, e3));
      }
      function I(t4, e3) {
        for (;!e3.reading && !e3.ended && (e3.length < e3.highWaterMark || e3.flowing && e3.length === 0); ) {
          var r3 = e3.length;
          if (i("maybeReadMore read 0"), t4.read(0), r3 === e3.length)
            break;
        }
        e3.readingMore = false;
      }
      function T(t4) {
        var e3 = t4._readableState;
        e3.readableListening = t4.listenerCount("readable") > 0, e3.resumeScheduled && !e3.paused ? e3.flowing = true : t4.listenerCount("data") > 0 && t4.resume();
      }
      function B(t4) {
        i("readable nexttick read 0"), t4.read(0);
      }
      function R(t4, e3) {
        i("resume", e3.reading), e3.reading || t4.read(0), e3.resumeScheduled = false, t4.emit("resume"), N(t4), e3.flowing && !e3.reading && t4.read(0);
      }
      function N(t4) {
        var e3 = t4._readableState;
        for (i("flow", e3.flowing);e3.flowing && t4.read() !== null; )
          ;
      }
      function D(t4, e3) {
        return e3.length === 0 ? null : (e3.objectMode ? r3 = e3.buffer.shift() : !t4 || t4 >= e3.length ? (r3 = e3.decoder ? e3.buffer.join("") : e3.buffer.length === 1 ? e3.buffer.first() : e3.buffer.concat(e3.length), e3.buffer.clear()) : r3 = e3.buffer.consume(t4, e3.decoder), r3);
        var r3;
      }
      function L(t4) {
        var e3 = t4._readableState;
        i("endReadable", e3.endEmitted), e3.endEmitted || (e3.ended = true, { env: {} }.nextTick(C, e3, t4));
      }
      function C(t4, e3) {
        if (i("endReadableNT", t4.endEmitted, t4.length), !t4.endEmitted && t4.length === 0 && (t4.endEmitted = true, e3.readable = false, e3.emit("end"), t4.autoDestroy)) {
          var r3 = e3._writableState;
          (!r3 || r3.autoDestroy && r3.finished) && e3.destroy();
        }
      }
      function U(t4, e3) {
        for (var r3 = 0, n2 = t4.length;r3 < n2; r3++)
          if (t4[r3] === e3)
            return r3;
        return -1;
      }
      j.prototype.read = function(t4) {
        i("read", t4), t4 = parseInt(t4, 10);
        var e3 = this._readableState, r3 = t4;
        if (t4 !== 0 && (e3.emittedReadable = false), t4 === 0 && e3.needReadable && ((e3.highWaterMark !== 0 ? e3.length >= e3.highWaterMark : e3.length > 0) || e3.ended))
          return i("read: emitReadable", e3.length, e3.ended), e3.length === 0 && e3.ended ? L(this) : P(this), null;
        if ((t4 = x(t4, e3)) === 0 && e3.ended)
          return e3.length === 0 && L(this), null;
        var n2, o2 = e3.needReadable;
        return i("need readable", o2), (e3.length === 0 || e3.length - t4 < e3.highWaterMark) && i("length less than watermark", o2 = true), e3.ended || e3.reading ? i("reading or ended", o2 = false) : o2 && (i("do read"), e3.reading = true, e3.sync = true, e3.length === 0 && (e3.needReadable = true), this._read(e3.highWaterMark), e3.sync = false, e3.reading || (t4 = x(r3, e3))), (n2 = t4 > 0 ? D(t4, e3) : null) === null ? (e3.needReadable = e3.length <= e3.highWaterMark, t4 = 0) : (e3.length -= t4, e3.awaitDrain = 0), e3.length === 0 && (e3.ended || (e3.needReadable = true), r3 !== t4 && e3.ended && L(this)), n2 !== null && this.emit("data", n2), n2;
      }, j.prototype._read = function(t4) {
        w(this, new g("_read()"));
      }, j.prototype.pipe = function(t4, e3) {
        var r3 = this, n2 = this._readableState;
        switch (n2.pipesCount) {
          case 0:
            n2.pipes = t4;
            break;
          case 1:
            n2.pipes = [n2.pipes, t4];
            break;
          default:
            n2.pipes.push(t4);
        }
        n2.pipesCount += 1, i("pipe count=%d opts=%j", n2.pipesCount, e3);
        var a2 = e3 && e3.end === false || t4 === { env: {} }.stdout || t4 === { env: {} }.stderr ? d2 : s2;
        function s2() {
          i("onend"), t4.end();
        }
        n2.endEmitted ? { env: {} }.nextTick(a2) : r3.once("end", a2), t4.on("unpipe", function e(o2, a3) {
          i("onunpipe"), o2 === r3 && a3 && a3.hasUnpiped === false && (a3.hasUnpiped = true, i("cleanup"), t4.removeListener("close", h2), t4.removeListener("finish", p2), t4.removeListener("drain", c2), t4.removeListener("error", l2), t4.removeListener("unpipe", e), r3.removeListener("end", s2), r3.removeListener("end", d2), r3.removeListener("data", f2), u2 = true, !n2.awaitDrain || t4._writableState && !t4._writableState.needDrain || c2());
        });
        var c2 = function(t5) {
          return function() {
            var e4 = t5._readableState;
            i("pipeOnDrain", e4.awaitDrain), e4.awaitDrain && e4.awaitDrain--, e4.awaitDrain === 0 && o(t5, "data") && (e4.flowing = true, N(t5));
          };
        }(r3);
        t4.on("drain", c2);
        var u2 = false;
        function f2(e4) {
          i("ondata");
          var o2 = t4.write(e4);
          i("dest.write", o2), o2 === false && ((n2.pipesCount === 1 && n2.pipes === t4 || n2.pipesCount > 1 && U(n2.pipes, t4) !== -1) && !u2 && (i("false write response, pause", n2.awaitDrain), n2.awaitDrain++), r3.pause());
        }
        function l2(e4) {
          i("onerror", e4), d2(), t4.removeListener("error", l2), o(t4, "error") === 0 && w(t4, e4);
        }
        function h2() {
          t4.removeListener("finish", p2), d2();
        }
        function p2() {
          i("onfinish"), t4.removeListener("close", h2), d2();
        }
        function d2() {
          i("unpipe"), r3.unpipe(t4);
        }
        return r3.on("data", f2), function(t5, e4, r4) {
          if (typeof t5.prependListener == "function")
            return t5.prependListener(e4, r4);
          t5._events && t5._events[e4] ? Array.isArray(t5._events[e4]) ? t5._events[e4].unshift(r4) : t5._events[e4] = [r4, t5._events[e4]] : t5.on(e4, r4);
        }(t4, "error", l2), t4.once("close", h2), t4.once("finish", p2), t4.emit("pipe", r3), n2.flowing || (i("pipe resume"), r3.resume()), t4;
      }, j.prototype.unpipe = function(t4) {
        var e3 = this._readableState, r3 = { hasUnpiped: false };
        if (e3.pipesCount === 0)
          return this;
        if (e3.pipesCount === 1)
          return t4 && t4 !== e3.pipes || (t4 || (t4 = e3.pipes), e3.pipes = null, e3.pipesCount = 0, e3.flowing = false, t4 && t4.emit("unpipe", this, r3)), this;
        if (!t4) {
          var { pipes: n2, pipesCount: i2 } = e3;
          e3.pipes = null, e3.pipesCount = 0, e3.flowing = false;
          for (var o2 = 0;o2 < i2; o2++)
            n2[o2].emit("unpipe", this, { hasUnpiped: false });
          return this;
        }
        var a2 = U(e3.pipes, t4);
        return a2 === -1 || (e3.pipes.splice(a2, 1), e3.pipesCount -= 1, e3.pipesCount === 1 && (e3.pipes = e3.pipes[0]), t4.emit("unpipe", this, r3)), this;
      }, j.prototype.on = function(t4, e3) {
        var r3 = a.prototype.on.call(this, t4, e3), n2 = this._readableState;
        return t4 === "data" ? (n2.readableListening = this.listenerCount("readable") > 0, n2.flowing !== false && this.resume()) : t4 === "readable" && (n2.endEmitted || n2.readableListening || (n2.readableListening = n2.needReadable = true, n2.flowing = false, n2.emittedReadable = false, i("on readable", n2.length, n2.reading), n2.length ? P(this) : n2.reading || { env: {} }.nextTick(B, this))), r3;
      }, j.prototype.addListener = j.prototype.on, j.prototype.removeListener = function(t4, e3) {
        var r3 = a.prototype.removeListener.call(this, t4, e3);
        return t4 === "readable" && { env: {} }.nextTick(T, this), r3;
      }, j.prototype.removeAllListeners = function(t4) {
        var e3 = a.prototype.removeAllListeners.apply(this, arguments);
        return t4 !== "readable" && t4 !== undefined || { env: {} }.nextTick(T, this), e3;
      }, j.prototype.resume = function() {
        var t4 = this._readableState;
        return t4.flowing || (i("resume"), t4.flowing = !t4.readableListening, function(t5, e3) {
          e3.resumeScheduled || (e3.resumeScheduled = true, { env: {} }.nextTick(R, t5, e3));
        }(this, t4)), t4.paused = false, this;
      }, j.prototype.pause = function() {
        return i("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== false && (i("pause"), this._readableState.flowing = false, this.emit("pause")), this._readableState.paused = true, this;
      }, j.prototype.wrap = function(t4) {
        var e3 = this, r3 = this._readableState, n2 = false;
        for (var o2 in t4.on("end", function() {
          if (i("wrapped end"), r3.decoder && !r3.ended) {
            var t5 = r3.decoder.end();
            t5 && t5.length && e3.push(t5);
          }
          e3.push(null);
        }), t4.on("data", function(o3) {
          i("wrapped data"), r3.decoder && (o3 = r3.decoder.write(o3)), r3.objectMode && o3 == null || (r3.objectMode || o3 && o3.length) && (e3.push(o3) || (n2 = true, t4.pause()));
        }), t4)
          this[o2] === undefined && typeof t4[o2] == "function" && (this[o2] = function(e4) {
            return function() {
              return t4[e4].apply(t4, arguments);
            };
          }(o2));
        for (var a2 = 0;a2 < S.length; a2++)
          t4.on(S[a2], this.emit.bind(this, S[a2]));
        return this._read = function(e4) {
          i("wrapped _read", e4), n2 && (n2 = false, t4.resume());
        }, this;
      }, typeof Symbol == "function" && (j.prototype[Symbol.asyncIterator] = function() {
        return l === undefined && (l = r2(8493)), l(this);
      }), Object.defineProperty(j.prototype, "readableHighWaterMark", { enumerable: false, get: function() {
        return this._readableState.highWaterMark;
      } }), Object.defineProperty(j.prototype, "readableBuffer", { enumerable: false, get: function() {
        return this._readableState && this._readableState.buffer;
      } }), Object.defineProperty(j.prototype, "readableFlowing", { enumerable: false, get: function() {
        return this._readableState.flowing;
      }, set: function(t4) {
        this._readableState && (this._readableState.flowing = t4);
      } }), j._fromList = D, Object.defineProperty(j.prototype, "readableLength", { enumerable: false, get: function() {
        return this._readableState.length;
      } }), typeof Symbol == "function" && (j.from = function(t4, e3) {
        return h === undefined && (h = r2(9271)), h(j, t4, e3);
      });
    }, 8784: (t3, e2, r2) => {
      t3.exports = f;
      var n = r2(198).F, i = n.ERR_METHOD_NOT_IMPLEMENTED, o = n.ERR_MULTIPLE_CALLBACK, a = n.ERR_TRANSFORM_ALREADY_TRANSFORMING, s = n.ERR_TRANSFORM_WITH_LENGTH_0, c = r2(4560);
      function u(t4, e3) {
        var r3 = this._transformState;
        r3.transforming = false;
        var n2 = r3.writecb;
        if (n2 === null)
          return this.emit("error", new o);
        r3.writechunk = null, r3.writecb = null, e3 != null && this.push(e3), n2(t4);
        var i2 = this._readableState;
        i2.reading = false, (i2.needReadable || i2.length < i2.highWaterMark) && this._read(i2.highWaterMark);
      }
      function f(t4) {
        if (!(this instanceof f))
          return new f(t4);
        c.call(this, t4), this._transformState = { afterTransform: u.bind(this), needTransform: false, transforming: false, writecb: null, writechunk: null, writeencoding: null }, this._readableState.needReadable = true, this._readableState.sync = false, t4 && (typeof t4.transform == "function" && (this._transform = t4.transform), typeof t4.flush == "function" && (this._flush = t4.flush)), this.on("prefinish", l);
      }
      function l() {
        var t4 = this;
        typeof this._flush != "function" || this._readableState.destroyed ? h(this, null, null) : this._flush(function(e3, r3) {
          h(t4, e3, r3);
        });
      }
      function h(t4, e3, r3) {
        if (e3)
          return t4.emit("error", e3);
        if (r3 != null && t4.push(r3), t4._writableState.length)
          throw new s;
        if (t4._transformState.transforming)
          throw new a;
        return t4.push(null);
      }
      r2(1679)(f, c), f.prototype.push = function(t4, e3) {
        return this._transformState.needTransform = false, c.prototype.push.call(this, t4, e3);
      }, f.prototype._transform = function(t4, e3, r3) {
        r3(new i("_transform()"));
      }, f.prototype._write = function(t4, e3, r3) {
        var n2 = this._transformState;
        if (n2.writecb = r3, n2.writechunk = t4, n2.writeencoding = e3, !n2.transforming) {
          var i2 = this._readableState;
          (n2.needTransform || i2.needReadable || i2.length < i2.highWaterMark) && this._read(i2.highWaterMark);
        }
      }, f.prototype._read = function(t4) {
        var e3 = this._transformState;
        e3.writechunk === null || e3.transforming ? e3.needTransform = true : (e3.transforming = true, this._transform(e3.writechunk, e3.writeencoding, e3.afterTransform));
      }, f.prototype._destroy = function(t4, e3) {
        c.prototype._destroy.call(this, t4, function(t5) {
          e3(t5);
        });
      };
    }, 4186: (t3, e2, r2) => {
      function n(t4) {
        var e3 = this;
        this.next = null, this.entry = null, this.finish = function() {
          (function(t5, e4) {
            var r3 = t5.entry;
            for (t5.entry = null;r3; ) {
              var n2 = r3.callback;
              e4.pendingcb--, n2(undefined), r3 = r3.next;
            }
            e4.corkedRequestsFree.next = t5;
          })(e3, t4);
        };
      }
      var i;
      t3.exports = j, j.WritableState = O;
      var o, a = { deprecate: r2(3340) }, s = r2(6871), c = r2(5832).Buffer, u = (r2.g !== undefined ? r2.g : typeof window != "undefined" ? window : typeof self != "undefined" ? self : {}).Uint8Array || function() {
      }, f = r2(6222), l = r2(9681).getHighWaterMark, h = r2(198).F, p = h.ERR_INVALID_ARG_TYPE, d = h.ERR_METHOD_NOT_IMPLEMENTED, y = h.ERR_MULTIPLE_CALLBACK, b = h.ERR_STREAM_CANNOT_PIPE, m = h.ERR_STREAM_DESTROYED, v = h.ERR_STREAM_NULL_VALUES, g = h.ERR_STREAM_WRITE_AFTER_END, _ = h.ERR_UNKNOWN_ENCODING, w = f.errorOrDestroy;
      function S() {
      }
      function O(t4, e3, o2) {
        i = i || r2(4560), t4 = t4 || {}, typeof o2 != "boolean" && (o2 = e3 instanceof i), this.objectMode = !!t4.objectMode, o2 && (this.objectMode = this.objectMode || !!t4.writableObjectMode), this.highWaterMark = l(this, t4, "writableHighWaterMark", o2), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
        var a2 = t4.decodeStrings === false;
        this.decodeStrings = !a2, this.defaultEncoding = t4.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function(t5) {
          (function(t6, e4) {
            var r3 = t6._writableState, n2 = r3.sync, i2 = r3.writecb;
            if (typeof i2 != "function")
              throw new y;
            if (function(t7) {
              t7.writing = false, t7.writecb = null, t7.length -= t7.writelen, t7.writelen = 0;
            }(r3), e4)
              (function(t7, e5, r4, n3, i3) {
                --e5.pendingcb, r4 ? ({ env: {} }.nextTick(i3, n3), { env: {} }.nextTick(k, t7, e5), t7._writableState.errorEmitted = true, w(t7, n3)) : (i3(n3), t7._writableState.errorEmitted = true, w(t7, n3), k(t7, e5));
              })(t6, r3, n2, e4, i2);
            else {
              var o3 = x(r3) || t6.destroyed;
              o3 || r3.corked || r3.bufferProcessing || !r3.bufferedRequest || E(t6, r3), n2 ? { env: {} }.nextTick(A, t6, r3, o3, i2) : A(t6, r3, o3, i2);
            }
          })(e3, t5);
        }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.emitClose = t4.emitClose !== false, this.autoDestroy = !!t4.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new n(this);
      }
      function j(t4) {
        var e3 = this instanceof (i = i || r2(4560));
        if (!e3 && !o.call(j, this))
          return new j(t4);
        this._writableState = new O(t4, this, e3), this.writable = true, t4 && (typeof t4.write == "function" && (this._write = t4.write), typeof t4.writev == "function" && (this._writev = t4.writev), typeof t4.destroy == "function" && (this._destroy = t4.destroy), typeof t4.final == "function" && (this._final = t4.final)), s.call(this);
      }
      function $(t4, e3, r3, n2, i2, o2, a2) {
        e3.writelen = n2, e3.writecb = a2, e3.writing = true, e3.sync = true, e3.destroyed ? e3.onwrite(new m("write")) : r3 ? t4._writev(i2, e3.onwrite) : t4._write(i2, o2, e3.onwrite), e3.sync = false;
      }
      function A(t4, e3, r3, n2) {
        r3 || function(t5, e4) {
          e4.length === 0 && e4.needDrain && (e4.needDrain = false, t5.emit("drain"));
        }(t4, e3), e3.pendingcb--, n2(), k(t4, e3);
      }
      function E(t4, e3) {
        e3.bufferProcessing = true;
        var r3 = e3.bufferedRequest;
        if (t4._writev && r3 && r3.next) {
          var i2 = e3.bufferedRequestCount, o2 = new Array(i2), a2 = e3.corkedRequestsFree;
          a2.entry = r3;
          for (var s2 = 0, c2 = true;r3; )
            o2[s2] = r3, r3.isBuf || (c2 = false), r3 = r3.next, s2 += 1;
          o2.allBuffers = c2, $(t4, e3, true, e3.length, o2, "", a2.finish), e3.pendingcb++, e3.lastBufferedRequest = null, a2.next ? (e3.corkedRequestsFree = a2.next, a2.next = null) : e3.corkedRequestsFree = new n(e3), e3.bufferedRequestCount = 0;
        } else {
          for (;r3; ) {
            var { chunk: u2, encoding: f2, callback: l2 } = r3;
            if ($(t4, e3, false, e3.objectMode ? 1 : u2.length, u2, f2, l2), r3 = r3.next, e3.bufferedRequestCount--, e3.writing)
              break;
          }
          r3 === null && (e3.lastBufferedRequest = null);
        }
        e3.bufferedRequest = r3, e3.bufferProcessing = false;
      }
      function x(t4) {
        return t4.ending && t4.length === 0 && t4.bufferedRequest === null && !t4.finished && !t4.writing;
      }
      function P(t4, e3) {
        t4._final(function(r3) {
          e3.pendingcb--, r3 && w(t4, r3), e3.prefinished = true, t4.emit("prefinish"), k(t4, e3);
        });
      }
      function k(t4, e3) {
        var r3 = x(e3);
        if (r3 && (function(t5, e4) {
          e4.prefinished || e4.finalCalled || (typeof t5._final != "function" || e4.destroyed ? (e4.prefinished = true, t5.emit("prefinish")) : (e4.pendingcb++, e4.finalCalled = true, { env: {} }.nextTick(P, t5, e4)));
        }(t4, e3), e3.pendingcb === 0 && (e3.finished = true, t4.emit("finish"), e3.autoDestroy))) {
          var n2 = t4._readableState;
          (!n2 || n2.autoDestroy && n2.endEmitted) && t4.destroy();
        }
        return r3;
      }
      r2(1679)(j, s), O.prototype.getBuffer = function() {
        for (var t4 = this.bufferedRequest, e3 = [];t4; )
          e3.push(t4), t4 = t4.next;
        return e3;
      }, function() {
        try {
          Object.defineProperty(O.prototype, "buffer", { get: a.deprecate(function() {
            return this.getBuffer();
          }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
        } catch (t4) {
        }
      }(), typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (o = Function.prototype[Symbol.hasInstance], Object.defineProperty(j, Symbol.hasInstance, { value: function(t4) {
        return !!o.call(this, t4) || this === j && t4 && t4._writableState instanceof O;
      } })) : o = function(t4) {
        return t4 instanceof this;
      }, j.prototype.pipe = function() {
        w(this, new b);
      }, j.prototype.write = function(t4, e3, r3) {
        var n2, i2 = this._writableState, o2 = false, a2 = !i2.objectMode && (n2 = t4, c.isBuffer(n2) || n2 instanceof u);
        return a2 && !c.isBuffer(t4) && (t4 = function(t5) {
          return c.from(t5);
        }(t4)), typeof e3 == "function" && (r3 = e3, e3 = null), a2 ? e3 = "buffer" : e3 || (e3 = i2.defaultEncoding), typeof r3 != "function" && (r3 = S), i2.ending ? function(t5, e4) {
          var r4 = new g;
          w(t5, r4), { env: {} }.nextTick(e4, r4);
        }(this, r3) : (a2 || function(t5, e4, r4, n3) {
          var i3;
          return r4 === null ? i3 = new v : typeof r4 == "string" || e4.objectMode || (i3 = new p("chunk", ["string", "Buffer"], r4)), !i3 || (w(t5, i3), { env: {} }.nextTick(n3, i3), false);
        }(this, i2, t4, r3)) && (i2.pendingcb++, o2 = function(t5, e4, r4, n3, i3, o3) {
          if (!r4) {
            var a3 = function(t6, e5, r5) {
              return t6.objectMode || t6.decodeStrings === false || typeof e5 != "string" || (e5 = c.from(e5, r5)), e5;
            }(e4, n3, i3);
            n3 !== a3 && (r4 = true, i3 = "buffer", n3 = a3);
          }
          var s2 = e4.objectMode ? 1 : n3.length;
          e4.length += s2;
          var u2 = e4.length < e4.highWaterMark;
          if (u2 || (e4.needDrain = true), e4.writing || e4.corked) {
            var f2 = e4.lastBufferedRequest;
            e4.lastBufferedRequest = { chunk: n3, encoding: i3, isBuf: r4, callback: o3, next: null }, f2 ? f2.next = e4.lastBufferedRequest : e4.bufferedRequest = e4.lastBufferedRequest, e4.bufferedRequestCount += 1;
          } else
            $(t5, e4, false, s2, n3, i3, o3);
          return u2;
        }(this, i2, a2, t4, e3, r3)), o2;
      }, j.prototype.cork = function() {
        this._writableState.corked++;
      }, j.prototype.uncork = function() {
        var t4 = this._writableState;
        t4.corked && (t4.corked--, t4.writing || t4.corked || t4.bufferProcessing || !t4.bufferedRequest || E(this, t4));
      }, j.prototype.setDefaultEncoding = function(t4) {
        if (typeof t4 == "string" && (t4 = t4.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((t4 + "").toLowerCase()) > -1))
          throw new _(t4);
        return this._writableState.defaultEncoding = t4, this;
      }, Object.defineProperty(j.prototype, "writableBuffer", { enumerable: false, get: function() {
        return this._writableState && this._writableState.getBuffer();
      } }), Object.defineProperty(j.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
        return this._writableState.highWaterMark;
      } }), j.prototype._write = function(t4, e3, r3) {
        r3(new d("_write()"));
      }, j.prototype._writev = null, j.prototype.end = function(t4, e3, r3) {
        var n2 = this._writableState;
        return typeof t4 == "function" ? (r3 = t4, t4 = null, e3 = null) : typeof e3 == "function" && (r3 = e3, e3 = null), t4 != null && this.write(t4, e3), n2.corked && (n2.corked = 1, this.uncork()), n2.ending || function(t5, e4, r4) {
          e4.ending = true, k(t5, e4), r4 && (e4.finished ? { env: {} }.nextTick(r4) : t5.once("finish", r4)), e4.ended = true, t5.writable = false;
        }(this, n2, r3), this;
      }, Object.defineProperty(j.prototype, "writableLength", { enumerable: false, get: function() {
        return this._writableState.length;
      } }), Object.defineProperty(j.prototype, "destroyed", { enumerable: false, get: function() {
        return this._writableState !== undefined && this._writableState.destroyed;
      }, set: function(t4) {
        this._writableState && (this._writableState.destroyed = t4);
      } }), j.prototype.destroy = f.destroy, j.prototype._undestroy = f.undestroy, j.prototype._destroy = function(t4, e3) {
        e3(t4);
      };
    }, 8493: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      var i;
      function o(t4, e3, r3) {
        return (e3 = function(t5) {
          var e4 = function(t6) {
            if (n(t6) !== "object" || t6 === null)
              return t6;
            var e5 = t6[Symbol.toPrimitive];
            if (e5 !== undefined) {
              var r4 = e5.call(t6, "string");
              if (n(r4) !== "object")
                return r4;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t6);
          }(t5);
          return n(e4) === "symbol" ? e4 : String(e4);
        }(e3)) in t4 ? Object.defineProperty(t4, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t4[e3] = r3, t4;
      }
      var a = r2(8500), s = Symbol("lastResolve"), c = Symbol("lastReject"), u = Symbol("error"), f = Symbol("ended"), l = Symbol("lastPromise"), h = Symbol("handlePromise"), p = Symbol("stream");
      function d(t4, e3) {
        return { value: t4, done: e3 };
      }
      function y(t4) {
        var e3 = t4[s];
        if (e3 !== null) {
          var r3 = t4[p].read();
          r3 !== null && (t4[l] = null, t4[s] = null, t4[c] = null, e3(d(r3, false)));
        }
      }
      function b(t4) {
        ({ env: {} }).nextTick(y, t4);
      }
      var m = Object.getPrototypeOf(function() {
      }), v = Object.setPrototypeOf((o(i = { get stream() {
        return this[p];
      }, next: function() {
        var t4 = this, e3 = this[u];
        if (e3 !== null)
          return Promise.reject(e3);
        if (this[f])
          return Promise.resolve(d(undefined, true));
        if (this[p].destroyed)
          return new Promise(function(e4, r4) {
            ({ env: {} }).nextTick(function() {
              t4[u] ? r4(t4[u]) : e4(d(undefined, true));
            });
          });
        var r3, n2 = this[l];
        if (n2)
          r3 = new Promise(function(t5, e4) {
            return function(r4, n3) {
              t5.then(function() {
                e4[f] ? r4(d(undefined, true)) : e4[h](r4, n3);
              }, n3);
            };
          }(n2, this));
        else {
          var i2 = this[p].read();
          if (i2 !== null)
            return Promise.resolve(d(i2, false));
          r3 = new Promise(this[h]);
        }
        return this[l] = r3, r3;
      } }, Symbol.asyncIterator, function() {
        return this;
      }), o(i, "return", function() {
        var t4 = this;
        return new Promise(function(e3, r3) {
          t4[p].destroy(null, function(t5) {
            t5 ? r3(t5) : e3(d(undefined, true));
          });
        });
      }), i), m);
      t3.exports = function(t4) {
        var e3, r3 = Object.create(v, (o(e3 = {}, p, { value: t4, writable: true }), o(e3, s, { value: null, writable: true }), o(e3, c, { value: null, writable: true }), o(e3, u, { value: null, writable: true }), o(e3, f, { value: t4._readableState.endEmitted, writable: true }), o(e3, h, { value: function(t5, e4) {
          var n2 = r3[p].read();
          n2 ? (r3[l] = null, r3[s] = null, r3[c] = null, t5(d(n2, false))) : (r3[s] = t5, r3[c] = e4);
        }, writable: true }), e3));
        return r3[l] = null, a(t4, function(t5) {
          if (t5 && t5.code !== "ERR_STREAM_PREMATURE_CLOSE") {
            var e4 = r3[c];
            return e4 !== null && (r3[l] = null, r3[s] = null, r3[c] = null, e4(t5)), void (r3[u] = t5);
          }
          var n2 = r3[s];
          n2 !== null && (r3[l] = null, r3[s] = null, r3[c] = null, n2(d(undefined, true))), r3[f] = true;
        }), t4.on("readable", b.bind(null, r3)), r3;
      };
    }, 6811: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      function i(t4, e3) {
        var r3 = Object.keys(t4);
        if (Object.getOwnPropertySymbols) {
          var n2 = Object.getOwnPropertySymbols(t4);
          e3 && (n2 = n2.filter(function(e4) {
            return Object.getOwnPropertyDescriptor(t4, e4).enumerable;
          })), r3.push.apply(r3, n2);
        }
        return r3;
      }
      function o(t4) {
        for (var e3 = 1;e3 < arguments.length; e3++) {
          var r3 = arguments[e3] != null ? arguments[e3] : {};
          e3 % 2 ? i(Object(r3), true).forEach(function(e4) {
            a(t4, e4, r3[e4]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t4, Object.getOwnPropertyDescriptors(r3)) : i(Object(r3)).forEach(function(e4) {
            Object.defineProperty(t4, e4, Object.getOwnPropertyDescriptor(r3, e4));
          });
        }
        return t4;
      }
      function a(t4, e3, r3) {
        return (e3 = c(e3)) in t4 ? Object.defineProperty(t4, e3, { value: r3, enumerable: true, configurable: true, writable: true }) : t4[e3] = r3, t4;
      }
      function s(t4, e3) {
        for (var r3 = 0;r3 < e3.length; r3++) {
          var n2 = e3[r3];
          n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(t4, c(n2.key), n2);
        }
      }
      function c(t4) {
        var e3 = function(t5) {
          if (n(t5) !== "object" || t5 === null)
            return t5;
          var e4 = t5[Symbol.toPrimitive];
          if (e4 !== undefined) {
            var r3 = e4.call(t5, "string");
            if (n(r3) !== "object")
              return r3;
            throw new TypeError("@@toPrimitive must return a primitive value.");
          }
          return String(t5);
        }(t4);
        return n(e3) === "symbol" ? e3 : String(e3);
      }
      var u = r2(5832).Buffer, f = r2(3779).inspect, l = f && f.custom || "inspect";
      t3.exports = function() {
        function t4() {
          (function(t5, e4) {
            if (!(t5 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          })(this, t4), this.head = null, this.tail = null, this.length = 0;
        }
        var e3, r3;
        return e3 = t4, (r3 = [{ key: "push", value: function(t5) {
          var e4 = { data: t5, next: null };
          this.length > 0 ? this.tail.next = e4 : this.head = e4, this.tail = e4, ++this.length;
        } }, { key: "unshift", value: function(t5) {
          var e4 = { data: t5, next: this.head };
          this.length === 0 && (this.tail = e4), this.head = e4, ++this.length;
        } }, { key: "shift", value: function() {
          if (this.length !== 0) {
            var t5 = this.head.data;
            return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, t5;
          }
        } }, { key: "clear", value: function() {
          this.head = this.tail = null, this.length = 0;
        } }, { key: "join", value: function(t5) {
          if (this.length === 0)
            return "";
          for (var e4 = this.head, r4 = "" + e4.data;e4 = e4.next; )
            r4 += t5 + e4.data;
          return r4;
        } }, { key: "concat", value: function(t5) {
          if (this.length === 0)
            return u.alloc(0);
          for (var e4, r4, n2, i2 = u.allocUnsafe(t5 >>> 0), o2 = this.head, a2 = 0;o2; )
            e4 = o2.data, r4 = i2, n2 = a2, u.prototype.copy.call(e4, r4, n2), a2 += o2.data.length, o2 = o2.next;
          return i2;
        } }, { key: "consume", value: function(t5, e4) {
          var r4;
          return t5 < this.head.data.length ? (r4 = this.head.data.slice(0, t5), this.head.data = this.head.data.slice(t5)) : r4 = t5 === this.head.data.length ? this.shift() : e4 ? this._getString(t5) : this._getBuffer(t5), r4;
        } }, { key: "first", value: function() {
          return this.head.data;
        } }, { key: "_getString", value: function(t5) {
          var e4 = this.head, r4 = 1, n2 = e4.data;
          for (t5 -= n2.length;e4 = e4.next; ) {
            var i2 = e4.data, o2 = t5 > i2.length ? i2.length : t5;
            if (o2 === i2.length ? n2 += i2 : n2 += i2.slice(0, t5), (t5 -= o2) == 0) {
              o2 === i2.length ? (++r4, e4.next ? this.head = e4.next : this.head = this.tail = null) : (this.head = e4, e4.data = i2.slice(o2));
              break;
            }
            ++r4;
          }
          return this.length -= r4, n2;
        } }, { key: "_getBuffer", value: function(t5) {
          var e4 = u.allocUnsafe(t5), r4 = this.head, n2 = 1;
          for (r4.data.copy(e4), t5 -= r4.data.length;r4 = r4.next; ) {
            var i2 = r4.data, o2 = t5 > i2.length ? i2.length : t5;
            if (i2.copy(e4, e4.length - t5, 0, o2), (t5 -= o2) == 0) {
              o2 === i2.length ? (++n2, r4.next ? this.head = r4.next : this.head = this.tail = null) : (this.head = r4, r4.data = i2.slice(o2));
              break;
            }
            ++n2;
          }
          return this.length -= n2, e4;
        } }, { key: l, value: function(t5, e4) {
          return f(this, o(o({}, e4), {}, { depth: 0, customInspect: false }));
        } }]) && s(e3.prototype, r3), Object.defineProperty(e3, "prototype", { writable: false }), t4;
      }();
    }, 6222: (t3) => {
      function e2(t4, e3) {
        n(t4, e3), r2(t4);
      }
      function r2(t4) {
        t4._writableState && !t4._writableState.emitClose || t4._readableState && !t4._readableState.emitClose || t4.emit("close");
      }
      function n(t4, e3) {
        t4.emit("error", e3);
      }
      t3.exports = { destroy: function(t4, i) {
        var o = this, a = this._readableState && this._readableState.destroyed, s = this._writableState && this._writableState.destroyed;
        return a || s ? (i ? i(t4) : t4 && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = true, { env: {} }.nextTick(n, this, t4)) : { env: {} }.nextTick(n, this, t4)), this) : (this._readableState && (this._readableState.destroyed = true), this._writableState && (this._writableState.destroyed = true), this._destroy(t4 || null, function(t5) {
          !i && t5 ? o._writableState ? o._writableState.errorEmitted ? { env: {} }.nextTick(r2, o) : (o._writableState.errorEmitted = true, { env: {} }.nextTick(e2, o, t5)) : { env: {} }.nextTick(e2, o, t5) : i ? ({ env: {} }.nextTick(r2, o), i(t5)) : { env: {} }.nextTick(r2, o);
        }), this);
      }, undestroy: function() {
        this._readableState && (this._readableState.destroyed = false, this._readableState.reading = false, this._readableState.ended = false, this._readableState.endEmitted = false), this._writableState && (this._writableState.destroyed = false, this._writableState.ended = false, this._writableState.ending = false, this._writableState.finalCalled = false, this._writableState.prefinished = false, this._writableState.finished = false, this._writableState.errorEmitted = false);
      }, errorOrDestroy: function(t4, e3) {
        var { _readableState: r3, _writableState: n2 } = t4;
        r3 && r3.autoDestroy || n2 && n2.autoDestroy ? t4.destroy(e3) : t4.emit("error", e3);
      } };
    }, 8500: (t3, e2, r2) => {
      var n = r2(198).F.ERR_STREAM_PREMATURE_CLOSE;
      function i() {
      }
      t3.exports = function t(e3, r3, o) {
        if (typeof r3 == "function")
          return t(e3, null, r3);
        r3 || (r3 = {}), o = function(t4) {
          var e4 = false;
          return function() {
            if (!e4) {
              e4 = true;
              for (var r4 = arguments.length, n2 = new Array(r4), i2 = 0;i2 < r4; i2++)
                n2[i2] = arguments[i2];
              t4.apply(this, n2);
            }
          };
        }(o || i);
        var a = r3.readable || r3.readable !== false && e3.readable, s = r3.writable || r3.writable !== false && e3.writable, c = function() {
          e3.writable || f();
        }, u = e3._writableState && e3._writableState.finished, f = function() {
          s = false, u = true, a || o.call(e3);
        }, l = e3._readableState && e3._readableState.endEmitted, h = function() {
          a = false, l = true, s || o.call(e3);
        }, p = function(t4) {
          o.call(e3, t4);
        }, d = function() {
          var t4;
          return a && !l ? (e3._readableState && e3._readableState.ended || (t4 = new n), o.call(e3, t4)) : s && !u ? (e3._writableState && e3._writableState.ended || (t4 = new n), o.call(e3, t4)) : undefined;
        }, y = function() {
          e3.req.on("finish", f);
        };
        return function(t4) {
          return t4.setHeader && typeof t4.abort == "function";
        }(e3) ? (e3.on("complete", f), e3.on("abort", d), e3.req ? y() : e3.on("request", y)) : s && !e3._writableState && (e3.on("end", c), e3.on("close", c)), e3.on("end", h), e3.on("finish", f), r3.error !== false && e3.on("error", p), e3.on("close", d), function() {
          e3.removeListener("complete", f), e3.removeListener("abort", d), e3.removeListener("request", y), e3.req && e3.req.removeListener("finish", f), e3.removeListener("end", c), e3.removeListener("close", c), e3.removeListener("finish", f), e3.removeListener("end", h), e3.removeListener("error", p), e3.removeListener("close", d);
        };
      };
    }, 9271: (t3) => {
      t3.exports = function() {
        throw new Error("Readable.from is not available in the browser");
      };
    }, 1144: (t3, e2, r2) => {
      var n, i = r2(198).F, o = i.ERR_MISSING_ARGS, a = i.ERR_STREAM_DESTROYED;
      function s(t4) {
        if (t4)
          throw t4;
      }
      function c(t4) {
        t4();
      }
      function u(t4, e3) {
        return t4.pipe(e3);
      }
      t3.exports = function() {
        for (var t4 = arguments.length, e3 = new Array(t4), i2 = 0;i2 < t4; i2++)
          e3[i2] = arguments[i2];
        var f, l = function(t5) {
          return t5.length ? typeof t5[t5.length - 1] != "function" ? s : t5.pop() : s;
        }(e3);
        if (Array.isArray(e3[0]) && (e3 = e3[0]), e3.length < 2)
          throw new o("streams");
        var h = e3.map(function(t5, i3) {
          var o2 = i3 < e3.length - 1;
          return function(t6, e4, i4, o3) {
            o3 = function(t7) {
              var e5 = false;
              return function() {
                e5 || (e5 = true, t7.apply(undefined, arguments));
              };
            }(o3);
            var s2 = false;
            t6.on("close", function() {
              s2 = true;
            }), n === undefined && (n = r2(8500)), n(t6, { readable: e4, writable: i4 }, function(t7) {
              if (t7)
                return o3(t7);
              s2 = true, o3();
            });
            var c2 = false;
            return function(e5) {
              if (!s2 && !c2)
                return c2 = true, function(t7) {
                  return t7.setHeader && typeof t7.abort == "function";
                }(t6) ? t6.abort() : typeof t6.destroy == "function" ? t6.destroy() : void o3(e5 || new a("pipe"));
            };
          }(t5, o2, i3 > 0, function(t6) {
            f || (f = t6), t6 && h.forEach(c), o2 || (h.forEach(c), l(f));
          });
        });
        return e3.reduce(u);
      };
    }, 9681: (t3, e2, r2) => {
      var n = r2(198).F.ERR_INVALID_OPT_VALUE;
      t3.exports = { getHighWaterMark: function(t4, e3, r3, i) {
        var o = function(t5, e4, r4) {
          return t5.highWaterMark != null ? t5.highWaterMark : e4 ? t5[r4] : null;
        }(e3, i, r3);
        if (o != null) {
          if (!isFinite(o) || Math.floor(o) !== o || o < 0)
            throw new n(i ? r3 : "highWaterMark", o);
          return Math.floor(o);
        }
        return t4.objectMode ? 16 : 16384;
      } };
    }, 6871: (t3, e2, r2) => {
      t3.exports = r2(3550).EventEmitter;
    }, 136: (t3, e2, r2) => {
      var n = r2(2).Buffer, i = n.isEncoding || function(t4) {
        switch ((t4 = "" + t4) && t4.toLowerCase()) {
          case "hex":
          case "utf8":
          case "utf-8":
          case "ascii":
          case "binary":
          case "base64":
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
          case "raw":
            return true;
          default:
            return false;
        }
      };
      function o(t4) {
        var e3;
        switch (this.encoding = function(t5) {
          var e4 = function(t6) {
            if (!t6)
              return "utf8";
            for (var e5;; )
              switch (t6) {
                case "utf8":
                case "utf-8":
                  return "utf8";
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return "utf16le";
                case "latin1":
                case "binary":
                  return "latin1";
                case "base64":
                case "ascii":
                case "hex":
                  return t6;
                default:
                  if (e5)
                    return;
                  t6 = ("" + t6).toLowerCase(), e5 = true;
              }
          }(t5);
          if (typeof e4 != "string" && (n.isEncoding === i || !i(t5)))
            throw new Error("Unknown encoding: " + t5);
          return e4 || t5;
        }(t4), this.encoding) {
          case "utf16le":
            this.text = c, this.end = u, e3 = 4;
            break;
          case "utf8":
            this.fillLast = s, e3 = 4;
            break;
          case "base64":
            this.text = f, this.end = l, e3 = 3;
            break;
          default:
            return this.write = h, void (this.end = p);
        }
        this.lastNeed = 0, this.lastTotal = 0, this.lastChar = n.allocUnsafe(e3);
      }
      function a(t4) {
        return t4 <= 127 ? 0 : t4 >> 5 == 6 ? 2 : t4 >> 4 == 14 ? 3 : t4 >> 3 == 30 ? 4 : t4 >> 6 == 2 ? -1 : -2;
      }
      function s(t4) {
        var e3 = this.lastTotal - this.lastNeed, r3 = function(t5, e4) {
          if ((192 & e4[0]) != 128)
            return t5.lastNeed = 0, "\uFFFD";
          if (t5.lastNeed > 1 && e4.length > 1) {
            if ((192 & e4[1]) != 128)
              return t5.lastNeed = 1, "\uFFFD";
            if (t5.lastNeed > 2 && e4.length > 2 && (192 & e4[2]) != 128)
              return t5.lastNeed = 2, "\uFFFD";
          }
        }(this, t4);
        return r3 !== undefined ? r3 : this.lastNeed <= t4.length ? (t4.copy(this.lastChar, e3, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (t4.copy(this.lastChar, e3, 0, t4.length), void (this.lastNeed -= t4.length));
      }
      function c(t4, e3) {
        if ((t4.length - e3) % 2 == 0) {
          var r3 = t4.toString("utf16le", e3);
          if (r3) {
            var n2 = r3.charCodeAt(r3.length - 1);
            if (n2 >= 55296 && n2 <= 56319)
              return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = t4[t4.length - 2], this.lastChar[1] = t4[t4.length - 1], r3.slice(0, -1);
          }
          return r3;
        }
        return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = t4[t4.length - 1], t4.toString("utf16le", e3, t4.length - 1);
      }
      function u(t4) {
        var e3 = t4 && t4.length ? this.write(t4) : "";
        if (this.lastNeed) {
          var r3 = this.lastTotal - this.lastNeed;
          return e3 + this.lastChar.toString("utf16le", 0, r3);
        }
        return e3;
      }
      function f(t4, e3) {
        var r3 = (t4.length - e3) % 3;
        return r3 === 0 ? t4.toString("base64", e3) : (this.lastNeed = 3 - r3, this.lastTotal = 3, r3 === 1 ? this.lastChar[0] = t4[t4.length - 1] : (this.lastChar[0] = t4[t4.length - 2], this.lastChar[1] = t4[t4.length - 1]), t4.toString("base64", e3, t4.length - r3));
      }
      function l(t4) {
        var e3 = t4 && t4.length ? this.write(t4) : "";
        return this.lastNeed ? e3 + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : e3;
      }
      function h(t4) {
        return t4.toString(this.encoding);
      }
      function p(t4) {
        return t4 && t4.length ? this.write(t4) : "";
      }
      e2.I = o, o.prototype.write = function(t4) {
        if (t4.length === 0)
          return "";
        var e3, r3;
        if (this.lastNeed) {
          if ((e3 = this.fillLast(t4)) === undefined)
            return "";
          r3 = this.lastNeed, this.lastNeed = 0;
        } else
          r3 = 0;
        return r3 < t4.length ? e3 ? e3 + this.text(t4, r3) : this.text(t4, r3) : e3 || "";
      }, o.prototype.end = function(t4) {
        var e3 = t4 && t4.length ? this.write(t4) : "";
        return this.lastNeed ? e3 + "\uFFFD" : e3;
      }, o.prototype.text = function(t4, e3) {
        var r3 = function(t5, e4, r4) {
          var n3 = e4.length - 1;
          if (n3 < r4)
            return 0;
          var i2 = a(e4[n3]);
          return i2 >= 0 ? (i2 > 0 && (t5.lastNeed = i2 - 1), i2) : --n3 < r4 || i2 === -2 ? 0 : (i2 = a(e4[n3])) >= 0 ? (i2 > 0 && (t5.lastNeed = i2 - 2), i2) : --n3 < r4 || i2 === -2 ? 0 : (i2 = a(e4[n3])) >= 0 ? (i2 > 0 && (i2 === 2 ? i2 = 0 : t5.lastNeed = i2 - 3), i2) : 0;
        }(this, t4, e3);
        if (!this.lastNeed)
          return t4.toString("utf8", e3);
        this.lastTotal = r3;
        var n2 = t4.length - (r3 - this.lastNeed);
        return t4.copy(this.lastChar, 0, n2), t4.toString("utf8", e3, n2);
      }, o.prototype.fillLast = function(t4) {
        if (this.lastNeed <= t4.length)
          return t4.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
        t4.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, t4.length), this.lastNeed -= t4.length;
      };
    }, 2: (t3, e2, r2) => {
      var n = r2(5832), i = n.Buffer;
      function o(t4, e3) {
        for (var r3 in t4)
          e3[r3] = t4[r3];
      }
      function a(t4, e3, r3) {
        return i(t4, e3, r3);
      }
      i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? t3.exports = n : (o(n, e2), e2.Buffer = a), o(i, a), a.from = function(t4, e3, r3) {
        if (typeof t4 == "number")
          throw new TypeError("Argument must not be a number");
        return i(t4, e3, r3);
      }, a.alloc = function(t4, e3, r3) {
        if (typeof t4 != "number")
          throw new TypeError("Argument must be a number");
        var n2 = i(t4);
        return e3 !== undefined ? typeof r3 == "string" ? n2.fill(e3, r3) : n2.fill(e3) : n2.fill(0), n2;
      }, a.allocUnsafe = function(t4) {
        if (typeof t4 != "number")
          throw new TypeError("Argument must be a number");
        return i(t4);
      }, a.allocUnsafeSlow = function(t4) {
        if (typeof t4 != "number")
          throw new TypeError("Argument must be a number");
        return n.SlowBuffer(t4);
      };
    }, 3340: (t3, e2, r2) => {
      function n(t4) {
        try {
          if (!r2.g.localStorage)
            return false;
        } catch (t5) {
          return false;
        }
        var e3 = r2.g.localStorage[t4];
        return e3 != null && String(e3).toLowerCase() === "true";
      }
      t3.exports = function(t4, e3) {
        if (n("noDeprecation"))
          return t4;
        var r3 = false;
        return function() {
          if (!r3) {
            if (n("throwDeprecation"))
              throw new Error(e3);
            n("traceDeprecation") ? console.trace(e3) : console.warn(e3), r3 = true;
          }
          return t4.apply(this, arguments);
        };
      };
    }, 7944: (t3) => {
      function e2(t4) {
        return e2 = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, e2(t4);
      }
      t3.exports = function(t4) {
        return t4 && e2(t4) === "object" && typeof t4.copy == "function" && typeof t4.fill == "function" && typeof t4.readUInt8 == "function";
      };
    }, 7595: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      var i = r2(5899), o = r2(1905), a = r2(9834), s = r2(7911);
      function c(t4) {
        return t4.call.bind(t4);
      }
      var u = typeof BigInt != "undefined", f = typeof Symbol != "undefined", l = c(Object.prototype.toString), h = c(Number.prototype.valueOf), p = c(String.prototype.valueOf), d = c(Boolean.prototype.valueOf);
      if (u)
        var y = c(BigInt.prototype.valueOf);
      if (f)
        var b = c(Symbol.prototype.valueOf);
      function m(t4, e3) {
        if (n(t4) !== "object")
          return false;
        try {
          return e3(t4), true;
        } catch (t5) {
          return false;
        }
      }
      function v(t4) {
        return l(t4) === "[object Map]";
      }
      function g(t4) {
        return l(t4) === "[object Set]";
      }
      function _(t4) {
        return l(t4) === "[object WeakMap]";
      }
      function w(t4) {
        return l(t4) === "[object WeakSet]";
      }
      function S(t4) {
        return l(t4) === "[object ArrayBuffer]";
      }
      function O(t4) {
        return typeof ArrayBuffer != "undefined" && (S.working ? S(t4) : t4 instanceof ArrayBuffer);
      }
      function j(t4) {
        return l(t4) === "[object DataView]";
      }
      function $(t4) {
        return typeof DataView != "undefined" && (j.working ? j(t4) : t4 instanceof DataView);
      }
      e2.isArgumentsObject = i, e2.isGeneratorFunction = o, e2.isTypedArray = s, e2.isPromise = function(t4) {
        return typeof Promise != "undefined" && t4 instanceof Promise || t4 !== null && n(t4) === "object" && typeof t4.then == "function" && typeof t4.catch == "function";
      }, e2.isArrayBufferView = function(t4) {
        return typeof ArrayBuffer != "undefined" && ArrayBuffer.isView ? ArrayBuffer.isView(t4) : s(t4) || $(t4);
      }, e2.isUint8Array = function(t4) {
        return a(t4) === "Uint8Array";
      }, e2.isUint8ClampedArray = function(t4) {
        return a(t4) === "Uint8ClampedArray";
      }, e2.isUint16Array = function(t4) {
        return a(t4) === "Uint16Array";
      }, e2.isUint32Array = function(t4) {
        return a(t4) === "Uint32Array";
      }, e2.isInt8Array = function(t4) {
        return a(t4) === "Int8Array";
      }, e2.isInt16Array = function(t4) {
        return a(t4) === "Int16Array";
      }, e2.isInt32Array = function(t4) {
        return a(t4) === "Int32Array";
      }, e2.isFloat32Array = function(t4) {
        return a(t4) === "Float32Array";
      }, e2.isFloat64Array = function(t4) {
        return a(t4) === "Float64Array";
      }, e2.isBigInt64Array = function(t4) {
        return a(t4) === "BigInt64Array";
      }, e2.isBigUint64Array = function(t4) {
        return a(t4) === "BigUint64Array";
      }, v.working = typeof Map != "undefined" && v(new Map), e2.isMap = function(t4) {
        return typeof Map != "undefined" && (v.working ? v(t4) : t4 instanceof Map);
      }, g.working = typeof Set != "undefined" && g(new Set), e2.isSet = function(t4) {
        return typeof Set != "undefined" && (g.working ? g(t4) : t4 instanceof Set);
      }, _.working = typeof WeakMap != "undefined" && _(new WeakMap), e2.isWeakMap = function(t4) {
        return typeof WeakMap != "undefined" && (_.working ? _(t4) : t4 instanceof WeakMap);
      }, w.working = typeof WeakSet != "undefined" && w(new WeakSet), e2.isWeakSet = function(t4) {
        return w(t4);
      }, S.working = typeof ArrayBuffer != "undefined" && S(new ArrayBuffer), e2.isArrayBuffer = O, j.working = typeof ArrayBuffer != "undefined" && typeof DataView != "undefined" && j(new DataView(new ArrayBuffer(1), 0, 1)), e2.isDataView = $;
      var A = typeof SharedArrayBuffer != "undefined" ? SharedArrayBuffer : undefined;
      function E(t4) {
        return l(t4) === "[object SharedArrayBuffer]";
      }
      function x(t4) {
        return A !== undefined && (E.working === undefined && (E.working = E(new A)), E.working ? E(t4) : t4 instanceof A);
      }
      function P(t4) {
        return m(t4, h);
      }
      function k(t4) {
        return m(t4, p);
      }
      function M(t4) {
        return m(t4, d);
      }
      function I(t4) {
        return u && m(t4, y);
      }
      function T(t4) {
        return f && m(t4, b);
      }
      e2.isSharedArrayBuffer = x, e2.isAsyncFunction = function(t4) {
        return l(t4) === "[object AsyncFunction]";
      }, e2.isMapIterator = function(t4) {
        return l(t4) === "[object Map Iterator]";
      }, e2.isSetIterator = function(t4) {
        return l(t4) === "[object Set Iterator]";
      }, e2.isGeneratorObject = function(t4) {
        return l(t4) === "[object Generator]";
      }, e2.isWebAssemblyCompiledModule = function(t4) {
        return l(t4) === "[object WebAssembly.Module]";
      }, e2.isNumberObject = P, e2.isStringObject = k, e2.isBooleanObject = M, e2.isBigIntObject = I, e2.isSymbolObject = T, e2.isBoxedPrimitive = function(t4) {
        return P(t4) || k(t4) || M(t4) || I(t4) || T(t4);
      }, e2.isAnyArrayBuffer = function(t4) {
        return typeof Uint8Array != "undefined" && (O(t4) || x(t4));
      }, ["isProxy", "isExternal", "isModuleNamespaceObject"].forEach(function(t4) {
        Object.defineProperty(e2, t4, { enumerable: false, value: function() {
          throw new Error(t4 + " is not supported in userland");
        } });
      });
    }, 7352: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      var i = Object.getOwnPropertyDescriptors || function(t4) {
        for (var e3 = Object.keys(t4), r3 = {}, n2 = 0;n2 < e3.length; n2++)
          r3[e3[n2]] = Object.getOwnPropertyDescriptor(t4, e3[n2]);
        return r3;
      }, o = /%[sdj%]/g;
      e2.format = function(t4) {
        if (!g(t4)) {
          for (var e3 = [], r3 = 0;r3 < arguments.length; r3++)
            e3.push(u(arguments[r3]));
          return e3.join(" ");
        }
        r3 = 1;
        for (var n2 = arguments, i2 = n2.length, a2 = String(t4).replace(o, function(t5) {
          if (t5 === "%%")
            return "%";
          if (r3 >= i2)
            return t5;
          switch (t5) {
            case "%s":
              return String(n2[r3++]);
            case "%d":
              return Number(n2[r3++]);
            case "%j":
              try {
                return JSON.stringify(n2[r3++]);
              } catch (t6) {
                return "[Circular]";
              }
            default:
              return t5;
          }
        }), s2 = n2[r3];r3 < i2; s2 = n2[++r3])
          m(s2) || !S(s2) ? a2 += " " + s2 : a2 += " " + u(s2);
        return a2;
      }, e2.deprecate = function(t4, e3) {
        if ({ env: {} }.noDeprecation === true)
          return t4;
        var r3 = false;
        return function() {
          if (!r3) {
            if ({ env: {} }.throwDeprecation)
              throw new Error(e3);
            !{ env: {} }.traceDeprecation ? console.error(e3) : console.trace(e3), r3 = true;
          }
          return t4.apply(this, arguments);
        };
      };
      var a = {}, s = /^$/;
      if ({}.NODE_DEBUG) {
        var c = {}.NODE_DEBUG;
        c = c.replace(/[|\\{}()[\]^$+?.]/g, "\\$&").replace(/\*/g, ".*").replace(/,/g, "$|^").toUpperCase(), s = new RegExp("^" + c + "$", "i");
      }
      function u(t4, r3) {
        var n2 = { seen: [], stylize: l };
        return arguments.length >= 3 && (n2.depth = arguments[2]), arguments.length >= 4 && (n2.colors = arguments[3]), b(r3) ? n2.showHidden = r3 : r3 && e2._extend(n2, r3), _(n2.showHidden) && (n2.showHidden = false), _(n2.depth) && (n2.depth = 2), _(n2.colors) && (n2.colors = false), _(n2.customInspect) && (n2.customInspect = true), n2.colors && (n2.stylize = f), h(n2, t4, n2.depth);
      }
      function f(t4, e3) {
        var r3 = u.styles[e3];
        return r3 ? "[" + u.colors[r3][0] + "m" + t4 + "[" + u.colors[r3][1] + "m" : t4;
      }
      function l(t4, e3) {
        return t4;
      }
      function h(t4, r3, n2) {
        if (t4.customInspect && r3 && $(r3.inspect) && r3.inspect !== e2.inspect && (!r3.constructor || r3.constructor.prototype !== r3)) {
          var i2 = r3.inspect(n2, t4);
          return g(i2) || (i2 = h(t4, i2, n2)), i2;
        }
        var o2 = function(t5, e3) {
          if (_(e3))
            return t5.stylize("undefined", "undefined");
          if (g(e3)) {
            var r4 = "'" + JSON.stringify(e3).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
            return t5.stylize(r4, "string");
          }
          return v(e3) ? t5.stylize("" + e3, "number") : b(e3) ? t5.stylize("" + e3, "boolean") : m(e3) ? t5.stylize("null", "null") : undefined;
        }(t4, r3);
        if (o2)
          return o2;
        var a2 = Object.keys(r3), s2 = function(t5) {
          var e3 = {};
          return t5.forEach(function(t6, r4) {
            e3[t6] = true;
          }), e3;
        }(a2);
        if (t4.showHidden && (a2 = Object.getOwnPropertyNames(r3)), j(r3) && (a2.indexOf("message") >= 0 || a2.indexOf("description") >= 0))
          return p(r3);
        if (a2.length === 0) {
          if ($(r3)) {
            var c2 = r3.name ? ": " + r3.name : "";
            return t4.stylize("[Function" + c2 + "]", "special");
          }
          if (w(r3))
            return t4.stylize(RegExp.prototype.toString.call(r3), "regexp");
          if (O(r3))
            return t4.stylize(Date.prototype.toString.call(r3), "date");
          if (j(r3))
            return p(r3);
        }
        var u2, f2 = "", l2 = false, S2 = ["{", "}"];
        return y(r3) && (l2 = true, S2 = ["[", "]"]), $(r3) && (f2 = " [Function" + (r3.name ? ": " + r3.name : "") + "]"), w(r3) && (f2 = " " + RegExp.prototype.toString.call(r3)), O(r3) && (f2 = " " + Date.prototype.toUTCString.call(r3)), j(r3) && (f2 = " " + p(r3)), a2.length !== 0 || l2 && r3.length != 0 ? n2 < 0 ? w(r3) ? t4.stylize(RegExp.prototype.toString.call(r3), "regexp") : t4.stylize("[Object]", "special") : (t4.seen.push(r3), u2 = l2 ? function(t5, e3, r4, n3, i3) {
          for (var o3 = [], a3 = 0, s3 = e3.length;a3 < s3; ++a3)
            P(e3, String(a3)) ? o3.push(d(t5, e3, r4, n3, String(a3), true)) : o3.push("");
          return i3.forEach(function(i4) {
            i4.match(/^\d+$/) || o3.push(d(t5, e3, r4, n3, i4, true));
          }), o3;
        }(t4, r3, n2, s2, a2) : a2.map(function(e3) {
          return d(t4, r3, n2, s2, e3, l2);
        }), t4.seen.pop(), function(t5, e3, r4) {
          return t5.reduce(function(t6, e4) {
            return e4.indexOf("\n"), t6 + e4.replace(/\u001b\[\d\d?m/g, "").length + 1;
          }, 0) > 60 ? r4[0] + (e3 === "" ? "" : e3 + "\n ") + " " + t5.join(",\n  ") + " " + r4[1] : r4[0] + e3 + " " + t5.join(", ") + " " + r4[1];
        }(u2, f2, S2)) : S2[0] + f2 + S2[1];
      }
      function p(t4) {
        return "[" + Error.prototype.toString.call(t4) + "]";
      }
      function d(t4, e3, r3, n2, i2, o2) {
        var a2, s2, c2;
        if ((c2 = Object.getOwnPropertyDescriptor(e3, i2) || { value: e3[i2] }).get ? s2 = c2.set ? t4.stylize("[Getter/Setter]", "special") : t4.stylize("[Getter]", "special") : c2.set && (s2 = t4.stylize("[Setter]", "special")), P(n2, i2) || (a2 = "[" + i2 + "]"), s2 || (t4.seen.indexOf(c2.value) < 0 ? (s2 = m(r3) ? h(t4, c2.value, null) : h(t4, c2.value, r3 - 1)).indexOf("\n") > -1 && (s2 = o2 ? s2.split("\n").map(function(t5) {
          return "  " + t5;
        }).join("\n").slice(2) : "\n" + s2.split("\n").map(function(t5) {
          return "   " + t5;
        }).join("\n")) : s2 = t4.stylize("[Circular]", "special")), _(a2)) {
          if (o2 && i2.match(/^\d+$/))
            return s2;
          (a2 = JSON.stringify("" + i2)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (a2 = a2.slice(1, -1), a2 = t4.stylize(a2, "name")) : (a2 = a2.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), a2 = t4.stylize(a2, "string"));
        }
        return a2 + ": " + s2;
      }
      function y(t4) {
        return Array.isArray(t4);
      }
      function b(t4) {
        return typeof t4 == "boolean";
      }
      function m(t4) {
        return t4 === null;
      }
      function v(t4) {
        return typeof t4 == "number";
      }
      function g(t4) {
        return typeof t4 == "string";
      }
      function _(t4) {
        return t4 === undefined;
      }
      function w(t4) {
        return S(t4) && A(t4) === "[object RegExp]";
      }
      function S(t4) {
        return n(t4) === "object" && t4 !== null;
      }
      function O(t4) {
        return S(t4) && A(t4) === "[object Date]";
      }
      function j(t4) {
        return S(t4) && (A(t4) === "[object Error]" || t4 instanceof Error);
      }
      function $(t4) {
        return typeof t4 == "function";
      }
      function A(t4) {
        return Object.prototype.toString.call(t4);
      }
      function E(t4) {
        return t4 < 10 ? "0" + t4.toString(10) : t4.toString(10);
      }
      e2.debuglog = function(t4) {
        if (t4 = t4.toUpperCase(), !a[t4])
          if (s.test(t4)) {
            var r3 = { env: {} }.pid;
            a[t4] = function() {
              var n2 = e2.format.apply(e2, arguments);
              console.error("%s %d: %s", t4, r3, n2);
            };
          } else
            a[t4] = function() {
            };
        return a[t4];
      }, e2.inspect = u, u.colors = { bold: [1, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], white: [37, 39], grey: [90, 39], black: [30, 39], blue: [34, 39], cyan: [36, 39], green: [32, 39], magenta: [35, 39], red: [31, 39], yellow: [33, 39] }, u.styles = { special: "cyan", number: "yellow", boolean: "yellow", undefined: "grey", null: "bold", string: "green", date: "magenta", regexp: "red" }, e2.types = r2(7595), e2.isArray = y, e2.isBoolean = b, e2.isNull = m, e2.isNullOrUndefined = function(t4) {
        return t4 == null;
      }, e2.isNumber = v, e2.isString = g, e2.isSymbol = function(t4) {
        return n(t4) === "symbol";
      }, e2.isUndefined = _, e2.isRegExp = w, e2.types.isRegExp = w, e2.isObject = S, e2.isDate = O, e2.types.isDate = O, e2.isError = j, e2.types.isNativeError = j, e2.isFunction = $, e2.isPrimitive = function(t4) {
        return t4 === null || typeof t4 == "boolean" || typeof t4 == "number" || typeof t4 == "string" || n(t4) === "symbol" || t4 === undefined;
      }, e2.isBuffer = r2(7944);
      var x = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
      function P(t4, e3) {
        return Object.prototype.hasOwnProperty.call(t4, e3);
      }
      e2.log = function() {
        var t4, r3;
        console.log("%s - %s", (r3 = [E((t4 = new Date).getHours()), E(t4.getMinutes()), E(t4.getSeconds())].join(":"), [t4.getDate(), x[t4.getMonth()], r3].join(" ")), e2.format.apply(e2, arguments));
      }, e2.inherits = r2(1679), e2._extend = function(t4, e3) {
        if (!e3 || !S(e3))
          return t4;
        for (var r3 = Object.keys(e3), n2 = r3.length;n2--; )
          t4[r3[n2]] = e3[r3[n2]];
        return t4;
      };
      var k = typeof Symbol != "undefined" ? Symbol("util.promisify.custom") : undefined;
      function M(t4, e3) {
        if (!t4) {
          var r3 = new Error("Promise was rejected with a falsy value");
          r3.reason = t4, t4 = r3;
        }
        return e3(t4);
      }
      e2.promisify = function(t4) {
        if (typeof t4 != "function")
          throw new TypeError('The "original" argument must be of type Function');
        if (k && t4[k]) {
          var e3;
          if (typeof (e3 = t4[k]) != "function")
            throw new TypeError('The "util.promisify.custom" argument must be of type Function');
          return Object.defineProperty(e3, k, { value: e3, enumerable: false, writable: false, configurable: true }), e3;
        }
        function e3() {
          for (var e4, r3, n2 = new Promise(function(t5, n3) {
            e4 = t5, r3 = n3;
          }), i2 = [], o2 = 0;o2 < arguments.length; o2++)
            i2.push(arguments[o2]);
          i2.push(function(t5, n3) {
            t5 ? r3(t5) : e4(n3);
          });
          try {
            t4.apply(this, i2);
          } catch (t5) {
            r3(t5);
          }
          return n2;
        }
        return Object.setPrototypeOf(e3, Object.getPrototypeOf(t4)), k && Object.defineProperty(e3, k, { value: e3, enumerable: false, writable: false, configurable: true }), Object.defineProperties(e3, i(t4));
      }, e2.promisify.custom = k, e2.callbackify = function(t4) {
        if (typeof t4 != "function")
          throw new TypeError('The "original" argument must be of type Function');
        function e3() {
          for (var e4 = [], r3 = 0;r3 < arguments.length; r3++)
            e4.push(arguments[r3]);
          var n2 = e4.pop();
          if (typeof n2 != "function")
            throw new TypeError("The last argument must be of type Function");
          var i2 = this, o2 = function() {
            return n2.apply(i2, arguments);
          };
          t4.apply(this, e4).then(function(t5) {
            ({ env: {} }).nextTick(o2.bind(null, null, t5));
          }, function(t5) {
            ({ env: {} }).nextTick(M.bind(null, t5, o2));
          });
        }
        return Object.setPrototypeOf(e3, Object.getPrototypeOf(t4)), Object.defineProperties(e3, i(t4)), e3;
      };
    }, 9834: (t3, e2, r2) => {
      function n(t4) {
        return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t5) {
          return typeof t5;
        } : function(t5) {
          return t5 && typeof Symbol == "function" && t5.constructor === Symbol && t5 !== Symbol.prototype ? "symbol" : typeof t5;
        }, n(t4);
      }
      var i = r2(3777), o = r2(3426), a = r2(9122), s = r2(9466), c = r2(1464), u = s("Object.prototype.toString"), f = r2(953)(), l = typeof globalThis == "undefined" ? r2.g : globalThis, h = o(), p = s("String.prototype.slice"), d = Object.getPrototypeOf, y = s("Array.prototype.indexOf", true) || function(t4, e3) {
        for (var r3 = 0;r3 < t4.length; r3 += 1)
          if (t4[r3] === e3)
            return r3;
        return -1;
      }, b = { __proto__: null };
      i(h, f && c && d ? function(t4) {
        var e3 = new l[t4];
        if (Symbol.toStringTag in e3) {
          var r3 = d(e3), n2 = c(r3, Symbol.toStringTag);
          if (!n2) {
            var i2 = d(r3);
            n2 = c(i2, Symbol.toStringTag);
          }
          b["$" + t4] = a(n2.get);
        }
      } : function(t4) {
        var e3 = new l[t4], r3 = e3.slice || e3.set;
        r3 && (b["$" + t4] = a(r3));
      }), t3.exports = function(t4) {
        if (!t4 || n(t4) !== "object")
          return false;
        if (!f) {
          var e3 = p(u(t4), 8, -1);
          return y(h, e3) > -1 ? e3 : e3 === "Object" && function(t5) {
            var e4 = false;
            return i(b, function(r3, n2) {
              if (!e4)
                try {
                  r3(t5), e4 = p(n2, 1);
                } catch (t6) {
                }
            }), e4;
          }(t4);
        }
        return c ? function(t5) {
          var e4 = false;
          return i(b, function(r3, n2) {
            if (!e4)
              try {
                "$" + r3(t5) === n2 && (e4 = p(n2, 1));
              } catch (t6) {
              }
          }), e4;
        }(t4) : null;
      };
    }, 7790: () => {
    }, 3776: () => {
    }, 5340: () => {
    }, 9838: () => {
    }, 3779: () => {
    }, 7199: () => {
    }, 3426: (t3, e2, r2) => {
      var n = r2(2653), i = typeof globalThis == "undefined" ? r2.g : globalThis;
      t3.exports = function() {
        for (var t4 = [], e3 = 0;e3 < n.length; e3++)
          typeof i[n[e3]] == "function" && (t4[t4.length] = n[e3]);
        return t4;
      };
    }, 3633: (t3, e2, r2) => {
      var n = r2(5832).Buffer;
      function i(t4) {
        return ["[object ArrayBuffer]", "[object SharedArrayBuffer]"].includes(Object.prototype.toString.call(t4));
      }
      function o(t4) {
        return Object.prototype.toString.call(t4) === "[object Uint8Array]";
      }
      function a(t4) {
        return Object.prototype.toString.call(t4) === "[object RegExp]";
      }
      function s(t4) {
        return Object.prototype.toString.call(t4) === "[object Map]";
      }
      function c(t4) {
        return Object.prototype.toString.call(t4) === "[object Date]";
      }
      function u(t4, e3) {
        return JSON.stringify(t4, (t5, e4) => typeof e4 == "bigint" ? { $numberLong: `${e4}` } : s(e4) ? Object.fromEntries(e4) : e4);
      }
      const f = 2147483647, l = -2147483648, h = Math.pow(2, 63) - 1, p = -Math.pow(2, 63), d = Math.pow(2, 53), y = -Math.pow(2, 53), b = Object.freeze({ double: 1, string: 2, object: 3, array: 4, binData: 5, undefined: 6, objectId: 7, bool: 8, date: 9, null: 10, regex: 11, dbPointer: 12, javascript: 13, symbol: 14, javascriptWithScope: 15, int: 16, timestamp: 17, long: 18, decimal: 19, minKey: -1, maxKey: 127 });

      class m extends Error {
        get bsonError() {
          return true;
        }
        get name() {
          return "BSONError";
        }
        constructor(t4, e3) {
          super(t4, e3);
        }
        static isBSONError(t4) {
          return t4 != null && typeof t4 == "object" && "bsonError" in t4 && t4.bsonError === true && "name" in t4 && "message" in t4 && "stack" in t4;
        }
      }

      class v extends m {
        get name() {
          return "BSONVersionError";
        }
        constructor() {
          super("Unsupported BSON version, bson types must be from bson 6.x.x");
        }
      }

      class g extends m {
        get name() {
          return "BSONRuntimeError";
        }
        constructor(t4) {
          super(t4);
        }
      }

      class _ extends m {
        get name() {
          return "BSONOffsetError";
        }
        constructor(t4, e3, r3) {
          super(`${t4}. offset: ${e3}`, r3), this.offset = e3;
        }
      }
      let w, S;
      function O(t4, e3, r3, n2) {
        if (n2) {
          w ??= new TextDecoder("utf8", { fatal: true });
          try {
            return w.decode(t4.subarray(e3, r3));
          } catch (t5) {
            throw new m("Invalid UTF-8 string in BSON document", { cause: t5 });
          }
        }
        return S ??= new TextDecoder("utf8", { fatal: false }), S.decode(t4.subarray(e3, r3));
      }
      function j(t4, e3, r3) {
        if (t4.length === 0)
          return "";
        const n2 = r3 - e3;
        if (n2 === 0)
          return "";
        if (n2 > 20)
          return null;
        if (n2 === 1 && t4[e3] < 128)
          return String.fromCharCode(t4[e3]);
        if (n2 === 2 && t4[e3] < 128 && t4[e3 + 1] < 128)
          return String.fromCharCode(t4[e3]) + String.fromCharCode(t4[e3 + 1]);
        if (n2 === 3 && t4[e3] < 128 && t4[e3 + 1] < 128 && t4[e3 + 2] < 128)
          return String.fromCharCode(t4[e3]) + String.fromCharCode(t4[e3 + 1]) + String.fromCharCode(t4[e3 + 2]);
        const i2 = [];
        for (let n3 = e3;n3 < r3; n3++) {
          const e4 = t4[n3];
          if (e4 > 127)
            return null;
          i2.push(e4);
        }
        return String.fromCharCode(...i2);
      }
      function $(t4) {
        return E.fromNumberArray(Array.from({ length: t4 }, () => Math.floor(256 * Math.random())));
      }
      const A = (() => {
        try {
          return r2(8872).po;
        } catch {
          return $;
        }
      })(), E = { toLocalBufferType(t4) {
        if (n.isBuffer(t4))
          return t4;
        if (ArrayBuffer.isView(t4))
          return n.from(t4.buffer, t4.byteOffset, t4.byteLength);
        const e3 = t4?.[Symbol.toStringTag] ?? Object.prototype.toString.call(t4);
        if (e3 === "ArrayBuffer" || e3 === "SharedArrayBuffer" || e3 === "[object ArrayBuffer]" || e3 === "[object SharedArrayBuffer]")
          return n.from(t4);
        throw new m(`Cannot create Buffer from ${String(t4)}`);
      }, allocate: (t4) => n.alloc(t4), allocateUnsafe: (t4) => n.allocUnsafe(t4), equals: (t4, e3) => E.toLocalBufferType(t4).equals(e3), fromNumberArray: (t4) => n.from(t4), fromBase64: (t4) => n.from(t4, "base64"), toBase64: (t4) => E.toLocalBufferType(t4).toString("base64"), fromISO88591: (t4) => n.from(t4, "binary"), toISO88591: (t4) => E.toLocalBufferType(t4).toString("binary"), fromHex: (t4) => n.from(t4, "hex"), toHex: (t4) => E.toLocalBufferType(t4).toString("hex"), toUTF8(t4, e3, r3, n2) {
        const i2 = r3 - e3 <= 20 ? j(t4, e3, r3) : null;
        if (i2 != null)
          return i2;
        const o2 = E.toLocalBufferType(t4).toString("utf8", e3, r3);
        if (n2) {
          for (let n3 = 0;n3 < o2.length; n3++)
            if (o2.charCodeAt(n3) === 65533) {
              O(t4, e3, r3, true);
              break;
            }
        }
        return o2;
      }, utf8ByteLength: (t4) => n.byteLength(t4, "utf8"), encodeUTF8Into(t4, e3, r3) {
        const n2 = function(t5, e4, r4) {
          if (e4.length === 0)
            return 0;
          if (e4.length > 25)
            return null;
          if (t5.length - r4 < e4.length)
            return null;
          for (let n3 = 0, i2 = r4;n3 < e4.length; n3++, i2++) {
            const r5 = e4.charCodeAt(n3);
            if (r5 > 127)
              return null;
            t5[i2] = r5;
          }
          return e4.length;
        }(t4, e3, r3);
        return n2 != null ? n2 : E.toLocalBufferType(t4).write(e3, r3, undefined, "utf8");
      }, randomBytes: A };
      function x(t4) {
        if (t4 < 0)
          throw new RangeError(`The argument 'byteLength' is invalid. Received ${t4}`);
        return M.fromNumberArray(Array.from({ length: t4 }, () => Math.floor(256 * Math.random())));
      }
      const P = (() => {
        const { crypto: t4 } = globalThis;
        if (t4 != null && typeof t4.getRandomValues == "function")
          return (e3) => t4.getRandomValues(M.allocate(e3));
        if (function() {
          const { navigator: t5 } = globalThis;
          return typeof t5 == "object" && t5.product === "ReactNative";
        }()) {
          const { console: t5 } = globalThis;
          t5?.warn?.("BSON: For React Native please polyfill crypto.getRandomValues, e.g. using: https://www.npmjs.com/package/react-native-get-random-values.");
        }
        return x;
      })(), k = /(\d|[a-f])/i, M = { toLocalBufferType(t4) {
        const e3 = t4?.[Symbol.toStringTag] ?? Object.prototype.toString.call(t4);
        if (e3 === "Uint8Array")
          return t4;
        if (ArrayBuffer.isView(t4))
          return new Uint8Array(t4.buffer.slice(t4.byteOffset, t4.byteOffset + t4.byteLength));
        if (e3 === "ArrayBuffer" || e3 === "SharedArrayBuffer" || e3 === "[object ArrayBuffer]" || e3 === "[object SharedArrayBuffer]")
          return new Uint8Array(t4);
        throw new m(`Cannot make a Uint8Array from ${String(t4)}`);
      }, allocate(t4) {
        if (typeof t4 != "number")
          throw new TypeError(`The "size" argument must be of type number. Received ${String(t4)}`);
        return new Uint8Array(t4);
      }, allocateUnsafe: (t4) => M.allocate(t4), equals(t4, e3) {
        if (t4.byteLength !== e3.byteLength)
          return false;
        for (let r3 = 0;r3 < t4.byteLength; r3++)
          if (t4[r3] !== e3[r3])
            return false;
        return true;
      }, fromNumberArray: (t4) => Uint8Array.from(t4), fromBase64: (t4) => Uint8Array.from(atob(t4), (t5) => t5.charCodeAt(0)), toBase64: (t4) => btoa(M.toISO88591(t4)), fromISO88591: (t4) => Uint8Array.from(t4, (t5) => 255 & t5.charCodeAt(0)), toISO88591: (t4) => Array.from(Uint16Array.from(t4), (t5) => String.fromCharCode(t5)).join(""), fromHex(t4) {
        const e3 = t4.length % 2 == 0 ? t4 : t4.slice(0, t4.length - 1), r3 = [];
        for (let t5 = 0;t5 < e3.length; t5 += 2) {
          const n2 = e3[t5], i2 = e3[t5 + 1];
          if (!k.test(n2))
            break;
          if (!k.test(i2))
            break;
          const o2 = Number.parseInt(`${n2}${i2}`, 16);
          r3.push(o2);
        }
        return Uint8Array.from(r3);
      }, toHex: (t4) => Array.from(t4, (t5) => t5.toString(16).padStart(2, "0")).join(""), toUTF8(t4, e3, r3, n2) {
        const i2 = r3 - e3 <= 20 ? j(t4, e3, r3) : null;
        return i2 != null ? i2 : O(t4, e3, r3, n2);
      }, utf8ByteLength: (t4) => new TextEncoder().encode(t4).byteLength, encodeUTF8Into(t4, e3, r3) {
        const n2 = new TextEncoder().encode(e3);
        return t4.set(n2, r3), n2.byteLength;
      }, randomBytes: P }, I = typeof n == "function" && n.prototype?._isBuffer !== true ? E : M;

      class T {
        get [Symbol.for("@@mdb.bson.version")]() {
          return 6;
        }
        [Symbol.for("nodejs.util.inspect.custom")](t4, e3, r3) {
          return this.inspect(t4, e3, r3);
        }
      }

      class B extends T {
        get _bsontype() {
          return "Binary";
        }
        constructor(t4, e3) {
          if (super(), t4 != null && typeof t4 == "string" && !ArrayBuffer.isView(t4) && !i(t4) && !Array.isArray(t4))
            throw new m("Binary can only be constructed from Uint8Array or number[]");
          this.sub_type = e3 ?? B.BSON_BINARY_SUBTYPE_DEFAULT, t4 == null ? (this.buffer = I.allocate(B.BUFFER_SIZE), this.position = 0) : (this.buffer = Array.isArray(t4) ? I.fromNumberArray(t4) : I.toLocalBufferType(t4), this.position = this.buffer.byteLength);
        }
        put(t4) {
          if (typeof t4 == "string" && t4.length !== 1)
            throw new m("only accepts single character String");
          if (typeof t4 != "number" && t4.length !== 1)
            throw new m("only accepts single character Uint8Array or Array");
          let e3;
          if (e3 = typeof t4 == "string" ? t4.charCodeAt(0) : typeof t4 == "number" ? t4 : t4[0], e3 < 0 || e3 > 255)
            throw new m("only accepts number in a valid unsigned byte range 0-255");
          if (this.buffer.byteLength > this.position)
            this.buffer[this.position++] = e3;
          else {
            const t5 = I.allocate(B.BUFFER_SIZE + this.buffer.length);
            t5.set(this.buffer, 0), this.buffer = t5, this.buffer[this.position++] = e3;
          }
        }
        write(t4, e3) {
          if (e3 = typeof e3 == "number" ? e3 : this.position, this.buffer.byteLength < e3 + t4.length) {
            const e4 = I.allocate(this.buffer.byteLength + t4.length);
            e4.set(this.buffer, 0), this.buffer = e4;
          }
          if (ArrayBuffer.isView(t4))
            this.buffer.set(I.toLocalBufferType(t4), e3), this.position = e3 + t4.byteLength > this.position ? e3 + t4.length : this.position;
          else if (typeof t4 == "string")
            throw new m("input cannot be string");
        }
        read(t4, e3) {
          return e3 = e3 && e3 > 0 ? e3 : this.position, this.buffer.slice(t4, t4 + e3);
        }
        value() {
          return this.buffer.length === this.position ? this.buffer : this.buffer.subarray(0, this.position);
        }
        length() {
          return this.position;
        }
        toJSON() {
          return I.toBase64(this.buffer.subarray(0, this.position));
        }
        toString(t4) {
          return t4 === "hex" ? I.toHex(this.buffer.subarray(0, this.position)) : t4 === "base64" ? I.toBase64(this.buffer.subarray(0, this.position)) : I.toUTF8(this.buffer, 0, this.position, false);
        }
        toExtendedJSON(t4) {
          t4 = t4 || {};
          const e3 = I.toBase64(this.buffer), r3 = Number(this.sub_type).toString(16);
          return t4.legacy ? { $binary: e3, $type: r3.length === 1 ? "0" + r3 : r3 } : { $binary: { base64: e3, subType: r3.length === 1 ? "0" + r3 : r3 } };
        }
        toUUID() {
          if (this.sub_type === B.SUBTYPE_UUID)
            return new D(this.buffer.slice(0, this.position));
          throw new m(`Binary sub_type "${this.sub_type}" is not supported for converting to UUID. Only "${B.SUBTYPE_UUID}" is currently supported.`);
        }
        static createFromHexString(t4, e3) {
          return new B(I.fromHex(t4), e3);
        }
        static createFromBase64(t4, e3) {
          return new B(I.fromBase64(t4), e3);
        }
        static fromExtendedJSON(t4, e3) {
          let r3, n2;
          if (e3 = e3 || {}, "$binary" in t4 ? e3.legacy && typeof t4.$binary == "string" && "$type" in t4 ? (n2 = t4.$type ? parseInt(t4.$type, 16) : 0, r3 = I.fromBase64(t4.$binary)) : typeof t4.$binary != "string" && (n2 = t4.$binary.subType ? parseInt(t4.$binary.subType, 16) : 0, r3 = I.fromBase64(t4.$binary.base64)) : ("$uuid" in t4) && (n2 = 4, r3 = D.bytesFromString(t4.$uuid)), !r3)
            throw new m(`Unexpected Binary Extended JSON format ${JSON.stringify(t4)}`);
          return n2 === 4 ? new D(r3) : new B(r3, n2);
        }
        inspect(t4, e3, r3) {
          return r3 ??= u, `Binary.createFromBase64(${r3(I.toBase64(this.buffer.subarray(0, this.position)), e3)}, ${r3(this.sub_type, e3)})`;
        }
      }
      B.BSON_BINARY_SUBTYPE_DEFAULT = 0, B.BUFFER_SIZE = 256, B.SUBTYPE_DEFAULT = 0, B.SUBTYPE_FUNCTION = 1, B.SUBTYPE_BYTE_ARRAY = 2, B.SUBTYPE_UUID_OLD = 3, B.SUBTYPE_UUID = 4, B.SUBTYPE_MD5 = 5, B.SUBTYPE_ENCRYPTED = 6, B.SUBTYPE_COLUMN = 7, B.SUBTYPE_SENSITIVE = 8, B.SUBTYPE_USER_DEFINED = 128;
      const R = /^[0-9A-F]{32}$/i, N = /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i;

      class D extends B {
        constructor(t4) {
          let e3;
          if (t4 == null)
            e3 = D.generate();
          else if (t4 instanceof D)
            e3 = I.toLocalBufferType(new Uint8Array(t4.buffer));
          else if (ArrayBuffer.isView(t4) && t4.byteLength === 16)
            e3 = I.toLocalBufferType(t4);
          else {
            if (typeof t4 != "string")
              throw new m("Argument passed in UUID constructor must be a UUID, a 16 byte Buffer or a 32/36 character hex string (dashes excluded/included, format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).");
            e3 = D.bytesFromString(t4);
          }
          super(e3, 4);
        }
        get id() {
          return this.buffer;
        }
        set id(t4) {
          this.buffer = t4;
        }
        toHexString(t4 = true) {
          return t4 ? [I.toHex(this.buffer.subarray(0, 4)), I.toHex(this.buffer.subarray(4, 6)), I.toHex(this.buffer.subarray(6, 8)), I.toHex(this.buffer.subarray(8, 10)), I.toHex(this.buffer.subarray(10, 16))].join("-") : I.toHex(this.buffer);
        }
        toString(t4) {
          return t4 === "hex" ? I.toHex(this.id) : t4 === "base64" ? I.toBase64(this.id) : this.toHexString();
        }
        toJSON() {
          return this.toHexString();
        }
        equals(t4) {
          if (!t4)
            return false;
          if (t4 instanceof D)
            return I.equals(t4.id, this.id);
          try {
            return I.equals(new D(t4).id, this.id);
          } catch {
            return false;
          }
        }
        toBinary() {
          return new B(this.id, B.SUBTYPE_UUID);
        }
        static generate() {
          const t4 = I.randomBytes(16);
          return t4[6] = 15 & t4[6] | 64, t4[8] = 63 & t4[8] | 128, t4;
        }
        static isValid(t4) {
          return !!t4 && (typeof t4 == "string" ? D.isValidUUIDString(t4) : o(t4) ? t4.byteLength === 16 : t4._bsontype === "Binary" && t4.sub_type === this.SUBTYPE_UUID && t4.buffer.byteLength === 16);
        }
        static createFromHexString(t4) {
          const e3 = D.bytesFromString(t4);
          return new D(e3);
        }
        static createFromBase64(t4) {
          return new D(I.fromBase64(t4));
        }
        static bytesFromString(t4) {
          if (!D.isValidUUIDString(t4))
            throw new m("UUID string representation must be 32 hex digits or canonical hyphenated representation");
          return I.fromHex(t4.replace(/-/g, ""));
        }
        static isValidUUIDString(t4) {
          return R.test(t4) || N.test(t4);
        }
        inspect(t4, e3, r3) {
          return r3 ??= u, `new UUID(${r3(this.toHexString(), e3)})`;
        }
      }

      class L extends T {
        get _bsontype() {
          return "Code";
        }
        constructor(t4, e3) {
          super(), this.code = t4.toString(), this.scope = e3 ?? null;
        }
        toJSON() {
          return this.scope != null ? { code: this.code, scope: this.scope } : { code: this.code };
        }
        toExtendedJSON() {
          return this.scope ? { $code: this.code, $scope: this.scope } : { $code: this.code };
        }
        static fromExtendedJSON(t4) {
          return new L(t4.$code, t4.$scope);
        }
        inspect(t4, e3, r3) {
          r3 ??= u;
          let n2 = r3(this.code, e3);
          const i2 = n2.includes("\n");
          return this.scope != null && (n2 += `,${i2 ? "\n" : " "}${r3(this.scope, e3)}`), `new Code(${i2 ? "\n" : ""}${n2}${i2 && this.scope === null ? "\n" : ""})`;
        }
      }
      function C(t4) {
        return t4 != null && typeof t4 == "object" && "$id" in t4 && t4.$id != null && "$ref" in t4 && typeof t4.$ref == "string" && (!("$db" in t4) || ("$db" in t4) && typeof t4.$db == "string");
      }

      class U extends T {
        get _bsontype() {
          return "DBRef";
        }
        constructor(t4, e3, r3, n2) {
          super();
          const i2 = t4.split(".");
          i2.length === 2 && (r3 = i2.shift(), t4 = i2.shift()), this.collection = t4, this.oid = e3, this.db = r3, this.fields = n2 || {};
        }
        get namespace() {
          return this.collection;
        }
        set namespace(t4) {
          this.collection = t4;
        }
        toJSON() {
          const t4 = Object.assign({ $ref: this.collection, $id: this.oid }, this.fields);
          return this.db != null && (t4.$db = this.db), t4;
        }
        toExtendedJSON(t4) {
          t4 = t4 || {};
          let e3 = { $ref: this.collection, $id: this.oid };
          return t4.legacy || (this.db && (e3.$db = this.db), e3 = Object.assign(e3, this.fields)), e3;
        }
        static fromExtendedJSON(t4) {
          const e3 = Object.assign({}, t4);
          return delete e3.$ref, delete e3.$id, delete e3.$db, new U(t4.$ref, t4.$id, t4.$db, e3);
        }
        inspect(t4, e3, r3) {
          r3 ??= u;
          const n2 = [r3(this.namespace, e3), r3(this.oid, e3), ...this.db ? [r3(this.db, e3)] : [], ...Object.keys(this.fields).length > 0 ? [r3(this.fields, e3)] : []];
          return n2[1] = r3 === u ? `new ObjectId(${n2[1]})` : n2[1], `new DBRef(${n2.join(", ")})`;
        }
      }
      function q(t4) {
        if (t4 === "")
          return t4;
        let e3 = 0;
        const r3 = t4[e3] === "-", n2 = t4[e3] === "+";
        (n2 || r3) && (e3 += 1);
        let i2 = false;
        for (;e3 < t4.length && t4[e3] === "0"; ++e3)
          i2 = true;
        return i2 ? `${r3 ? "-" : ""}${t4.length === e3 ? "0" : t4.slice(e3)}` : n2 ? t4.slice(1) : t4;
      }
      let F;
      try {
        F = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports;
      } catch {
      }
      const V = 4294967296, z = 18446744073709552000, K = z / 2, H = {}, W = {}, J = /^(\+?0|(\+|-)?[1-9][0-9]*)$/;

      class G extends T {
        get _bsontype() {
          return "Long";
        }
        get __isLong__() {
          return true;
        }
        constructor(t4 = 0, e3, r3) {
          super();
          const n2 = typeof e3 == "boolean" ? e3 : Boolean(r3), i2 = typeof e3 == "number" ? e3 : 0, o2 = typeof t4 == "string" ? G.fromString(t4, n2) : typeof t4 == "bigint" ? G.fromBigInt(t4, n2) : { low: 0 | t4, high: 0 | i2, unsigned: n2 };
          this.low = o2.low, this.high = o2.high, this.unsigned = o2.unsigned;
        }
        static fromBits(t4, e3, r3) {
          return new G(t4, e3, r3);
        }
        static fromInt(t4, e3) {
          let r3, n2, i2;
          return e3 ? (i2 = 0 <= (t4 >>>= 0) && t4 < 256) && (n2 = W[t4], n2) ? n2 : (r3 = G.fromBits(t4, (0 | t4) < 0 ? -1 : 0, true), i2 && (W[t4] = r3), r3) : (i2 = -128 <= (t4 |= 0) && t4 < 128) && (n2 = H[t4], n2) ? n2 : (r3 = G.fromBits(t4, t4 < 0 ? -1 : 0, false), i2 && (H[t4] = r3), r3);
        }
        static fromNumber(t4, e3) {
          if (isNaN(t4))
            return e3 ? G.UZERO : G.ZERO;
          if (e3) {
            if (t4 < 0)
              return G.UZERO;
            if (t4 >= z)
              return G.MAX_UNSIGNED_VALUE;
          } else {
            if (t4 <= -K)
              return G.MIN_VALUE;
            if (t4 + 1 >= K)
              return G.MAX_VALUE;
          }
          return t4 < 0 ? G.fromNumber(-t4, e3).neg() : G.fromBits(t4 % V | 0, t4 / V | 0, e3);
        }
        static fromBigInt(t4, e3) {
          const r3 = BigInt(4294967295), n2 = BigInt(32);
          return new G(Number(t4 & r3), Number(t4 >> n2 & r3), e3);
        }
        static _fromString(t4, e3, r3) {
          if (t4.length === 0)
            throw new m("empty string");
          if (r3 < 2 || 36 < r3)
            throw new m("radix");
          let n2;
          if ((n2 = t4.indexOf("-")) > 0)
            throw new m("interior hyphen");
          if (n2 === 0)
            return G._fromString(t4.substring(1), e3, r3).neg();
          const i2 = G.fromNumber(Math.pow(r3, 8));
          let o2 = G.ZERO;
          for (let e4 = 0;e4 < t4.length; e4 += 8) {
            const n3 = Math.min(8, t4.length - e4), a2 = parseInt(t4.substring(e4, e4 + n3), r3);
            if (n3 < 8) {
              const t5 = G.fromNumber(Math.pow(r3, n3));
              o2 = o2.mul(t5).add(G.fromNumber(a2));
            } else
              o2 = o2.mul(i2), o2 = o2.add(G.fromNumber(a2));
          }
          return o2.unsigned = e3, o2;
        }
        static fromStringStrict(t4, e3, r3) {
          let n2 = false;
          if (typeof e3 == "number" ? (r3 = e3, e3 = false) : n2 = !!e3, r3 ??= 10, t4.trim() !== t4)
            throw new m(`Input: '${t4}' contains leading and/or trailing whitespace`);
          if (!function(t5, e4) {
            const r4 = "0123456789abcdefghijklmnopqrstuvwxyz".slice(0, e4 = e4 ?? 10);
            return !new RegExp(`[^-+${r4}]`, "i").test(t5) && t5;
          }(t4, r3))
            throw new m(`Input: '${t4}' contains invalid characters for radix: ${r3}`);
          const i2 = q(t4), o2 = G._fromString(i2, n2, r3);
          if (o2.toString(r3).toLowerCase() !== i2.toLowerCase())
            throw new m(`Input: ${t4} is not representable as ${o2.unsigned ? "an unsigned" : "a signed"} 64-bit Long ${r3 != null ? `with radix: ${r3}` : ""}`);
          return o2;
        }
        static fromString(t4, e3, r3) {
          let n2 = false;
          return typeof e3 == "number" ? (r3 = e3, e3 = false) : n2 = !!e3, r3 ??= 10, t4 === "NaN" && r3 < 24 || (t4 === "Infinity" || t4 === "+Infinity" || t4 === "-Infinity") && r3 < 35 ? G.ZERO : G._fromString(t4, n2, r3);
        }
        static fromBytes(t4, e3, r3) {
          return r3 ? G.fromBytesLE(t4, e3) : G.fromBytesBE(t4, e3);
        }
        static fromBytesLE(t4, e3) {
          return new G(t4[0] | t4[1] << 8 | t4[2] << 16 | t4[3] << 24, t4[4] | t4[5] << 8 | t4[6] << 16 | t4[7] << 24, e3);
        }
        static fromBytesBE(t4, e3) {
          return new G(t4[4] << 24 | t4[5] << 16 | t4[6] << 8 | t4[7], t4[0] << 24 | t4[1] << 16 | t4[2] << 8 | t4[3], e3);
        }
        static isLong(t4) {
          return t4 != null && typeof t4 == "object" && "__isLong__" in t4 && t4.__isLong__ === true;
        }
        static fromValue(t4, e3) {
          return typeof t4 == "number" ? G.fromNumber(t4, e3) : typeof t4 == "string" ? G.fromString(t4, e3) : G.fromBits(t4.low, t4.high, typeof e3 == "boolean" ? e3 : t4.unsigned);
        }
        add(t4) {
          G.isLong(t4) || (t4 = G.fromValue(t4));
          const e3 = this.high >>> 16, r3 = 65535 & this.high, n2 = this.low >>> 16, i2 = 65535 & this.low, o2 = t4.high >>> 16, a2 = 65535 & t4.high, s2 = t4.low >>> 16;
          let c2 = 0, u2 = 0, f2 = 0, l2 = 0;
          return l2 += i2 + (65535 & t4.low), f2 += l2 >>> 16, l2 &= 65535, f2 += n2 + s2, u2 += f2 >>> 16, f2 &= 65535, u2 += r3 + a2, c2 += u2 >>> 16, u2 &= 65535, c2 += e3 + o2, c2 &= 65535, G.fromBits(f2 << 16 | l2, c2 << 16 | u2, this.unsigned);
        }
        and(t4) {
          return G.isLong(t4) || (t4 = G.fromValue(t4)), G.fromBits(this.low & t4.low, this.high & t4.high, this.unsigned);
        }
        compare(t4) {
          if (G.isLong(t4) || (t4 = G.fromValue(t4)), this.eq(t4))
            return 0;
          const e3 = this.isNegative(), r3 = t4.isNegative();
          return e3 && !r3 ? -1 : !e3 && r3 ? 1 : this.unsigned ? t4.high >>> 0 > this.high >>> 0 || t4.high === this.high && t4.low >>> 0 > this.low >>> 0 ? -1 : 1 : this.sub(t4).isNegative() ? -1 : 1;
        }
        comp(t4) {
          return this.compare(t4);
        }
        divide(t4) {
          if (G.isLong(t4) || (t4 = G.fromValue(t4)), t4.isZero())
            throw new m("division by zero");
          if (F) {
            if (!this.unsigned && this.high === -2147483648 && t4.low === -1 && t4.high === -1)
              return this;
            const e4 = (this.unsigned ? F.div_u : F.div_s)(this.low, this.high, t4.low, t4.high);
            return G.fromBits(e4, F.get_high(), this.unsigned);
          }
          if (this.isZero())
            return this.unsigned ? G.UZERO : G.ZERO;
          let e3, r3, n2;
          if (this.unsigned) {
            if (t4.unsigned || (t4 = t4.toUnsigned()), t4.gt(this))
              return G.UZERO;
            if (t4.gt(this.shru(1)))
              return G.UONE;
            n2 = G.UZERO;
          } else {
            if (this.eq(G.MIN_VALUE))
              return t4.eq(G.ONE) || t4.eq(G.NEG_ONE) ? G.MIN_VALUE : t4.eq(G.MIN_VALUE) ? G.ONE : (e3 = this.shr(1).div(t4).shl(1), e3.eq(G.ZERO) ? t4.isNegative() ? G.ONE : G.NEG_ONE : (r3 = this.sub(t4.mul(e3)), n2 = e3.add(r3.div(t4)), n2));
            if (t4.eq(G.MIN_VALUE))
              return this.unsigned ? G.UZERO : G.ZERO;
            if (this.isNegative())
              return t4.isNegative() ? this.neg().div(t4.neg()) : this.neg().div(t4).neg();
            if (t4.isNegative())
              return this.div(t4.neg()).neg();
            n2 = G.ZERO;
          }
          for (r3 = this;r3.gte(t4); ) {
            e3 = Math.max(1, Math.floor(r3.toNumber() / t4.toNumber()));
            const i2 = Math.ceil(Math.log(e3) / Math.LN2), o2 = i2 <= 48 ? 1 : Math.pow(2, i2 - 48);
            let a2 = G.fromNumber(e3), s2 = a2.mul(t4);
            for (;s2.isNegative() || s2.gt(r3); )
              e3 -= o2, a2 = G.fromNumber(e3, this.unsigned), s2 = a2.mul(t4);
            a2.isZero() && (a2 = G.ONE), n2 = n2.add(a2), r3 = r3.sub(s2);
          }
          return n2;
        }
        div(t4) {
          return this.divide(t4);
        }
        equals(t4) {
          return G.isLong(t4) || (t4 = G.fromValue(t4)), (this.unsigned === t4.unsigned || this.high >>> 31 != 1 || t4.high >>> 31 != 1) && this.high === t4.high && this.low === t4.low;
        }
        eq(t4) {
          return this.equals(t4);
        }
        getHighBits() {
          return this.high;
        }
        getHighBitsUnsigned() {
          return this.high >>> 0;
        }
        getLowBits() {
          return this.low;
        }
        getLowBitsUnsigned() {
          return this.low >>> 0;
        }
        getNumBitsAbs() {
          if (this.isNegative())
            return this.eq(G.MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();
          const t4 = this.high !== 0 ? this.high : this.low;
          let e3;
          for (e3 = 31;e3 > 0 && !(t4 & 1 << e3); e3--)
            ;
          return this.high !== 0 ? e3 + 33 : e3 + 1;
        }
        greaterThan(t4) {
          return this.comp(t4) > 0;
        }
        gt(t4) {
          return this.greaterThan(t4);
        }
        greaterThanOrEqual(t4) {
          return this.comp(t4) >= 0;
        }
        gte(t4) {
          return this.greaterThanOrEqual(t4);
        }
        ge(t4) {
          return this.greaterThanOrEqual(t4);
        }
        isEven() {
          return !(1 & this.low);
        }
        isNegative() {
          return !this.unsigned && this.high < 0;
        }
        isOdd() {
          return !(1 & ~this.low);
        }
        isPositive() {
          return this.unsigned || this.high >= 0;
        }
        isZero() {
          return this.high === 0 && this.low === 0;
        }
        lessThan(t4) {
          return this.comp(t4) < 0;
        }
        lt(t4) {
          return this.lessThan(t4);
        }
        lessThanOrEqual(t4) {
          return this.comp(t4) <= 0;
        }
        lte(t4) {
          return this.lessThanOrEqual(t4);
        }
        modulo(t4) {
          if (G.isLong(t4) || (t4 = G.fromValue(t4)), F) {
            const e3 = (this.unsigned ? F.rem_u : F.rem_s)(this.low, this.high, t4.low, t4.high);
            return G.fromBits(e3, F.get_high(), this.unsigned);
          }
          return this.sub(this.div(t4).mul(t4));
        }
        mod(t4) {
          return this.modulo(t4);
        }
        rem(t4) {
          return this.modulo(t4);
        }
        multiply(t4) {
          if (this.isZero())
            return G.ZERO;
          if (G.isLong(t4) || (t4 = G.fromValue(t4)), F) {
            const e4 = F.mul(this.low, this.high, t4.low, t4.high);
            return G.fromBits(e4, F.get_high(), this.unsigned);
          }
          if (t4.isZero())
            return G.ZERO;
          if (this.eq(G.MIN_VALUE))
            return t4.isOdd() ? G.MIN_VALUE : G.ZERO;
          if (t4.eq(G.MIN_VALUE))
            return this.isOdd() ? G.MIN_VALUE : G.ZERO;
          if (this.isNegative())
            return t4.isNegative() ? this.neg().mul(t4.neg()) : this.neg().mul(t4).neg();
          if (t4.isNegative())
            return this.mul(t4.neg()).neg();
          if (this.lt(G.TWO_PWR_24) && t4.lt(G.TWO_PWR_24))
            return G.fromNumber(this.toNumber() * t4.toNumber(), this.unsigned);
          const e3 = this.high >>> 16, r3 = 65535 & this.high, n2 = this.low >>> 16, i2 = 65535 & this.low, o2 = t4.high >>> 16, a2 = 65535 & t4.high, s2 = t4.low >>> 16, c2 = 65535 & t4.low;
          let u2 = 0, f2 = 0, l2 = 0, h2 = 0;
          return h2 += i2 * c2, l2 += h2 >>> 16, h2 &= 65535, l2 += n2 * c2, f2 += l2 >>> 16, l2 &= 65535, l2 += i2 * s2, f2 += l2 >>> 16, l2 &= 65535, f2 += r3 * c2, u2 += f2 >>> 16, f2 &= 65535, f2 += n2 * s2, u2 += f2 >>> 16, f2 &= 65535, f2 += i2 * a2, u2 += f2 >>> 16, f2 &= 65535, u2 += e3 * c2 + r3 * s2 + n2 * a2 + i2 * o2, u2 &= 65535, G.fromBits(l2 << 16 | h2, u2 << 16 | f2, this.unsigned);
        }
        mul(t4) {
          return this.multiply(t4);
        }
        negate() {
          return !this.unsigned && this.eq(G.MIN_VALUE) ? G.MIN_VALUE : this.not().add(G.ONE);
        }
        neg() {
          return this.negate();
        }
        not() {
          return G.fromBits(~this.low, ~this.high, this.unsigned);
        }
        notEquals(t4) {
          return !this.equals(t4);
        }
        neq(t4) {
          return this.notEquals(t4);
        }
        ne(t4) {
          return this.notEquals(t4);
        }
        or(t4) {
          return G.isLong(t4) || (t4 = G.fromValue(t4)), G.fromBits(this.low | t4.low, this.high | t4.high, this.unsigned);
        }
        shiftLeft(t4) {
          return G.isLong(t4) && (t4 = t4.toInt()), (t4 &= 63) == 0 ? this : t4 < 32 ? G.fromBits(this.low << t4, this.high << t4 | this.low >>> 32 - t4, this.unsigned) : G.fromBits(0, this.low << t4 - 32, this.unsigned);
        }
        shl(t4) {
          return this.shiftLeft(t4);
        }
        shiftRight(t4) {
          return G.isLong(t4) && (t4 = t4.toInt()), (t4 &= 63) == 0 ? this : t4 < 32 ? G.fromBits(this.low >>> t4 | this.high << 32 - t4, this.high >> t4, this.unsigned) : G.fromBits(this.high >> t4 - 32, this.high >= 0 ? 0 : -1, this.unsigned);
        }
        shr(t4) {
          return this.shiftRight(t4);
        }
        shiftRightUnsigned(t4) {
          if (G.isLong(t4) && (t4 = t4.toInt()), (t4 &= 63) == 0)
            return this;
          {
            const e3 = this.high;
            if (t4 < 32) {
              const r3 = this.low;
              return G.fromBits(r3 >>> t4 | e3 << 32 - t4, e3 >>> t4, this.unsigned);
            }
            return t4 === 32 ? G.fromBits(e3, 0, this.unsigned) : G.fromBits(e3 >>> t4 - 32, 0, this.unsigned);
          }
        }
        shr_u(t4) {
          return this.shiftRightUnsigned(t4);
        }
        shru(t4) {
          return this.shiftRightUnsigned(t4);
        }
        subtract(t4) {
          return G.isLong(t4) || (t4 = G.fromValue(t4)), this.add(t4.neg());
        }
        sub(t4) {
          return this.subtract(t4);
        }
        toInt() {
          return this.unsigned ? this.low >>> 0 : this.low;
        }
        toNumber() {
          return this.unsigned ? (this.high >>> 0) * V + (this.low >>> 0) : this.high * V + (this.low >>> 0);
        }
        toBigInt() {
          return BigInt(this.toString());
        }
        toBytes(t4) {
          return t4 ? this.toBytesLE() : this.toBytesBE();
        }
        toBytesLE() {
          const t4 = this.high, e3 = this.low;
          return [255 & e3, e3 >>> 8 & 255, e3 >>> 16 & 255, e3 >>> 24, 255 & t4, t4 >>> 8 & 255, t4 >>> 16 & 255, t4 >>> 24];
        }
        toBytesBE() {
          const t4 = this.high, e3 = this.low;
          return [t4 >>> 24, t4 >>> 16 & 255, t4 >>> 8 & 255, 255 & t4, e3 >>> 24, e3 >>> 16 & 255, e3 >>> 8 & 255, 255 & e3];
        }
        toSigned() {
          return this.unsigned ? G.fromBits(this.low, this.high, false) : this;
        }
        toString(t4) {
          if ((t4 = t4 || 10) < 2 || 36 < t4)
            throw new m("radix");
          if (this.isZero())
            return "0";
          if (this.isNegative()) {
            if (this.eq(G.MIN_VALUE)) {
              const e4 = G.fromNumber(t4), r4 = this.div(e4), n3 = r4.mul(e4).sub(this);
              return r4.toString(t4) + n3.toInt().toString(t4);
            }
            return "-" + this.neg().toString(t4);
          }
          const e3 = G.fromNumber(Math.pow(t4, 6), this.unsigned);
          let r3 = this, n2 = "";
          for (;; ) {
            const i2 = r3.div(e3);
            let o2 = (r3.sub(i2.mul(e3)).toInt() >>> 0).toString(t4);
            if (r3 = i2, r3.isZero())
              return o2 + n2;
            for (;o2.length < 6; )
              o2 = "0" + o2;
            n2 = "" + o2 + n2;
          }
        }
        toUnsigned() {
          return this.unsigned ? this : G.fromBits(this.low, this.high, true);
        }
        xor(t4) {
          return G.isLong(t4) || (t4 = G.fromValue(t4)), G.fromBits(this.low ^ t4.low, this.high ^ t4.high, this.unsigned);
        }
        eqz() {
          return this.isZero();
        }
        le(t4) {
          return this.lessThanOrEqual(t4);
        }
        toExtendedJSON(t4) {
          return t4 && t4.relaxed ? this.toNumber() : { $numberLong: this.toString() };
        }
        static fromExtendedJSON(t4, e3) {
          const { useBigInt64: r3 = false, relaxed: n2 = true } = { ...e3 };
          if (t4.$numberLong.length > 20)
            throw new m("$numberLong string is too long");
          if (!J.test(t4.$numberLong))
            throw new m(`\$numberLong string "${t4.$numberLong}" is in an invalid format`);
          if (r3) {
            const e4 = BigInt(t4.$numberLong);
            return BigInt.asIntN(64, e4);
          }
          const i2 = G.fromString(t4.$numberLong);
          return n2 ? i2.toNumber() : i2;
        }
        inspect(t4, e3, r3) {
          return r3 ??= u, `new Long(${r3(this.toString(), e3)}${this.unsigned ? `, ${r3(this.unsigned, e3)}` : ""})`;
        }
      }
      G.TWO_PWR_24 = G.fromInt(1 << 24), G.MAX_UNSIGNED_VALUE = G.fromBits(-1, -1, true), G.ZERO = G.fromInt(0), G.UZERO = G.fromInt(0, true), G.ONE = G.fromInt(1), G.UONE = G.fromInt(1, true), G.NEG_ONE = G.fromInt(-1), G.MAX_VALUE = G.fromBits(-1, 2147483647, false), G.MIN_VALUE = G.fromBits(0, -2147483648, false);
      const Y = /^(\+|-)?(\d+|(\d*\.\d*))?(E|e)?([-+])?(\d+)?$/, Q = /^(\+|-)?(Infinity|inf)$/i, X = /^(\+|-)?NaN$/i, Z = 6111, tt = -6176, et = I.fromNumberArray([124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].reverse()), rt = I.fromNumberArray([248, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].reverse()), nt = I.fromNumberArray([120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].reverse()), it = /^([-+])?(\d+)?$/;
      function ot(t4) {
        return !isNaN(parseInt(t4, 10));
      }
      function at(t4) {
        const e3 = G.fromNumber(1e9);
        let r3 = G.fromNumber(0);
        if (!(t4.parts[0] || t4.parts[1] || t4.parts[2] || t4.parts[3]))
          return { quotient: t4, rem: r3 };
        for (let n2 = 0;n2 <= 3; n2++)
          r3 = r3.shiftLeft(32), r3 = r3.add(new G(t4.parts[n2], 0)), t4.parts[n2] = r3.div(e3).low, r3 = r3.modulo(e3);
        return { quotient: t4, rem: r3 };
      }
      function st(t4, e3) {
        throw new m(`"${t4}" is not a valid Decimal128 string - ${e3}`);
      }

      class ct extends T {
        get _bsontype() {
          return "Decimal128";
        }
        constructor(t4) {
          if (super(), typeof t4 == "string")
            this.bytes = ct.fromString(t4).bytes;
          else {
            if (!o(t4))
              throw new m("Decimal128 must take a Buffer or string");
            if (t4.byteLength !== 16)
              throw new m("Decimal128 must take a Buffer of 16 bytes");
            this.bytes = t4;
          }
        }
        static fromString(t4) {
          return ct._fromString(t4, { allowRounding: false });
        }
        static fromStringWithRounding(t4) {
          return ct._fromString(t4, { allowRounding: true });
        }
        static _fromString(t4, e3) {
          let r3 = false, n2 = false, i2 = false, o2 = false, a2 = 0, s2 = 0, c2 = 0, u2 = 0, f2 = 0;
          const l2 = [0];
          let h2 = 0, p2 = 0, d2 = 0, y2 = 0, b2 = new G(0, 0), v2 = new G(0, 0), g2 = 0, _2 = 0;
          if (t4.length >= 7000)
            throw new m(t4 + " not a valid Decimal128 string");
          const w2 = t4.match(Y), S2 = t4.match(Q), O2 = t4.match(X);
          if (!w2 && !S2 && !O2 || t4.length === 0)
            throw new m(t4 + " not a valid Decimal128 string");
          if (w2) {
            const e4 = w2[2], r4 = w2[4], n3 = w2[5], i3 = w2[6];
            r4 && i3 === undefined && st(t4, "missing exponent power"), r4 && e4 === undefined && st(t4, "missing exponent base"), r4 === undefined && (n3 || i3) && st(t4, "missing e before exponent");
          }
          if (t4[_2] !== "+" && t4[_2] !== "-" || (n2 = true, r3 = t4[_2++] === "-"), !ot(t4[_2]) && t4[_2] !== ".") {
            if (t4[_2] === "i" || t4[_2] === "I")
              return new ct(r3 ? rt : nt);
            if (t4[_2] === "N")
              return new ct(et);
          }
          for (;ot(t4[_2]) || t4[_2] === "."; )
            t4[_2] !== "." ? (h2 < 34 && (t4[_2] !== "0" || o2) && (o2 || (f2 = s2), o2 = true, l2[p2++] = parseInt(t4[_2], 10), h2 += 1), o2 && (c2 += 1), i2 && (u2 += 1), s2 += 1, _2 += 1) : (i2 && st(t4, "contains multiple periods"), i2 = true, _2 += 1);
          if (i2 && !s2)
            throw new m(t4 + " not a valid Decimal128 string");
          if (t4[_2] === "e" || t4[_2] === "E") {
            const e4 = t4.substr(++_2).match(it);
            if (!e4 || !e4[2])
              return new ct(et);
            y2 = parseInt(e4[0], 10), _2 += e4[0].length;
          }
          if (t4[_2])
            return new ct(et);
          if (h2) {
            if (d2 = h2 - 1, a2 = c2, a2 !== 1)
              for (;t4[f2 + a2 - 1 + Number(n2) + Number(i2)] === "0"; )
                a2 -= 1;
          } else
            l2[0] = 0, c2 = 1, h2 = 1, a2 = 0;
          for (y2 <= u2 && u2 > y2 + 16384 ? y2 = tt : y2 -= u2;y2 > Z; ) {
            if (d2 += 1, d2 >= 34) {
              if (a2 === 0) {
                y2 = Z;
                break;
              }
              st(t4, "overflow");
            }
            y2 -= 1;
          }
          if (e3.allowRounding) {
            for (;y2 < tt || h2 < c2; ) {
              if (d2 === 0 && a2 < h2) {
                y2 = tt, a2 = 0;
                break;
              }
              if (h2 < c2 ? c2 -= 1 : d2 -= 1, y2 < Z)
                y2 += 1;
              else {
                if (l2.join("").match(/^0+$/)) {
                  y2 = Z;
                  break;
                }
                st(t4, "overflow");
              }
            }
            if (d2 + 1 < a2) {
              let e4 = s2;
              i2 && (f2 += 1, e4 += 1), n2 && (f2 += 1, e4 += 1);
              const o3 = parseInt(t4[f2 + d2 + 1], 10);
              let a3 = 0;
              if (o3 >= 5 && (a3 = 1, o3 === 5)) {
                a3 = l2[d2] % 2 == 1 ? 1 : 0;
                for (let r4 = f2 + d2 + 2;r4 < e4; r4++)
                  if (parseInt(t4[r4], 10)) {
                    a3 = 1;
                    break;
                  }
              }
              if (a3) {
                let t5 = d2;
                for (;t5 >= 0 && ++l2[t5] > 9; t5--)
                  if (l2[t5] = 0, t5 === 0) {
                    if (!(y2 < Z))
                      return new ct(r3 ? rt : nt);
                    y2 += 1, l2[t5] = 1;
                  }
              }
            }
          } else {
            for (;y2 < tt || h2 < c2; ) {
              if (d2 === 0) {
                if (a2 === 0) {
                  y2 = tt;
                  break;
                }
                st(t4, "exponent underflow");
              }
              h2 < c2 ? (t4[c2 - 1 + Number(n2) + Number(i2)] !== "0" && a2 !== 0 && st(t4, "inexact rounding"), c2 -= 1) : (l2[d2] !== 0 && st(t4, "inexact rounding"), d2 -= 1), y2 < Z ? y2 += 1 : st(t4, "overflow");
            }
            d2 + 1 < a2 && (i2 && (f2 += 1), n2 && (f2 += 1), parseInt(t4[f2 + d2 + 1], 10) !== 0 && st(t4, "inexact rounding"));
          }
          if (b2 = G.fromNumber(0), v2 = G.fromNumber(0), a2 === 0)
            b2 = G.fromNumber(0), v2 = G.fromNumber(0);
          else if (d2 < 17) {
            let t5 = 0;
            for (v2 = G.fromNumber(l2[t5++]), b2 = new G(0, 0);t5 <= d2; t5++)
              v2 = v2.multiply(G.fromNumber(10)), v2 = v2.add(G.fromNumber(l2[t5]));
          } else {
            let t5 = 0;
            for (b2 = G.fromNumber(l2[t5++]);t5 <= d2 - 17; t5++)
              b2 = b2.multiply(G.fromNumber(10)), b2 = b2.add(G.fromNumber(l2[t5]));
            for (v2 = G.fromNumber(l2[t5++]);t5 <= d2; t5++)
              v2 = v2.multiply(G.fromNumber(10)), v2 = v2.add(G.fromNumber(l2[t5]));
          }
          const j2 = function(t5, e4) {
            if (!t5 && !e4)
              return { high: G.fromNumber(0), low: G.fromNumber(0) };
            const r4 = t5.shiftRightUnsigned(32), n3 = new G(t5.getLowBits(), 0), i3 = e4.shiftRightUnsigned(32), o3 = new G(e4.getLowBits(), 0);
            let a3 = r4.multiply(i3), s3 = r4.multiply(o3);
            const c3 = n3.multiply(i3);
            let u3 = n3.multiply(o3);
            return a3 = a3.add(s3.shiftRightUnsigned(32)), s3 = new G(s3.getLowBits(), 0).add(c3).add(u3.shiftRightUnsigned(32)), a3 = a3.add(s3.shiftRightUnsigned(32)), u3 = s3.shiftLeft(32).add(new G(u3.getLowBits(), 0)), { high: a3, low: u3 };
          }(b2, G.fromString("100000000000000000"));
          j2.low = j2.low.add(v2), function(t5, e4) {
            const r4 = t5.high >>> 0, n3 = e4.high >>> 0;
            return r4 < n3 || r4 === n3 && t5.low >>> 0 < e4.low >>> 0;
          }(j2.low, v2) && (j2.high = j2.high.add(G.fromNumber(1))), g2 = y2 + 6176;
          const $2 = { low: G.fromNumber(0), high: G.fromNumber(0) };
          j2.high.shiftRightUnsigned(49).and(G.fromNumber(1)).equals(G.fromNumber(1)) ? ($2.high = $2.high.or(G.fromNumber(3).shiftLeft(61)), $2.high = $2.high.or(G.fromNumber(g2).and(G.fromNumber(16383).shiftLeft(47))), $2.high = $2.high.or(j2.high.and(G.fromNumber(140737488355327)))) : ($2.high = $2.high.or(G.fromNumber(16383 & g2).shiftLeft(49)), $2.high = $2.high.or(j2.high.and(G.fromNumber(562949953421311)))), $2.low = j2.low, r3 && ($2.high = $2.high.or(G.fromString("9223372036854775808")));
          const A2 = I.allocateUnsafe(16);
          return _2 = 0, A2[_2++] = 255 & $2.low.low, A2[_2++] = $2.low.low >> 8 & 255, A2[_2++] = $2.low.low >> 16 & 255, A2[_2++] = $2.low.low >> 24 & 255, A2[_2++] = 255 & $2.low.high, A2[_2++] = $2.low.high >> 8 & 255, A2[_2++] = $2.low.high >> 16 & 255, A2[_2++] = $2.low.high >> 24 & 255, A2[_2++] = 255 & $2.high.low, A2[_2++] = $2.high.low >> 8 & 255, A2[_2++] = $2.high.low >> 16 & 255, A2[_2++] = $2.high.low >> 24 & 255, A2[_2++] = 255 & $2.high.high, A2[_2++] = $2.high.high >> 8 & 255, A2[_2++] = $2.high.high >> 16 & 255, A2[_2++] = $2.high.high >> 24 & 255, new ct(A2);
        }
        toString() {
          let t4, e3 = 0;
          const r3 = new Array(36);
          for (let t5 = 0;t5 < r3.length; t5++)
            r3[t5] = 0;
          let n2, i2, o2, a2 = 0, s2 = false, c2 = { parts: [0, 0, 0, 0] };
          const u2 = [];
          a2 = 0;
          const f2 = this.bytes, l2 = f2[a2++] | f2[a2++] << 8 | f2[a2++] << 16 | f2[a2++] << 24, h2 = f2[a2++] | f2[a2++] << 8 | f2[a2++] << 16 | f2[a2++] << 24, p2 = f2[a2++] | f2[a2++] << 8 | f2[a2++] << 16 | f2[a2++] << 24, d2 = f2[a2++] | f2[a2++] << 8 | f2[a2++] << 16 | f2[a2++] << 24;
          a2 = 0, (new G(l2, h2), new G(p2, d2)).lessThan(G.ZERO) && u2.push("-");
          const y2 = d2 >> 26 & 31;
          if (y2 >> 3 == 3) {
            if (y2 === 30)
              return u2.join("") + "Infinity";
            if (y2 === 31)
              return "NaN";
            t4 = d2 >> 15 & 16383, n2 = 8 + (d2 >> 14 & 1);
          } else
            n2 = d2 >> 14 & 7, t4 = d2 >> 17 & 16383;
          const b2 = t4 - 6176;
          if (c2.parts[0] = (16383 & d2) + ((15 & n2) << 14), c2.parts[1] = p2, c2.parts[2] = h2, c2.parts[3] = l2, c2.parts[0] === 0 && c2.parts[1] === 0 && c2.parts[2] === 0 && c2.parts[3] === 0)
            s2 = true;
          else
            for (o2 = 3;o2 >= 0; o2--) {
              let t5 = 0;
              const e4 = at(c2);
              if (c2 = e4.quotient, t5 = e4.rem.low, t5)
                for (i2 = 8;i2 >= 0; i2--)
                  r3[9 * o2 + i2] = t5 % 10, t5 = Math.floor(t5 / 10);
            }
          if (s2)
            e3 = 1, r3[a2] = 0;
          else
            for (e3 = 36;!r3[a2]; )
              e3 -= 1, a2 += 1;
          const m2 = e3 - 1 + b2;
          if (m2 >= 34 || m2 <= -7 || b2 > 0) {
            if (e3 > 34)
              return u2.push("0"), b2 > 0 ? u2.push(`E+${b2}`) : b2 < 0 && u2.push(`E${b2}`), u2.join("");
            u2.push(`${r3[a2++]}`), e3 -= 1, e3 && u2.push(".");
            for (let t5 = 0;t5 < e3; t5++)
              u2.push(`${r3[a2++]}`);
            u2.push("E"), m2 > 0 ? u2.push(`+${m2}`) : u2.push(`${m2}`);
          } else if (b2 >= 0)
            for (let t5 = 0;t5 < e3; t5++)
              u2.push(`${r3[a2++]}`);
          else {
            let t5 = e3 + b2;
            if (t5 > 0)
              for (let e4 = 0;e4 < t5; e4++)
                u2.push(`${r3[a2++]}`);
            else
              u2.push("0");
            for (u2.push(".");t5++ < 0; )
              u2.push("0");
            for (let n3 = 0;n3 < e3 - Math.max(t5 - 1, 0); n3++)
              u2.push(`${r3[a2++]}`);
          }
          return u2.join("");
        }
        toJSON() {
          return { $numberDecimal: this.toString() };
        }
        toExtendedJSON() {
          return { $numberDecimal: this.toString() };
        }
        static fromExtendedJSON(t4) {
          return ct.fromString(t4.$numberDecimal);
        }
        inspect(t4, e3, r3) {
          return r3 ??= u, `new Decimal128(${r3(this.toString(), e3)})`;
        }
      }

      class ut extends T {
        get _bsontype() {
          return "Double";
        }
        constructor(t4) {
          super(), t4 instanceof Number && (t4 = t4.valueOf()), this.value = +t4;
        }
        static fromString(t4) {
          const e3 = Number(t4);
          if (t4 === "NaN")
            return new ut(NaN);
          if (t4 === "Infinity")
            return new ut(1 / 0);
          if (t4 === "-Infinity")
            return new ut(-1 / 0);
          if (!Number.isFinite(e3))
            throw new m(`Input: ${t4} is not representable as a Double`);
          if (t4.trim() !== t4)
            throw new m(`Input: '${t4}' contains whitespace`);
          if (t4 === "")
            throw new m("Input is an empty string");
          if (/[^-0-9.+eE]/.test(t4))
            throw new m(`Input: '${t4}' is not in decimal or exponential notation`);
          return new ut(e3);
        }
        valueOf() {
          return this.value;
        }
        toJSON() {
          return this.value;
        }
        toString(t4) {
          return this.value.toString(t4);
        }
        toExtendedJSON(t4) {
          return t4 && (t4.legacy || t4.relaxed && isFinite(this.value)) ? this.value : Object.is(Math.sign(this.value), -0) ? { $numberDouble: "-0.0" } : { $numberDouble: Number.isInteger(this.value) ? this.value.toFixed(1) : this.value.toString() };
        }
        static fromExtendedJSON(t4, e3) {
          const r3 = parseFloat(t4.$numberDouble);
          return e3 && e3.relaxed ? r3 : new ut(r3);
        }
        inspect(t4, e3, r3) {
          return r3 ??= u, `new Double(${r3(this.value, e3)})`;
        }
      }

      class ft extends T {
        get _bsontype() {
          return "Int32";
        }
        constructor(t4) {
          super(), t4 instanceof Number && (t4 = t4.valueOf()), this.value = 0 | +t4;
        }
        static fromString(t4) {
          const e3 = q(t4), r3 = Number(t4);
          if (f < r3)
            throw new m(`Input: '${t4}' is larger than the maximum value for Int32`);
          if (l > r3)
            throw new m(`Input: '${t4}' is smaller than the minimum value for Int32`);
          if (!Number.isSafeInteger(r3))
            throw new m(`Input: '${t4}' is not a safe integer`);
          if (r3.toString() !== e3)
            throw new m(`Input: '${t4}' is not a valid Int32 string`);
          return new ft(r3);
        }
        valueOf() {
          return this.value;
        }
        toString(t4) {
          return this.value.toString(t4);
        }
        toJSON() {
          return this.value;
        }
        toExtendedJSON(t4) {
          return t4 && (t4.relaxed || t4.legacy) ? this.value : { $numberInt: this.value.toString() };
        }
        static fromExtendedJSON(t4, e3) {
          return e3 && e3.relaxed ? parseInt(t4.$numberInt, 10) : new ft(t4.$numberInt);
        }
        inspect(t4, e3, r3) {
          return r3 ??= u, `new Int32(${r3(this.value, e3)})`;
        }
      }

      class lt extends T {
        get _bsontype() {
          return "MaxKey";
        }
        toExtendedJSON() {
          return { $maxKey: 1 };
        }
        static fromExtendedJSON() {
          return new lt;
        }
        inspect() {
          return "new MaxKey()";
        }
      }

      class ht extends T {
        get _bsontype() {
          return "MinKey";
        }
        toExtendedJSON() {
          return { $minKey: 1 };
        }
        static fromExtendedJSON() {
          return new ht;
        }
        inspect() {
          return "new MinKey()";
        }
      }
      const pt = new Float64Array(1), dt = new Uint8Array(pt.buffer, 0, 8);
      pt[0] = -1;
      const yt = dt[7] === 0, bt = { getNonnegativeInt32LE(t4, e3) {
        if (t4[e3 + 3] > 127)
          throw new RangeError(`Size cannot be negative at offset: ${e3}`);
        return t4[e3] | t4[e3 + 1] << 8 | t4[e3 + 2] << 16 | t4[e3 + 3] << 24;
      }, getInt32LE: (t4, e3) => t4[e3] | t4[e3 + 1] << 8 | t4[e3 + 2] << 16 | t4[e3 + 3] << 24, getUint32LE: (t4, e3) => t4[e3] + 256 * t4[e3 + 1] + 65536 * t4[e3 + 2] + 16777216 * t4[e3 + 3], getUint32BE: (t4, e3) => t4[e3 + 3] + 256 * t4[e3 + 2] + 65536 * t4[e3 + 1] + 16777216 * t4[e3], getBigInt64LE(t4, e3) {
        const r3 = bt.getUint32LE(t4, e3), n2 = bt.getUint32LE(t4, e3 + 4);
        return (BigInt(n2) << BigInt(32)) + BigInt(r3);
      }, getFloat64LE: yt ? (t4, e3) => (dt[7] = t4[e3], dt[6] = t4[e3 + 1], dt[5] = t4[e3 + 2], dt[4] = t4[e3 + 3], dt[3] = t4[e3 + 4], dt[2] = t4[e3 + 5], dt[1] = t4[e3 + 6], dt[0] = t4[e3 + 7], pt[0]) : (t4, e3) => (dt[0] = t4[e3], dt[1] = t4[e3 + 1], dt[2] = t4[e3 + 2], dt[3] = t4[e3 + 3], dt[4] = t4[e3 + 4], dt[5] = t4[e3 + 5], dt[6] = t4[e3 + 6], dt[7] = t4[e3 + 7], pt[0]), setInt32BE: (t4, e3, r3) => (t4[e3 + 3] = r3, r3 >>>= 8, t4[e3 + 2] = r3, r3 >>>= 8, t4[e3 + 1] = r3, r3 >>>= 8, t4[e3] = r3, 4), setInt32LE: (t4, e3, r3) => (t4[e3] = r3, r3 >>>= 8, t4[e3 + 1] = r3, r3 >>>= 8, t4[e3 + 2] = r3, r3 >>>= 8, t4[e3 + 3] = r3, 4), setBigInt64LE(t4, e3, r3) {
        const n2 = BigInt(4294967295);
        let i2 = Number(r3 & n2);
        t4[e3] = i2, i2 >>= 8, t4[e3 + 1] = i2, i2 >>= 8, t4[e3 + 2] = i2, i2 >>= 8, t4[e3 + 3] = i2;
        let o2 = Number(r3 >> BigInt(32) & n2);
        return t4[e3 + 4] = o2, o2 >>= 8, t4[e3 + 5] = o2, o2 >>= 8, t4[e3 + 6] = o2, o2 >>= 8, t4[e3 + 7] = o2, 8;
      }, setFloat64LE: yt ? (t4, e3, r3) => (pt[0] = r3, t4[e3] = dt[7], t4[e3 + 1] = dt[6], t4[e3 + 2] = dt[5], t4[e3 + 3] = dt[4], t4[e3 + 4] = dt[3], t4[e3 + 5] = dt[2], t4[e3 + 6] = dt[1], t4[e3 + 7] = dt[0], 8) : (t4, e3, r3) => (pt[0] = r3, t4[e3] = dt[0], t4[e3 + 1] = dt[1], t4[e3 + 2] = dt[2], t4[e3 + 3] = dt[3], t4[e3 + 4] = dt[4], t4[e3 + 5] = dt[5], t4[e3 + 6] = dt[6], t4[e3 + 7] = dt[7], 8) }, mt = new RegExp("^[0-9a-fA-F]{24}$");
      let vt = null;

      class gt extends T {
        get _bsontype() {
          return "ObjectId";
        }
        constructor(t4) {
          let e3;
          if (super(), typeof t4 == "object" && t4 && "id" in t4) {
            if (typeof t4.id != "string" && !ArrayBuffer.isView(t4.id))
              throw new m("Argument passed in must have an id that is of type string or Buffer");
            e3 = "toHexString" in t4 && typeof t4.toHexString == "function" ? I.fromHex(t4.toHexString()) : t4.id;
          } else
            e3 = t4;
          if (e3 == null || typeof e3 == "number")
            this.buffer = gt.generate(typeof e3 == "number" ? e3 : undefined);
          else if (ArrayBuffer.isView(e3) && e3.byteLength === 12)
            this.buffer = I.toLocalBufferType(e3);
          else {
            if (typeof e3 != "string")
              throw new m("Argument passed in does not match the accepted types");
            if (e3.length !== 24 || !mt.test(e3))
              throw new m("input must be a 24 character hex string, 12 byte Uint8Array, or an integer");
            this.buffer = I.fromHex(e3);
          }
          gt.cacheHexString && (this.__id = I.toHex(this.id));
        }
        get id() {
          return this.buffer;
        }
        set id(t4) {
          this.buffer = t4, gt.cacheHexString && (this.__id = I.toHex(t4));
        }
        toHexString() {
          if (gt.cacheHexString && this.__id)
            return this.__id;
          const t4 = I.toHex(this.id);
          return gt.cacheHexString && !this.__id && (this.__id = t4), t4;
        }
        static getInc() {
          return gt.index = (gt.index + 1) % 16777215;
        }
        static generate(t4) {
          typeof t4 != "number" && (t4 = Math.floor(Date.now() / 1000));
          const e3 = gt.getInc(), r3 = I.allocateUnsafe(12);
          return bt.setInt32BE(r3, 0, t4), vt === null && (vt = I.randomBytes(5)), r3[4] = vt[0], r3[5] = vt[1], r3[6] = vt[2], r3[7] = vt[3], r3[8] = vt[4], r3[11] = 255 & e3, r3[10] = e3 >> 8 & 255, r3[9] = e3 >> 16 & 255, r3;
        }
        toString(t4) {
          return t4 === "base64" ? I.toBase64(this.id) : this.toHexString();
        }
        toJSON() {
          return this.toHexString();
        }
        static is(t4) {
          return t4 != null && typeof t4 == "object" && "_bsontype" in t4 && t4._bsontype === "ObjectId";
        }
        equals(t4) {
          if (t4 == null)
            return false;
          if (gt.is(t4))
            return this.buffer[11] === t4.buffer[11] && I.equals(this.buffer, t4.buffer);
          if (typeof t4 == "string")
            return t4.toLowerCase() === this.toHexString();
          if (typeof t4 == "object" && typeof t4.toHexString == "function") {
            const e3 = t4.toHexString(), r3 = this.toHexString();
            return typeof e3 == "string" && e3.toLowerCase() === r3;
          }
          return false;
        }
        getTimestamp() {
          const t4 = new Date, e3 = bt.getUint32BE(this.buffer, 0);
          return t4.setTime(1000 * Math.floor(e3)), t4;
        }
        static createPk() {
          return new gt;
        }
        serializeInto(t4, e3) {
          return t4[e3] = this.buffer[0], t4[e3 + 1] = this.buffer[1], t4[e3 + 2] = this.buffer[2], t4[e3 + 3] = this.buffer[3], t4[e3 + 4] = this.buffer[4], t4[e3 + 5] = this.buffer[5], t4[e3 + 6] = this.buffer[6], t4[e3 + 7] = this.buffer[7], t4[e3 + 8] = this.buffer[8], t4[e3 + 9] = this.buffer[9], t4[e3 + 10] = this.buffer[10], t4[e3 + 11] = this.buffer[11], 12;
        }
        static createFromTime(t4) {
          const e3 = I.allocate(12);
          for (let t5 = 11;t5 >= 4; t5--)
            e3[t5] = 0;
          return bt.setInt32BE(e3, 0, t4), new gt(e3);
        }
        static createFromHexString(t4) {
          if (t4?.length !== 24)
            throw new m("hex string must be 24 characters");
          return new gt(I.fromHex(t4));
        }
        static createFromBase64(t4) {
          if (t4?.length !== 16)
            throw new m("base64 string must be 16 characters");
          return new gt(I.fromBase64(t4));
        }
        static isValid(t4) {
          if (t4 == null)
            return false;
          try {
            return new gt(t4), true;
          } catch {
            return false;
          }
        }
        toExtendedJSON() {
          return this.toHexString ? { $oid: this.toHexString() } : { $oid: this.toString("hex") };
        }
        static fromExtendedJSON(t4) {
          return new gt(t4.$oid);
        }
        inspect(t4, e3, r3) {
          return r3 ??= u, `new ObjectId(${r3(this.toHexString(), e3)})`;
        }
      }
      function _t(t4, e3, r3) {
        let n2 = 5;
        if (Array.isArray(t4))
          for (let i2 = 0;i2 < t4.length; i2++)
            n2 += wt(i2.toString(), t4[i2], e3, true, r3);
        else {
          typeof t4?.toBSON == "function" && (t4 = t4.toBSON());
          for (const i2 of Object.keys(t4))
            n2 += wt(i2, t4[i2], e3, false, r3);
        }
        return n2;
      }
      function wt(t4, e3, r3 = false, n2 = false, o2 = false) {
        switch (typeof e3?.toBSON == "function" && (e3 = e3.toBSON()), typeof e3) {
          case "string":
            return 1 + I.utf8ByteLength(t4) + 1 + 4 + I.utf8ByteLength(e3) + 1;
          case "number":
            return Math.floor(e3) === e3 && e3 >= y && e3 <= d && e3 >= l && e3 <= f ? (t4 != null ? I.utf8ByteLength(t4) + 1 : 0) + 5 : (t4 != null ? I.utf8ByteLength(t4) + 1 : 0) + 9;
          case "undefined":
            return n2 || !o2 ? (t4 != null ? I.utf8ByteLength(t4) + 1 : 0) + 1 : 0;
          case "boolean":
            return (t4 != null ? I.utf8ByteLength(t4) + 1 : 0) + 2;
          case "object":
            if (e3 != null && typeof e3._bsontype == "string" && e3[Symbol.for("@@mdb.bson.version")] !== 6)
              throw new v;
            if (e3 == null || e3._bsontype === "MinKey" || e3._bsontype === "MaxKey")
              return (t4 != null ? I.utf8ByteLength(t4) + 1 : 0) + 1;
            if (e3._bsontype === "ObjectId")
              return (t4 != null ? I.utf8ByteLength(t4) + 1 : 0) + 13;
            if (e3 instanceof Date || c(e3))
              return (t4 != null ? I.utf8ByteLength(t4) + 1 : 0) + 9;
            if (ArrayBuffer.isView(e3) || e3 instanceof ArrayBuffer || i(e3))
              return (t4 != null ? I.utf8ByteLength(t4) + 1 : 0) + 6 + e3.byteLength;
            if (e3._bsontype === "Long" || e3._bsontype === "Double" || e3._bsontype === "Timestamp")
              return (t4 != null ? I.utf8ByteLength(t4) + 1 : 0) + 9;
            if (e3._bsontype === "Decimal128")
              return (t4 != null ? I.utf8ByteLength(t4) + 1 : 0) + 17;
            if (e3._bsontype === "Code")
              return e3.scope != null && Object.keys(e3.scope).length > 0 ? (t4 != null ? I.utf8ByteLength(t4) + 1 : 0) + 1 + 4 + 4 + I.utf8ByteLength(e3.code.toString()) + 1 + _t(e3.scope, r3, o2) : (t4 != null ? I.utf8ByteLength(t4) + 1 : 0) + 1 + 4 + I.utf8ByteLength(e3.code.toString()) + 1;
            if (e3._bsontype === "Binary") {
              const r4 = e3;
              return r4.sub_type === B.SUBTYPE_BYTE_ARRAY ? (t4 != null ? I.utf8ByteLength(t4) + 1 : 0) + (r4.position + 1 + 4 + 1 + 4) : (t4 != null ? I.utf8ByteLength(t4) + 1 : 0) + (r4.position + 1 + 4 + 1);
            }
            if (e3._bsontype === "Symbol")
              return (t4 != null ? I.utf8ByteLength(t4) + 1 : 0) + I.utf8ByteLength(e3.value) + 4 + 1 + 1;
            if (e3._bsontype === "DBRef") {
              const n3 = Object.assign({ $ref: e3.collection, $id: e3.oid }, e3.fields);
              return e3.db != null && (n3.$db = e3.db), (t4 != null ? I.utf8ByteLength(t4) + 1 : 0) + 1 + _t(n3, r3, o2);
            }
            return e3 instanceof RegExp || a(e3) ? (t4 != null ? I.utf8ByteLength(t4) + 1 : 0) + 1 + I.utf8ByteLength(e3.source) + 1 + (e3.global ? 1 : 0) + (e3.ignoreCase ? 1 : 0) + (e3.multiline ? 1 : 0) + 1 : e3._bsontype === "BSONRegExp" ? (t4 != null ? I.utf8ByteLength(t4) + 1 : 0) + 1 + I.utf8ByteLength(e3.pattern) + 1 + I.utf8ByteLength(e3.options) + 1 : (t4 != null ? I.utf8ByteLength(t4) + 1 : 0) + _t(e3, r3, o2) + 1;
          case "function":
            if (r3)
              return (t4 != null ? I.utf8ByteLength(t4) + 1 : 0) + 1 + 4 + I.utf8ByteLength(e3.toString()) + 1;
        }
        return 0;
      }
      gt.index = Math.floor(16777215 * Math.random());

      class St extends T {
        get _bsontype() {
          return "BSONRegExp";
        }
        constructor(t4, e3) {
          if (super(), this.pattern = t4, this.options = (e3 ?? "").split("").sort().join(""), this.pattern.indexOf("\0") !== -1)
            throw new m(`BSON Regex patterns cannot contain null bytes, found: ${JSON.stringify(this.pattern)}`);
          if (this.options.indexOf("\0") !== -1)
            throw new m(`BSON Regex options cannot contain null bytes, found: ${JSON.stringify(this.options)}`);
          for (let t5 = 0;t5 < this.options.length; t5++)
            if (this.options[t5] !== "i" && this.options[t5] !== "m" && this.options[t5] !== "x" && this.options[t5] !== "l" && this.options[t5] !== "s" && this.options[t5] !== "u")
              throw new m(`The regular expression option [${this.options[t5]}] is not supported`);
        }
        static parseOptions(t4) {
          return t4 ? t4.split("").sort().join("") : "";
        }
        toExtendedJSON(t4) {
          return (t4 = t4 || {}).legacy ? { $regex: this.pattern, $options: this.options } : { $regularExpression: { pattern: this.pattern, options: this.options } };
        }
        static fromExtendedJSON(t4) {
          if ("$regex" in t4) {
            if (typeof t4.$regex == "string")
              return new St(t4.$regex, St.parseOptions(t4.$options));
            if (t4.$regex._bsontype === "BSONRegExp")
              return t4;
          }
          if ("$regularExpression" in t4)
            return new St(t4.$regularExpression.pattern, St.parseOptions(t4.$regularExpression.options));
          throw new m(`Unexpected BSONRegExp EJSON object form: ${JSON.stringify(t4)}`);
        }
        inspect(t4, e3, r3) {
          const n2 = function(t5) {
            if (t5 != null && typeof t5 == "object" && "stylize" in t5 && typeof t5.stylize == "function")
              return t5.stylize;
          }(e3) ?? ((t5) => t5);
          return r3 ??= u, `new BSONRegExp(${n2(r3(this.pattern), "regexp")}, ${n2(r3(this.options), "regexp")})`;
        }
      }

      class Ot extends T {
        get _bsontype() {
          return "BSONSymbol";
        }
        constructor(t4) {
          super(), this.value = t4;
        }
        valueOf() {
          return this.value;
        }
        toString() {
          return this.value;
        }
        toJSON() {
          return this.value;
        }
        toExtendedJSON() {
          return { $symbol: this.value };
        }
        static fromExtendedJSON(t4) {
          return new Ot(t4.$symbol);
        }
        inspect(t4, e3, r3) {
          return r3 ??= u, `new BSONSymbol(${r3(this.value, e3)})`;
        }
      }
      const jt = G;

      class $t extends jt {
        get _bsontype() {
          return "Timestamp";
        }
        constructor(t4) {
          if (t4 == null)
            super(0, 0, true);
          else if (typeof t4 == "bigint")
            super(t4, true);
          else if (G.isLong(t4))
            super(t4.low, t4.high, true);
          else {
            if (typeof t4 != "object" || !("t" in t4) || !("i" in t4))
              throw new m("A Timestamp can only be constructed with: bigint, Long, or { t: number; i: number }");
            {
              if (typeof t4.t != "number" && (typeof t4.t != "object" || t4.t._bsontype !== "Int32"))
                throw new m("Timestamp constructed from { t, i } must provide t as a number");
              if (typeof t4.i != "number" && (typeof t4.i != "object" || t4.i._bsontype !== "Int32"))
                throw new m("Timestamp constructed from { t, i } must provide i as a number");
              const e3 = Number(t4.t), r3 = Number(t4.i);
              if (e3 < 0 || Number.isNaN(e3))
                throw new m("Timestamp constructed from { t, i } must provide a positive t");
              if (r3 < 0 || Number.isNaN(r3))
                throw new m("Timestamp constructed from { t, i } must provide a positive i");
              if (e3 > 4294967295)
                throw new m("Timestamp constructed from { t, i } must provide t equal or less than uint32 max");
              if (r3 > 4294967295)
                throw new m("Timestamp constructed from { t, i } must provide i equal or less than uint32 max");
              super(r3, e3, true);
            }
          }
        }
        toJSON() {
          return { $timestamp: this.toString() };
        }
        static fromInt(t4) {
          return new $t(G.fromInt(t4, true));
        }
        static fromNumber(t4) {
          return new $t(G.fromNumber(t4, true));
        }
        static fromBits(t4, e3) {
          return new $t({ i: t4, t: e3 });
        }
        static fromString(t4, e3) {
          return new $t(G.fromString(t4, true, e3));
        }
        toExtendedJSON() {
          return { $timestamp: { t: this.high >>> 0, i: this.low >>> 0 } };
        }
        static fromExtendedJSON(t4) {
          const e3 = G.isLong(t4.$timestamp.i) ? t4.$timestamp.i.getLowBitsUnsigned() : t4.$timestamp.i, r3 = G.isLong(t4.$timestamp.t) ? t4.$timestamp.t.getLowBitsUnsigned() : t4.$timestamp.t;
          return new $t({ t: r3, i: e3 });
        }
        inspect(t4, e3, r3) {
          return r3 ??= u, `new Timestamp({ t: ${r3(this.high >>> 0, e3)}, i: ${r3(this.low >>> 0, e3)} })`;
        }
      }
      $t.MAX_VALUE = G.MAX_UNSIGNED_VALUE;
      const At = G.fromNumber(d), Et = G.fromNumber(y);
      function xt(t4, e3, r3) {
        const n2 = (e3 = e3 == null ? {} : e3) && e3.index ? e3.index : 0, i2 = bt.getInt32LE(t4, n2);
        if (i2 < 5)
          throw new m(`bson size must be >= 5, is ${i2}`);
        if (e3.allowObjectSmallerThanBufferSize && t4.length < i2)
          throw new m(`buffer length ${t4.length} must be >= bson size ${i2}`);
        if (!e3.allowObjectSmallerThanBufferSize && t4.length !== i2)
          throw new m(`buffer length ${t4.length} must === bson size ${i2}`);
        if (i2 + n2 > t4.byteLength)
          throw new m(`(bson size ${i2} + options.index ${n2} must be <= buffer length ${t4.byteLength})`);
        if (t4[n2 + i2 - 1] !== 0)
          throw new m("One object, sized correctly, with a spot for an EOO, but the EOO isn't 0x00");
        return kt(t4, n2, e3, r3);
      }
      const Pt = /^\$ref$|^\$id$|^\$db$/;
      function kt(t4, e3, r3, n2 = false) {
        const i2 = r3.fieldsAsRaw == null ? null : r3.fieldsAsRaw, o2 = r3.raw != null && r3.raw, a2 = typeof r3.bsonRegExp == "boolean" && r3.bsonRegExp, s2 = r3.promoteBuffers ?? false, c2 = r3.promoteLongs ?? true, u2 = r3.promoteValues ?? true, f2 = r3.useBigInt64 ?? false;
        if (f2 && !u2)
          throw new m("Must either request bigint or Long for int64 deserialization");
        if (f2 && !c2)
          throw new m("Must either request bigint or Long for int64 deserialization");
        let l2, h2, p2 = true;
        const d2 = (r3.validation == null ? { utf8: true } : r3.validation).utf8;
        if (typeof d2 == "boolean")
          l2 = d2;
        else {
          p2 = false;
          const t5 = Object.keys(d2).map(function(t6) {
            return d2[t6];
          });
          if (t5.length === 0)
            throw new m("UTF-8 validation setting cannot be empty");
          if (typeof t5[0] != "boolean")
            throw new m("Invalid UTF-8 validation option, must specify boolean values");
          if (l2 = t5[0], !t5.every((t6) => t6 === l2))
            throw new m("Invalid UTF-8 validation option - keys must be all true or all false");
        }
        if (!p2) {
          h2 = new Set;
          for (const t5 of Object.keys(d2))
            h2.add(t5);
        }
        const y2 = e3;
        if (t4.length < 5)
          throw new m("corrupt bson message < 5 bytes long");
        const b2 = bt.getInt32LE(t4, e3);
        if (e3 += 4, b2 < 5 || b2 > t4.length)
          throw new m("corrupt bson message");
        const v2 = n2 ? [] : {};
        let g2 = 0, _2 = !n2 && null;
        for (;; ) {
          const d3 = t4[e3++];
          if (d3 === 0)
            break;
          let y3 = e3;
          for (;t4[y3] !== 0 && y3 < t4.length; )
            y3++;
          if (y3 >= t4.byteLength)
            throw new m("Bad BSON Document: illegal CString");
          const b3 = n2 ? g2++ : I.toUTF8(t4, e3, y3, false);
          let w2, S2 = true;
          if (S2 = p2 || h2?.has(b3) ? l2 : !l2, _2 !== false && b3[0] === "$" && (_2 = Pt.test(b3)), e3 = y3 + 1, d3 === 2) {
            const r4 = bt.getInt32LE(t4, e3);
            if (e3 += 4, r4 <= 0 || r4 > t4.length - e3 || t4[e3 + r4 - 1] !== 0)
              throw new m("bad string length in bson");
            w2 = I.toUTF8(t4, e3, e3 + r4 - 1, S2), e3 += r4;
          } else if (d3 === 7) {
            const r4 = I.allocateUnsafe(12);
            for (let n3 = 0;n3 < 12; n3++)
              r4[n3] = t4[e3 + n3];
            w2 = new gt(r4), e3 += 12;
          } else if (d3 === 16 && u2 === false)
            w2 = new ft(bt.getInt32LE(t4, e3)), e3 += 4;
          else if (d3 === 16)
            w2 = bt.getInt32LE(t4, e3), e3 += 4;
          else if (d3 === 1)
            w2 = bt.getFloat64LE(t4, e3), e3 += 8, u2 === false && (w2 = new ut(w2));
          else if (d3 === 9) {
            const r4 = bt.getInt32LE(t4, e3), n3 = bt.getInt32LE(t4, e3 + 4);
            e3 += 8, w2 = new Date(new G(r4, n3).toNumber());
          } else if (d3 === 8) {
            if (t4[e3] !== 0 && t4[e3] !== 1)
              throw new m("illegal boolean type value");
            w2 = t4[e3++] === 1;
          } else if (d3 === 3) {
            const n3 = e3, i3 = bt.getInt32LE(t4, e3);
            if (i3 <= 0 || i3 > t4.length - e3)
              throw new m("bad embedded document length in bson");
            if (o2)
              w2 = t4.slice(e3, e3 + i3);
            else {
              let e4 = r3;
              p2 || (e4 = { ...r3, validation: { utf8: S2 } }), w2 = kt(t4, n3, e4, false);
            }
            e3 += i3;
          } else if (d3 === 4) {
            const n3 = e3, o3 = bt.getInt32LE(t4, e3);
            let a3 = r3;
            const s3 = e3 + o3;
            if (i2 && i2[b3] && (a3 = { ...r3, raw: true }), p2 || (a3 = { ...a3, validation: { utf8: S2 } }), w2 = kt(t4, n3, a3, true), t4[(e3 += o3) - 1] !== 0)
              throw new m("invalid array terminator byte");
            if (e3 !== s3)
              throw new m("corrupted array bson");
          } else if (d3 === 6)
            w2 = undefined;
          else if (d3 === 10)
            w2 = null;
          else if (d3 === 18)
            if (f2)
              w2 = bt.getBigInt64LE(t4, e3), e3 += 8;
            else {
              const r4 = bt.getInt32LE(t4, e3), n3 = bt.getInt32LE(t4, e3 + 4);
              e3 += 8;
              const i3 = new G(r4, n3);
              w2 = c2 && u2 === true && i3.lessThanOrEqual(At) && i3.greaterThanOrEqual(Et) ? i3.toNumber() : i3;
            }
          else if (d3 === 19) {
            const r4 = I.allocateUnsafe(16);
            for (let n3 = 0;n3 < 16; n3++)
              r4[n3] = t4[e3 + n3];
            e3 += 16, w2 = new ct(r4);
          } else if (d3 === 5) {
            let r4 = bt.getInt32LE(t4, e3);
            e3 += 4;
            const n3 = r4, i3 = t4[e3++];
            if (r4 < 0)
              throw new m("Negative binary type element size found");
            if (r4 > t4.byteLength)
              throw new m("Binary type size larger than document size");
            if (t4.slice != null) {
              if (i3 === B.SUBTYPE_BYTE_ARRAY) {
                if (r4 = bt.getInt32LE(t4, e3), e3 += 4, r4 < 0)
                  throw new m("Negative binary type element size found for subtype 0x02");
                if (r4 > n3 - 4)
                  throw new m("Binary type with subtype 0x02 contains too long binary size");
                if (r4 < n3 - 4)
                  throw new m("Binary type with subtype 0x02 contains too short binary size");
              }
              s2 && u2 ? w2 = I.toLocalBufferType(t4.slice(e3, e3 + r4)) : (w2 = new B(t4.slice(e3, e3 + r4), i3), i3 === 4 && D.isValid(w2) && (w2 = w2.toUUID()));
            } else {
              if (i3 === B.SUBTYPE_BYTE_ARRAY) {
                if (r4 = bt.getInt32LE(t4, e3), e3 += 4, r4 < 0)
                  throw new m("Negative binary type element size found for subtype 0x02");
                if (r4 > n3 - 4)
                  throw new m("Binary type with subtype 0x02 contains too long binary size");
                if (r4 < n3 - 4)
                  throw new m("Binary type with subtype 0x02 contains too short binary size");
              }
              if (s2 && u2)
                for (w2 = I.allocateUnsafe(r4), y3 = 0;y3 < r4; y3++)
                  w2[y3] = t4[e3 + y3];
              else
                w2 = new B(t4.slice(e3, e3 + r4), i3), i3 === 4 && D.isValid(w2) && (w2 = w2.toUUID());
            }
            e3 += r4;
          } else if (d3 === 11 && a2 === false) {
            for (y3 = e3;t4[y3] !== 0 && y3 < t4.length; )
              y3++;
            if (y3 >= t4.length)
              throw new m("Bad BSON Document: illegal CString");
            const r4 = I.toUTF8(t4, e3, y3, false);
            for (y3 = e3 = y3 + 1;t4[y3] !== 0 && y3 < t4.length; )
              y3++;
            if (y3 >= t4.length)
              throw new m("Bad BSON Document: illegal CString");
            const n3 = I.toUTF8(t4, e3, y3, false);
            e3 = y3 + 1;
            const i3 = new Array(n3.length);
            for (y3 = 0;y3 < n3.length; y3++)
              switch (n3[y3]) {
                case "m":
                  i3[y3] = "m";
                  break;
                case "s":
                  i3[y3] = "g";
                  break;
                case "i":
                  i3[y3] = "i";
              }
            w2 = new RegExp(r4, i3.join(""));
          } else if (d3 === 11 && a2 === true) {
            for (y3 = e3;t4[y3] !== 0 && y3 < t4.length; )
              y3++;
            if (y3 >= t4.length)
              throw new m("Bad BSON Document: illegal CString");
            const r4 = I.toUTF8(t4, e3, y3, false);
            for (y3 = e3 = y3 + 1;t4[y3] !== 0 && y3 < t4.length; )
              y3++;
            if (y3 >= t4.length)
              throw new m("Bad BSON Document: illegal CString");
            const n3 = I.toUTF8(t4, e3, y3, false);
            e3 = y3 + 1, w2 = new St(r4, n3);
          } else if (d3 === 14) {
            const r4 = bt.getInt32LE(t4, e3);
            if (e3 += 4, r4 <= 0 || r4 > t4.length - e3 || t4[e3 + r4 - 1] !== 0)
              throw new m("bad string length in bson");
            const n3 = I.toUTF8(t4, e3, e3 + r4 - 1, S2);
            w2 = u2 ? n3 : new Ot(n3), e3 += r4;
          } else if (d3 === 17)
            w2 = new $t({ i: bt.getUint32LE(t4, e3), t: bt.getUint32LE(t4, e3 + 4) }), e3 += 8;
          else if (d3 === 255)
            w2 = new ht;
          else if (d3 === 127)
            w2 = new lt;
          else if (d3 === 13) {
            const r4 = bt.getInt32LE(t4, e3);
            if (e3 += 4, r4 <= 0 || r4 > t4.length - e3 || t4[e3 + r4 - 1] !== 0)
              throw new m("bad string length in bson");
            const n3 = I.toUTF8(t4, e3, e3 + r4 - 1, S2);
            w2 = new L(n3), e3 += r4;
          } else if (d3 === 15) {
            const n3 = bt.getInt32LE(t4, e3);
            if (e3 += 4, n3 < 13)
              throw new m("code_w_scope total size shorter minimum expected length");
            const i3 = bt.getInt32LE(t4, e3);
            if (e3 += 4, i3 <= 0 || i3 > t4.length - e3 || t4[e3 + i3 - 1] !== 0)
              throw new m("bad string length in bson");
            const o3 = I.toUTF8(t4, e3, e3 + i3 - 1, S2), a3 = e3 += i3, s3 = bt.getInt32LE(t4, e3), c3 = kt(t4, a3, r3, false);
            if (e3 += s3, n3 < 8 + s3 + i3)
              throw new m("code_w_scope total size is too short, truncating scope");
            if (n3 > 8 + s3 + i3)
              throw new m("code_w_scope total size is too long, clips outer document");
            w2 = new L(o3, c3);
          } else {
            if (d3 !== 12)
              throw new m(`Detected unknown BSON type ${d3.toString(16)} for fieldname "${b3}"`);
            {
              const r4 = bt.getInt32LE(t4, e3);
              if (e3 += 4, r4 <= 0 || r4 > t4.length - e3 || t4[e3 + r4 - 1] !== 0)
                throw new m("bad string length in bson");
              const n3 = I.toUTF8(t4, e3, e3 + r4 - 1, S2);
              e3 += r4;
              const i3 = I.allocateUnsafe(12);
              for (let r5 = 0;r5 < 12; r5++)
                i3[r5] = t4[e3 + r5];
              const o3 = new gt(i3);
              e3 += 12, w2 = new U(n3, o3);
            }
          }
          b3 === "__proto__" ? Object.defineProperty(v2, b3, { value: w2, writable: true, enumerable: true, configurable: true }) : v2[b3] = w2;
        }
        if (b2 !== e3 - y2) {
          if (n2)
            throw new m("corrupt array bson");
          throw new m("corrupt object bson");
        }
        if (!_2)
          return v2;
        if (C(v2)) {
          const t5 = Object.assign({}, v2);
          return delete t5.$ref, delete t5.$id, delete t5.$db, new U(v2.$ref, v2.$id, v2.$db, t5);
        }
        return v2;
      }
      const Mt = /\x00/, It = new Set(["$db", "$ref", "$id", "$clusterTime"]);
      function Tt(t4, e3, r3, n2) {
        t4[n2++] = 2, t4[(n2 = n2 + I.encodeUTF8Into(t4, e3, n2) + 1) - 1] = 0;
        const i2 = I.encodeUTF8Into(t4, r3, n2 + 4);
        return bt.setInt32LE(t4, n2, i2 + 1), n2 = n2 + 4 + i2, t4[n2++] = 0, n2;
      }
      function Bt(t4, e3, r3, n2) {
        const i2 = !Object.is(r3, -0) && Number.isSafeInteger(r3) && r3 <= f && r3 >= l ? 16 : 1;
        return t4[n2++] = i2, n2 += I.encodeUTF8Into(t4, e3, n2), t4[n2++] = 0, n2 + (i2 === 16 ? bt.setInt32LE(t4, n2, r3) : bt.setFloat64LE(t4, n2, r3));
      }
      function Rt(t4, e3, r3, n2) {
        return t4[n2++] = 18, n2 += I.encodeUTF8Into(t4, e3, n2), t4[n2++] = 0, n2 + bt.setBigInt64LE(t4, n2, r3);
      }
      function Nt(t4, e3, r3, n2) {
        return t4[n2++] = 10, n2 += I.encodeUTF8Into(t4, e3, n2), t4[n2++] = 0, n2;
      }
      function Dt(t4, e3, r3, n2) {
        return t4[n2++] = 8, n2 += I.encodeUTF8Into(t4, e3, n2), t4[n2++] = 0, t4[n2++] = r3 ? 1 : 0, n2;
      }
      function Lt(t4, e3, r3, n2) {
        t4[n2++] = 9, n2 += I.encodeUTF8Into(t4, e3, n2), t4[n2++] = 0;
        const i2 = G.fromNumber(r3.getTime()), o2 = i2.getLowBits(), a2 = i2.getHighBits();
        return (n2 += bt.setInt32LE(t4, n2, o2)) + bt.setInt32LE(t4, n2, a2);
      }
      function Ct(t4, e3, r3, n2) {
        if (t4[n2++] = 11, n2 += I.encodeUTF8Into(t4, e3, n2), t4[n2++] = 0, r3.source && r3.source.match(Mt) != null)
          throw new m("value " + r3.source + " must not contain null bytes");
        return n2 += I.encodeUTF8Into(t4, r3.source, n2), t4[n2++] = 0, r3.ignoreCase && (t4[n2++] = 105), r3.global && (t4[n2++] = 115), r3.multiline && (t4[n2++] = 109), t4[n2++] = 0, n2;
      }
      function Ut(t4, e3, r3, n2) {
        if (t4[n2++] = 11, n2 += I.encodeUTF8Into(t4, e3, n2), t4[n2++] = 0, r3.pattern.match(Mt) != null)
          throw new m("pattern " + r3.pattern + " must not contain null bytes");
        n2 += I.encodeUTF8Into(t4, r3.pattern, n2), t4[n2++] = 0;
        const i2 = r3.options.split("").sort().join("");
        return n2 += I.encodeUTF8Into(t4, i2, n2), t4[n2++] = 0, n2;
      }
      function qt(t4, e3, r3, n2) {
        return r3 === null ? t4[n2++] = 10 : r3._bsontype === "MinKey" ? t4[n2++] = 255 : t4[n2++] = 127, n2 += I.encodeUTF8Into(t4, e3, n2), t4[n2++] = 0, n2;
      }
      function Ft(t4, e3, r3, n2) {
        return t4[n2++] = 7, n2 += I.encodeUTF8Into(t4, e3, n2), t4[n2++] = 0, n2 + r3.serializeInto(t4, n2);
      }
      function Vt(t4, e3, r3, n2) {
        t4[n2++] = 5, n2 += I.encodeUTF8Into(t4, e3, n2), t4[n2++] = 0;
        const i2 = r3.length;
        if (n2 += bt.setInt32LE(t4, n2, i2), t4[n2++] = 0, i2 <= 16)
          for (let e4 = 0;e4 < i2; e4++)
            t4[n2 + e4] = r3[e4];
        else
          t4.set(r3, n2);
        return n2 + i2;
      }
      function zt(t4, e3, r3, n2, i2, o2, a2, s2, c2) {
        if (c2.has(r3))
          throw new m("Cannot convert circular structure to BSON");
        c2.add(r3), t4[n2++] = Array.isArray(r3) ? 4 : 3, n2 += I.encodeUTF8Into(t4, e3, n2), t4[n2++] = 0;
        const u2 = te(t4, r3, i2, n2, o2 + 1, a2, s2, c2);
        return c2.delete(r3), u2;
      }
      function Kt(t4, e3, r3, n2) {
        t4[n2++] = 19, n2 += I.encodeUTF8Into(t4, e3, n2), t4[n2++] = 0;
        for (let e4 = 0;e4 < 16; e4++)
          t4[n2 + e4] = r3.bytes[e4];
        return n2 + 16;
      }
      function Ht(t4, e3, r3, n2) {
        t4[n2++] = r3._bsontype === "Long" ? 18 : 17, n2 += I.encodeUTF8Into(t4, e3, n2), t4[n2++] = 0;
        const i2 = r3.getLowBits(), o2 = r3.getHighBits();
        return (n2 += bt.setInt32LE(t4, n2, i2)) + bt.setInt32LE(t4, n2, o2);
      }
      function Wt(t4, e3, r3, n2) {
        return r3 = r3.valueOf(), t4[n2++] = 16, n2 += I.encodeUTF8Into(t4, e3, n2), t4[n2++] = 0, n2 + bt.setInt32LE(t4, n2, r3);
      }
      function Jt(t4, e3, r3, n2) {
        return t4[n2++] = 1, n2 += I.encodeUTF8Into(t4, e3, n2), t4[n2++] = 0, n2 + bt.setFloat64LE(t4, n2, r3.value);
      }
      function Gt(t4, e3, r3, n2) {
        t4[n2++] = 13, n2 += I.encodeUTF8Into(t4, e3, n2), t4[n2++] = 0;
        const i2 = r3.toString(), o2 = I.encodeUTF8Into(t4, i2, n2 + 4) + 1;
        return bt.setInt32LE(t4, n2, o2), n2 = n2 + 4 + o2 - 1, t4[n2++] = 0, n2;
      }
      function Yt(t4, e3, r3, n2, i2 = false, o2 = 0, a2 = false, s2 = true, c2) {
        if (r3.scope && typeof r3.scope == "object") {
          t4[n2++] = 15, n2 += I.encodeUTF8Into(t4, e3, n2), t4[n2++] = 0;
          let u2 = n2;
          const f2 = r3.code;
          n2 += 4;
          const l2 = I.encodeUTF8Into(t4, f2, n2 + 4) + 1;
          bt.setInt32LE(t4, n2, l2), t4[n2 + 4 + l2 - 1] = 0, n2 = n2 + l2 + 4;
          const h2 = te(t4, r3.scope, i2, n2, o2 + 1, a2, s2, c2);
          n2 = h2 - 1;
          const p2 = h2 - u2;
          u2 += bt.setInt32LE(t4, u2, p2), t4[n2++] = 0;
        } else {
          t4[n2++] = 13, n2 += I.encodeUTF8Into(t4, e3, n2), t4[n2++] = 0;
          const i3 = r3.code.toString(), o3 = I.encodeUTF8Into(t4, i3, n2 + 4) + 1;
          bt.setInt32LE(t4, n2, o3), n2 = n2 + 4 + o3 - 1, t4[n2++] = 0;
        }
        return n2;
      }
      function Qt(t4, e3, r3, n2) {
        t4[n2++] = 5, n2 += I.encodeUTF8Into(t4, e3, n2), t4[n2++] = 0;
        const i2 = r3.buffer;
        let o2 = r3.position;
        if (r3.sub_type === B.SUBTYPE_BYTE_ARRAY && (o2 += 4), n2 += bt.setInt32LE(t4, n2, o2), t4[n2++] = r3.sub_type, r3.sub_type === B.SUBTYPE_BYTE_ARRAY && (o2 -= 4, n2 += bt.setInt32LE(t4, n2, o2)), o2 <= 16)
          for (let e4 = 0;e4 < o2; e4++)
            t4[n2 + e4] = i2[e4];
        else
          t4.set(i2, n2);
        return n2 + r3.position;
      }
      function Xt(t4, e3, r3, n2) {
        t4[n2++] = 14, n2 += I.encodeUTF8Into(t4, e3, n2), t4[n2++] = 0;
        const i2 = I.encodeUTF8Into(t4, r3.value, n2 + 4) + 1;
        return bt.setInt32LE(t4, n2, i2), n2 = n2 + 4 + i2 - 1, t4[n2++] = 0, n2;
      }
      function Zt(t4, e3, r3, n2, i2, o2, a2) {
        t4[n2++] = 3, n2 += I.encodeUTF8Into(t4, e3, n2), t4[n2++] = 0;
        let s2 = n2, c2 = { $ref: r3.collection || r3.namespace, $id: r3.oid };
        r3.db != null && (c2.$db = r3.db), c2 = Object.assign(c2, r3.fields);
        const u2 = te(t4, c2, false, n2, i2 + 1, o2, true, a2), f2 = u2 - s2;
        return s2 += bt.setInt32LE(t4, n2, f2), u2;
      }
      function te(t4, e3, r3, n2, u2, f2, l2, h2) {
        if (h2 == null) {
          if (e3 == null)
            return t4[0] = 5, t4[1] = 0, t4[2] = 0, t4[3] = 0, t4[4] = 0, 5;
          if (Array.isArray(e3))
            throw new m("serialize does not support an array as the root input");
          if (typeof e3 != "object")
            throw new m("serialize does not support non-object as the root input");
          if ("_bsontype" in e3 && typeof e3._bsontype == "string")
            throw new m("BSON types cannot be serialized as a document");
          if (c(e3) || a(e3) || o(e3) || i(e3))
            throw new m("date, regexp, typedarray, and arraybuffer cannot be BSON documents");
          h2 = new Set;
        }
        h2.add(e3);
        let p2 = n2 + 4;
        if (Array.isArray(e3))
          for (let n3 = 0;n3 < e3.length; n3++) {
            const i2 = `${n3}`;
            let s2 = e3[n3];
            if (typeof s2?.toBSON == "function" && (s2 = s2.toBSON()), typeof s2 == "string")
              p2 = Tt(t4, i2, s2, p2);
            else if (typeof s2 == "number")
              p2 = Bt(t4, i2, s2, p2);
            else if (typeof s2 == "bigint")
              p2 = Rt(t4, i2, s2, p2);
            else if (typeof s2 == "boolean")
              p2 = Dt(t4, i2, s2, p2);
            else if (s2 instanceof Date || c(s2))
              p2 = Lt(t4, i2, s2, p2);
            else if (s2 === undefined)
              p2 = Nt(t4, i2, 0, p2);
            else if (s2 === null)
              p2 = Nt(t4, i2, 0, p2);
            else if (o(s2))
              p2 = Vt(t4, i2, s2, p2);
            else if (s2 instanceof RegExp || a(s2))
              p2 = Ct(t4, i2, s2, p2);
            else if (typeof s2 == "object" && s2._bsontype == null)
              p2 = zt(t4, i2, s2, p2, r3, u2, f2, l2, h2);
            else {
              if (typeof s2 == "object" && s2[Symbol.for("@@mdb.bson.version")] !== 6)
                throw new v;
              if (s2._bsontype === "ObjectId")
                p2 = Ft(t4, i2, s2, p2);
              else if (s2._bsontype === "Decimal128")
                p2 = Kt(t4, i2, s2, p2);
              else if (s2._bsontype === "Long" || s2._bsontype === "Timestamp")
                p2 = Ht(t4, i2, s2, p2);
              else if (s2._bsontype === "Double")
                p2 = Jt(t4, i2, s2, p2);
              else if (typeof s2 == "function" && f2)
                p2 = Gt(t4, i2, s2, p2);
              else if (s2._bsontype === "Code")
                p2 = Yt(t4, i2, s2, p2, r3, u2, f2, l2, h2);
              else if (s2._bsontype === "Binary")
                p2 = Qt(t4, i2, s2, p2);
              else if (s2._bsontype === "BSONSymbol")
                p2 = Xt(t4, i2, s2, p2);
              else if (s2._bsontype === "DBRef")
                p2 = Zt(t4, i2, s2, p2, u2, f2, h2);
              else if (s2._bsontype === "BSONRegExp")
                p2 = Ut(t4, i2, s2, p2);
              else if (s2._bsontype === "Int32")
                p2 = Wt(t4, i2, s2, p2);
              else if (s2._bsontype === "MinKey" || s2._bsontype === "MaxKey")
                p2 = qt(t4, i2, s2, p2);
              else if (s2._bsontype !== undefined)
                throw new m(`Unrecognized or invalid _bsontype: ${String(s2._bsontype)}`);
            }
          }
        else if (e3 instanceof Map || s(e3)) {
          const n3 = e3.entries();
          let i2 = false;
          for (;!i2; ) {
            const e4 = n3.next();
            if (i2 = !!e4.done, i2)
              continue;
            const s2 = e4.value[0];
            let d3 = e4.value[1];
            typeof d3?.toBSON == "function" && (d3 = d3.toBSON());
            const y2 = typeof d3;
            if (typeof s2 == "string" && !It.has(s2)) {
              if (s2.match(Mt) != null)
                throw new m("key " + s2 + " must not contain null bytes");
              if (r3) {
                if (s2[0] === "$")
                  throw new m("key " + s2 + " must not start with '$'");
                if (s2.includes("."))
                  throw new m("key " + s2 + " must not contain '.'");
              }
            }
            if (y2 === "string")
              p2 = Tt(t4, s2, d3, p2);
            else if (y2 === "number")
              p2 = Bt(t4, s2, d3, p2);
            else if (y2 === "bigint")
              p2 = Rt(t4, s2, d3, p2);
            else if (y2 === "boolean")
              p2 = Dt(t4, s2, d3, p2);
            else if (d3 instanceof Date || c(d3))
              p2 = Lt(t4, s2, d3, p2);
            else if (d3 === null || d3 === undefined && l2 === false)
              p2 = Nt(t4, s2, 0, p2);
            else if (o(d3))
              p2 = Vt(t4, s2, d3, p2);
            else if (d3 instanceof RegExp || a(d3))
              p2 = Ct(t4, s2, d3, p2);
            else if (y2 === "object" && d3._bsontype == null)
              p2 = zt(t4, s2, d3, p2, r3, u2, f2, l2, h2);
            else {
              if (typeof d3 == "object" && d3[Symbol.for("@@mdb.bson.version")] !== 6)
                throw new v;
              if (d3._bsontype === "ObjectId")
                p2 = Ft(t4, s2, d3, p2);
              else if (y2 === "object" && d3._bsontype === "Decimal128")
                p2 = Kt(t4, s2, d3, p2);
              else if (d3._bsontype === "Long" || d3._bsontype === "Timestamp")
                p2 = Ht(t4, s2, d3, p2);
              else if (d3._bsontype === "Double")
                p2 = Jt(t4, s2, d3, p2);
              else if (d3._bsontype === "Code")
                p2 = Yt(t4, s2, d3, p2, r3, u2, f2, l2, h2);
              else if (typeof d3 == "function" && f2)
                p2 = Gt(t4, s2, d3, p2);
              else if (d3._bsontype === "Binary")
                p2 = Qt(t4, s2, d3, p2);
              else if (d3._bsontype === "BSONSymbol")
                p2 = Xt(t4, s2, d3, p2);
              else if (d3._bsontype === "DBRef")
                p2 = Zt(t4, s2, d3, p2, u2, f2, h2);
              else if (d3._bsontype === "BSONRegExp")
                p2 = Ut(t4, s2, d3, p2);
              else if (d3._bsontype === "Int32")
                p2 = Wt(t4, s2, d3, p2);
              else if (d3._bsontype === "MinKey" || d3._bsontype === "MaxKey")
                p2 = qt(t4, s2, d3, p2);
              else if (d3._bsontype !== undefined)
                throw new m(`Unrecognized or invalid _bsontype: ${String(d3._bsontype)}`);
            }
          }
        } else {
          if (typeof e3?.toBSON == "function" && (e3 = e3.toBSON()) != null && typeof e3 != "object")
            throw new m("toBSON function did not return an object");
          for (const n3 of Object.keys(e3)) {
            let i2 = e3[n3];
            typeof i2?.toBSON == "function" && (i2 = i2.toBSON());
            const s2 = typeof i2;
            if (typeof n3 == "string" && !It.has(n3)) {
              if (n3.match(Mt) != null)
                throw new m("key " + n3 + " must not contain null bytes");
              if (r3) {
                if (n3[0] === "$")
                  throw new m("key " + n3 + " must not start with '$'");
                if (n3.includes("."))
                  throw new m("key " + n3 + " must not contain '.'");
              }
            }
            if (s2 === "string")
              p2 = Tt(t4, n3, i2, p2);
            else if (s2 === "number")
              p2 = Bt(t4, n3, i2, p2);
            else if (s2 === "bigint")
              p2 = Rt(t4, n3, i2, p2);
            else if (s2 === "boolean")
              p2 = Dt(t4, n3, i2, p2);
            else if (i2 instanceof Date || c(i2))
              p2 = Lt(t4, n3, i2, p2);
            else if (i2 === undefined)
              l2 === false && (p2 = Nt(t4, n3, 0, p2));
            else if (i2 === null)
              p2 = Nt(t4, n3, 0, p2);
            else if (o(i2))
              p2 = Vt(t4, n3, i2, p2);
            else if (i2 instanceof RegExp || a(i2))
              p2 = Ct(t4, n3, i2, p2);
            else if (s2 === "object" && i2._bsontype == null)
              p2 = zt(t4, n3, i2, p2, r3, u2, f2, l2, h2);
            else {
              if (typeof i2 == "object" && i2[Symbol.for("@@mdb.bson.version")] !== 6)
                throw new v;
              if (i2._bsontype === "ObjectId")
                p2 = Ft(t4, n3, i2, p2);
              else if (s2 === "object" && i2._bsontype === "Decimal128")
                p2 = Kt(t4, n3, i2, p2);
              else if (i2._bsontype === "Long" || i2._bsontype === "Timestamp")
                p2 = Ht(t4, n3, i2, p2);
              else if (i2._bsontype === "Double")
                p2 = Jt(t4, n3, i2, p2);
              else if (i2._bsontype === "Code")
                p2 = Yt(t4, n3, i2, p2, r3, u2, f2, l2, h2);
              else if (typeof i2 == "function" && f2)
                p2 = Gt(t4, n3, i2, p2);
              else if (i2._bsontype === "Binary")
                p2 = Qt(t4, n3, i2, p2);
              else if (i2._bsontype === "BSONSymbol")
                p2 = Xt(t4, n3, i2, p2);
              else if (i2._bsontype === "DBRef")
                p2 = Zt(t4, n3, i2, p2, u2, f2, h2);
              else if (i2._bsontype === "BSONRegExp")
                p2 = Ut(t4, n3, i2, p2);
              else if (i2._bsontype === "Int32")
                p2 = Wt(t4, n3, i2, p2);
              else if (i2._bsontype === "MinKey" || i2._bsontype === "MaxKey")
                p2 = qt(t4, n3, i2, p2);
              else if (i2._bsontype !== undefined)
                throw new m(`Unrecognized or invalid _bsontype: ${String(i2._bsontype)}`);
            }
          }
        }
        h2.delete(e3), t4[p2++] = 0;
        const d2 = p2 - n2;
        return n2 += bt.setInt32LE(t4, n2, d2), p2;
      }
      const ee = { $oid: gt, $binary: B, $uuid: B, $symbol: Ot, $numberInt: ft, $numberDecimal: ct, $numberDouble: ut, $numberLong: G, $minKey: ht, $maxKey: lt, $regex: St, $regularExpression: St, $timestamp: $t };
      function re(t4, e3 = {}) {
        if (typeof t4 == "number") {
          const r4 = t4 <= f && t4 >= l, n2 = t4 <= h && t4 >= p;
          if (e3.relaxed || e3.legacy)
            return t4;
          if (Number.isInteger(t4) && !Object.is(t4, -0)) {
            if (r4)
              return new ft(t4);
            if (n2)
              return e3.useBigInt64 ? BigInt(t4) : G.fromNumber(t4);
          }
          return new ut(t4);
        }
        if (t4 == null || typeof t4 != "object")
          return t4;
        if (t4.$undefined)
          return null;
        const r3 = Object.keys(t4).filter((e4) => e4.startsWith("$") && t4[e4] != null);
        for (let n2 = 0;n2 < r3.length; n2++) {
          const i2 = ee[r3[n2]];
          if (i2)
            return i2.fromExtendedJSON(t4, e3);
        }
        if (t4.$date != null) {
          const r4 = t4.$date, n2 = new Date;
          if (e3.legacy)
            if (typeof r4 == "number")
              n2.setTime(r4);
            else if (typeof r4 == "string")
              n2.setTime(Date.parse(r4));
            else {
              if (typeof r4 != "bigint")
                throw new g("Unrecognized type for EJSON date: " + typeof r4);
              n2.setTime(Number(r4));
            }
          else if (typeof r4 == "string")
            n2.setTime(Date.parse(r4));
          else if (G.isLong(r4))
            n2.setTime(r4.toNumber());
          else if (typeof r4 == "number" && e3.relaxed)
            n2.setTime(r4);
          else {
            if (typeof r4 != "bigint")
              throw new g("Unrecognized type for EJSON date: " + typeof r4);
            n2.setTime(Number(r4));
          }
          return n2;
        }
        if (t4.$code != null) {
          const e4 = Object.assign({}, t4);
          return t4.$scope && (e4.$scope = re(t4.$scope)), L.fromExtendedJSON(t4);
        }
        if (C(t4) || t4.$dbPointer) {
          const e4 = t4.$ref ? t4 : t4.$dbPointer;
          if (e4 instanceof U)
            return e4;
          const r4 = Object.keys(e4).filter((t5) => t5.startsWith("$"));
          let n2 = true;
          if (r4.forEach((t5) => {
            ["$ref", "$id", "$db"].indexOf(t5) === -1 && (n2 = false);
          }), n2)
            return U.fromExtendedJSON(e4);
        }
        return t4;
      }
      function ne(t4) {
        const e3 = t4.toISOString();
        return t4.getUTCMilliseconds() !== 0 ? e3 : e3.slice(0, -5) + "Z";
      }
      function ie(t4, e3) {
        if (t4 instanceof Map || s(t4)) {
          const r3 = Object.create(null);
          for (const [e4, n2] of t4) {
            if (typeof e4 != "string")
              throw new m("Can only serialize maps with string keys");
            r3[e4] = n2;
          }
          return ie(r3, e3);
        }
        if ((typeof t4 == "object" || typeof t4 == "function") && t4 !== null) {
          const r3 = e3.seenObjects.findIndex((e4) => e4.obj === t4);
          if (r3 !== -1) {
            const t5 = e3.seenObjects.map((t6) => t6.propertyName), n2 = t5.slice(0, r3).map((t6) => `${t6} -> `).join(""), i2 = t5[r3], o2 = " -> " + t5.slice(r3 + 1, t5.length - 1).map((t6) => `${t6} -> `).join(""), a2 = t5[t5.length - 1], s2 = " ".repeat(n2.length + i2.length / 2), c2 = "-".repeat(o2.length + (i2.length + a2.length) / 2 - 1);
            throw new m(`Converting circular structure to EJSON:\n    ${n2}${i2}${o2}${a2}\n    ${s2}\\${c2}/`);
          }
          e3.seenObjects[e3.seenObjects.length - 1].obj = t4;
        }
        if (Array.isArray(t4))
          return function(t5, e4) {
            return t5.map((t6, r3) => {
              e4.seenObjects.push({ propertyName: `index ${r3}`, obj: null });
              try {
                return ie(t6, e4);
              } finally {
                e4.seenObjects.pop();
              }
            });
          }(t4, e3);
        if (t4 === undefined)
          return null;
        if (t4 instanceof Date || c(t4)) {
          const r3 = t4.getTime(), n2 = r3 > -1 && r3 < 253402318800000;
          return e3.legacy ? e3.relaxed && n2 ? { $date: t4.getTime() } : { $date: ne(t4) } : e3.relaxed && n2 ? { $date: ne(t4) } : { $date: { $numberLong: t4.getTime().toString() } };
        }
        if (!(typeof t4 != "number" || e3.relaxed && isFinite(t4))) {
          if (Number.isInteger(t4) && !Object.is(t4, -0)) {
            if (t4 >= l && t4 <= f)
              return { $numberInt: t4.toString() };
            if (t4 >= p && t4 <= h)
              return { $numberLong: t4.toString() };
          }
          return { $numberDouble: Object.is(t4, -0) ? "-0.0" : t4.toString() };
        }
        if (typeof t4 == "bigint")
          return e3.relaxed ? Number(BigInt.asIntN(64, t4)) : { $numberLong: BigInt.asIntN(64, t4).toString() };
        if (t4 instanceof RegExp || a(t4)) {
          let r3 = t4.flags;
          if (r3 === undefined) {
            const e4 = t4.toString().match(/[gimuy]*$/);
            e4 && (r3 = e4[0]);
          }
          return new St(t4.source, r3).toExtendedJSON(e3);
        }
        return t4 != null && typeof t4 == "object" ? function(t5, e4) {
          if (t5 == null || typeof t5 != "object")
            throw new m("not an object instance");
          const r3 = t5._bsontype;
          if (r3 === undefined) {
            const r4 = {};
            for (const n2 of Object.keys(t5)) {
              e4.seenObjects.push({ propertyName: n2, obj: null });
              try {
                const i2 = ie(t5[n2], e4);
                n2 === "__proto__" ? Object.defineProperty(r4, n2, { value: i2, writable: true, enumerable: true, configurable: true }) : r4[n2] = i2;
              } finally {
                e4.seenObjects.pop();
              }
            }
            return r4;
          }
          if (t5 != null && typeof t5 == "object" && typeof t5._bsontype == "string" && t5[Symbol.for("@@mdb.bson.version")] !== 6)
            throw new v;
          if (function(t6) {
            return t6 != null && typeof t6 == "object" && "_bsontype" in t6 && typeof t6._bsontype == "string";
          }(t5)) {
            let n2 = t5;
            if (typeof n2.toExtendedJSON != "function") {
              const e5 = oe[t5._bsontype];
              if (!e5)
                throw new m("Unrecognized or invalid _bsontype: " + t5._bsontype);
              n2 = e5(n2);
            }
            return r3 === "Code" && n2.scope ? n2 = new L(n2.code, ie(n2.scope, e4)) : r3 === "DBRef" && n2.oid && (n2 = new U(ie(n2.collection, e4), ie(n2.oid, e4), ie(n2.db, e4), ie(n2.fields, e4))), n2.toExtendedJSON(e4);
          }
          throw new m("_bsontype must be a string, but was: " + typeof r3);
        }(t4, e3) : t4;
      }
      const oe = { Binary: (t4) => new B(t4.value(), t4.sub_type), Code: (t4) => new L(t4.code, t4.scope), DBRef: (t4) => new U(t4.collection || t4.namespace, t4.oid, t4.db, t4.fields), Decimal128: (t4) => new ct(t4.bytes), Double: (t4) => new ut(t4.value), Int32: (t4) => new ft(t4.value), Long: (t4) => G.fromBits(t4.low != null ? t4.low : t4.low_, t4.low != null ? t4.high : t4.high_, t4.low != null ? t4.unsigned : t4.unsigned_), MaxKey: () => new lt, MinKey: () => new ht, ObjectId: (t4) => new gt(t4), BSONRegExp: (t4) => new St(t4.pattern, t4.options), BSONSymbol: (t4) => new Ot(t4.value), Timestamp: (t4) => $t.fromBits(t4.low, t4.high) };
      function ae(t4, e3) {
        const r3 = { useBigInt64: e3?.useBigInt64 ?? false, relaxed: e3?.relaxed ?? true, legacy: e3?.legacy ?? false };
        return JSON.parse(t4, (t5, e4) => {
          if (t5.indexOf("\0") !== -1)
            throw new m(`BSON Document field names cannot contain null bytes, found: ${JSON.stringify(t5)}`);
          return re(e4, r3);
        });
      }
      function se(t4, e3, r3, n2) {
        r3 != null && typeof r3 == "object" && (n2 = r3, r3 = 0), e3 == null || typeof e3 != "object" || Array.isArray(e3) || (n2 = e3, e3 = undefined, r3 = 0);
        const i2 = ie(t4, Object.assign({ relaxed: true, legacy: false }, n2, { seenObjects: [{ propertyName: "(root)", obj: null }] }));
        return JSON.stringify(i2, e3, r3);
      }
      const ce = Object.create(null);
      function ue(t4, e3) {
        try {
          return bt.getNonnegativeInt32LE(t4, e3);
        } catch (t5) {
          throw new _("BSON size cannot be negative", e3, { cause: t5 });
        }
      }
      function fe(t4, e3) {
        let r3 = e3;
        for (;t4[r3] !== 0; r3++)
          ;
        if (r3 === t4.length - 1)
          throw new _("Null terminator not found", e3);
        return r3;
      }
      ce.parse = ae, ce.stringify = se, ce.serialize = function(t4, e3) {
        return e3 = e3 || {}, JSON.parse(se(t4, e3));
      }, ce.deserialize = function(t4, e3) {
        return e3 = e3 || {}, ae(JSON.stringify(t4), e3);
      }, Object.freeze(ce);
      const le = Object.create(null);
      le.parseToElements = function(t4, e3 = 0) {
        if (e3 ??= 0, t4.length < 5)
          throw new _(`Input must be at least 5 bytes, got ${t4.length} bytes`, e3);
        const r3 = ue(t4, e3);
        if (r3 > t4.length - e3)
          throw new _(`Parsed documentSize (${r3} bytes) does not match input length (${t4.length} bytes)`, e3);
        if (t4[e3 + r3 - 1] !== 0)
          throw new _("BSON documents must end in 0x00", e3 + r3);
        const n2 = [];
        let i2 = e3 + 4;
        for (;i2 <= r3 + e3; ) {
          const o2 = t4[i2];
          if (i2 += 1, o2 === 0) {
            if (i2 - e3 !== r3)
              throw new _("Invalid 0x00 type byte", i2);
            break;
          }
          const a2 = i2, s2 = fe(t4, i2) - a2;
          let c2;
          if (i2 += s2 + 1, o2 === 1 || o2 === 18 || o2 === 9 || o2 === 17)
            c2 = 8;
          else if (o2 === 16)
            c2 = 4;
          else if (o2 === 7)
            c2 = 12;
          else if (o2 === 19)
            c2 = 16;
          else if (o2 === 8)
            c2 = 1;
          else if (o2 === 10 || o2 === 6 || o2 === 127 || o2 === 255)
            c2 = 0;
          else if (o2 === 11)
            c2 = fe(t4, fe(t4, i2) + 1) + 1 - i2;
          else if (o2 === 3 || o2 === 4 || o2 === 15)
            c2 = ue(t4, i2);
          else {
            if (o2 !== 2 && o2 !== 5 && o2 !== 12 && o2 !== 13 && o2 !== 14)
              throw new _(`Invalid 0x${o2.toString(16).padStart(2, "0")} type byte`, i2);
            c2 = ue(t4, i2) + 4, o2 === 5 && (c2 += 1), o2 === 12 && (c2 += 12);
          }
          if (c2 > r3)
            throw new _("value reports length larger than document", i2);
          n2.push([o2, a2, s2, i2, c2]), i2 += c2;
        }
        return n2;
      }, le.ByteUtils = I, le.NumberUtils = bt, Object.freeze(le);
      const he = 17825792;
      let pe = I.allocate(he);
      function de(t4) {
        pe.length < t4 && (pe = I.allocate(t4));
      }
      function ye(t4, e3 = {}) {
        const r3 = typeof e3.checkKeys == "boolean" && e3.checkKeys, n2 = typeof e3.serializeFunctions == "boolean" && e3.serializeFunctions, i2 = typeof e3.ignoreUndefined != "boolean" || e3.ignoreUndefined, o2 = typeof e3.minInternalBufferSize == "number" ? e3.minInternalBufferSize : he;
        pe.length < o2 && (pe = I.allocate(o2));
        const a2 = te(pe, t4, r3, 0, 0, n2, i2, null), s2 = I.allocateUnsafe(a2);
        return s2.set(pe.subarray(0, a2), 0), s2;
      }
      function be(t4, e3, r3 = {}) {
        const n2 = typeof r3.checkKeys == "boolean" && r3.checkKeys, i2 = typeof r3.serializeFunctions == "boolean" && r3.serializeFunctions, o2 = typeof r3.ignoreUndefined != "boolean" || r3.ignoreUndefined, a2 = typeof r3.index == "number" ? r3.index : 0, s2 = te(pe, t4, n2, 0, 0, i2, o2, null);
        return e3.set(pe.subarray(0, s2), a2), a2 + s2 - 1;
      }
      function me(t4, e3 = {}) {
        return xt(I.toLocalBufferType(t4), e3);
      }
      function ve(t4, e3 = {}) {
        return _t(t4, typeof (e3 = e3 || {}).serializeFunctions == "boolean" && e3.serializeFunctions, typeof e3.ignoreUndefined != "boolean" || e3.ignoreUndefined);
      }
      function ge(t4, e3, r3, n2, i2, o2) {
        const a2 = Object.assign({ allowObjectSmallerThanBufferSize: true, index: 0 }, o2), s2 = I.toLocalBufferType(t4);
        let c2 = e3;
        for (let t5 = 0;t5 < r3; t5++) {
          const e4 = bt.getInt32LE(s2, c2);
          a2.index = c2, n2[i2 + t5] = xt(s2, a2), c2 += e4;
        }
        return c2;
      }
      var _e = Object.freeze({ __proto__: null, BSONError: m, BSONOffsetError: _, BSONRegExp: St, BSONRuntimeError: g, BSONSymbol: Ot, BSONType: b, BSONValue: T, BSONVersionError: v, Binary: B, Code: L, DBRef: U, Decimal128: ct, Double: ut, EJSON: ce, Int32: ft, Long: G, MaxKey: lt, MinKey: ht, ObjectId: gt, Timestamp: $t, UUID: D, calculateObjectSize: ve, deserialize: me, deserializeStream: ge, onDemand: le, serialize: ye, serializeWithBufferAndIndex: be, setInternalBufferSize: de });
      e2.BSON = _e, e2.BSONError = m, e2.BSONOffsetError = _, e2.BSONRegExp = St, e2.BSONRuntimeError = g, e2.BSONSymbol = Ot, e2.BSONType = b, e2.BSONValue = T, e2.BSONVersionError = v, e2.Binary = B, e2.Code = L, e2.DBRef = U, e2.Decimal128 = ct, e2.Double = ut, e2.EJSON = ce, e2.Int32 = ft, e2.Long = G, e2.MaxKey = lt, e2.MinKey = ht, e2.ObjectId = gt, e2.Timestamp = $t, e2.UUID = D, e2.calculateObjectSize = ve, e2.deserialize = me, e2.deserializeStream = ge, e2.onDemand = le, e2.serialize = ye, e2.serializeWithBufferAndIndex = be, e2.setInternalBufferSize = de;
    }, 3219: (t3) => {
      t3.exports = JSON.parse('{"aes-128-ecb":{"cipher":"AES","key":128,"iv":0,"mode":"ECB","type":"block"},"aes-192-ecb":{"cipher":"AES","key":192,"iv":0,"mode":"ECB","type":"block"},"aes-256-ecb":{"cipher":"AES","key":256,"iv":0,"mode":"ECB","type":"block"},"aes-128-cbc":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes-192-cbc":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes-256-cbc":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes128":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes192":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes256":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes-128-cfb":{"cipher":"AES","key":128,"iv":16,"mode":"CFB","type":"stream"},"aes-192-cfb":{"cipher":"AES","key":192,"iv":16,"mode":"CFB","type":"stream"},"aes-256-cfb":{"cipher":"AES","key":256,"iv":16,"mode":"CFB","type":"stream"},"aes-128-cfb8":{"cipher":"AES","key":128,"iv":16,"mode":"CFB8","type":"stream"},"aes-192-cfb8":{"cipher":"AES","key":192,"iv":16,"mode":"CFB8","type":"stream"},"aes-256-cfb8":{"cipher":"AES","key":256,"iv":16,"mode":"CFB8","type":"stream"},"aes-128-cfb1":{"cipher":"AES","key":128,"iv":16,"mode":"CFB1","type":"stream"},"aes-192-cfb1":{"cipher":"AES","key":192,"iv":16,"mode":"CFB1","type":"stream"},"aes-256-cfb1":{"cipher":"AES","key":256,"iv":16,"mode":"CFB1","type":"stream"},"aes-128-ofb":{"cipher":"AES","key":128,"iv":16,"mode":"OFB","type":"stream"},"aes-192-ofb":{"cipher":"AES","key":192,"iv":16,"mode":"OFB","type":"stream"},"aes-256-ofb":{"cipher":"AES","key":256,"iv":16,"mode":"OFB","type":"stream"},"aes-128-ctr":{"cipher":"AES","key":128,"iv":16,"mode":"CTR","type":"stream"},"aes-192-ctr":{"cipher":"AES","key":192,"iv":16,"mode":"CTR","type":"stream"},"aes-256-ctr":{"cipher":"AES","key":256,"iv":16,"mode":"CTR","type":"stream"},"aes-128-gcm":{"cipher":"AES","key":128,"iv":12,"mode":"GCM","type":"auth"},"aes-192-gcm":{"cipher":"AES","key":192,"iv":12,"mode":"GCM","type":"auth"},"aes-256-gcm":{"cipher":"AES","key":256,"iv":12,"mode":"GCM","type":"auth"}}');
    }, 2951: (t3) => {
      t3.exports = JSON.parse('{"sha224WithRSAEncryption":{"sign":"rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"RSA-SHA224":{"sign":"ecdsa/rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"sha256WithRSAEncryption":{"sign":"rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"RSA-SHA256":{"sign":"ecdsa/rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"sha384WithRSAEncryption":{"sign":"rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"RSA-SHA384":{"sign":"ecdsa/rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"sha512WithRSAEncryption":{"sign":"rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA512":{"sign":"ecdsa/rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA1":{"sign":"rsa","hash":"sha1","id":"3021300906052b0e03021a05000414"},"ecdsa-with-SHA1":{"sign":"ecdsa","hash":"sha1","id":""},"sha256":{"sign":"ecdsa","hash":"sha256","id":""},"sha224":{"sign":"ecdsa","hash":"sha224","id":""},"sha384":{"sign":"ecdsa","hash":"sha384","id":""},"sha512":{"sign":"ecdsa","hash":"sha512","id":""},"DSA-SHA":{"sign":"dsa","hash":"sha1","id":""},"DSA-SHA1":{"sign":"dsa","hash":"sha1","id":""},"DSA":{"sign":"dsa","hash":"sha1","id":""},"DSA-WITH-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-WITH-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-WITH-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-WITH-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-RIPEMD160":{"sign":"dsa","hash":"rmd160","id":""},"ripemd160WithRSA":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"RSA-RIPEMD160":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"md5WithRSAEncryption":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"},"RSA-MD5":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"}}');
    }, 4589: (t3) => {
      t3.exports = JSON.parse('{"1.3.132.0.10":"secp256k1","1.3.132.0.33":"p224","1.2.840.10045.3.1.1":"p192","1.2.840.10045.3.1.7":"p256","1.3.132.0.34":"p384","1.3.132.0.35":"p521"}');
    }, 3241: (t3) => {
      t3.exports = JSON.parse('{"modp1":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"},"modp2":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"},"modp5":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"},"modp14":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"},"modp15":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"},"modp16":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"},"modp17":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"},"modp18":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"}}');
    }, 1636: (t3) => {
      t3.exports = { rE: "6.5.7" };
    }, 5579: (t3) => {
      t3.exports = JSON.parse('{"2.16.840.1.101.3.4.1.1":"aes-128-ecb","2.16.840.1.101.3.4.1.2":"aes-128-cbc","2.16.840.1.101.3.4.1.3":"aes-128-ofb","2.16.840.1.101.3.4.1.4":"aes-128-cfb","2.16.840.1.101.3.4.1.21":"aes-192-ecb","2.16.840.1.101.3.4.1.22":"aes-192-cbc","2.16.840.1.101.3.4.1.23":"aes-192-ofb","2.16.840.1.101.3.4.1.24":"aes-192-cfb","2.16.840.1.101.3.4.1.41":"aes-256-ecb","2.16.840.1.101.3.4.1.42":"aes-256-cbc","2.16.840.1.101.3.4.1.43":"aes-256-ofb","2.16.840.1.101.3.4.1.44":"aes-256-cfb"}');
    } }, e = {};
    function r(n) {
      var i = e[n];
      if (i !== undefined)
        return i.exports;
      var o = e[n] = { id: n, loaded: false, exports: {} };
      return t2[n].call(o.exports, o, o.exports, r), o.loaded = true, o.exports;
    }
    return r.g = function() {
      if (typeof globalThis == "object")
        return globalThis;
      try {
        return this || new Function("return this")();
      } catch (t3) {
        if (typeof window == "object")
          return window;
      }
    }(), r.nmd = (t3) => (t3.paths = [], t3.children || (t3.children = []), t3), r(4986);
  })());
});

// node_modules/memoirist/dist/index.mjs
var createNode = (part, inert) => ({
  part,
  store: null,
  inert: inert !== undefined ? new Map(inert.map((child) => [child.part.charCodeAt(0), child])) : null,
  params: null,
  wildcardStore: null
});
var cloneNode = (node, part) => ({
  ...node,
  part
});
var createParamNode = (paramName) => ({
  paramName,
  store: null,
  inert: null
});
var Memoirist = class _Memoirist {
  root = {};
  history = [];
  static regex = {
    static: /:.+?(?=\/|$)/,
    params: /:.+?(?=\/|$)/g
  };
  add(method, path, store) {
    if (typeof path !== "string")
      throw new TypeError("Route path must be a string");
    if (path === "")
      path = "/";
    else if (path[0] !== "/")
      path = `/${path}`;
    this.history.push([method, path, store]);
    const isWildcard = path[path.length - 1] === "*";
    if (isWildcard) {
      path = path.slice(0, -1);
    }
    const inertParts = path.split(_Memoirist.regex.static);
    const paramParts = path.match(_Memoirist.regex.params) || [];
    if (inertParts[inertParts.length - 1] === "")
      inertParts.pop();
    let node;
    if (!this.root[method])
      node = this.root[method] = createNode("/");
    else
      node = this.root[method];
    let paramPartsIndex = 0;
    for (let i = 0;i < inertParts.length; ++i) {
      let part = inertParts[i];
      if (i > 0) {
        const param = paramParts[paramPartsIndex++].slice(1);
        if (node.params === null)
          node.params = createParamNode(param);
        else if (node.params.paramName !== param)
          throw new Error(`Cannot create route "${path}" with parameter "${param}" because a route already exists with a different parameter name ("${node.params.paramName}") in the same location`);
        const params = node.params;
        if (params.inert === null) {
          node = params.inert = createNode(part);
          continue;
        }
        node = params.inert;
      }
      for (let j = 0;; ) {
        if (j === part.length) {
          if (j < node.part.length) {
            const childNode = cloneNode(node, node.part.slice(j));
            Object.assign(node, createNode(part, [childNode]));
          }
          break;
        }
        if (j === node.part.length) {
          if (node.inert === null)
            node.inert = /* @__PURE__ */ new Map;
          else if (node.inert.has(part.charCodeAt(j))) {
            node = node.inert.get(part.charCodeAt(j));
            part = part.slice(j);
            j = 0;
            continue;
          }
          const childNode = createNode(part.slice(j));
          node.inert.set(part.charCodeAt(j), childNode);
          node = childNode;
          break;
        }
        if (part[j] !== node.part[j]) {
          const existingChild = cloneNode(node, node.part.slice(j));
          const newChild = createNode(part.slice(j));
          Object.assign(node, createNode(node.part.slice(0, j), [
            existingChild,
            newChild
          ]));
          node = newChild;
          break;
        }
        ++j;
      }
    }
    if (paramPartsIndex < paramParts.length) {
      const param = paramParts[paramPartsIndex];
      const paramName = param.slice(1);
      if (node.params === null)
        node.params = createParamNode(paramName);
      else if (node.params.paramName !== paramName)
        throw new Error(`Cannot create route "${path}" with parameter "${paramName}" because a route already exists with a different parameter name ("${node.params.paramName}") in the same location`);
      if (node.params.store === null)
        node.params.store = store;
      return node.params.store;
    }
    if (isWildcard) {
      if (node.wildcardStore === null)
        node.wildcardStore = store;
      return node.wildcardStore;
    }
    if (node.store === null)
      node.store = store;
    return node.store;
  }
  find(method, url) {
    const root = this.root[method];
    if (!root)
      return null;
    return matchRoute(url, url.length, root, 0);
  }
};
var matchRoute = (url, urlLength, node, startIndex) => {
  const part = node?.part;
  const endIndex = startIndex + part.length;
  if (part.length > 1) {
    if (endIndex > urlLength)
      return null;
    if (part.length < 15) {
      for (let i = 1, j = startIndex + 1;i < part.length; ++i, ++j)
        if (part.charCodeAt(i) !== url.charCodeAt(j))
          return null;
    } else if (url.substring(startIndex, endIndex) !== part)
      return null;
  }
  if (endIndex === urlLength) {
    if (node.store !== null)
      return {
        store: node.store,
        params: {}
      };
    if (node.wildcardStore !== null)
      return {
        store: node.wildcardStore,
        params: { "*": "" }
      };
    return null;
  }
  if (node.inert !== null) {
    const inert = node.inert.get(url.charCodeAt(endIndex));
    if (inert !== undefined) {
      const route = matchRoute(url, urlLength, inert, endIndex);
      if (route !== null)
        return route;
    }
  }
  if (node.params !== null) {
    const param = node.params;
    const slashIndex = url.indexOf("/", endIndex);
    if (slashIndex !== endIndex) {
      if (slashIndex === -1 || slashIndex >= urlLength) {
        if (param.store !== null) {
          const params = {};
          params[param.paramName] = url.substring(endIndex, urlLength);
          return {
            store: param.store,
            params
          };
        }
      } else if (param.inert !== null) {
        const route = matchRoute(url, urlLength, param.inert, slashIndex);
        if (route !== null) {
          route.params[param.paramName] = url.substring(endIndex, slashIndex);
          return route;
        }
      }
    }
  }
  if (node.wildcardStore !== null)
    return {
      store: node.wildcardStore,
      params: {
        "*": url.substring(endIndex, urlLength)
      }
    };
  return null;
};

// node_modules/eventemitter3/index.mjs
var import__ = __toESM(require_eventemitter3(), 1);
var eventemitter3_default = import__.default;

// node_modules/@sinclair/typebox/build/esm/value/guard/guard.mjs
function IsAsyncIterator(value) {
  return IsObject(value) && Symbol.asyncIterator in value;
}
function IsIterator(value) {
  return IsObject(value) && Symbol.iterator in value;
}
function IsStandardObject(value) {
  return IsObject(value) && (Object.getPrototypeOf(value) === Object.prototype || Object.getPrototypeOf(value) === null);
}
function IsPromise(value) {
  return value instanceof Promise;
}
function IsDate(value) {
  return value instanceof Date && Number.isFinite(value.getTime());
}
function IsTypedArray(value) {
  return ArrayBuffer.isView(value);
}
function IsUint8Array(value) {
  return value instanceof globalThis.Uint8Array;
}
function HasPropertyKey(value, key) {
  return key in value;
}
function IsObject(value) {
  return value !== null && typeof value === "object";
}
function IsArray(value) {
  return Array.isArray(value) && !ArrayBuffer.isView(value);
}
function IsUndefined(value) {
  return value === undefined;
}
function IsNull(value) {
  return value === null;
}
function IsBoolean(value) {
  return typeof value === "boolean";
}
function IsNumber(value) {
  return typeof value === "number";
}
function IsInteger(value) {
  return Number.isInteger(value);
}
function IsBigInt(value) {
  return typeof value === "bigint";
}
function IsString(value) {
  return typeof value === "string";
}
function IsFunction(value) {
  return typeof value === "function";
}
function IsSymbol(value) {
  return typeof value === "symbol";
}
function IsValueType(value) {
  return IsBigInt(value) || IsBoolean(value) || IsNull(value) || IsNumber(value) || IsString(value) || IsSymbol(value) || IsUndefined(value);
}
// node_modules/@sinclair/typebox/build/esm/system/policy.mjs
var TypeSystemPolicy;
(function(TypeSystemPolicy2) {
  TypeSystemPolicy2.ExactOptionalPropertyTypes = false;
  TypeSystemPolicy2.AllowArrayObject = false;
  TypeSystemPolicy2.AllowNaN = false;
  TypeSystemPolicy2.AllowNullVoid = false;
  function IsExactOptionalProperty(value, key) {
    return TypeSystemPolicy2.ExactOptionalPropertyTypes ? key in value : value[key] !== undefined;
  }
  TypeSystemPolicy2.IsExactOptionalProperty = IsExactOptionalProperty;
  function IsObjectLike(value) {
    const isObject = IsObject(value);
    return TypeSystemPolicy2.AllowArrayObject ? isObject : isObject && !IsArray(value);
  }
  TypeSystemPolicy2.IsObjectLike = IsObjectLike;
  function IsRecordLike(value) {
    return IsObjectLike(value) && !(value instanceof Date) && !(value instanceof Uint8Array);
  }
  TypeSystemPolicy2.IsRecordLike = IsRecordLike;
  function IsNumberLike(value) {
    return TypeSystemPolicy2.AllowNaN ? IsNumber(value) : Number.isFinite(value);
  }
  TypeSystemPolicy2.IsNumberLike = IsNumberLike;
  function IsVoidLike(value) {
    const isUndefined = IsUndefined(value);
    return TypeSystemPolicy2.AllowNullVoid ? isUndefined || value === null : isUndefined;
  }
  TypeSystemPolicy2.IsVoidLike = IsVoidLike;
})(TypeSystemPolicy || (TypeSystemPolicy = {}));
// node_modules/@sinclair/typebox/build/esm/type/registry/format.mjs
var exports_format = {};
__export(exports_format, {
  Set: () => Set2,
  Has: () => Has,
  Get: () => Get,
  Entries: () => Entries,
  Delete: () => Delete,
  Clear: () => Clear
});
var map = new Map;
function Entries() {
  return new Map(map);
}
function Clear() {
  return map.clear();
}
function Delete(format) {
  return map.delete(format);
}
function Has(format) {
  return map.has(format);
}
function Set2(format, func) {
  map.set(format, func);
}
function Get(format) {
  return map.get(format);
}
// node_modules/@sinclair/typebox/build/esm/type/registry/type.mjs
var exports_type = {};
__export(exports_type, {
  Set: () => Set3,
  Has: () => Has2,
  Get: () => Get2,
  Entries: () => Entries2,
  Delete: () => Delete2,
  Clear: () => Clear2
});
var map2 = new Map;
function Entries2() {
  return new Map(map2);
}
function Clear2() {
  return map2.clear();
}
function Delete2(kind) {
  return map2.delete(kind);
}
function Has2(kind) {
  return map2.has(kind);
}
function Set3(kind, func) {
  map2.set(kind, func);
}
function Get2(kind) {
  return map2.get(kind);
}
// node_modules/@sinclair/typebox/build/esm/type/symbols/symbols.mjs
var TransformKind = Symbol.for("TypeBox.Transform");
var ReadonlyKind = Symbol.for("TypeBox.Readonly");
var OptionalKind = Symbol.for("TypeBox.Optional");
var Hint = Symbol.for("TypeBox.Hint");
var Kind = Symbol.for("TypeBox.Kind");
// node_modules/@sinclair/typebox/build/esm/type/unsafe/unsafe.mjs
function Unsafe(options = {}) {
  return {
    ...options,
    [Kind]: options[Kind] ?? "Unsafe"
  };
}
// node_modules/@sinclair/typebox/build/esm/type/error/error.mjs
class TypeBoxError extends Error {
  constructor(message) {
    super(message);
  }
}
// node_modules/@sinclair/typebox/build/esm/system/system.mjs
class TypeSystemDuplicateTypeKind extends TypeBoxError {
  constructor(kind) {
    super(`Duplicate type kind '${kind}' detected`);
  }
}

class TypeSystemDuplicateFormat extends TypeBoxError {
  constructor(kind) {
    super(`Duplicate string format '${kind}' detected`);
  }
}
var TypeSystem;
(function(TypeSystem2) {
  function Type(kind, check) {
    if (exports_type.Has(kind))
      throw new TypeSystemDuplicateTypeKind(kind);
    exports_type.Set(kind, check);
    return (options = {}) => Unsafe({ ...options, [Kind]: kind });
  }
  TypeSystem2.Type = Type;
  function Format(format, check) {
    if (exports_format.Has(format))
      throw new TypeSystemDuplicateFormat(format);
    exports_format.Set(format, check);
    return format;
  }
  TypeSystem2.Format = Format;
})(TypeSystem || (TypeSystem = {}));
// node_modules/@sinclair/typebox/build/esm/type/mapped/mapped-result.mjs
function MappedResult(properties) {
  return {
    [Kind]: "MappedResult",
    properties
  };
}
// node_modules/@sinclair/typebox/build/esm/type/guard/value.mjs
var exports_value = {};
__export(exports_value, {
  IsUndefined: () => IsUndefined2,
  IsUint8Array: () => IsUint8Array2,
  IsSymbol: () => IsSymbol2,
  IsString: () => IsString2,
  IsRegExp: () => IsRegExp,
  IsObject: () => IsObject2,
  IsNumber: () => IsNumber2,
  IsNull: () => IsNull2,
  IsIterator: () => IsIterator2,
  IsFunction: () => IsFunction2,
  IsDate: () => IsDate2,
  IsBoolean: () => IsBoolean2,
  IsBigInt: () => IsBigInt2,
  IsAsyncIterator: () => IsAsyncIterator2,
  IsArray: () => IsArray2
});
function IsAsyncIterator2(value) {
  return IsObject2(value) && !IsArray2(value) && !IsUint8Array2(value) && Symbol.asyncIterator in value;
}
function IsArray2(value) {
  return Array.isArray(value);
}
function IsBigInt2(value) {
  return typeof value === "bigint";
}
function IsBoolean2(value) {
  return typeof value === "boolean";
}
function IsDate2(value) {
  return value instanceof globalThis.Date;
}
function IsFunction2(value) {
  return typeof value === "function";
}
function IsIterator2(value) {
  return IsObject2(value) && !IsArray2(value) && !IsUint8Array2(value) && Symbol.iterator in value;
}
function IsNull2(value) {
  return value === null;
}
function IsNumber2(value) {
  return typeof value === "number";
}
function IsObject2(value) {
  return typeof value === "object" && value !== null;
}
function IsRegExp(value) {
  return value instanceof globalThis.RegExp;
}
function IsString2(value) {
  return typeof value === "string";
}
function IsSymbol2(value) {
  return typeof value === "symbol";
}
function IsUint8Array2(value) {
  return value instanceof globalThis.Uint8Array;
}
function IsUndefined2(value) {
  return value === undefined;
}

// node_modules/@sinclair/typebox/build/esm/type/clone/value.mjs
function ArrayType(value) {
  return value.map((value2) => Visit(value2));
}
function DateType(value) {
  return new Date(value.getTime());
}
function Uint8ArrayType(value) {
  return new Uint8Array(value);
}
function RegExpType(value) {
  return new RegExp(value.source, value.flags);
}
function ObjectType(value) {
  const result = {};
  for (const key of Object.getOwnPropertyNames(value)) {
    result[key] = Visit(value[key]);
  }
  for (const key of Object.getOwnPropertySymbols(value)) {
    result[key] = Visit(value[key]);
  }
  return result;
}
function Visit(value) {
  return IsArray2(value) ? ArrayType(value) : IsDate2(value) ? DateType(value) : IsUint8Array2(value) ? Uint8ArrayType(value) : IsRegExp(value) ? RegExpType(value) : IsObject2(value) ? ObjectType(value) : value;
}
function Clone(value) {
  return Visit(value);
}

// node_modules/@sinclair/typebox/build/esm/type/clone/type.mjs
function CloneRest(schemas) {
  return schemas.map((schema) => CloneType(schema));
}
function CloneType(schema, options = {}) {
  return { ...Clone(schema), ...options };
}

// node_modules/@sinclair/typebox/build/esm/type/discard/discard.mjs
function DiscardKey(value, key) {
  const { [key]: _, ...rest } = value;
  return rest;
}
function Discard(value, keys) {
  return keys.reduce((acc, key) => DiscardKey(acc, key), value);
}
// node_modules/@sinclair/typebox/build/esm/type/array/array.mjs
function Array2(schema, options = {}) {
  return {
    ...options,
    [Kind]: "Array",
    type: "array",
    items: CloneType(schema)
  };
}
// node_modules/@sinclair/typebox/build/esm/type/async-iterator/async-iterator.mjs
function AsyncIterator(items, options = {}) {
  return {
    ...options,
    [Kind]: "AsyncIterator",
    type: "AsyncIterator",
    items: CloneType(items)
  };
}
// node_modules/@sinclair/typebox/build/esm/type/constructor/constructor.mjs
function Constructor(parameters, returns, options) {
  return {
    ...options,
    [Kind]: "Constructor",
    type: "Constructor",
    parameters: CloneRest(parameters),
    returns: CloneType(returns)
  };
}
// node_modules/@sinclair/typebox/build/esm/type/function/function.mjs
function Function2(parameters, returns, options) {
  return {
    ...options,
    [Kind]: "Function",
    type: "Function",
    parameters: CloneRest(parameters),
    returns: CloneType(returns)
  };
}
// node_modules/@sinclair/typebox/build/esm/type/never/never.mjs
function Never(options = {}) {
  return {
    ...options,
    [Kind]: "Never",
    not: {}
  };
}
// node_modules/@sinclair/typebox/build/esm/type/guard/kind.mjs
function IsReadonly(value) {
  return IsObject2(value) && value[ReadonlyKind] === "Readonly";
}
function IsOptional(value) {
  return IsObject2(value) && value[OptionalKind] === "Optional";
}
function IsAny(value) {
  return IsKindOf(value, "Any");
}
function IsArray3(value) {
  return IsKindOf(value, "Array");
}
function IsAsyncIterator3(value) {
  return IsKindOf(value, "AsyncIterator");
}
function IsBigInt3(value) {
  return IsKindOf(value, "BigInt");
}
function IsBoolean3(value) {
  return IsKindOf(value, "Boolean");
}
function IsConstructor(value) {
  return IsKindOf(value, "Constructor");
}
function IsDate3(value) {
  return IsKindOf(value, "Date");
}
function IsFunction3(value) {
  return IsKindOf(value, "Function");
}
function IsInteger2(value) {
  return IsKindOf(value, "Integer");
}
function IsIntersect(value) {
  return IsKindOf(value, "Intersect");
}
function IsIterator3(value) {
  return IsKindOf(value, "Iterator");
}
function IsKindOf(value, kind) {
  return IsObject2(value) && Kind in value && value[Kind] === kind;
}
function IsLiteral(value) {
  return IsKindOf(value, "Literal");
}
function IsMappedKey(value) {
  return IsKindOf(value, "MappedKey");
}
function IsMappedResult(value) {
  return IsKindOf(value, "MappedResult");
}
function IsNever(value) {
  return IsKindOf(value, "Never");
}
function IsNot(value) {
  return IsKindOf(value, "Not");
}
function IsNull3(value) {
  return IsKindOf(value, "Null");
}
function IsNumber3(value) {
  return IsKindOf(value, "Number");
}
function IsObject3(value) {
  return IsKindOf(value, "Object");
}
function IsPromise2(value) {
  return IsKindOf(value, "Promise");
}
function IsRecord(value) {
  return IsKindOf(value, "Record");
}
function IsRef(value) {
  return IsKindOf(value, "Ref");
}
function IsRegExp2(value) {
  return IsKindOf(value, "RegExp");
}
function IsString3(value) {
  return IsKindOf(value, "String");
}
function IsSymbol3(value) {
  return IsKindOf(value, "Symbol");
}
function IsTemplateLiteral(value) {
  return IsKindOf(value, "TemplateLiteral");
}
function IsThis(value) {
  return IsKindOf(value, "This");
}
function IsTransform(value) {
  return IsObject2(value) && TransformKind in value;
}
function IsTuple(value) {
  return IsKindOf(value, "Tuple");
}
function IsUndefined3(value) {
  return IsKindOf(value, "Undefined");
}
function IsUnion(value) {
  return IsKindOf(value, "Union");
}
function IsUint8Array3(value) {
  return IsKindOf(value, "Uint8Array");
}
function IsUnknown(value) {
  return IsKindOf(value, "Unknown");
}
function IsUnsafe(value) {
  return IsKindOf(value, "Unsafe");
}
function IsVoid(value) {
  return IsKindOf(value, "Void");
}
function IsKind(value) {
  return IsObject2(value) && Kind in value && IsString2(value[Kind]);
}
function IsSchema(value) {
  return IsAny(value) || IsArray3(value) || IsBoolean3(value) || IsBigInt3(value) || IsAsyncIterator3(value) || IsConstructor(value) || IsDate3(value) || IsFunction3(value) || IsInteger2(value) || IsIntersect(value) || IsIterator3(value) || IsLiteral(value) || IsMappedKey(value) || IsMappedResult(value) || IsNever(value) || IsNot(value) || IsNull3(value) || IsNumber3(value) || IsObject3(value) || IsPromise2(value) || IsRecord(value) || IsRef(value) || IsRegExp2(value) || IsString3(value) || IsSymbol3(value) || IsTemplateLiteral(value) || IsThis(value) || IsTuple(value) || IsUndefined3(value) || IsUnion(value) || IsUint8Array3(value) || IsUnknown(value) || IsUnsafe(value) || IsVoid(value) || IsKind(value);
}

// node_modules/@sinclair/typebox/build/esm/type/optional/optional.mjs
function RemoveOptional(schema) {
  return Discard(CloneType(schema), [OptionalKind]);
}
function AddOptional(schema) {
  return { ...CloneType(schema), [OptionalKind]: "Optional" };
}
function OptionalWithFlag(schema, F) {
  return F === false ? RemoveOptional(schema) : AddOptional(schema);
}
function Optional(schema, enable) {
  const F = enable ?? true;
  return IsMappedResult(schema) ? OptionalFromMappedResult(schema, F) : OptionalWithFlag(schema, F);
}

// node_modules/@sinclair/typebox/build/esm/type/optional/optional-from-mapped-result.mjs
function FromProperties(P, F) {
  const Acc = {};
  for (const K2 of globalThis.Object.getOwnPropertyNames(P))
    Acc[K2] = Optional(P[K2], F);
  return Acc;
}
function FromMappedResult(R, F) {
  return FromProperties(R.properties, F);
}
function OptionalFromMappedResult(R, F) {
  const P = FromMappedResult(R, F);
  return MappedResult(P);
}
// node_modules/@sinclair/typebox/build/esm/type/intersect/intersect-create.mjs
function IntersectCreate(T, options) {
  const allObjects = T.every((schema) => IsObject3(schema));
  const clonedUnevaluatedProperties = IsSchema(options.unevaluatedProperties) ? { unevaluatedProperties: CloneType(options.unevaluatedProperties) } : {};
  return options.unevaluatedProperties === false || IsSchema(options.unevaluatedProperties) || allObjects ? { ...options, ...clonedUnevaluatedProperties, [Kind]: "Intersect", type: "object", allOf: CloneRest(T) } : { ...options, ...clonedUnevaluatedProperties, [Kind]: "Intersect", allOf: CloneRest(T) };
}

// node_modules/@sinclair/typebox/build/esm/type/intersect/intersect-evaluated.mjs
function IsIntersectOptional(T) {
  return T.every((L) => IsOptional(L));
}
function RemoveOptionalFromType(T) {
  return Discard(T, [OptionalKind]);
}
function RemoveOptionalFromRest(T) {
  return T.map((L) => IsOptional(L) ? RemoveOptionalFromType(L) : L);
}
function ResolveIntersect(T, options) {
  return IsIntersectOptional(T) ? Optional(IntersectCreate(RemoveOptionalFromRest(T), options)) : IntersectCreate(RemoveOptionalFromRest(T), options);
}
function IntersectEvaluated(T, options = {}) {
  if (T.length === 0)
    return Never(options);
  if (T.length === 1)
    return CloneType(T[0], options);
  if (T.some((schema) => IsTransform(schema)))
    throw new Error("Cannot intersect transform types");
  return ResolveIntersect(T, options);
}
// node_modules/@sinclair/typebox/build/esm/type/intersect/intersect.mjs
function Intersect(T, options = {}) {
  if (T.length === 0)
    return Never(options);
  if (T.length === 1)
    return CloneType(T[0], options);
  if (T.some((schema) => IsTransform(schema)))
    throw new Error("Cannot intersect transform types");
  return IntersectCreate(T, options);
}
// node_modules/@sinclair/typebox/build/esm/type/union/union-create.mjs
function UnionCreate(T, options) {
  return { ...options, [Kind]: "Union", anyOf: CloneRest(T) };
}

// node_modules/@sinclair/typebox/build/esm/type/union/union-evaluated.mjs
function IsUnionOptional(T) {
  return T.some((L) => IsOptional(L));
}
function RemoveOptionalFromRest2(T) {
  return T.map((L) => IsOptional(L) ? RemoveOptionalFromType2(L) : L);
}
function RemoveOptionalFromType2(T) {
  return Discard(T, [OptionalKind]);
}
function ResolveUnion(T, options) {
  return IsUnionOptional(T) ? Optional(UnionCreate(RemoveOptionalFromRest2(T), options)) : UnionCreate(RemoveOptionalFromRest2(T), options);
}
function UnionEvaluated(T, options = {}) {
  return T.length === 0 ? Never(options) : T.length === 1 ? CloneType(T[0], options) : ResolveUnion(T, options);
}
// node_modules/@sinclair/typebox/build/esm/type/union/union.mjs
function Union(T, options = {}) {
  return T.length === 0 ? Never(options) : T.length === 1 ? CloneType(T[0], options) : UnionCreate(T, options);
}
// node_modules/@sinclair/typebox/build/esm/type/template-literal/parse.mjs
class TemplateLiteralParserError extends TypeBoxError {
}
function Unescape(pattern) {
  return pattern.replace(/\\\$/g, "$").replace(/\\\*/g, "*").replace(/\\\^/g, "^").replace(/\\\|/g, "|").replace(/\\\(/g, "(").replace(/\\\)/g, ")");
}
function IsNonEscaped(pattern, index, char) {
  return pattern[index] === char && pattern.charCodeAt(index - 1) !== 92;
}
function IsOpenParen(pattern, index) {
  return IsNonEscaped(pattern, index, "(");
}
function IsCloseParen(pattern, index) {
  return IsNonEscaped(pattern, index, ")");
}
function IsSeparator(pattern, index) {
  return IsNonEscaped(pattern, index, "|");
}
function IsGroup(pattern) {
  if (!(IsOpenParen(pattern, 0) && IsCloseParen(pattern, pattern.length - 1)))
    return false;
  let count = 0;
  for (let index = 0;index < pattern.length; index++) {
    if (IsOpenParen(pattern, index))
      count += 1;
    if (IsCloseParen(pattern, index))
      count -= 1;
    if (count === 0 && index !== pattern.length - 1)
      return false;
  }
  return true;
}
function InGroup(pattern) {
  return pattern.slice(1, pattern.length - 1);
}
function IsPrecedenceOr(pattern) {
  let count = 0;
  for (let index = 0;index < pattern.length; index++) {
    if (IsOpenParen(pattern, index))
      count += 1;
    if (IsCloseParen(pattern, index))
      count -= 1;
    if (IsSeparator(pattern, index) && count === 0)
      return true;
  }
  return false;
}
function IsPrecedenceAnd(pattern) {
  for (let index = 0;index < pattern.length; index++) {
    if (IsOpenParen(pattern, index))
      return true;
  }
  return false;
}
function Or(pattern) {
  let [count, start] = [0, 0];
  const expressions = [];
  for (let index = 0;index < pattern.length; index++) {
    if (IsOpenParen(pattern, index))
      count += 1;
    if (IsCloseParen(pattern, index))
      count -= 1;
    if (IsSeparator(pattern, index) && count === 0) {
      const range2 = pattern.slice(start, index);
      if (range2.length > 0)
        expressions.push(TemplateLiteralParse(range2));
      start = index + 1;
    }
  }
  const range = pattern.slice(start);
  if (range.length > 0)
    expressions.push(TemplateLiteralParse(range));
  if (expressions.length === 0)
    return { type: "const", const: "" };
  if (expressions.length === 1)
    return expressions[0];
  return { type: "or", expr: expressions };
}
function And(pattern) {
  function Group(value, index) {
    if (!IsOpenParen(value, index))
      throw new TemplateLiteralParserError(`TemplateLiteralParser: Index must point to open parens`);
    let count = 0;
    for (let scan = index;scan < value.length; scan++) {
      if (IsOpenParen(value, scan))
        count += 1;
      if (IsCloseParen(value, scan))
        count -= 1;
      if (count === 0)
        return [index, scan];
    }
    throw new TemplateLiteralParserError(`TemplateLiteralParser: Unclosed group parens in expression`);
  }
  function Range(pattern2, index) {
    for (let scan = index;scan < pattern2.length; scan++) {
      if (IsOpenParen(pattern2, scan))
        return [index, scan];
    }
    return [index, pattern2.length];
  }
  const expressions = [];
  for (let index = 0;index < pattern.length; index++) {
    if (IsOpenParen(pattern, index)) {
      const [start, end] = Group(pattern, index);
      const range = pattern.slice(start, end + 1);
      expressions.push(TemplateLiteralParse(range));
      index = end;
    } else {
      const [start, end] = Range(pattern, index);
      const range = pattern.slice(start, end);
      if (range.length > 0)
        expressions.push(TemplateLiteralParse(range));
      index = end - 1;
    }
  }
  return expressions.length === 0 ? { type: "const", const: "" } : expressions.length === 1 ? expressions[0] : { type: "and", expr: expressions };
}
function TemplateLiteralParse(pattern) {
  return IsGroup(pattern) ? TemplateLiteralParse(InGroup(pattern)) : IsPrecedenceOr(pattern) ? Or(pattern) : IsPrecedenceAnd(pattern) ? And(pattern) : { type: "const", const: Unescape(pattern) };
}
function TemplateLiteralParseExact(pattern) {
  return TemplateLiteralParse(pattern.slice(1, pattern.length - 1));
}

// node_modules/@sinclair/typebox/build/esm/type/template-literal/finite.mjs
class TemplateLiteralFiniteError extends TypeBoxError {
}
function IsNumberExpression(expression) {
  return expression.type === "or" && expression.expr.length === 2 && expression.expr[0].type === "const" && expression.expr[0].const === "0" && expression.expr[1].type === "const" && expression.expr[1].const === "[1-9][0-9]*";
}
function IsBooleanExpression(expression) {
  return expression.type === "or" && expression.expr.length === 2 && expression.expr[0].type === "const" && expression.expr[0].const === "true" && expression.expr[1].type === "const" && expression.expr[1].const === "false";
}
function IsStringExpression(expression) {
  return expression.type === "const" && expression.const === ".*";
}
function IsTemplateLiteralExpressionFinite(expression) {
  return IsNumberExpression(expression) || IsStringExpression(expression) ? false : IsBooleanExpression(expression) ? true : expression.type === "and" ? expression.expr.every((expr) => IsTemplateLiteralExpressionFinite(expr)) : expression.type === "or" ? expression.expr.every((expr) => IsTemplateLiteralExpressionFinite(expr)) : expression.type === "const" ? true : (() => {
    throw new TemplateLiteralFiniteError(`Unknown expression type`);
  })();
}
function IsTemplateLiteralFinite(schema) {
  const expression = TemplateLiteralParseExact(schema.pattern);
  return IsTemplateLiteralExpressionFinite(expression);
}
// node_modules/@sinclair/typebox/build/esm/type/template-literal/generate.mjs
class TemplateLiteralGenerateError extends TypeBoxError {
}
function* GenerateReduce(buffer) {
  if (buffer.length === 1)
    return yield* buffer[0];
  for (const left of buffer[0]) {
    for (const right of GenerateReduce(buffer.slice(1))) {
      yield `${left}${right}`;
    }
  }
}
function* GenerateAnd(expression) {
  return yield* GenerateReduce(expression.expr.map((expr) => [...TemplateLiteralExpressionGenerate(expr)]));
}
function* GenerateOr(expression) {
  for (const expr of expression.expr)
    yield* TemplateLiteralExpressionGenerate(expr);
}
function* GenerateConst(expression) {
  return yield expression.const;
}
function* TemplateLiteralExpressionGenerate(expression) {
  return expression.type === "and" ? yield* GenerateAnd(expression) : expression.type === "or" ? yield* GenerateOr(expression) : expression.type === "const" ? yield* GenerateConst(expression) : (() => {
    throw new TemplateLiteralGenerateError("Unknown expression");
  })();
}
function TemplateLiteralGenerate(schema) {
  const expression = TemplateLiteralParseExact(schema.pattern);
  return IsTemplateLiteralExpressionFinite(expression) ? [...TemplateLiteralExpressionGenerate(expression)] : [];
}
// node_modules/@sinclair/typebox/build/esm/type/literal/literal.mjs
function Literal(value, options = {}) {
  return {
    ...options,
    [Kind]: "Literal",
    const: value,
    type: typeof value
  };
}
// node_modules/@sinclair/typebox/build/esm/type/boolean/boolean.mjs
function Boolean2(options = {}) {
  return {
    ...options,
    [Kind]: "Boolean",
    type: "boolean"
  };
}
// node_modules/@sinclair/typebox/build/esm/type/bigint/bigint.mjs
function BigInt2(options = {}) {
  return {
    ...options,
    [Kind]: "BigInt",
    type: "bigint"
  };
}
// node_modules/@sinclair/typebox/build/esm/type/number/number.mjs
function Number2(options = {}) {
  return {
    ...options,
    [Kind]: "Number",
    type: "number"
  };
}
// node_modules/@sinclair/typebox/build/esm/type/string/string.mjs
function String2(options = {}) {
  return { ...options, [Kind]: "String", type: "string" };
}
// node_modules/@sinclair/typebox/build/esm/type/template-literal/syntax.mjs
function* FromUnion(syntax) {
  const trim = syntax.trim().replace(/"|'/g, "");
  return trim === "boolean" ? yield Boolean2() : trim === "number" ? yield Number2() : trim === "bigint" ? yield BigInt2() : trim === "string" ? yield String2() : yield (() => {
    const literals = trim.split("|").map((literal2) => Literal(literal2.trim()));
    return literals.length === 0 ? Never() : literals.length === 1 ? literals[0] : UnionEvaluated(literals);
  })();
}
function* FromTerminal(syntax) {
  if (syntax[1] !== "{") {
    const L = Literal("$");
    const R = FromSyntax(syntax.slice(1));
    return yield* [L, ...R];
  }
  for (let i = 2;i < syntax.length; i++) {
    if (syntax[i] === "}") {
      const L = FromUnion(syntax.slice(2, i));
      const R = FromSyntax(syntax.slice(i + 1));
      return yield* [...L, ...R];
    }
  }
  yield Literal(syntax);
}
function* FromSyntax(syntax) {
  for (let i = 0;i < syntax.length; i++) {
    if (syntax[i] === "$") {
      const L = Literal(syntax.slice(0, i));
      const R = FromTerminal(syntax.slice(i));
      return yield* [L, ...R];
    }
  }
  yield Literal(syntax);
}
function TemplateLiteralSyntax(syntax) {
  return [...FromSyntax(syntax)];
}
// node_modules/@sinclair/typebox/build/esm/type/patterns/patterns.mjs
var PatternBoolean = "(true|false)";
var PatternNumber = "(0|[1-9][0-9]*)";
var PatternString = "(.*)";
var PatternBooleanExact = `^${PatternBoolean}\$`;
var PatternNumberExact = `^${PatternNumber}\$`;
var PatternStringExact = `^${PatternString}\$`;
// node_modules/@sinclair/typebox/build/esm/type/template-literal/pattern.mjs
class TemplateLiteralPatternError extends TypeBoxError {
}
function Escape(value) {
  return value.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
}
function Visit2(schema, acc) {
  return IsTemplateLiteral(schema) ? schema.pattern.slice(1, schema.pattern.length - 1) : IsUnion(schema) ? `(${schema.anyOf.map((schema2) => Visit2(schema2, acc)).join("|")})` : IsNumber3(schema) ? `${acc}${PatternNumber}` : IsInteger2(schema) ? `${acc}${PatternNumber}` : IsBigInt3(schema) ? `${acc}${PatternNumber}` : IsString3(schema) ? `${acc}${PatternString}` : IsLiteral(schema) ? `${acc}${Escape(schema.const.toString())}` : IsBoolean3(schema) ? `${acc}${PatternBoolean}` : (() => {
    throw new TemplateLiteralPatternError(`Unexpected Kind '${schema[Kind]}'`);
  })();
}
function TemplateLiteralPattern(kinds) {
  return `^${kinds.map((schema) => Visit2(schema, "")).join("")}$`;
}
// node_modules/@sinclair/typebox/build/esm/type/template-literal/union.mjs
function TemplateLiteralToUnion(schema) {
  const R = TemplateLiteralGenerate(schema);
  const L = R.map((S) => Literal(S));
  return UnionEvaluated(L);
}
// node_modules/@sinclair/typebox/build/esm/type/template-literal/template-literal.mjs
function TemplateLiteral(unresolved, options = {}) {
  const pattern = IsString2(unresolved) ? TemplateLiteralPattern(TemplateLiteralSyntax(unresolved)) : TemplateLiteralPattern(unresolved);
  return { ...options, [Kind]: "TemplateLiteral", type: "string", pattern };
}
// node_modules/@sinclair/typebox/build/esm/type/indexed/indexed-property-keys.mjs
function FromTemplateLiteral(T) {
  const R = TemplateLiteralGenerate(T);
  return R.map((S) => S.toString());
}
function FromUnion2(T) {
  const Acc = [];
  for (const L of T)
    Acc.push(...IndexPropertyKeys(L));
  return Acc;
}
function FromLiteral(T) {
  return [T.toString()];
}
function IndexPropertyKeys(T) {
  return [...new Set(IsTemplateLiteral(T) ? FromTemplateLiteral(T) : IsUnion(T) ? FromUnion2(T.anyOf) : IsLiteral(T) ? FromLiteral(T.const) : IsNumber3(T) ? ["[number]"] : IsInteger2(T) ? ["[number]"] : [])];
}

// node_modules/@sinclair/typebox/build/esm/type/indexed/indexed-from-mapped-result.mjs
function FromProperties2(T, P, options) {
  const Acc = {};
  for (const K2 of Object.getOwnPropertyNames(P)) {
    Acc[K2] = Index(T, IndexPropertyKeys(P[K2]), options);
  }
  return Acc;
}
function FromMappedResult2(T, R, options) {
  return FromProperties2(T, R.properties, options);
}
function IndexFromMappedResult(T, R, options) {
  const P = FromMappedResult2(T, R, options);
  return MappedResult(P);
}

// node_modules/@sinclair/typebox/build/esm/type/indexed/indexed.mjs
function FromRest(T, K) {
  return T.map((L) => IndexFromPropertyKey(L, K));
}
function FromIntersectRest(T) {
  return T.filter((L) => !IsNever(L));
}
function FromIntersect(T, K) {
  return IntersectEvaluated(FromIntersectRest(FromRest(T, K)));
}
function FromUnionRest(T) {
  return T.some((L) => IsNever(L)) ? [] : T;
}
function FromUnion3(T, K) {
  return UnionEvaluated(FromUnionRest(FromRest(T, K)));
}
function FromTuple(T, K) {
  return K in T ? T[K] : K === "[number]" ? UnionEvaluated(T) : Never();
}
function FromArray(T, K) {
  return K === "[number]" ? T : Never();
}
function FromProperty(T, K) {
  return K in T ? T[K] : Never();
}
function IndexFromPropertyKey(T, K) {
  return IsIntersect(T) ? FromIntersect(T.allOf, K) : IsUnion(T) ? FromUnion3(T.anyOf, K) : IsTuple(T) ? FromTuple(T.items ?? [], K) : IsArray3(T) ? FromArray(T.items, K) : IsObject3(T) ? FromProperty(T.properties, K) : Never();
}
function IndexFromPropertyKeys(T, K) {
  return K.map((L) => IndexFromPropertyKey(T, L));
}
function FromSchema(T, K) {
  return UnionEvaluated(IndexFromPropertyKeys(T, K));
}
function Index(T, K, options = {}) {
  return IsMappedResult(K) ? CloneType(IndexFromMappedResult(T, K, options)) : IsMappedKey(K) ? CloneType(IndexFromMappedKey(T, K, options)) : IsSchema(K) ? CloneType(FromSchema(T, IndexPropertyKeys(K)), options) : CloneType(FromSchema(T, K), options);
}

// node_modules/@sinclair/typebox/build/esm/type/indexed/indexed-from-mapped-key.mjs
function MappedIndexPropertyKey(T, K, options) {
  return { [K]: Index(T, [K], options) };
}
function MappedIndexPropertyKeys(T, K, options) {
  return K.reduce((Acc, L) => {
    return { ...Acc, ...MappedIndexPropertyKey(T, L, options) };
  }, {});
}
function MappedIndexProperties(T, K, options) {
  return MappedIndexPropertyKeys(T, K.keys, options);
}
function IndexFromMappedKey(T, K, options) {
  const P = MappedIndexProperties(T, K, options);
  return MappedResult(P);
}
// node_modules/@sinclair/typebox/build/esm/type/iterator/iterator.mjs
function Iterator(items, options = {}) {
  return {
    ...options,
    [Kind]: "Iterator",
    type: "Iterator",
    items: CloneType(items)
  };
}
// node_modules/@sinclair/typebox/build/esm/type/object/object.mjs
function _Object(properties, options = {}) {
  const propertyKeys = globalThis.Object.getOwnPropertyNames(properties);
  const optionalKeys = propertyKeys.filter((key) => IsOptional(properties[key]));
  const requiredKeys = propertyKeys.filter((name) => !optionalKeys.includes(name));
  const clonedAdditionalProperties = IsSchema(options.additionalProperties) ? { additionalProperties: CloneType(options.additionalProperties) } : {};
  const clonedProperties = {};
  for (const key of propertyKeys)
    clonedProperties[key] = CloneType(properties[key]);
  return requiredKeys.length > 0 ? { ...options, ...clonedAdditionalProperties, [Kind]: "Object", type: "object", properties: clonedProperties, required: requiredKeys } : { ...options, ...clonedAdditionalProperties, [Kind]: "Object", type: "object", properties: clonedProperties };
}
var Object2 = _Object;
// node_modules/@sinclair/typebox/build/esm/type/promise/promise.mjs
function Promise2(item, options = {}) {
  return {
    ...options,
    [Kind]: "Promise",
    type: "Promise",
    item: CloneType(item)
  };
}
// node_modules/@sinclair/typebox/build/esm/type/readonly/readonly.mjs
function RemoveReadonly(schema) {
  return Discard(CloneType(schema), [ReadonlyKind]);
}
function AddReadonly(schema) {
  return { ...CloneType(schema), [ReadonlyKind]: "Readonly" };
}
function ReadonlyWithFlag(schema, F) {
  return F === false ? RemoveReadonly(schema) : AddReadonly(schema);
}
function Readonly(schema, enable) {
  const F = enable ?? true;
  return IsMappedResult(schema) ? ReadonlyFromMappedResult(schema, F) : ReadonlyWithFlag(schema, F);
}

// node_modules/@sinclair/typebox/build/esm/type/readonly/readonly-from-mapped-result.mjs
function FromProperties3(K, F) {
  const Acc = {};
  for (const K2 of globalThis.Object.getOwnPropertyNames(K))
    Acc[K2] = Readonly(K[K2], F);
  return Acc;
}
function FromMappedResult3(R, F) {
  return FromProperties3(R.properties, F);
}
function ReadonlyFromMappedResult(R, F) {
  const P = FromMappedResult3(R, F);
  return MappedResult(P);
}
// node_modules/@sinclair/typebox/build/esm/type/tuple/tuple.mjs
function Tuple(items, options = {}) {
  const [additionalItems, minItems, maxItems] = [false, items.length, items.length];
  return items.length > 0 ? { ...options, [Kind]: "Tuple", type: "array", items: CloneRest(items), additionalItems, minItems, maxItems } : { ...options, [Kind]: "Tuple", type: "array", minItems, maxItems };
}
// node_modules/@sinclair/typebox/build/esm/type/sets/set.mjs
function SetIncludes(T, S) {
  return T.includes(S);
}
function SetDistinct(T) {
  return [...new Set(T)];
}
function SetIntersect(T, S) {
  return T.filter((L) => S.includes(L));
}
function SetIntersectManyResolve(T, Init) {
  return T.reduce((Acc, L) => {
    return SetIntersect(Acc, L);
  }, Init);
}
function SetIntersectMany(T) {
  return T.length === 1 ? T[0] : T.length > 1 ? SetIntersectManyResolve(T.slice(1), T[0]) : [];
}
function SetUnionMany(T) {
  const Acc = [];
  for (const L of T)
    Acc.push(...L);
  return Acc;
}
// node_modules/@sinclair/typebox/build/esm/type/mapped/mapped.mjs
function FromMappedResult4(K, P) {
  return K in P ? FromSchemaType(K, P[K]) : MappedResult(P);
}
function MappedKeyToKnownMappedResultProperties(K) {
  return { [K]: Literal(K) };
}
function MappedKeyToUnknownMappedResultProperties(P) {
  const Acc = {};
  for (const L of P)
    Acc[L] = Literal(L);
  return Acc;
}
function MappedKeyToMappedResultProperties(K, P) {
  return SetIncludes(P, K) ? MappedKeyToKnownMappedResultProperties(K) : MappedKeyToUnknownMappedResultProperties(P);
}
function FromMappedKey(K, P) {
  const R = MappedKeyToMappedResultProperties(K, P);
  return FromMappedResult4(K, R);
}
function FromRest2(K, T) {
  return T.map((L) => FromSchemaType(K, L));
}
function FromProperties4(K, T) {
  const Acc = {};
  for (const K2 of globalThis.Object.getOwnPropertyNames(T))
    Acc[K2] = FromSchemaType(K, T[K2]);
  return Acc;
}
function FromSchemaType(K, T) {
  return IsOptional(T) ? Optional(FromSchemaType(K, Discard(T, [OptionalKind]))) : IsReadonly(T) ? Readonly(FromSchemaType(K, Discard(T, [ReadonlyKind]))) : IsMappedResult(T) ? FromMappedResult4(K, T.properties) : IsMappedKey(T) ? FromMappedKey(K, T.keys) : IsConstructor(T) ? Constructor(FromRest2(K, T.parameters), FromSchemaType(K, T.returns)) : IsFunction3(T) ? Function2(FromRest2(K, T.parameters), FromSchemaType(K, T.returns)) : IsAsyncIterator3(T) ? AsyncIterator(FromSchemaType(K, T.items)) : IsIterator3(T) ? Iterator(FromSchemaType(K, T.items)) : IsIntersect(T) ? Intersect(FromRest2(K, T.allOf)) : IsUnion(T) ? Union(FromRest2(K, T.anyOf)) : IsTuple(T) ? Tuple(FromRest2(K, T.items ?? [])) : IsObject3(T) ? Object2(FromProperties4(K, T.properties)) : IsArray3(T) ? Array2(FromSchemaType(K, T.items)) : IsPromise2(T) ? Promise2(FromSchemaType(K, T.item)) : T;
}
function MappedFunctionReturnType(K, T) {
  const Acc = {};
  for (const L of K)
    Acc[L] = FromSchemaType(L, T);
  return Acc;
}
function Mapped(key, map3, options = {}) {
  const K = IsSchema(key) ? IndexPropertyKeys(key) : key;
  const RT = map3({ [Kind]: "MappedKey", keys: K });
  const R = MappedFunctionReturnType(K, RT);
  return CloneType(Object2(R), options);
}
// node_modules/@sinclair/typebox/build/esm/type/keyof/keyof-property-keys.mjs
function FromRest3(T) {
  const Acc = [];
  for (const L of T)
    Acc.push(KeyOfPropertyKeys(L));
  return Acc;
}
function FromIntersect2(T) {
  const C = FromRest3(T);
  const R = SetUnionMany(C);
  return R;
}
function FromUnion4(T) {
  const C = FromRest3(T);
  const R = SetIntersectMany(C);
  return R;
}
function FromTuple2(T) {
  return T.map((_, I) => I.toString());
}
function FromArray2(_) {
  return ["[number]"];
}
function FromProperties5(T) {
  return globalThis.Object.getOwnPropertyNames(T);
}
function FromPatternProperties(patternProperties) {
  if (!includePatternProperties)
    return [];
  const patternPropertyKeys = globalThis.Object.getOwnPropertyNames(patternProperties);
  return patternPropertyKeys.map((key) => {
    return key[0] === "^" && key[key.length - 1] === "$" ? key.slice(1, key.length - 1) : key;
  });
}
function KeyOfPropertyKeys(T) {
  return IsIntersect(T) ? FromIntersect2(T.allOf) : IsUnion(T) ? FromUnion4(T.anyOf) : IsTuple(T) ? FromTuple2(T.items ?? []) : IsArray3(T) ? FromArray2(T.items) : IsObject3(T) ? FromProperties5(T.properties) : IsRecord(T) ? FromPatternProperties(T.patternProperties) : [];
}
var includePatternProperties = false;
function KeyOfPattern(schema) {
  includePatternProperties = true;
  const keys = KeyOfPropertyKeys(schema);
  includePatternProperties = false;
  const pattern2 = keys.map((key) => `(${key})`);
  return `^(${pattern2.join("|")})\$`;
}

// node_modules/@sinclair/typebox/build/esm/type/keyof/keyof.mjs
function KeyOfPropertyKeysToRest(T) {
  return T.map((L) => L === "[number]" ? Number2() : Literal(L));
}
function KeyOf(T, options = {}) {
  if (IsMappedResult(T)) {
    return KeyOfFromMappedResult(T, options);
  } else {
    const K = KeyOfPropertyKeys(T);
    const S = KeyOfPropertyKeysToRest(K);
    const U = UnionEvaluated(S);
    return CloneType(U, options);
  }
}

// node_modules/@sinclair/typebox/build/esm/type/keyof/keyof-from-mapped-result.mjs
function FromProperties6(K, options) {
  const Acc = {};
  for (const K2 of globalThis.Object.getOwnPropertyNames(K))
    Acc[K2] = KeyOf(K[K2], options);
  return Acc;
}
function FromMappedResult5(R, options) {
  return FromProperties6(R.properties, options);
}
function KeyOfFromMappedResult(R, options) {
  const P = FromMappedResult5(R, options);
  return MappedResult(P);
}
// node_modules/@sinclair/typebox/build/esm/type/keyof/keyof-property-entries.mjs
function KeyOfPropertyEntries(schema) {
  const keys = KeyOfPropertyKeys(schema);
  const schemas = IndexFromPropertyKeys(schema, keys);
  return keys.map((_, index) => [keys[index], schemas[index]]);
}
// node_modules/@sinclair/typebox/build/esm/type/extends/extends-undefined.mjs
function Intersect2(schema) {
  return schema.allOf.every((schema2) => ExtendsUndefinedCheck(schema2));
}
function Union2(schema) {
  return schema.anyOf.some((schema2) => ExtendsUndefinedCheck(schema2));
}
function Not(schema) {
  return !ExtendsUndefinedCheck(schema.not);
}
function ExtendsUndefinedCheck(schema) {
  return schema[Kind] === "Intersect" ? Intersect2(schema) : schema[Kind] === "Union" ? Union2(schema) : schema[Kind] === "Not" ? Not(schema) : schema[Kind] === "Undefined" ? true : false;
}

// node_modules/@sinclair/typebox/build/esm/errors/function.mjs
function DefaultErrorFunction(error2) {
  switch (error2.errorType) {
    case ValueErrorType.ArrayContains:
      return "Expected array to contain at least one matching value";
    case ValueErrorType.ArrayMaxContains:
      return `Expected array to contain no more than ${error2.schema.maxContains} matching values`;
    case ValueErrorType.ArrayMinContains:
      return `Expected array to contain at least ${error2.schema.minContains} matching values`;
    case ValueErrorType.ArrayMaxItems:
      return `Expected array length to be less or equal to ${error2.schema.maxItems}`;
    case ValueErrorType.ArrayMinItems:
      return `Expected array length to be greater or equal to ${error2.schema.minItems}`;
    case ValueErrorType.ArrayUniqueItems:
      return "Expected array elements to be unique";
    case ValueErrorType.Array:
      return "Expected array";
    case ValueErrorType.AsyncIterator:
      return "Expected AsyncIterator";
    case ValueErrorType.BigIntExclusiveMaximum:
      return `Expected bigint to be less than ${error2.schema.exclusiveMaximum}`;
    case ValueErrorType.BigIntExclusiveMinimum:
      return `Expected bigint to be greater than ${error2.schema.exclusiveMinimum}`;
    case ValueErrorType.BigIntMaximum:
      return `Expected bigint to be less or equal to ${error2.schema.maximum}`;
    case ValueErrorType.BigIntMinimum:
      return `Expected bigint to be greater or equal to ${error2.schema.minimum}`;
    case ValueErrorType.BigIntMultipleOf:
      return `Expected bigint to be a multiple of ${error2.schema.multipleOf}`;
    case ValueErrorType.BigInt:
      return "Expected bigint";
    case ValueErrorType.Boolean:
      return "Expected boolean";
    case ValueErrorType.DateExclusiveMinimumTimestamp:
      return `Expected Date timestamp to be greater than ${error2.schema.exclusiveMinimumTimestamp}`;
    case ValueErrorType.DateExclusiveMaximumTimestamp:
      return `Expected Date timestamp to be less than ${error2.schema.exclusiveMaximumTimestamp}`;
    case ValueErrorType.DateMinimumTimestamp:
      return `Expected Date timestamp to be greater or equal to ${error2.schema.minimumTimestamp}`;
    case ValueErrorType.DateMaximumTimestamp:
      return `Expected Date timestamp to be less or equal to ${error2.schema.maximumTimestamp}`;
    case ValueErrorType.DateMultipleOfTimestamp:
      return `Expected Date timestamp to be a multiple of ${error2.schema.multipleOfTimestamp}`;
    case ValueErrorType.Date:
      return "Expected Date";
    case ValueErrorType.Function:
      return "Expected function";
    case ValueErrorType.IntegerExclusiveMaximum:
      return `Expected integer to be less than ${error2.schema.exclusiveMaximum}`;
    case ValueErrorType.IntegerExclusiveMinimum:
      return `Expected integer to be greater than ${error2.schema.exclusiveMinimum}`;
    case ValueErrorType.IntegerMaximum:
      return `Expected integer to be less or equal to ${error2.schema.maximum}`;
    case ValueErrorType.IntegerMinimum:
      return `Expected integer to be greater or equal to ${error2.schema.minimum}`;
    case ValueErrorType.IntegerMultipleOf:
      return `Expected integer to be a multiple of ${error2.schema.multipleOf}`;
    case ValueErrorType.Integer:
      return "Expected integer";
    case ValueErrorType.IntersectUnevaluatedProperties:
      return "Unexpected property";
    case ValueErrorType.Intersect:
      return "Expected all values to match";
    case ValueErrorType.Iterator:
      return "Expected Iterator";
    case ValueErrorType.Literal:
      return `Expected ${typeof error2.schema.const === "string" ? `'${error2.schema.const}'` : error2.schema.const}`;
    case ValueErrorType.Never:
      return "Never";
    case ValueErrorType.Not:
      return "Value should not match";
    case ValueErrorType.Null:
      return "Expected null";
    case ValueErrorType.NumberExclusiveMaximum:
      return `Expected number to be less than ${error2.schema.exclusiveMaximum}`;
    case ValueErrorType.NumberExclusiveMinimum:
      return `Expected number to be greater than ${error2.schema.exclusiveMinimum}`;
    case ValueErrorType.NumberMaximum:
      return `Expected number to be less or equal to ${error2.schema.maximum}`;
    case ValueErrorType.NumberMinimum:
      return `Expected number to be greater or equal to ${error2.schema.minimum}`;
    case ValueErrorType.NumberMultipleOf:
      return `Expected number to be a multiple of ${error2.schema.multipleOf}`;
    case ValueErrorType.Number:
      return "Expected number";
    case ValueErrorType.Object:
      return "Expected object";
    case ValueErrorType.ObjectAdditionalProperties:
      return "Unexpected property";
    case ValueErrorType.ObjectMaxProperties:
      return `Expected object to have no more than ${error2.schema.maxProperties} properties`;
    case ValueErrorType.ObjectMinProperties:
      return `Expected object to have at least ${error2.schema.minProperties} properties`;
    case ValueErrorType.ObjectRequiredProperty:
      return "Required property";
    case ValueErrorType.Promise:
      return "Expected Promise";
    case ValueErrorType.RegExp:
      return "Expected string to match regular expression";
    case ValueErrorType.StringFormatUnknown:
      return `Unknown format '${error2.schema.format}'`;
    case ValueErrorType.StringFormat:
      return `Expected string to match '${error2.schema.format}' format`;
    case ValueErrorType.StringMaxLength:
      return `Expected string length less or equal to ${error2.schema.maxLength}`;
    case ValueErrorType.StringMinLength:
      return `Expected string length greater or equal to ${error2.schema.minLength}`;
    case ValueErrorType.StringPattern:
      return `Expected string to match '${error2.schema.pattern}'`;
    case ValueErrorType.String:
      return "Expected string";
    case ValueErrorType.Symbol:
      return "Expected symbol";
    case ValueErrorType.TupleLength:
      return `Expected tuple to have ${error2.schema.maxItems || 0} elements`;
    case ValueErrorType.Tuple:
      return "Expected tuple";
    case ValueErrorType.Uint8ArrayMaxByteLength:
      return `Expected byte length less or equal to ${error2.schema.maxByteLength}`;
    case ValueErrorType.Uint8ArrayMinByteLength:
      return `Expected byte length greater or equal to ${error2.schema.minByteLength}`;
    case ValueErrorType.Uint8Array:
      return "Expected Uint8Array";
    case ValueErrorType.Undefined:
      return "Expected undefined";
    case ValueErrorType.Union:
      return "Expected union value";
    case ValueErrorType.Void:
      return "Expected void";
    case ValueErrorType.Kind:
      return `Expected kind '${error2.schema[Kind]}'`;
    default:
      return "Unknown error type";
  }
}
var errorFunction = DefaultErrorFunction;
function GetErrorFunction() {
  return errorFunction;
}

// node_modules/@sinclair/typebox/build/esm/value/deref/deref.mjs
class TypeDereferenceError extends TypeBoxError {
  constructor(schema) {
    super(`Unable to dereference schema with \$id '${schema.$id}'`);
    this.schema = schema;
  }
}
function Resolve(schema, references) {
  const target = references.find((target2) => target2.$id === schema.$ref);
  if (target === undefined)
    throw new TypeDereferenceError(schema);
  return Deref(target, references);
}
function Deref(schema, references) {
  return schema[Kind] === "This" || schema[Kind] === "Ref" ? Resolve(schema, references) : schema;
}
// node_modules/@sinclair/typebox/build/esm/value/hash/hash.mjs
class ValueHashError extends TypeBoxError {
  constructor(value) {
    super(`Unable to hash value`);
    this.value = value;
  }
}
var ByteMarker;
(function(ByteMarker2) {
  ByteMarker2[ByteMarker2["Undefined"] = 0] = "Undefined";
  ByteMarker2[ByteMarker2["Null"] = 1] = "Null";
  ByteMarker2[ByteMarker2["Boolean"] = 2] = "Boolean";
  ByteMarker2[ByteMarker2["Number"] = 3] = "Number";
  ByteMarker2[ByteMarker2["String"] = 4] = "String";
  ByteMarker2[ByteMarker2["Object"] = 5] = "Object";
  ByteMarker2[ByteMarker2["Array"] = 6] = "Array";
  ByteMarker2[ByteMarker2["Date"] = 7] = "Date";
  ByteMarker2[ByteMarker2["Uint8Array"] = 8] = "Uint8Array";
  ByteMarker2[ByteMarker2["Symbol"] = 9] = "Symbol";
  ByteMarker2[ByteMarker2["BigInt"] = 10] = "BigInt";
})(ByteMarker || (ByteMarker = {}));
var Accumulator = BigInt("14695981039346656037");
var [Prime, Size] = [BigInt("1099511628211"), BigInt("2") ** BigInt("64")];
var Bytes = Array.from({ length: 256 }).map((_, i) => BigInt(i));
var F64 = new Float64Array(1);
var F64In = new DataView(F64.buffer);
var F64Out = new Uint8Array(F64.buffer);
function* NumberToBytes(value) {
  const byteCount = value === 0 ? 1 : Math.ceil(Math.floor(Math.log2(value) + 1) / 8);
  for (let i = 0;i < byteCount; i++) {
    yield value >> 8 * (byteCount - 1 - i) & 255;
  }
}
function ArrayType2(value) {
  FNV1A64(ByteMarker.Array);
  for (const item of value) {
    Visit3(item);
  }
}
function BooleanType(value) {
  FNV1A64(ByteMarker.Boolean);
  FNV1A64(value ? 1 : 0);
}
function BigIntType(value) {
  FNV1A64(ByteMarker.BigInt);
  F64In.setBigInt64(0, value);
  for (const byte of F64Out) {
    FNV1A64(byte);
  }
}
function DateType2(value) {
  FNV1A64(ByteMarker.Date);
  Visit3(value.getTime());
}
function NullType(value) {
  FNV1A64(ByteMarker.Null);
}
function NumberType(value) {
  FNV1A64(ByteMarker.Number);
  F64In.setFloat64(0, value);
  for (const byte of F64Out) {
    FNV1A64(byte);
  }
}
function ObjectType2(value) {
  FNV1A64(ByteMarker.Object);
  for (const key of globalThis.Object.getOwnPropertyNames(value).sort()) {
    Visit3(key);
    Visit3(value[key]);
  }
}
function StringType(value) {
  FNV1A64(ByteMarker.String);
  for (let i = 0;i < value.length; i++) {
    for (const byte of NumberToBytes(value.charCodeAt(i))) {
      FNV1A64(byte);
    }
  }
}
function SymbolType(value) {
  FNV1A64(ByteMarker.Symbol);
  Visit3(value.description);
}
function Uint8ArrayType2(value) {
  FNV1A64(ByteMarker.Uint8Array);
  for (let i = 0;i < value.length; i++) {
    FNV1A64(value[i]);
  }
}
function UndefinedType(value) {
  return FNV1A64(ByteMarker.Undefined);
}
function Visit3(value) {
  if (IsArray(value))
    return ArrayType2(value);
  if (IsBoolean(value))
    return BooleanType(value);
  if (IsBigInt(value))
    return BigIntType(value);
  if (IsDate(value))
    return DateType2(value);
  if (IsNull(value))
    return NullType(value);
  if (IsNumber(value))
    return NumberType(value);
  if (IsStandardObject(value))
    return ObjectType2(value);
  if (IsString(value))
    return StringType(value);
  if (IsSymbol(value))
    return SymbolType(value);
  if (IsUint8Array(value))
    return Uint8ArrayType2(value);
  if (IsUndefined(value))
    return UndefinedType(value);
  throw new ValueHashError(value);
}
function FNV1A64(byte) {
  Accumulator = Accumulator ^ Bytes[byte];
  Accumulator = Accumulator * Prime % Size;
}
function Hash(value) {
  Accumulator = BigInt("14695981039346656037");
  Visit3(value);
  return Accumulator;
}
// node_modules/@sinclair/typebox/build/esm/errors/errors.mjs
var ValueErrorType;
(function(ValueErrorType2) {
  ValueErrorType2[ValueErrorType2["ArrayContains"] = 0] = "ArrayContains";
  ValueErrorType2[ValueErrorType2["ArrayMaxContains"] = 1] = "ArrayMaxContains";
  ValueErrorType2[ValueErrorType2["ArrayMaxItems"] = 2] = "ArrayMaxItems";
  ValueErrorType2[ValueErrorType2["ArrayMinContains"] = 3] = "ArrayMinContains";
  ValueErrorType2[ValueErrorType2["ArrayMinItems"] = 4] = "ArrayMinItems";
  ValueErrorType2[ValueErrorType2["ArrayUniqueItems"] = 5] = "ArrayUniqueItems";
  ValueErrorType2[ValueErrorType2["Array"] = 6] = "Array";
  ValueErrorType2[ValueErrorType2["AsyncIterator"] = 7] = "AsyncIterator";
  ValueErrorType2[ValueErrorType2["BigIntExclusiveMaximum"] = 8] = "BigIntExclusiveMaximum";
  ValueErrorType2[ValueErrorType2["BigIntExclusiveMinimum"] = 9] = "BigIntExclusiveMinimum";
  ValueErrorType2[ValueErrorType2["BigIntMaximum"] = 10] = "BigIntMaximum";
  ValueErrorType2[ValueErrorType2["BigIntMinimum"] = 11] = "BigIntMinimum";
  ValueErrorType2[ValueErrorType2["BigIntMultipleOf"] = 12] = "BigIntMultipleOf";
  ValueErrorType2[ValueErrorType2["BigInt"] = 13] = "BigInt";
  ValueErrorType2[ValueErrorType2["Boolean"] = 14] = "Boolean";
  ValueErrorType2[ValueErrorType2["DateExclusiveMaximumTimestamp"] = 15] = "DateExclusiveMaximumTimestamp";
  ValueErrorType2[ValueErrorType2["DateExclusiveMinimumTimestamp"] = 16] = "DateExclusiveMinimumTimestamp";
  ValueErrorType2[ValueErrorType2["DateMaximumTimestamp"] = 17] = "DateMaximumTimestamp";
  ValueErrorType2[ValueErrorType2["DateMinimumTimestamp"] = 18] = "DateMinimumTimestamp";
  ValueErrorType2[ValueErrorType2["DateMultipleOfTimestamp"] = 19] = "DateMultipleOfTimestamp";
  ValueErrorType2[ValueErrorType2["Date"] = 20] = "Date";
  ValueErrorType2[ValueErrorType2["Function"] = 21] = "Function";
  ValueErrorType2[ValueErrorType2["IntegerExclusiveMaximum"] = 22] = "IntegerExclusiveMaximum";
  ValueErrorType2[ValueErrorType2["IntegerExclusiveMinimum"] = 23] = "IntegerExclusiveMinimum";
  ValueErrorType2[ValueErrorType2["IntegerMaximum"] = 24] = "IntegerMaximum";
  ValueErrorType2[ValueErrorType2["IntegerMinimum"] = 25] = "IntegerMinimum";
  ValueErrorType2[ValueErrorType2["IntegerMultipleOf"] = 26] = "IntegerMultipleOf";
  ValueErrorType2[ValueErrorType2["Integer"] = 27] = "Integer";
  ValueErrorType2[ValueErrorType2["IntersectUnevaluatedProperties"] = 28] = "IntersectUnevaluatedProperties";
  ValueErrorType2[ValueErrorType2["Intersect"] = 29] = "Intersect";
  ValueErrorType2[ValueErrorType2["Iterator"] = 30] = "Iterator";
  ValueErrorType2[ValueErrorType2["Kind"] = 31] = "Kind";
  ValueErrorType2[ValueErrorType2["Literal"] = 32] = "Literal";
  ValueErrorType2[ValueErrorType2["Never"] = 33] = "Never";
  ValueErrorType2[ValueErrorType2["Not"] = 34] = "Not";
  ValueErrorType2[ValueErrorType2["Null"] = 35] = "Null";
  ValueErrorType2[ValueErrorType2["NumberExclusiveMaximum"] = 36] = "NumberExclusiveMaximum";
  ValueErrorType2[ValueErrorType2["NumberExclusiveMinimum"] = 37] = "NumberExclusiveMinimum";
  ValueErrorType2[ValueErrorType2["NumberMaximum"] = 38] = "NumberMaximum";
  ValueErrorType2[ValueErrorType2["NumberMinimum"] = 39] = "NumberMinimum";
  ValueErrorType2[ValueErrorType2["NumberMultipleOf"] = 40] = "NumberMultipleOf";
  ValueErrorType2[ValueErrorType2["Number"] = 41] = "Number";
  ValueErrorType2[ValueErrorType2["ObjectAdditionalProperties"] = 42] = "ObjectAdditionalProperties";
  ValueErrorType2[ValueErrorType2["ObjectMaxProperties"] = 43] = "ObjectMaxProperties";
  ValueErrorType2[ValueErrorType2["ObjectMinProperties"] = 44] = "ObjectMinProperties";
  ValueErrorType2[ValueErrorType2["ObjectRequiredProperty"] = 45] = "ObjectRequiredProperty";
  ValueErrorType2[ValueErrorType2["Object"] = 46] = "Object";
  ValueErrorType2[ValueErrorType2["Promise"] = 47] = "Promise";
  ValueErrorType2[ValueErrorType2["RegExp"] = 48] = "RegExp";
  ValueErrorType2[ValueErrorType2["StringFormatUnknown"] = 49] = "StringFormatUnknown";
  ValueErrorType2[ValueErrorType2["StringFormat"] = 50] = "StringFormat";
  ValueErrorType2[ValueErrorType2["StringMaxLength"] = 51] = "StringMaxLength";
  ValueErrorType2[ValueErrorType2["StringMinLength"] = 52] = "StringMinLength";
  ValueErrorType2[ValueErrorType2["StringPattern"] = 53] = "StringPattern";
  ValueErrorType2[ValueErrorType2["String"] = 54] = "String";
  ValueErrorType2[ValueErrorType2["Symbol"] = 55] = "Symbol";
  ValueErrorType2[ValueErrorType2["TupleLength"] = 56] = "TupleLength";
  ValueErrorType2[ValueErrorType2["Tuple"] = 57] = "Tuple";
  ValueErrorType2[ValueErrorType2["Uint8ArrayMaxByteLength"] = 58] = "Uint8ArrayMaxByteLength";
  ValueErrorType2[ValueErrorType2["Uint8ArrayMinByteLength"] = 59] = "Uint8ArrayMinByteLength";
  ValueErrorType2[ValueErrorType2["Uint8Array"] = 60] = "Uint8Array";
  ValueErrorType2[ValueErrorType2["Undefined"] = 61] = "Undefined";
  ValueErrorType2[ValueErrorType2["Union"] = 62] = "Union";
  ValueErrorType2[ValueErrorType2["Void"] = 63] = "Void";
})(ValueErrorType || (ValueErrorType = {}));

class ValueErrorsUnknownTypeError extends TypeBoxError {
  constructor(schema) {
    super("Unknown type");
    this.schema = schema;
  }
}
function EscapeKey(key) {
  return key.replace(/~/g, "~0").replace(/\//g, "~1");
}
function IsDefined(value) {
  return value !== undefined;
}

class ValueErrorIterator {
  constructor(iterator2) {
    this.iterator = iterator2;
  }
  [Symbol.iterator]() {
    return this.iterator;
  }
  First() {
    const next = this.iterator.next();
    return next.done ? undefined : next.value;
  }
}
function Create(errorType, schema, path, value) {
  return { type: errorType, schema, path, value, message: GetErrorFunction()({ errorType, path, schema, value }) };
}
function* FromAny(schema, references, path, value) {
}
function* FromArray3(schema, references, path, value) {
  if (!IsArray(value)) {
    return yield Create(ValueErrorType.Array, schema, path, value);
  }
  if (IsDefined(schema.minItems) && !(value.length >= schema.minItems)) {
    yield Create(ValueErrorType.ArrayMinItems, schema, path, value);
  }
  if (IsDefined(schema.maxItems) && !(value.length <= schema.maxItems)) {
    yield Create(ValueErrorType.ArrayMaxItems, schema, path, value);
  }
  for (let i = 0;i < value.length; i++) {
    yield* Visit4(schema.items, references, `${path}/${i}`, value[i]);
  }
  if (schema.uniqueItems === true && !function() {
    const set2 = new Set;
    for (const element of value) {
      const hashed = Hash(element);
      if (set2.has(hashed)) {
        return false;
      } else {
        set2.add(hashed);
      }
    }
    return true;
  }()) {
    yield Create(ValueErrorType.ArrayUniqueItems, schema, path, value);
  }
  if (!(IsDefined(schema.contains) || IsDefined(schema.minContains) || IsDefined(schema.maxContains))) {
    return;
  }
  const containsSchema = IsDefined(schema.contains) ? schema.contains : Never();
  const containsCount = value.reduce((acc, value2, index) => Visit4(containsSchema, references, `${path}${index}`, value2).next().done === true ? acc + 1 : acc, 0);
  if (containsCount === 0) {
    yield Create(ValueErrorType.ArrayContains, schema, path, value);
  }
  if (IsNumber(schema.minContains) && containsCount < schema.minContains) {
    yield Create(ValueErrorType.ArrayMinContains, schema, path, value);
  }
  if (IsNumber(schema.maxContains) && containsCount > schema.maxContains) {
    yield Create(ValueErrorType.ArrayMaxContains, schema, path, value);
  }
}
function* FromAsyncIterator(schema, references, path, value) {
  if (!IsAsyncIterator(value))
    yield Create(ValueErrorType.AsyncIterator, schema, path, value);
}
function* FromBigInt(schema, references, path, value) {
  if (!IsBigInt(value))
    return yield Create(ValueErrorType.BigInt, schema, path, value);
  if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {
    yield Create(ValueErrorType.BigIntExclusiveMaximum, schema, path, value);
  }
  if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {
    yield Create(ValueErrorType.BigIntExclusiveMinimum, schema, path, value);
  }
  if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {
    yield Create(ValueErrorType.BigIntMaximum, schema, path, value);
  }
  if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {
    yield Create(ValueErrorType.BigIntMinimum, schema, path, value);
  }
  if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === BigInt(0))) {
    yield Create(ValueErrorType.BigIntMultipleOf, schema, path, value);
  }
}
function* FromBoolean(schema, references, path, value) {
  if (!IsBoolean(value))
    yield Create(ValueErrorType.Boolean, schema, path, value);
}
function* FromConstructor(schema, references, path, value) {
  yield* Visit4(schema.returns, references, path, value.prototype);
}
function* FromDate(schema, references, path, value) {
  if (!IsDate(value))
    return yield Create(ValueErrorType.Date, schema, path, value);
  if (IsDefined(schema.exclusiveMaximumTimestamp) && !(value.getTime() < schema.exclusiveMaximumTimestamp)) {
    yield Create(ValueErrorType.DateExclusiveMaximumTimestamp, schema, path, value);
  }
  if (IsDefined(schema.exclusiveMinimumTimestamp) && !(value.getTime() > schema.exclusiveMinimumTimestamp)) {
    yield Create(ValueErrorType.DateExclusiveMinimumTimestamp, schema, path, value);
  }
  if (IsDefined(schema.maximumTimestamp) && !(value.getTime() <= schema.maximumTimestamp)) {
    yield Create(ValueErrorType.DateMaximumTimestamp, schema, path, value);
  }
  if (IsDefined(schema.minimumTimestamp) && !(value.getTime() >= schema.minimumTimestamp)) {
    yield Create(ValueErrorType.DateMinimumTimestamp, schema, path, value);
  }
  if (IsDefined(schema.multipleOfTimestamp) && !(value.getTime() % schema.multipleOfTimestamp === 0)) {
    yield Create(ValueErrorType.DateMultipleOfTimestamp, schema, path, value);
  }
}
function* FromFunction(schema, references, path, value) {
  if (!IsFunction(value))
    yield Create(ValueErrorType.Function, schema, path, value);
}
function* FromInteger(schema, references, path, value) {
  if (!IsInteger(value))
    return yield Create(ValueErrorType.Integer, schema, path, value);
  if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {
    yield Create(ValueErrorType.IntegerExclusiveMaximum, schema, path, value);
  }
  if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {
    yield Create(ValueErrorType.IntegerExclusiveMinimum, schema, path, value);
  }
  if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {
    yield Create(ValueErrorType.IntegerMaximum, schema, path, value);
  }
  if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {
    yield Create(ValueErrorType.IntegerMinimum, schema, path, value);
  }
  if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {
    yield Create(ValueErrorType.IntegerMultipleOf, schema, path, value);
  }
}
function* FromIntersect3(schema, references, path, value) {
  for (const inner of schema.allOf) {
    const next = Visit4(inner, references, path, value).next();
    if (!next.done) {
      yield Create(ValueErrorType.Intersect, schema, path, value);
      yield next.value;
    }
  }
  if (schema.unevaluatedProperties === false) {
    const keyCheck = new RegExp(KeyOfPattern(schema));
    for (const valueKey of Object.getOwnPropertyNames(value)) {
      if (!keyCheck.test(valueKey)) {
        yield Create(ValueErrorType.IntersectUnevaluatedProperties, schema, `${path}/${valueKey}`, value);
      }
    }
  }
  if (typeof schema.unevaluatedProperties === "object") {
    const keyCheck = new RegExp(KeyOfPattern(schema));
    for (const valueKey of Object.getOwnPropertyNames(value)) {
      if (!keyCheck.test(valueKey)) {
        const next = Visit4(schema.unevaluatedProperties, references, `${path}/${valueKey}`, value[valueKey]).next();
        if (!next.done)
          yield next.value;
      }
    }
  }
}
function* FromIterator(schema, references, path, value) {
  if (!IsIterator(value))
    yield Create(ValueErrorType.Iterator, schema, path, value);
}
function* FromLiteral2(schema, references, path, value) {
  if (!(value === schema.const))
    yield Create(ValueErrorType.Literal, schema, path, value);
}
function* FromNever(schema, references, path, value) {
  yield Create(ValueErrorType.Never, schema, path, value);
}
function* FromNot(schema, references, path, value) {
  if (Visit4(schema.not, references, path, value).next().done === true)
    yield Create(ValueErrorType.Not, schema, path, value);
}
function* FromNull(schema, references, path, value) {
  if (!IsNull(value))
    yield Create(ValueErrorType.Null, schema, path, value);
}
function* FromNumber(schema, references, path, value) {
  if (!TypeSystemPolicy.IsNumberLike(value))
    return yield Create(ValueErrorType.Number, schema, path, value);
  if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {
    yield Create(ValueErrorType.NumberExclusiveMaximum, schema, path, value);
  }
  if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {
    yield Create(ValueErrorType.NumberExclusiveMinimum, schema, path, value);
  }
  if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {
    yield Create(ValueErrorType.NumberMaximum, schema, path, value);
  }
  if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {
    yield Create(ValueErrorType.NumberMinimum, schema, path, value);
  }
  if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {
    yield Create(ValueErrorType.NumberMultipleOf, schema, path, value);
  }
}
function* FromObject(schema, references, path, value) {
  if (!TypeSystemPolicy.IsObjectLike(value))
    return yield Create(ValueErrorType.Object, schema, path, value);
  if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {
    yield Create(ValueErrorType.ObjectMinProperties, schema, path, value);
  }
  if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {
    yield Create(ValueErrorType.ObjectMaxProperties, schema, path, value);
  }
  const requiredKeys = Array.isArray(schema.required) ? schema.required : [];
  const knownKeys = Object.getOwnPropertyNames(schema.properties);
  const unknownKeys = Object.getOwnPropertyNames(value);
  for (const requiredKey of requiredKeys) {
    if (unknownKeys.includes(requiredKey))
      continue;
    yield Create(ValueErrorType.ObjectRequiredProperty, schema.properties[requiredKey], `${path}/${EscapeKey(requiredKey)}`, undefined);
  }
  if (schema.additionalProperties === false) {
    for (const valueKey of unknownKeys) {
      if (!knownKeys.includes(valueKey)) {
        yield Create(ValueErrorType.ObjectAdditionalProperties, schema, `${path}/${EscapeKey(valueKey)}`, value[valueKey]);
      }
    }
  }
  if (typeof schema.additionalProperties === "object") {
    for (const valueKey of unknownKeys) {
      if (knownKeys.includes(valueKey))
        continue;
      yield* Visit4(schema.additionalProperties, references, `${path}/${EscapeKey(valueKey)}`, value[valueKey]);
    }
  }
  for (const knownKey of knownKeys) {
    const property = schema.properties[knownKey];
    if (schema.required && schema.required.includes(knownKey)) {
      yield* Visit4(property, references, `${path}/${EscapeKey(knownKey)}`, value[knownKey]);
      if (ExtendsUndefinedCheck(schema) && !(knownKey in value)) {
        yield Create(ValueErrorType.ObjectRequiredProperty, property, `${path}/${EscapeKey(knownKey)}`, undefined);
      }
    } else {
      if (TypeSystemPolicy.IsExactOptionalProperty(value, knownKey)) {
        yield* Visit4(property, references, `${path}/${EscapeKey(knownKey)}`, value[knownKey]);
      }
    }
  }
}
function* FromPromise(schema, references, path, value) {
  if (!IsPromise(value))
    yield Create(ValueErrorType.Promise, schema, path, value);
}
function* FromRecord(schema, references, path, value) {
  if (!TypeSystemPolicy.IsRecordLike(value))
    return yield Create(ValueErrorType.Object, schema, path, value);
  if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {
    yield Create(ValueErrorType.ObjectMinProperties, schema, path, value);
  }
  if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {
    yield Create(ValueErrorType.ObjectMaxProperties, schema, path, value);
  }
  const [patternKey, patternSchema] = Object.entries(schema.patternProperties)[0];
  const regex = new RegExp(patternKey);
  for (const [propertyKey, propertyValue] of Object.entries(value)) {
    if (regex.test(propertyKey))
      yield* Visit4(patternSchema, references, `${path}/${EscapeKey(propertyKey)}`, propertyValue);
  }
  if (typeof schema.additionalProperties === "object") {
    for (const [propertyKey, propertyValue] of Object.entries(value)) {
      if (!regex.test(propertyKey))
        yield* Visit4(schema.additionalProperties, references, `${path}/${EscapeKey(propertyKey)}`, propertyValue);
    }
  }
  if (schema.additionalProperties === false) {
    for (const [propertyKey, propertyValue] of Object.entries(value)) {
      if (regex.test(propertyKey))
        continue;
      return yield Create(ValueErrorType.ObjectAdditionalProperties, schema, `${path}/${EscapeKey(propertyKey)}`, propertyValue);
    }
  }
}
function* FromRef(schema, references, path, value) {
  yield* Visit4(Deref(schema, references), references, path, value);
}
function* FromRegExp(schema, references, path, value) {
  if (!IsString(value))
    return yield Create(ValueErrorType.String, schema, path, value);
  if (IsDefined(schema.minLength) && !(value.length >= schema.minLength)) {
    yield Create(ValueErrorType.StringMinLength, schema, path, value);
  }
  if (IsDefined(schema.maxLength) && !(value.length <= schema.maxLength)) {
    yield Create(ValueErrorType.StringMaxLength, schema, path, value);
  }
  const regex = new RegExp(schema.source, schema.flags);
  if (!regex.test(value)) {
    return yield Create(ValueErrorType.RegExp, schema, path, value);
  }
}
function* FromString(schema, references, path, value) {
  if (!IsString(value))
    return yield Create(ValueErrorType.String, schema, path, value);
  if (IsDefined(schema.minLength) && !(value.length >= schema.minLength)) {
    yield Create(ValueErrorType.StringMinLength, schema, path, value);
  }
  if (IsDefined(schema.maxLength) && !(value.length <= schema.maxLength)) {
    yield Create(ValueErrorType.StringMaxLength, schema, path, value);
  }
  if (IsString(schema.pattern)) {
    const regex = new RegExp(schema.pattern);
    if (!regex.test(value)) {
      yield Create(ValueErrorType.StringPattern, schema, path, value);
    }
  }
  if (IsString(schema.format)) {
    if (!exports_format.Has(schema.format)) {
      yield Create(ValueErrorType.StringFormatUnknown, schema, path, value);
    } else {
      const format = exports_format.Get(schema.format);
      if (!format(value)) {
        yield Create(ValueErrorType.StringFormat, schema, path, value);
      }
    }
  }
}
function* FromSymbol(schema, references, path, value) {
  if (!IsSymbol(value))
    yield Create(ValueErrorType.Symbol, schema, path, value);
}
function* FromTemplateLiteral2(schema, references, path, value) {
  if (!IsString(value))
    return yield Create(ValueErrorType.String, schema, path, value);
  const regex = new RegExp(schema.pattern);
  if (!regex.test(value)) {
    yield Create(ValueErrorType.StringPattern, schema, path, value);
  }
}
function* FromThis(schema, references, path, value) {
  yield* Visit4(Deref(schema, references), references, path, value);
}
function* FromTuple3(schema, references, path, value) {
  if (!IsArray(value))
    return yield Create(ValueErrorType.Tuple, schema, path, value);
  if (schema.items === undefined && !(value.length === 0)) {
    return yield Create(ValueErrorType.TupleLength, schema, path, value);
  }
  if (!(value.length === schema.maxItems)) {
    return yield Create(ValueErrorType.TupleLength, schema, path, value);
  }
  if (!schema.items) {
    return;
  }
  for (let i = 0;i < schema.items.length; i++) {
    yield* Visit4(schema.items[i], references, `${path}/${i}`, value[i]);
  }
}
function* FromUndefined(schema, references, path, value) {
  if (!IsUndefined(value))
    yield Create(ValueErrorType.Undefined, schema, path, value);
}
function* FromUnion5(schema, references, path, value) {
  let count = 0;
  for (const subschema of schema.anyOf) {
    const errors = [...Visit4(subschema, references, path, value)];
    if (errors.length === 0)
      return;
    count += errors.length;
  }
  if (count > 0) {
    yield Create(ValueErrorType.Union, schema, path, value);
  }
}
function* FromUint8Array(schema, references, path, value) {
  if (!IsUint8Array(value))
    return yield Create(ValueErrorType.Uint8Array, schema, path, value);
  if (IsDefined(schema.maxByteLength) && !(value.length <= schema.maxByteLength)) {
    yield Create(ValueErrorType.Uint8ArrayMaxByteLength, schema, path, value);
  }
  if (IsDefined(schema.minByteLength) && !(value.length >= schema.minByteLength)) {
    yield Create(ValueErrorType.Uint8ArrayMinByteLength, schema, path, value);
  }
}
function* FromUnknown(schema, references, path, value) {
}
function* FromVoid(schema, references, path, value) {
  if (!TypeSystemPolicy.IsVoidLike(value))
    yield Create(ValueErrorType.Void, schema, path, value);
}
function* FromKind(schema, references, path, value) {
  const check = exports_type.Get(schema[Kind]);
  if (!check(schema, value))
    yield Create(ValueErrorType.Kind, schema, path, value);
}
function* Visit4(schema, references, path, value) {
  const references_ = IsDefined(schema.$id) ? [...references, schema] : references;
  const schema_ = schema;
  switch (schema_[Kind]) {
    case "Any":
      return yield* FromAny(schema_, references_, path, value);
    case "Array":
      return yield* FromArray3(schema_, references_, path, value);
    case "AsyncIterator":
      return yield* FromAsyncIterator(schema_, references_, path, value);
    case "BigInt":
      return yield* FromBigInt(schema_, references_, path, value);
    case "Boolean":
      return yield* FromBoolean(schema_, references_, path, value);
    case "Constructor":
      return yield* FromConstructor(schema_, references_, path, value);
    case "Date":
      return yield* FromDate(schema_, references_, path, value);
    case "Function":
      return yield* FromFunction(schema_, references_, path, value);
    case "Integer":
      return yield* FromInteger(schema_, references_, path, value);
    case "Intersect":
      return yield* FromIntersect3(schema_, references_, path, value);
    case "Iterator":
      return yield* FromIterator(schema_, references_, path, value);
    case "Literal":
      return yield* FromLiteral2(schema_, references_, path, value);
    case "Never":
      return yield* FromNever(schema_, references_, path, value);
    case "Not":
      return yield* FromNot(schema_, references_, path, value);
    case "Null":
      return yield* FromNull(schema_, references_, path, value);
    case "Number":
      return yield* FromNumber(schema_, references_, path, value);
    case "Object":
      return yield* FromObject(schema_, references_, path, value);
    case "Promise":
      return yield* FromPromise(schema_, references_, path, value);
    case "Record":
      return yield* FromRecord(schema_, references_, path, value);
    case "Ref":
      return yield* FromRef(schema_, references_, path, value);
    case "RegExp":
      return yield* FromRegExp(schema_, references_, path, value);
    case "String":
      return yield* FromString(schema_, references_, path, value);
    case "Symbol":
      return yield* FromSymbol(schema_, references_, path, value);
    case "TemplateLiteral":
      return yield* FromTemplateLiteral2(schema_, references_, path, value);
    case "This":
      return yield* FromThis(schema_, references_, path, value);
    case "Tuple":
      return yield* FromTuple3(schema_, references_, path, value);
    case "Undefined":
      return yield* FromUndefined(schema_, references_, path, value);
    case "Union":
      return yield* FromUnion5(schema_, references_, path, value);
    case "Uint8Array":
      return yield* FromUint8Array(schema_, references_, path, value);
    case "Unknown":
      return yield* FromUnknown(schema_, references_, path, value);
    case "Void":
      return yield* FromVoid(schema_, references_, path, value);
    default:
      if (!exports_type.Has(schema_[Kind]))
        throw new ValueErrorsUnknownTypeError(schema);
      return yield* FromKind(schema_, references_, path, value);
  }
}
function Errors(...args) {
  const iterator2 = args.length === 3 ? Visit4(args[0], args[1], "", args[2]) : Visit4(args[0], [], "", args[1]);
  return new ValueErrorIterator(iterator2);
}
// node_modules/@sinclair/typebox/build/esm/type/any/any.mjs
function Any(options = {}) {
  return { ...options, [Kind]: "Any" };
}
// node_modules/@sinclair/typebox/build/esm/type/unknown/unknown.mjs
function Unknown(options = {}) {
  return {
    ...options,
    [Kind]: "Unknown"
  };
}
// node_modules/@sinclair/typebox/build/esm/type/guard/type.mjs
var exports_type2 = {};
__export(exports_type2, {
  TypeGuardUnknownTypeError: () => TypeGuardUnknownTypeError,
  IsVoid: () => IsVoid2,
  IsUnsafe: () => IsUnsafe2,
  IsUnknown: () => IsUnknown2,
  IsUnionLiteral: () => IsUnionLiteral,
  IsUnion: () => IsUnion2,
  IsUndefined: () => IsUndefined4,
  IsUint8Array: () => IsUint8Array4,
  IsTuple: () => IsTuple2,
  IsTransform: () => IsTransform2,
  IsThis: () => IsThis2,
  IsTemplateLiteral: () => IsTemplateLiteral2,
  IsSymbol: () => IsSymbol4,
  IsString: () => IsString4,
  IsSchema: () => IsSchema2,
  IsRegExp: () => IsRegExp3,
  IsRef: () => IsRef2,
  IsRecursive: () => IsRecursive,
  IsRecord: () => IsRecord2,
  IsReadonly: () => IsReadonly2,
  IsProperties: () => IsProperties,
  IsPromise: () => IsPromise3,
  IsOptional: () => IsOptional2,
  IsObject: () => IsObject4,
  IsNumber: () => IsNumber4,
  IsNull: () => IsNull4,
  IsNot: () => IsNot2,
  IsNever: () => IsNever2,
  IsMappedResult: () => IsMappedResult2,
  IsMappedKey: () => IsMappedKey2,
  IsLiteralValue: () => IsLiteralValue,
  IsLiteralString: () => IsLiteralString,
  IsLiteralNumber: () => IsLiteralNumber,
  IsLiteralBoolean: () => IsLiteralBoolean,
  IsLiteral: () => IsLiteral2,
  IsKindOf: () => IsKindOf2,
  IsKind: () => IsKind2,
  IsIterator: () => IsIterator4,
  IsIntersect: () => IsIntersect2,
  IsInteger: () => IsInteger3,
  IsFunction: () => IsFunction4,
  IsDate: () => IsDate4,
  IsConstructor: () => IsConstructor2,
  IsBoolean: () => IsBoolean4,
  IsBigInt: () => IsBigInt4,
  IsAsyncIterator: () => IsAsyncIterator4,
  IsArray: () => IsArray4,
  IsAny: () => IsAny2
});
class TypeGuardUnknownTypeError extends TypeBoxError {
}
var KnownTypes = [
  "Any",
  "Array",
  "AsyncIterator",
  "BigInt",
  "Boolean",
  "Constructor",
  "Date",
  "Enum",
  "Function",
  "Integer",
  "Intersect",
  "Iterator",
  "Literal",
  "MappedKey",
  "MappedResult",
  "Not",
  "Null",
  "Number",
  "Object",
  "Promise",
  "Record",
  "Ref",
  "RegExp",
  "String",
  "Symbol",
  "TemplateLiteral",
  "This",
  "Tuple",
  "Undefined",
  "Union",
  "Uint8Array",
  "Unknown",
  "Void"
];
function IsPattern(value) {
  try {
    new RegExp(value);
    return true;
  } catch {
    return false;
  }
}
function IsControlCharacterFree(value) {
  if (!IsString2(value))
    return false;
  for (let i = 0;i < value.length; i++) {
    const code = value.charCodeAt(i);
    if (code >= 7 && code <= 13 || code === 27 || code === 127) {
      return false;
    }
  }
  return true;
}
function IsAdditionalProperties(value) {
  return IsOptionalBoolean(value) || IsSchema2(value);
}
function IsOptionalBigInt(value) {
  return IsUndefined2(value) || IsBigInt2(value);
}
function IsOptionalNumber(value) {
  return IsUndefined2(value) || IsNumber2(value);
}
function IsOptionalBoolean(value) {
  return IsUndefined2(value) || IsBoolean2(value);
}
function IsOptionalString(value) {
  return IsUndefined2(value) || IsString2(value);
}
function IsOptionalPattern(value) {
  return IsUndefined2(value) || IsString2(value) && IsControlCharacterFree(value) && IsPattern(value);
}
function IsOptionalFormat(value) {
  return IsUndefined2(value) || IsString2(value) && IsControlCharacterFree(value);
}
function IsOptionalSchema(value) {
  return IsUndefined2(value) || IsSchema2(value);
}
function IsReadonly2(value) {
  return IsObject2(value) && value[ReadonlyKind] === "Readonly";
}
function IsOptional2(value) {
  return IsObject2(value) && value[OptionalKind] === "Optional";
}
function IsAny2(value) {
  return IsKindOf2(value, "Any") && IsOptionalString(value.$id);
}
function IsArray4(value) {
  return IsKindOf2(value, "Array") && value.type === "array" && IsOptionalString(value.$id) && IsSchema2(value.items) && IsOptionalNumber(value.minItems) && IsOptionalNumber(value.maxItems) && IsOptionalBoolean(value.uniqueItems) && IsOptionalSchema(value.contains) && IsOptionalNumber(value.minContains) && IsOptionalNumber(value.maxContains);
}
function IsAsyncIterator4(value) {
  return IsKindOf2(value, "AsyncIterator") && value.type === "AsyncIterator" && IsOptionalString(value.$id) && IsSchema2(value.items);
}
function IsBigInt4(value) {
  return IsKindOf2(value, "BigInt") && value.type === "bigint" && IsOptionalString(value.$id) && IsOptionalBigInt(value.exclusiveMaximum) && IsOptionalBigInt(value.exclusiveMinimum) && IsOptionalBigInt(value.maximum) && IsOptionalBigInt(value.minimum) && IsOptionalBigInt(value.multipleOf);
}
function IsBoolean4(value) {
  return IsKindOf2(value, "Boolean") && value.type === "boolean" && IsOptionalString(value.$id);
}
function IsConstructor2(value) {
  return IsKindOf2(value, "Constructor") && value.type === "Constructor" && IsOptionalString(value.$id) && IsArray2(value.parameters) && value.parameters.every((schema) => IsSchema2(schema)) && IsSchema2(value.returns);
}
function IsDate4(value) {
  return IsKindOf2(value, "Date") && value.type === "Date" && IsOptionalString(value.$id) && IsOptionalNumber(value.exclusiveMaximumTimestamp) && IsOptionalNumber(value.exclusiveMinimumTimestamp) && IsOptionalNumber(value.maximumTimestamp) && IsOptionalNumber(value.minimumTimestamp) && IsOptionalNumber(value.multipleOfTimestamp);
}
function IsFunction4(value) {
  return IsKindOf2(value, "Function") && value.type === "Function" && IsOptionalString(value.$id) && IsArray2(value.parameters) && value.parameters.every((schema) => IsSchema2(schema)) && IsSchema2(value.returns);
}
function IsInteger3(value) {
  return IsKindOf2(value, "Integer") && value.type === "integer" && IsOptionalString(value.$id) && IsOptionalNumber(value.exclusiveMaximum) && IsOptionalNumber(value.exclusiveMinimum) && IsOptionalNumber(value.maximum) && IsOptionalNumber(value.minimum) && IsOptionalNumber(value.multipleOf);
}
function IsProperties(value) {
  return IsObject2(value) && Object.entries(value).every(([key, schema]) => IsControlCharacterFree(key) && IsSchema2(schema));
}
function IsIntersect2(value) {
  return IsKindOf2(value, "Intersect") && (IsString2(value.type) && value.type !== "object" ? false : true) && IsArray2(value.allOf) && value.allOf.every((schema) => IsSchema2(schema) && !IsTransform2(schema)) && IsOptionalString(value.type) && (IsOptionalBoolean(value.unevaluatedProperties) || IsOptionalSchema(value.unevaluatedProperties)) && IsOptionalString(value.$id);
}
function IsIterator4(value) {
  return IsKindOf2(value, "Iterator") && value.type === "Iterator" && IsOptionalString(value.$id) && IsSchema2(value.items);
}
function IsKindOf2(value, kind) {
  return IsObject2(value) && Kind in value && value[Kind] === kind;
}
function IsLiteralString(value) {
  return IsLiteral2(value) && IsString2(value.const);
}
function IsLiteralNumber(value) {
  return IsLiteral2(value) && IsNumber2(value.const);
}
function IsLiteralBoolean(value) {
  return IsLiteral2(value) && IsBoolean2(value.const);
}
function IsLiteral2(value) {
  return IsKindOf2(value, "Literal") && IsOptionalString(value.$id) && IsLiteralValue(value.const);
}
function IsLiteralValue(value) {
  return IsBoolean2(value) || IsNumber2(value) || IsString2(value);
}
function IsMappedKey2(value) {
  return IsKindOf2(value, "MappedKey") && IsArray2(value.keys) && value.keys.every((key) => IsNumber2(key) || IsString2(key));
}
function IsMappedResult2(value) {
  return IsKindOf2(value, "MappedResult") && IsProperties(value.properties);
}
function IsNever2(value) {
  return IsKindOf2(value, "Never") && IsObject2(value.not) && Object.getOwnPropertyNames(value.not).length === 0;
}
function IsNot2(value) {
  return IsKindOf2(value, "Not") && IsSchema2(value.not);
}
function IsNull4(value) {
  return IsKindOf2(value, "Null") && value.type === "null" && IsOptionalString(value.$id);
}
function IsNumber4(value) {
  return IsKindOf2(value, "Number") && value.type === "number" && IsOptionalString(value.$id) && IsOptionalNumber(value.exclusiveMaximum) && IsOptionalNumber(value.exclusiveMinimum) && IsOptionalNumber(value.maximum) && IsOptionalNumber(value.minimum) && IsOptionalNumber(value.multipleOf);
}
function IsObject4(value) {
  return IsKindOf2(value, "Object") && value.type === "object" && IsOptionalString(value.$id) && IsProperties(value.properties) && IsAdditionalProperties(value.additionalProperties) && IsOptionalNumber(value.minProperties) && IsOptionalNumber(value.maxProperties);
}
function IsPromise3(value) {
  return IsKindOf2(value, "Promise") && value.type === "Promise" && IsOptionalString(value.$id) && IsSchema2(value.item);
}
function IsRecord2(value) {
  return IsKindOf2(value, "Record") && value.type === "object" && IsOptionalString(value.$id) && IsAdditionalProperties(value.additionalProperties) && IsObject2(value.patternProperties) && ((schema) => {
    const keys = Object.getOwnPropertyNames(schema.patternProperties);
    return keys.length === 1 && IsPattern(keys[0]) && IsObject2(schema.patternProperties) && IsSchema2(schema.patternProperties[keys[0]]);
  })(value);
}
function IsRecursive(value) {
  return IsObject2(value) && Hint in value && value[Hint] === "Recursive";
}
function IsRef2(value) {
  return IsKindOf2(value, "Ref") && IsOptionalString(value.$id) && IsString2(value.$ref);
}
function IsRegExp3(value) {
  return IsKindOf2(value, "RegExp") && IsOptionalString(value.$id) && IsString2(value.source) && IsString2(value.flags) && IsOptionalNumber(value.maxLength) && IsOptionalNumber(value.minLength);
}
function IsString4(value) {
  return IsKindOf2(value, "String") && value.type === "string" && IsOptionalString(value.$id) && IsOptionalNumber(value.minLength) && IsOptionalNumber(value.maxLength) && IsOptionalPattern(value.pattern) && IsOptionalFormat(value.format);
}
function IsSymbol4(value) {
  return IsKindOf2(value, "Symbol") && value.type === "symbol" && IsOptionalString(value.$id);
}
function IsTemplateLiteral2(value) {
  return IsKindOf2(value, "TemplateLiteral") && value.type === "string" && IsString2(value.pattern) && value.pattern[0] === "^" && value.pattern[value.pattern.length - 1] === "$";
}
function IsThis2(value) {
  return IsKindOf2(value, "This") && IsOptionalString(value.$id) && IsString2(value.$ref);
}
function IsTransform2(value) {
  return IsObject2(value) && TransformKind in value;
}
function IsTuple2(value) {
  return IsKindOf2(value, "Tuple") && value.type === "array" && IsOptionalString(value.$id) && IsNumber2(value.minItems) && IsNumber2(value.maxItems) && value.minItems === value.maxItems && (IsUndefined2(value.items) && IsUndefined2(value.additionalItems) && value.minItems === 0 || IsArray2(value.items) && value.items.every((schema) => IsSchema2(schema)));
}
function IsUndefined4(value) {
  return IsKindOf2(value, "Undefined") && value.type === "undefined" && IsOptionalString(value.$id);
}
function IsUnionLiteral(value) {
  return IsUnion2(value) && value.anyOf.every((schema) => IsLiteralString(schema) || IsLiteralNumber(schema));
}
function IsUnion2(value) {
  return IsKindOf2(value, "Union") && IsOptionalString(value.$id) && IsObject2(value) && IsArray2(value.anyOf) && value.anyOf.every((schema) => IsSchema2(schema));
}
function IsUint8Array4(value) {
  return IsKindOf2(value, "Uint8Array") && value.type === "Uint8Array" && IsOptionalString(value.$id) && IsOptionalNumber(value.minByteLength) && IsOptionalNumber(value.maxByteLength);
}
function IsUnknown2(value) {
  return IsKindOf2(value, "Unknown") && IsOptionalString(value.$id);
}
function IsUnsafe2(value) {
  return IsKindOf2(value, "Unsafe");
}
function IsVoid2(value) {
  return IsKindOf2(value, "Void") && value.type === "void" && IsOptionalString(value.$id);
}
function IsKind2(value) {
  return IsObject2(value) && Kind in value && IsString2(value[Kind]) && !KnownTypes.includes(value[Kind]);
}
function IsSchema2(value) {
  return IsObject2(value) && (IsAny2(value) || IsArray4(value) || IsBoolean4(value) || IsBigInt4(value) || IsAsyncIterator4(value) || IsConstructor2(value) || IsDate4(value) || IsFunction4(value) || IsInteger3(value) || IsIntersect2(value) || IsIterator4(value) || IsLiteral2(value) || IsMappedKey2(value) || IsMappedResult2(value) || IsNever2(value) || IsNot2(value) || IsNull4(value) || IsNumber4(value) || IsObject4(value) || IsPromise3(value) || IsRecord2(value) || IsRef2(value) || IsRegExp3(value) || IsString4(value) || IsSymbol4(value) || IsTemplateLiteral2(value) || IsThis2(value) || IsTuple2(value) || IsUndefined4(value) || IsUnion2(value) || IsUint8Array4(value) || IsUnknown2(value) || IsUnsafe2(value) || IsVoid2(value) || IsKind2(value));
}
// node_modules/@sinclair/typebox/build/esm/type/extends/extends-check.mjs
class ExtendsResolverError extends TypeBoxError {
}
var ExtendsResult;
(function(ExtendsResult2) {
  ExtendsResult2[ExtendsResult2["Union"] = 0] = "Union";
  ExtendsResult2[ExtendsResult2["True"] = 1] = "True";
  ExtendsResult2[ExtendsResult2["False"] = 2] = "False";
})(ExtendsResult || (ExtendsResult = {}));
function IntoBooleanResult(result) {
  return result === ExtendsResult.False ? result : ExtendsResult.True;
}
function Throw(message) {
  throw new ExtendsResolverError(message);
}
function IsStructuralRight(right) {
  return exports_type2.IsNever(right) || exports_type2.IsIntersect(right) || exports_type2.IsUnion(right) || exports_type2.IsUnknown(right) || exports_type2.IsAny(right);
}
function StructuralRight(left, right) {
  return exports_type2.IsNever(right) ? FromNeverRight(left, right) : exports_type2.IsIntersect(right) ? FromIntersectRight(left, right) : exports_type2.IsUnion(right) ? FromUnionRight(left, right) : exports_type2.IsUnknown(right) ? FromUnknownRight(left, right) : exports_type2.IsAny(right) ? FromAnyRight(left, right) : Throw("StructuralRight");
}
function FromAnyRight(left, right) {
  return ExtendsResult.True;
}
function FromAny2(left, right) {
  return exports_type2.IsIntersect(right) ? FromIntersectRight(left, right) : exports_type2.IsUnion(right) && right.anyOf.some((schema) => exports_type2.IsAny(schema) || exports_type2.IsUnknown(schema)) ? ExtendsResult.True : exports_type2.IsUnion(right) ? ExtendsResult.Union : exports_type2.IsUnknown(right) ? ExtendsResult.True : exports_type2.IsAny(right) ? ExtendsResult.True : ExtendsResult.Union;
}
function FromArrayRight(left, right) {
  return exports_type2.IsUnknown(left) ? ExtendsResult.False : exports_type2.IsAny(left) ? ExtendsResult.Union : exports_type2.IsNever(left) ? ExtendsResult.True : ExtendsResult.False;
}
function FromArray4(left, right) {
  return exports_type2.IsObject(right) && IsObjectArrayLike(right) ? ExtendsResult.True : IsStructuralRight(right) ? StructuralRight(left, right) : !exports_type2.IsArray(right) ? ExtendsResult.False : IntoBooleanResult(Visit5(left.items, right.items));
}
function FromAsyncIterator2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : !exports_type2.IsAsyncIterator(right) ? ExtendsResult.False : IntoBooleanResult(Visit5(left.items, right.items));
}
function FromBigInt2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : exports_type2.IsRecord(right) ? FromRecordRight(left, right) : exports_type2.IsBigInt(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromBooleanRight(left, right) {
  return exports_type2.IsLiteralBoolean(left) ? ExtendsResult.True : exports_type2.IsBoolean(left) ? ExtendsResult.True : ExtendsResult.False;
}
function FromBoolean2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : exports_type2.IsRecord(right) ? FromRecordRight(left, right) : exports_type2.IsBoolean(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromConstructor2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : !exports_type2.IsConstructor(right) ? ExtendsResult.False : left.parameters.length > right.parameters.length ? ExtendsResult.False : !left.parameters.every((schema, index) => IntoBooleanResult(Visit5(right.parameters[index], schema)) === ExtendsResult.True) ? ExtendsResult.False : IntoBooleanResult(Visit5(left.returns, right.returns));
}
function FromDate2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : exports_type2.IsRecord(right) ? FromRecordRight(left, right) : exports_type2.IsDate(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromFunction2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : !exports_type2.IsFunction(right) ? ExtendsResult.False : left.parameters.length > right.parameters.length ? ExtendsResult.False : !left.parameters.every((schema, index) => IntoBooleanResult(Visit5(right.parameters[index], schema)) === ExtendsResult.True) ? ExtendsResult.False : IntoBooleanResult(Visit5(left.returns, right.returns));
}
function FromIntegerRight(left, right) {
  return exports_type2.IsLiteral(left) && exports_value.IsNumber(left.const) ? ExtendsResult.True : exports_type2.IsNumber(left) || exports_type2.IsInteger(left) ? ExtendsResult.True : ExtendsResult.False;
}
function FromInteger2(left, right) {
  return exports_type2.IsInteger(right) || exports_type2.IsNumber(right) ? ExtendsResult.True : IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : exports_type2.IsRecord(right) ? FromRecordRight(left, right) : ExtendsResult.False;
}
function FromIntersectRight(left, right) {
  return right.allOf.every((schema) => Visit5(left, schema) === ExtendsResult.True) ? ExtendsResult.True : ExtendsResult.False;
}
function FromIntersect4(left, right) {
  return left.allOf.some((schema) => Visit5(schema, right) === ExtendsResult.True) ? ExtendsResult.True : ExtendsResult.False;
}
function FromIterator2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : !exports_type2.IsIterator(right) ? ExtendsResult.False : IntoBooleanResult(Visit5(left.items, right.items));
}
function FromLiteral3(left, right) {
  return exports_type2.IsLiteral(right) && right.const === left.const ? ExtendsResult.True : IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : exports_type2.IsRecord(right) ? FromRecordRight(left, right) : exports_type2.IsString(right) ? FromStringRight(left, right) : exports_type2.IsNumber(right) ? FromNumberRight(left, right) : exports_type2.IsInteger(right) ? FromIntegerRight(left, right) : exports_type2.IsBoolean(right) ? FromBooleanRight(left, right) : ExtendsResult.False;
}
function FromNeverRight(left, right) {
  return ExtendsResult.False;
}
function FromNever2(left, right) {
  return ExtendsResult.True;
}
function UnwrapTNot(schema) {
  let [current, depth] = [schema, 0];
  while (true) {
    if (!exports_type2.IsNot(current))
      break;
    current = current.not;
    depth += 1;
  }
  return depth % 2 === 0 ? current : Unknown();
}
function FromNot2(left, right) {
  return exports_type2.IsNot(left) ? Visit5(UnwrapTNot(left), right) : exports_type2.IsNot(right) ? Visit5(left, UnwrapTNot(right)) : Throw("Invalid fallthrough for Not");
}
function FromNull2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : exports_type2.IsRecord(right) ? FromRecordRight(left, right) : exports_type2.IsNull(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromNumberRight(left, right) {
  return exports_type2.IsLiteralNumber(left) ? ExtendsResult.True : exports_type2.IsNumber(left) || exports_type2.IsInteger(left) ? ExtendsResult.True : ExtendsResult.False;
}
function FromNumber2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : exports_type2.IsRecord(right) ? FromRecordRight(left, right) : exports_type2.IsInteger(right) || exports_type2.IsNumber(right) ? ExtendsResult.True : ExtendsResult.False;
}
function IsObjectPropertyCount(schema, count) {
  return Object.getOwnPropertyNames(schema.properties).length === count;
}
function IsObjectStringLike(schema) {
  return IsObjectArrayLike(schema);
}
function IsObjectSymbolLike(schema) {
  return IsObjectPropertyCount(schema, 0) || IsObjectPropertyCount(schema, 1) && "description" in schema.properties && exports_type2.IsUnion(schema.properties.description) && schema.properties.description.anyOf.length === 2 && (exports_type2.IsString(schema.properties.description.anyOf[0]) && exports_type2.IsUndefined(schema.properties.description.anyOf[1]) || exports_type2.IsString(schema.properties.description.anyOf[1]) && exports_type2.IsUndefined(schema.properties.description.anyOf[0]));
}
function IsObjectNumberLike(schema) {
  return IsObjectPropertyCount(schema, 0);
}
function IsObjectBooleanLike(schema) {
  return IsObjectPropertyCount(schema, 0);
}
function IsObjectBigIntLike(schema) {
  return IsObjectPropertyCount(schema, 0);
}
function IsObjectDateLike(schema) {
  return IsObjectPropertyCount(schema, 0);
}
function IsObjectUint8ArrayLike(schema) {
  return IsObjectArrayLike(schema);
}
function IsObjectFunctionLike(schema) {
  const length = Number2();
  return IsObjectPropertyCount(schema, 0) || IsObjectPropertyCount(schema, 1) && "length" in schema.properties && IntoBooleanResult(Visit5(schema.properties["length"], length)) === ExtendsResult.True;
}
function IsObjectConstructorLike(schema) {
  return IsObjectPropertyCount(schema, 0);
}
function IsObjectArrayLike(schema) {
  const length = Number2();
  return IsObjectPropertyCount(schema, 0) || IsObjectPropertyCount(schema, 1) && "length" in schema.properties && IntoBooleanResult(Visit5(schema.properties["length"], length)) === ExtendsResult.True;
}
function IsObjectPromiseLike(schema) {
  const then = Function2([Any()], Any());
  return IsObjectPropertyCount(schema, 0) || IsObjectPropertyCount(schema, 1) && "then" in schema.properties && IntoBooleanResult(Visit5(schema.properties["then"], then)) === ExtendsResult.True;
}
function Property(left, right) {
  return Visit5(left, right) === ExtendsResult.False ? ExtendsResult.False : exports_type2.IsOptional(left) && !exports_type2.IsOptional(right) ? ExtendsResult.False : ExtendsResult.True;
}
function FromObjectRight(left, right) {
  return exports_type2.IsUnknown(left) ? ExtendsResult.False : exports_type2.IsAny(left) ? ExtendsResult.Union : exports_type2.IsNever(left) || exports_type2.IsLiteralString(left) && IsObjectStringLike(right) || exports_type2.IsLiteralNumber(left) && IsObjectNumberLike(right) || exports_type2.IsLiteralBoolean(left) && IsObjectBooleanLike(right) || exports_type2.IsSymbol(left) && IsObjectSymbolLike(right) || exports_type2.IsBigInt(left) && IsObjectBigIntLike(right) || exports_type2.IsString(left) && IsObjectStringLike(right) || exports_type2.IsSymbol(left) && IsObjectSymbolLike(right) || exports_type2.IsNumber(left) && IsObjectNumberLike(right) || exports_type2.IsInteger(left) && IsObjectNumberLike(right) || exports_type2.IsBoolean(left) && IsObjectBooleanLike(right) || exports_type2.IsUint8Array(left) && IsObjectUint8ArrayLike(right) || exports_type2.IsDate(left) && IsObjectDateLike(right) || exports_type2.IsConstructor(left) && IsObjectConstructorLike(right) || exports_type2.IsFunction(left) && IsObjectFunctionLike(right) ? ExtendsResult.True : exports_type2.IsRecord(left) && exports_type2.IsString(RecordKey(left)) ? (() => {
    return right[Hint] === "Record" ? ExtendsResult.True : ExtendsResult.False;
  })() : exports_type2.IsRecord(left) && exports_type2.IsNumber(RecordKey(left)) ? (() => {
    return IsObjectPropertyCount(right, 0) ? ExtendsResult.True : ExtendsResult.False;
  })() : ExtendsResult.False;
}
function FromObject2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsRecord(right) ? FromRecordRight(left, right) : !exports_type2.IsObject(right) ? ExtendsResult.False : (() => {
    for (const key of Object.getOwnPropertyNames(right.properties)) {
      if (!(key in left.properties) && !exports_type2.IsOptional(right.properties[key])) {
        return ExtendsResult.False;
      }
      if (exports_type2.IsOptional(right.properties[key])) {
        return ExtendsResult.True;
      }
      if (Property(left.properties[key], right.properties[key]) === ExtendsResult.False) {
        return ExtendsResult.False;
      }
    }
    return ExtendsResult.True;
  })();
}
function FromPromise2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) && IsObjectPromiseLike(right) ? ExtendsResult.True : !exports_type2.IsPromise(right) ? ExtendsResult.False : IntoBooleanResult(Visit5(left.item, right.item));
}
function RecordKey(schema) {
  return PatternNumberExact in schema.patternProperties ? Number2() : (PatternStringExact in schema.patternProperties) ? String2() : Throw("Unknown record key pattern");
}
function RecordValue(schema) {
  return PatternNumberExact in schema.patternProperties ? schema.patternProperties[PatternNumberExact] : (PatternStringExact in schema.patternProperties) ? schema.patternProperties[PatternStringExact] : Throw("Unable to get record value schema");
}
function FromRecordRight(left, right) {
  const [Key, Value] = [RecordKey(right), RecordValue(right)];
  return exports_type2.IsLiteralString(left) && exports_type2.IsNumber(Key) && IntoBooleanResult(Visit5(left, Value)) === ExtendsResult.True ? ExtendsResult.True : exports_type2.IsUint8Array(left) && exports_type2.IsNumber(Key) ? Visit5(left, Value) : exports_type2.IsString(left) && exports_type2.IsNumber(Key) ? Visit5(left, Value) : exports_type2.IsArray(left) && exports_type2.IsNumber(Key) ? Visit5(left, Value) : exports_type2.IsObject(left) ? (() => {
    for (const key of Object.getOwnPropertyNames(left.properties)) {
      if (Property(Value, left.properties[key]) === ExtendsResult.False) {
        return ExtendsResult.False;
      }
    }
    return ExtendsResult.True;
  })() : ExtendsResult.False;
}
function FromRecord2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : !exports_type2.IsRecord(right) ? ExtendsResult.False : Visit5(RecordValue(left), RecordValue(right));
}
function FromRegExp2(left, right) {
  const L = exports_type2.IsRegExp(left) ? String2() : left;
  const R = exports_type2.IsRegExp(right) ? String2() : right;
  return Visit5(L, R);
}
function FromStringRight(left, right) {
  return exports_type2.IsLiteral(left) && exports_value.IsString(left.const) ? ExtendsResult.True : exports_type2.IsString(left) ? ExtendsResult.True : ExtendsResult.False;
}
function FromString2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : exports_type2.IsRecord(right) ? FromRecordRight(left, right) : exports_type2.IsString(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromSymbol2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : exports_type2.IsRecord(right) ? FromRecordRight(left, right) : exports_type2.IsSymbol(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromTemplateLiteral3(left, right) {
  return exports_type2.IsTemplateLiteral(left) ? Visit5(TemplateLiteralToUnion(left), right) : exports_type2.IsTemplateLiteral(right) ? Visit5(left, TemplateLiteralToUnion(right)) : Throw("Invalid fallthrough for TemplateLiteral");
}
function IsArrayOfTuple(left, right) {
  return exports_type2.IsArray(right) && left.items !== undefined && left.items.every((schema) => Visit5(schema, right.items) === ExtendsResult.True);
}
function FromTupleRight(left, right) {
  return exports_type2.IsNever(left) ? ExtendsResult.True : exports_type2.IsUnknown(left) ? ExtendsResult.False : exports_type2.IsAny(left) ? ExtendsResult.Union : ExtendsResult.False;
}
function FromTuple4(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) && IsObjectArrayLike(right) ? ExtendsResult.True : exports_type2.IsArray(right) && IsArrayOfTuple(left, right) ? ExtendsResult.True : !exports_type2.IsTuple(right) ? ExtendsResult.False : exports_value.IsUndefined(left.items) && !exports_value.IsUndefined(right.items) || !exports_value.IsUndefined(left.items) && exports_value.IsUndefined(right.items) ? ExtendsResult.False : exports_value.IsUndefined(left.items) && !exports_value.IsUndefined(right.items) ? ExtendsResult.True : left.items.every((schema, index) => Visit5(schema, right.items[index]) === ExtendsResult.True) ? ExtendsResult.True : ExtendsResult.False;
}
function FromUint8Array2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : exports_type2.IsRecord(right) ? FromRecordRight(left, right) : exports_type2.IsUint8Array(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromUndefined2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : exports_type2.IsRecord(right) ? FromRecordRight(left, right) : exports_type2.IsVoid(right) ? FromVoidRight(left, right) : exports_type2.IsUndefined(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromUnionRight(left, right) {
  return right.anyOf.some((schema) => Visit5(left, schema) === ExtendsResult.True) ? ExtendsResult.True : ExtendsResult.False;
}
function FromUnion6(left, right) {
  return left.anyOf.every((schema) => Visit5(schema, right) === ExtendsResult.True) ? ExtendsResult.True : ExtendsResult.False;
}
function FromUnknownRight(left, right) {
  return ExtendsResult.True;
}
function FromUnknown2(left, right) {
  return exports_type2.IsNever(right) ? FromNeverRight(left, right) : exports_type2.IsIntersect(right) ? FromIntersectRight(left, right) : exports_type2.IsUnion(right) ? FromUnionRight(left, right) : exports_type2.IsAny(right) ? FromAnyRight(left, right) : exports_type2.IsString(right) ? FromStringRight(left, right) : exports_type2.IsNumber(right) ? FromNumberRight(left, right) : exports_type2.IsInteger(right) ? FromIntegerRight(left, right) : exports_type2.IsBoolean(right) ? FromBooleanRight(left, right) : exports_type2.IsArray(right) ? FromArrayRight(left, right) : exports_type2.IsTuple(right) ? FromTupleRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : exports_type2.IsUnknown(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromVoidRight(left, right) {
  return exports_type2.IsUndefined(left) ? ExtendsResult.True : exports_type2.IsUndefined(left) ? ExtendsResult.True : ExtendsResult.False;
}
function FromVoid2(left, right) {
  return exports_type2.IsIntersect(right) ? FromIntersectRight(left, right) : exports_type2.IsUnion(right) ? FromUnionRight(left, right) : exports_type2.IsUnknown(right) ? FromUnknownRight(left, right) : exports_type2.IsAny(right) ? FromAnyRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : exports_type2.IsVoid(right) ? ExtendsResult.True : ExtendsResult.False;
}
function Visit5(left, right) {
  return exports_type2.IsTemplateLiteral(left) || exports_type2.IsTemplateLiteral(right) ? FromTemplateLiteral3(left, right) : exports_type2.IsRegExp(left) || exports_type2.IsRegExp(right) ? FromRegExp2(left, right) : exports_type2.IsNot(left) || exports_type2.IsNot(right) ? FromNot2(left, right) : exports_type2.IsAny(left) ? FromAny2(left, right) : exports_type2.IsArray(left) ? FromArray4(left, right) : exports_type2.IsBigInt(left) ? FromBigInt2(left, right) : exports_type2.IsBoolean(left) ? FromBoolean2(left, right) : exports_type2.IsAsyncIterator(left) ? FromAsyncIterator2(left, right) : exports_type2.IsConstructor(left) ? FromConstructor2(left, right) : exports_type2.IsDate(left) ? FromDate2(left, right) : exports_type2.IsFunction(left) ? FromFunction2(left, right) : exports_type2.IsInteger(left) ? FromInteger2(left, right) : exports_type2.IsIntersect(left) ? FromIntersect4(left, right) : exports_type2.IsIterator(left) ? FromIterator2(left, right) : exports_type2.IsLiteral(left) ? FromLiteral3(left, right) : exports_type2.IsNever(left) ? FromNever2(left, right) : exports_type2.IsNull(left) ? FromNull2(left, right) : exports_type2.IsNumber(left) ? FromNumber2(left, right) : exports_type2.IsObject(left) ? FromObject2(left, right) : exports_type2.IsRecord(left) ? FromRecord2(left, right) : exports_type2.IsString(left) ? FromString2(left, right) : exports_type2.IsSymbol(left) ? FromSymbol2(left, right) : exports_type2.IsTuple(left) ? FromTuple4(left, right) : exports_type2.IsPromise(left) ? FromPromise2(left, right) : exports_type2.IsUint8Array(left) ? FromUint8Array2(left, right) : exports_type2.IsUndefined(left) ? FromUndefined2(left, right) : exports_type2.IsUnion(left) ? FromUnion6(left, right) : exports_type2.IsUnknown(left) ? FromUnknown2(left, right) : exports_type2.IsVoid(left) ? FromVoid2(left, right) : Throw(`Unknown left type operand '${left[Kind]}'`);
}
function ExtendsCheck(left, right) {
  return Visit5(left, right);
}
// node_modules/@sinclair/typebox/build/esm/type/extends/extends-from-mapped-result.mjs
function FromProperties7(P, Right, True, False, options) {
  const Acc = {};
  for (const K2 of globalThis.Object.getOwnPropertyNames(P))
    Acc[K2] = Extends(P[K2], Right, True, False, options);
  return Acc;
}
function FromMappedResult6(Left, Right, True, False, options) {
  return FromProperties7(Left.properties, Right, True, False, options);
}
function ExtendsFromMappedResult(Left, Right, True, False, options) {
  const P = FromMappedResult6(Left, Right, True, False, options);
  return MappedResult(P);
}

// node_modules/@sinclair/typebox/build/esm/type/extends/extends.mjs
function ExtendsResolve(left, right, trueType, falseType) {
  const R = ExtendsCheck(left, right);
  return R === ExtendsResult.Union ? Union([trueType, falseType]) : R === ExtendsResult.True ? trueType : falseType;
}
function Extends(L, R, T, F, options = {}) {
  return IsMappedResult(L) ? ExtendsFromMappedResult(L, R, T, F, options) : IsMappedKey(L) ? CloneType(ExtendsFromMappedKey(L, R, T, F, options)) : CloneType(ExtendsResolve(L, R, T, F), options);
}

// node_modules/@sinclair/typebox/build/esm/type/extends/extends-from-mapped-key.mjs
function FromPropertyKey(K, U, L, R, options) {
  return {
    [K]: Extends(Literal(K), U, L, R, options)
  };
}
function FromPropertyKeys(K, U, L, R, options) {
  return K.reduce((Acc, LK) => {
    return { ...Acc, ...FromPropertyKey(LK, U, L, R, options) };
  }, {});
}
function FromMappedKey2(K, U, L, R, options) {
  return FromPropertyKeys(K.keys, U, L, R, options);
}
function ExtendsFromMappedKey(T, U, L, R, options) {
  const P = FromMappedKey2(T, U, L, R, options);
  return MappedResult(P);
}
// node_modules/@sinclair/typebox/build/esm/value/check/check.mjs
class ValueCheckUnknownTypeError extends TypeBoxError {
  constructor(schema) {
    super(`Unknown type`);
    this.schema = schema;
  }
}
function IsAnyOrUnknown(schema) {
  return schema[Kind] === "Any" || schema[Kind] === "Unknown";
}
function IsDefined2(value) {
  return value !== undefined;
}
function FromAny3(schema, references, value) {
  return true;
}
function FromArray5(schema, references, value) {
  if (!IsArray(value))
    return false;
  if (IsDefined2(schema.minItems) && !(value.length >= schema.minItems)) {
    return false;
  }
  if (IsDefined2(schema.maxItems) && !(value.length <= schema.maxItems)) {
    return false;
  }
  if (!value.every((value2) => Visit6(schema.items, references, value2))) {
    return false;
  }
  if (schema.uniqueItems === true && !function() {
    const set2 = new Set;
    for (const element of value) {
      const hashed = Hash(element);
      if (set2.has(hashed)) {
        return false;
      } else {
        set2.add(hashed);
      }
    }
    return true;
  }()) {
    return false;
  }
  if (!(IsDefined2(schema.contains) || IsNumber(schema.minContains) || IsNumber(schema.maxContains))) {
    return true;
  }
  const containsSchema = IsDefined2(schema.contains) ? schema.contains : Never();
  const containsCount = value.reduce((acc, value2) => Visit6(containsSchema, references, value2) ? acc + 1 : acc, 0);
  if (containsCount === 0) {
    return false;
  }
  if (IsNumber(schema.minContains) && containsCount < schema.minContains) {
    return false;
  }
  if (IsNumber(schema.maxContains) && containsCount > schema.maxContains) {
    return false;
  }
  return true;
}
function FromAsyncIterator3(schema, references, value) {
  return IsAsyncIterator(value);
}
function FromBigInt3(schema, references, value) {
  if (!IsBigInt(value))
    return false;
  if (IsDefined2(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {
    return false;
  }
  if (IsDefined2(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {
    return false;
  }
  if (IsDefined2(schema.maximum) && !(value <= schema.maximum)) {
    return false;
  }
  if (IsDefined2(schema.minimum) && !(value >= schema.minimum)) {
    return false;
  }
  if (IsDefined2(schema.multipleOf) && !(value % schema.multipleOf === BigInt(0))) {
    return false;
  }
  return true;
}
function FromBoolean3(schema, references, value) {
  return IsBoolean(value);
}
function FromConstructor3(schema, references, value) {
  return Visit6(schema.returns, references, value.prototype);
}
function FromDate3(schema, references, value) {
  if (!IsDate(value))
    return false;
  if (IsDefined2(schema.exclusiveMaximumTimestamp) && !(value.getTime() < schema.exclusiveMaximumTimestamp)) {
    return false;
  }
  if (IsDefined2(schema.exclusiveMinimumTimestamp) && !(value.getTime() > schema.exclusiveMinimumTimestamp)) {
    return false;
  }
  if (IsDefined2(schema.maximumTimestamp) && !(value.getTime() <= schema.maximumTimestamp)) {
    return false;
  }
  if (IsDefined2(schema.minimumTimestamp) && !(value.getTime() >= schema.minimumTimestamp)) {
    return false;
  }
  if (IsDefined2(schema.multipleOfTimestamp) && !(value.getTime() % schema.multipleOfTimestamp === 0)) {
    return false;
  }
  return true;
}
function FromFunction3(schema, references, value) {
  return IsFunction(value);
}
function FromInteger3(schema, references, value) {
  if (!IsInteger(value)) {
    return false;
  }
  if (IsDefined2(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {
    return false;
  }
  if (IsDefined2(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {
    return false;
  }
  if (IsDefined2(schema.maximum) && !(value <= schema.maximum)) {
    return false;
  }
  if (IsDefined2(schema.minimum) && !(value >= schema.minimum)) {
    return false;
  }
  if (IsDefined2(schema.multipleOf) && !(value % schema.multipleOf === 0)) {
    return false;
  }
  return true;
}
function FromIntersect5(schema, references, value) {
  const check1 = schema.allOf.every((schema2) => Visit6(schema2, references, value));
  if (schema.unevaluatedProperties === false) {
    const keyPattern = new RegExp(KeyOfPattern(schema));
    const check2 = Object.getOwnPropertyNames(value).every((key) => keyPattern.test(key));
    return check1 && check2;
  } else if (IsSchema2(schema.unevaluatedProperties)) {
    const keyCheck = new RegExp(KeyOfPattern(schema));
    const check2 = Object.getOwnPropertyNames(value).every((key) => keyCheck.test(key) || Visit6(schema.unevaluatedProperties, references, value[key]));
    return check1 && check2;
  } else {
    return check1;
  }
}
function FromIterator3(schema, references, value) {
  return IsIterator(value);
}
function FromLiteral4(schema, references, value) {
  return value === schema.const;
}
function FromNever3(schema, references, value) {
  return false;
}
function FromNot3(schema, references, value) {
  return !Visit6(schema.not, references, value);
}
function FromNull3(schema, references, value) {
  return IsNull(value);
}
function FromNumber3(schema, references, value) {
  if (!TypeSystemPolicy.IsNumberLike(value))
    return false;
  if (IsDefined2(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {
    return false;
  }
  if (IsDefined2(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {
    return false;
  }
  if (IsDefined2(schema.minimum) && !(value >= schema.minimum)) {
    return false;
  }
  if (IsDefined2(schema.maximum) && !(value <= schema.maximum)) {
    return false;
  }
  if (IsDefined2(schema.multipleOf) && !(value % schema.multipleOf === 0)) {
    return false;
  }
  return true;
}
function FromObject3(schema, references, value) {
  if (!TypeSystemPolicy.IsObjectLike(value))
    return false;
  if (IsDefined2(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {
    return false;
  }
  if (IsDefined2(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {
    return false;
  }
  const knownKeys = Object.getOwnPropertyNames(schema.properties);
  for (const knownKey of knownKeys) {
    const property = schema.properties[knownKey];
    if (schema.required && schema.required.includes(knownKey)) {
      if (!Visit6(property, references, value[knownKey])) {
        return false;
      }
      if ((ExtendsUndefinedCheck(property) || IsAnyOrUnknown(property)) && !(knownKey in value)) {
        return false;
      }
    } else {
      if (TypeSystemPolicy.IsExactOptionalProperty(value, knownKey) && !Visit6(property, references, value[knownKey])) {
        return false;
      }
    }
  }
  if (schema.additionalProperties === false) {
    const valueKeys = Object.getOwnPropertyNames(value);
    if (schema.required && schema.required.length === knownKeys.length && valueKeys.length === knownKeys.length) {
      return true;
    } else {
      return valueKeys.every((valueKey) => knownKeys.includes(valueKey));
    }
  } else if (typeof schema.additionalProperties === "object") {
    const valueKeys = Object.getOwnPropertyNames(value);
    return valueKeys.every((key) => knownKeys.includes(key) || Visit6(schema.additionalProperties, references, value[key]));
  } else {
    return true;
  }
}
function FromPromise3(schema, references, value) {
  return IsPromise(value);
}
function FromRecord3(schema, references, value) {
  if (!TypeSystemPolicy.IsRecordLike(value)) {
    return false;
  }
  if (IsDefined2(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {
    return false;
  }
  if (IsDefined2(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {
    return false;
  }
  const [patternKey, patternSchema] = Object.entries(schema.patternProperties)[0];
  const regex = new RegExp(patternKey);
  const check1 = Object.entries(value).every(([key, value2]) => {
    return regex.test(key) ? Visit6(patternSchema, references, value2) : true;
  });
  const check2 = typeof schema.additionalProperties === "object" ? Object.entries(value).every(([key, value2]) => {
    return !regex.test(key) ? Visit6(schema.additionalProperties, references, value2) : true;
  }) : true;
  const check3 = schema.additionalProperties === false ? Object.getOwnPropertyNames(value).every((key) => {
    return regex.test(key);
  }) : true;
  return check1 && check2 && check3;
}
function FromRef2(schema, references, value) {
  return Visit6(Deref(schema, references), references, value);
}
function FromRegExp3(schema, references, value) {
  const regex = new RegExp(schema.source, schema.flags);
  if (IsDefined2(schema.minLength)) {
    if (!(value.length >= schema.minLength))
      return false;
  }
  if (IsDefined2(schema.maxLength)) {
    if (!(value.length <= schema.maxLength))
      return false;
  }
  return regex.test(value);
}
function FromString3(schema, references, value) {
  if (!IsString(value)) {
    return false;
  }
  if (IsDefined2(schema.minLength)) {
    if (!(value.length >= schema.minLength))
      return false;
  }
  if (IsDefined2(schema.maxLength)) {
    if (!(value.length <= schema.maxLength))
      return false;
  }
  if (IsDefined2(schema.pattern)) {
    const regex = new RegExp(schema.pattern);
    if (!regex.test(value))
      return false;
  }
  if (IsDefined2(schema.format)) {
    if (!exports_format.Has(schema.format))
      return false;
    const func = exports_format.Get(schema.format);
    return func(value);
  }
  return true;
}
function FromSymbol3(schema, references, value) {
  return IsSymbol(value);
}
function FromTemplateLiteral4(schema, references, value) {
  return IsString(value) && new RegExp(schema.pattern).test(value);
}
function FromThis2(schema, references, value) {
  return Visit6(Deref(schema, references), references, value);
}
function FromTuple5(schema, references, value) {
  if (!IsArray(value)) {
    return false;
  }
  if (schema.items === undefined && !(value.length === 0)) {
    return false;
  }
  if (!(value.length === schema.maxItems)) {
    return false;
  }
  if (!schema.items) {
    return true;
  }
  for (let i = 0;i < schema.items.length; i++) {
    if (!Visit6(schema.items[i], references, value[i]))
      return false;
  }
  return true;
}
function FromUndefined3(schema, references, value) {
  return IsUndefined(value);
}
function FromUnion7(schema, references, value) {
  return schema.anyOf.some((inner) => Visit6(inner, references, value));
}
function FromUint8Array3(schema, references, value) {
  if (!IsUint8Array(value)) {
    return false;
  }
  if (IsDefined2(schema.maxByteLength) && !(value.length <= schema.maxByteLength)) {
    return false;
  }
  if (IsDefined2(schema.minByteLength) && !(value.length >= schema.minByteLength)) {
    return false;
  }
  return true;
}
function FromUnknown3(schema, references, value) {
  return true;
}
function FromVoid3(schema, references, value) {
  return TypeSystemPolicy.IsVoidLike(value);
}
function FromKind2(schema, references, value) {
  if (!exports_type.Has(schema[Kind]))
    return false;
  const func = exports_type.Get(schema[Kind]);
  return func(schema, value);
}
function Visit6(schema, references, value) {
  const references_ = IsDefined2(schema.$id) ? [...references, schema] : references;
  const schema_ = schema;
  switch (schema_[Kind]) {
    case "Any":
      return FromAny3(schema_, references_, value);
    case "Array":
      return FromArray5(schema_, references_, value);
    case "AsyncIterator":
      return FromAsyncIterator3(schema_, references_, value);
    case "BigInt":
      return FromBigInt3(schema_, references_, value);
    case "Boolean":
      return FromBoolean3(schema_, references_, value);
    case "Constructor":
      return FromConstructor3(schema_, references_, value);
    case "Date":
      return FromDate3(schema_, references_, value);
    case "Function":
      return FromFunction3(schema_, references_, value);
    case "Integer":
      return FromInteger3(schema_, references_, value);
    case "Intersect":
      return FromIntersect5(schema_, references_, value);
    case "Iterator":
      return FromIterator3(schema_, references_, value);
    case "Literal":
      return FromLiteral4(schema_, references_, value);
    case "Never":
      return FromNever3(schema_, references_, value);
    case "Not":
      return FromNot3(schema_, references_, value);
    case "Null":
      return FromNull3(schema_, references_, value);
    case "Number":
      return FromNumber3(schema_, references_, value);
    case "Object":
      return FromObject3(schema_, references_, value);
    case "Promise":
      return FromPromise3(schema_, references_, value);
    case "Record":
      return FromRecord3(schema_, references_, value);
    case "Ref":
      return FromRef2(schema_, references_, value);
    case "RegExp":
      return FromRegExp3(schema_, references_, value);
    case "String":
      return FromString3(schema_, references_, value);
    case "Symbol":
      return FromSymbol3(schema_, references_, value);
    case "TemplateLiteral":
      return FromTemplateLiteral4(schema_, references_, value);
    case "This":
      return FromThis2(schema_, references_, value);
    case "Tuple":
      return FromTuple5(schema_, references_, value);
    case "Undefined":
      return FromUndefined3(schema_, references_, value);
    case "Union":
      return FromUnion7(schema_, references_, value);
    case "Uint8Array":
      return FromUint8Array3(schema_, references_, value);
    case "Unknown":
      return FromUnknown3(schema_, references_, value);
    case "Void":
      return FromVoid3(schema_, references_, value);
    default:
      if (!exports_type.Has(schema_[Kind]))
        throw new ValueCheckUnknownTypeError(schema_);
      return FromKind2(schema_, references_, value);
  }
}
function Check(...args) {
  return args.length === 3 ? Visit6(args[0], args[1], args[2]) : Visit6(args[0], [], args[1]);
}
// node_modules/@sinclair/typebox/build/esm/value/clone/clone.mjs
function ObjectType3(value) {
  const Acc = {};
  for (const key of Object.getOwnPropertyNames(value)) {
    Acc[key] = Clone2(value[key]);
  }
  for (const key of Object.getOwnPropertySymbols(value)) {
    Acc[key] = Clone2(value[key]);
  }
  return Acc;
}
function ArrayType3(value) {
  return value.map((element) => Clone2(element));
}
function TypedArrayType(value) {
  return value.slice();
}
function DateType3(value) {
  return new Date(value.toISOString());
}
function ValueType(value) {
  return value;
}
function Clone2(value) {
  if (IsArray(value))
    return ArrayType3(value);
  if (IsDate(value))
    return DateType3(value);
  if (IsStandardObject(value))
    return ObjectType3(value);
  if (IsTypedArray(value))
    return TypedArrayType(value);
  if (IsValueType(value))
    return ValueType(value);
  throw new Error("ValueClone: Unable to clone value");
}
// node_modules/@sinclair/typebox/build/esm/value/create/create.mjs
class ValueCreateError extends TypeBoxError {
  constructor(schema, message) {
    super(message);
    this.schema = schema;
  }
}
function FromDefault(value) {
  return typeof value === "function" ? value : Clone2(value);
}
function FromAny4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return {};
  }
}
function FromArray6(schema, references) {
  if (schema.uniqueItems === true && !HasPropertyKey(schema, "default")) {
    throw new ValueCreateError(schema, "Array with the uniqueItems constraint requires a default value");
  } else if ("contains" in schema && !HasPropertyKey(schema, "default")) {
    throw new ValueCreateError(schema, "Array with the contains constraint requires a default value");
  } else if ("default" in schema) {
    return FromDefault(schema.default);
  } else if (schema.minItems !== undefined) {
    return Array.from({ length: schema.minItems }).map((item) => {
      return Visit7(schema.items, references);
    });
  } else {
    return [];
  }
}
function FromAsyncIterator4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return async function* () {
    }();
  }
}
function FromBigInt4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return BigInt(0);
  }
}
function FromBoolean4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return false;
  }
}
function FromConstructor4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    const value = Visit7(schema.returns, references);
    if (typeof value === "object" && !Array.isArray(value)) {
      return class {
        constructor() {
          for (const [key, val] of Object.entries(value)) {
            const self2 = this;
            self2[key] = val;
          }
        }
      };
    } else {
      return class {
      };
    }
  }
}
function FromDate4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else if (schema.minimumTimestamp !== undefined) {
    return new Date(schema.minimumTimestamp);
  } else {
    return new Date;
  }
}
function FromFunction4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return () => Visit7(schema.returns, references);
  }
}
function FromInteger4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else if (schema.minimum !== undefined) {
    return schema.minimum;
  } else {
    return 0;
  }
}
function FromIntersect6(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    const value = schema.allOf.reduce((acc, schema2) => {
      const next = Visit7(schema2, references);
      return typeof next === "object" ? { ...acc, ...next } : next;
    }, {});
    if (!Check(schema, references, value))
      throw new ValueCreateError(schema, "Intersect produced invalid value. Consider using a default value.");
    return value;
  }
}
function FromIterator4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return function* () {
    }();
  }
}
function FromLiteral5(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return schema.const;
  }
}
function FromNever4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    throw new ValueCreateError(schema, "Never types cannot be created. Consider using a default value.");
  }
}
function FromNot4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    throw new ValueCreateError(schema, "Not types must have a default value");
  }
}
function FromNull4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return null;
  }
}
function FromNumber4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else if (schema.minimum !== undefined) {
    return schema.minimum;
  } else {
    return 0;
  }
}
function FromObject4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    const required = new Set(schema.required);
    const Acc = {};
    for (const [key, subschema] of Object.entries(schema.properties)) {
      if (!required.has(key))
        continue;
      Acc[key] = Visit7(subschema, references);
    }
    return Acc;
  }
}
function FromPromise4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return Promise.resolve(Visit7(schema.item, references));
  }
}
function FromRecord4(schema, references) {
  const [keyPattern, valueSchema] = Object.entries(schema.patternProperties)[0];
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else if (!(keyPattern === PatternStringExact || keyPattern === PatternNumberExact)) {
    const propertyKeys = keyPattern.slice(1, keyPattern.length - 1).split("|");
    const Acc = {};
    for (const key of propertyKeys)
      Acc[key] = Visit7(valueSchema, references);
    return Acc;
  } else {
    return {};
  }
}
function FromRef3(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return Visit7(Deref(schema, references), references);
  }
}
function FromRegExp4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    throw new ValueCreateError(schema, "RegExp types cannot be created. Consider using a default value.");
  }
}
function FromString4(schema, references) {
  if (schema.pattern !== undefined) {
    if (!HasPropertyKey(schema, "default")) {
      throw new ValueCreateError(schema, "String types with patterns must specify a default value");
    } else {
      return FromDefault(schema.default);
    }
  } else if (schema.format !== undefined) {
    if (!HasPropertyKey(schema, "default")) {
      throw new ValueCreateError(schema, "String types with formats must specify a default value");
    } else {
      return FromDefault(schema.default);
    }
  } else {
    if (HasPropertyKey(schema, "default")) {
      return FromDefault(schema.default);
    } else if (schema.minLength !== undefined) {
      return Array.from({ length: schema.minLength }).map(() => " ").join("");
    } else {
      return "";
    }
  }
}
function FromSymbol4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else if ("value" in schema) {
    return Symbol.for(schema.value);
  } else {
    return Symbol();
  }
}
function FromTemplateLiteral5(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  }
  if (!IsTemplateLiteralFinite(schema))
    throw new ValueCreateError(schema, "Can only create template literals that produce a finite variants. Consider using a default value.");
  const generated = TemplateLiteralGenerate(schema);
  return generated[0];
}
function FromThis3(schema, references) {
  if (recursiveDepth++ > recursiveMaxDepth)
    throw new ValueCreateError(schema, "Cannot create recursive type as it appears possibly infinite. Consider using a default.");
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return Visit7(Deref(schema, references), references);
  }
}
function FromTuple6(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  }
  if (schema.items === undefined) {
    return [];
  } else {
    return Array.from({ length: schema.minItems }).map((_, index) => Visit7(schema.items[index], references));
  }
}
function FromUndefined4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return;
  }
}
function FromUnion8(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else if (schema.anyOf.length === 0) {
    throw new Error("ValueCreate.Union: Cannot create Union with zero variants");
  } else {
    return Visit7(schema.anyOf[0], references);
  }
}
function FromUint8Array4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else if (schema.minByteLength !== undefined) {
    return new Uint8Array(schema.minByteLength);
  } else {
    return new Uint8Array(0);
  }
}
function FromUnknown4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return {};
  }
}
function FromVoid4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return;
  }
}
function FromKind3(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    throw new Error("User defined types must specify a default value");
  }
}
function Visit7(schema, references) {
  const references_ = IsString(schema.$id) ? [...references, schema] : references;
  const schema_ = schema;
  switch (schema_[Kind]) {
    case "Any":
      return FromAny4(schema_, references_);
    case "Array":
      return FromArray6(schema_, references_);
    case "AsyncIterator":
      return FromAsyncIterator4(schema_, references_);
    case "BigInt":
      return FromBigInt4(schema_, references_);
    case "Boolean":
      return FromBoolean4(schema_, references_);
    case "Constructor":
      return FromConstructor4(schema_, references_);
    case "Date":
      return FromDate4(schema_, references_);
    case "Function":
      return FromFunction4(schema_, references_);
    case "Integer":
      return FromInteger4(schema_, references_);
    case "Intersect":
      return FromIntersect6(schema_, references_);
    case "Iterator":
      return FromIterator4(schema_, references_);
    case "Literal":
      return FromLiteral5(schema_, references_);
    case "Never":
      return FromNever4(schema_, references_);
    case "Not":
      return FromNot4(schema_, references_);
    case "Null":
      return FromNull4(schema_, references_);
    case "Number":
      return FromNumber4(schema_, references_);
    case "Object":
      return FromObject4(schema_, references_);
    case "Promise":
      return FromPromise4(schema_, references_);
    case "Record":
      return FromRecord4(schema_, references_);
    case "Ref":
      return FromRef3(schema_, references_);
    case "RegExp":
      return FromRegExp4(schema_, references_);
    case "String":
      return FromString4(schema_, references_);
    case "Symbol":
      return FromSymbol4(schema_, references_);
    case "TemplateLiteral":
      return FromTemplateLiteral5(schema_, references_);
    case "This":
      return FromThis3(schema_, references_);
    case "Tuple":
      return FromTuple6(schema_, references_);
    case "Undefined":
      return FromUndefined4(schema_, references_);
    case "Union":
      return FromUnion8(schema_, references_);
    case "Uint8Array":
      return FromUint8Array4(schema_, references_);
    case "Unknown":
      return FromUnknown4(schema_, references_);
    case "Void":
      return FromVoid4(schema_, references_);
    default:
      if (!exports_type.Has(schema_[Kind]))
        throw new ValueCreateError(schema_, "Unknown type");
      return FromKind3(schema_, references_);
  }
}
var recursiveMaxDepth = 512;
var recursiveDepth = 0;
function Create2(...args) {
  recursiveDepth = 0;
  return args.length === 2 ? Visit7(args[0], args[1]) : Visit7(args[0], []);
}
// node_modules/@sinclair/typebox/build/esm/value/cast/cast.mjs
class ValueCastError extends TypeBoxError {
  constructor(schema, message) {
    super(message);
    this.schema = schema;
  }
}
function ScoreUnion(schema, references, value) {
  if (schema[Kind] === "Object" && typeof value === "object" && !IsNull(value)) {
    const object2 = schema;
    const keys = Object.getOwnPropertyNames(value);
    const entries = Object.entries(object2.properties);
    const [point, max] = [1 / entries.length, entries.length];
    return entries.reduce((acc, [key, schema2]) => {
      const literal2 = schema2[Kind] === "Literal" && schema2.const === value[key] ? max : 0;
      const checks = Check(schema2, references, value[key]) ? point : 0;
      const exists = keys.includes(key) ? point : 0;
      return acc + (literal2 + checks + exists);
    }, 0);
  } else {
    return Check(schema, references, value) ? 1 : 0;
  }
}
function SelectUnion(union3, references, value) {
  const schemas = union3.anyOf.map((schema) => Deref(schema, references));
  let [select, best] = [schemas[0], 0];
  for (const schema of schemas) {
    const score = ScoreUnion(schema, references, value);
    if (score > best) {
      select = schema;
      best = score;
    }
  }
  return select;
}
function CastUnion(union3, references, value) {
  if ("default" in union3) {
    return typeof value === "function" ? union3.default : Clone2(union3.default);
  } else {
    const schema = SelectUnion(union3, references, value);
    return Cast(schema, references, value);
  }
}
function DefaultClone(schema, references, value) {
  return Check(schema, references, value) ? Clone2(value) : Create2(schema, references);
}
function Default(schema, references, value) {
  return Check(schema, references, value) ? value : Create2(schema, references);
}
function FromArray7(schema, references, value) {
  if (Check(schema, references, value))
    return Clone2(value);
  const created = IsArray(value) ? Clone2(value) : Create2(schema, references);
  const minimum = IsNumber(schema.minItems) && created.length < schema.minItems ? [...created, ...Array.from({ length: schema.minItems - created.length }, () => null)] : created;
  const maximum = IsNumber(schema.maxItems) && minimum.length > schema.maxItems ? minimum.slice(0, schema.maxItems) : minimum;
  const casted = maximum.map((value2) => Visit8(schema.items, references, value2));
  if (schema.uniqueItems !== true)
    return casted;
  const unique = [...new Set(casted)];
  if (!Check(schema, references, unique))
    throw new ValueCastError(schema, "Array cast produced invalid data due to uniqueItems constraint");
  return unique;
}
function FromConstructor5(schema, references, value) {
  if (Check(schema, references, value))
    return Create2(schema, references);
  const required = new Set(schema.returns.required || []);
  const result = function() {
  };
  for (const [key, property] of Object.entries(schema.returns.properties)) {
    if (!required.has(key) && value.prototype[key] === undefined)
      continue;
    result.prototype[key] = Visit8(property, references, value.prototype[key]);
  }
  return result;
}
function FromIntersect7(schema, references, value) {
  const created = Create2(schema, references);
  const mapped2 = IsStandardObject(created) && IsStandardObject(value) ? { ...created, ...value } : value;
  return Check(schema, references, mapped2) ? mapped2 : Create2(schema, references);
}
function FromNever5(schema, references, value) {
  throw new ValueCastError(schema, "Never types cannot be cast");
}
function FromObject5(schema, references, value) {
  if (Check(schema, references, value))
    return value;
  if (value === null || typeof value !== "object")
    return Create2(schema, references);
  const required = new Set(schema.required || []);
  const result = {};
  for (const [key, property] of Object.entries(schema.properties)) {
    if (!required.has(key) && value[key] === undefined)
      continue;
    result[key] = Visit8(property, references, value[key]);
  }
  if (typeof schema.additionalProperties === "object") {
    const propertyNames = Object.getOwnPropertyNames(schema.properties);
    for (const propertyName of Object.getOwnPropertyNames(value)) {
      if (propertyNames.includes(propertyName))
        continue;
      result[propertyName] = Visit8(schema.additionalProperties, references, value[propertyName]);
    }
  }
  return result;
}
function FromRecord5(schema, references, value) {
  if (Check(schema, references, value))
    return Clone2(value);
  if (value === null || typeof value !== "object" || Array.isArray(value) || value instanceof Date)
    return Create2(schema, references);
  const subschemaPropertyName = Object.getOwnPropertyNames(schema.patternProperties)[0];
  const subschema = schema.patternProperties[subschemaPropertyName];
  const result = {};
  for (const [propKey, propValue] of Object.entries(value)) {
    result[propKey] = Visit8(subschema, references, propValue);
  }
  return result;
}
function FromRef4(schema, references, value) {
  return Visit8(Deref(schema, references), references, value);
}
function FromThis4(schema, references, value) {
  return Visit8(Deref(schema, references), references, value);
}
function FromTuple7(schema, references, value) {
  if (Check(schema, references, value))
    return Clone2(value);
  if (!IsArray(value))
    return Create2(schema, references);
  if (schema.items === undefined)
    return [];
  return schema.items.map((schema2, index) => Visit8(schema2, references, value[index]));
}
function FromUnion9(schema, references, value) {
  return Check(schema, references, value) ? Clone2(value) : CastUnion(schema, references, value);
}
function Visit8(schema, references, value) {
  const references_ = IsString(schema.$id) ? [...references, schema] : references;
  const schema_ = schema;
  switch (schema[Kind]) {
    case "Array":
      return FromArray7(schema_, references_, value);
    case "Constructor":
      return FromConstructor5(schema_, references_, value);
    case "Intersect":
      return FromIntersect7(schema_, references_, value);
    case "Never":
      return FromNever5(schema_, references_, value);
    case "Object":
      return FromObject5(schema_, references_, value);
    case "Record":
      return FromRecord5(schema_, references_, value);
    case "Ref":
      return FromRef4(schema_, references_, value);
    case "This":
      return FromThis4(schema_, references_, value);
    case "Tuple":
      return FromTuple7(schema_, references_, value);
    case "Union":
      return FromUnion9(schema_, references_, value);
    case "Date":
    case "Symbol":
    case "Uint8Array":
      return DefaultClone(schema, references, value);
    default:
      return Default(schema_, references_, value);
  }
}
function Cast(...args) {
  return args.length === 3 ? Visit8(args[0], args[1], args[2]) : Visit8(args[0], [], args[1]);
}
// node_modules/@sinclair/typebox/build/esm/value/clean/clean.mjs
function IsCheckable(schema) {
  return IsSchema2(schema) && schema[Kind] !== "Unsafe";
}
function FromArray8(schema, references, value) {
  if (!IsArray(value))
    return value;
  return value.map((value2) => Visit9(schema.items, references, value2));
}
function FromIntersect8(schema, references, value) {
  const unevaluatedProperties = schema.unevaluatedProperties;
  const intersections = schema.allOf.map((schema2) => Visit9(schema2, references, Clone2(value)));
  const composite = intersections.reduce((acc, value2) => IsObject(value2) ? { ...acc, ...value2 } : value2, {});
  if (!IsObject(value) || !IsObject(composite) || !IsSchema2(unevaluatedProperties))
    return composite;
  const knownkeys = KeyOfPropertyKeys(schema);
  for (const key of Object.getOwnPropertyNames(value)) {
    if (knownkeys.includes(key))
      continue;
    if (Check(unevaluatedProperties, references, value[key])) {
      composite[key] = Visit9(unevaluatedProperties, references, value[key]);
    }
  }
  return composite;
}
function FromObject6(schema, references, value) {
  if (!IsObject(value) || IsArray(value))
    return value;
  const additionalProperties = schema.additionalProperties;
  for (const key of Object.getOwnPropertyNames(value)) {
    if (key in schema.properties) {
      value[key] = Visit9(schema.properties[key], references, value[key]);
      continue;
    }
    if (IsSchema2(additionalProperties) && Check(additionalProperties, references, value[key])) {
      value[key] = Visit9(additionalProperties, references, value[key]);
      continue;
    }
    delete value[key];
  }
  return value;
}
function FromRecord6(schema, references, value) {
  if (!IsObject(value))
    return value;
  const additionalProperties = schema.additionalProperties;
  const propertyKeys = Object.getOwnPropertyNames(value);
  const [propertyKey, propertySchema] = Object.entries(schema.patternProperties)[0];
  const propertyKeyTest = new RegExp(propertyKey);
  for (const key of propertyKeys) {
    if (propertyKeyTest.test(key)) {
      value[key] = Visit9(propertySchema, references, value[key]);
      continue;
    }
    if (IsSchema2(additionalProperties) && Check(additionalProperties, references, value[key])) {
      value[key] = Visit9(additionalProperties, references, value[key]);
      continue;
    }
    delete value[key];
  }
  return value;
}
function FromRef5(schema, references, value) {
  return Visit9(Deref(schema, references), references, value);
}
function FromThis5(schema, references, value) {
  return Visit9(Deref(schema, references), references, value);
}
function FromTuple8(schema, references, value) {
  if (!IsArray(value))
    return value;
  if (IsUndefined(schema.items))
    return [];
  const length = Math.min(value.length, schema.items.length);
  for (let i = 0;i < length; i++) {
    value[i] = Visit9(schema.items[i], references, value[i]);
  }
  return value.length > length ? value.slice(0, length) : value;
}
function FromUnion10(schema, references, value) {
  for (const inner of schema.anyOf) {
    if (IsCheckable(inner) && Check(inner, references, value)) {
      return Visit9(inner, references, value);
    }
  }
  return value;
}
function Visit9(schema, references, value) {
  const references_ = IsString(schema.$id) ? [...references, schema] : references;
  const schema_ = schema;
  switch (schema_[Kind]) {
    case "Array":
      return FromArray8(schema_, references_, value);
    case "Intersect":
      return FromIntersect8(schema_, references_, value);
    case "Object":
      return FromObject6(schema_, references_, value);
    case "Record":
      return FromRecord6(schema_, references_, value);
    case "Ref":
      return FromRef5(schema_, references_, value);
    case "This":
      return FromThis5(schema_, references_, value);
    case "Tuple":
      return FromTuple8(schema_, references_, value);
    case "Union":
      return FromUnion10(schema_, references_, value);
    default:
      return value;
  }
}
function Clean(...args) {
  return args.length === 3 ? Visit9(args[0], args[1], args[2]) : Visit9(args[0], [], args[1]);
}
// node_modules/@sinclair/typebox/build/esm/value/convert/convert.mjs
function IsStringNumeric(value) {
  return IsString(value) && !isNaN(value) && !isNaN(parseFloat(value));
}
function IsValueToString(value) {
  return IsBigInt(value) || IsBoolean(value) || IsNumber(value);
}
function IsValueTrue(value) {
  return value === true || IsNumber(value) && value === 1 || IsBigInt(value) && value === BigInt("1") || IsString(value) && (value.toLowerCase() === "true" || value === "1");
}
function IsValueFalse(value) {
  return value === false || IsNumber(value) && (value === 0 || Object.is(value, -0)) || IsBigInt(value) && value === BigInt("0") || IsString(value) && (value.toLowerCase() === "false" || value === "0" || value === "-0");
}
function IsTimeStringWithTimeZone(value) {
  return IsString(value) && /^(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)$/i.test(value);
}
function IsTimeStringWithoutTimeZone(value) {
  return IsString(value) && /^(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)?$/i.test(value);
}
function IsDateTimeStringWithTimeZone(value) {
  return IsString(value) && /^\d\d\d\d-[0-1]\d-[0-3]\dt(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)$/i.test(value);
}
function IsDateTimeStringWithoutTimeZone(value) {
  return IsString(value) && /^\d\d\d\d-[0-1]\d-[0-3]\dt(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)?$/i.test(value);
}
function IsDateString(value) {
  return IsString(value) && /^\d\d\d\d-[0-1]\d-[0-3]\d$/i.test(value);
}
function TryConvertLiteralString(value, target) {
  const conversion = TryConvertString(value);
  return conversion === target ? conversion : value;
}
function TryConvertLiteralNumber(value, target) {
  const conversion = TryConvertNumber(value);
  return conversion === target ? conversion : value;
}
function TryConvertLiteralBoolean(value, target) {
  const conversion = TryConvertBoolean(value);
  return conversion === target ? conversion : value;
}
function TryConvertLiteral(schema, value) {
  return IsString(schema.const) ? TryConvertLiteralString(value, schema.const) : IsNumber(schema.const) ? TryConvertLiteralNumber(value, schema.const) : IsBoolean(schema.const) ? TryConvertLiteralBoolean(value, schema.const) : Clone2(value);
}
function TryConvertBoolean(value) {
  return IsValueTrue(value) ? true : IsValueFalse(value) ? false : value;
}
function TryConvertBigInt(value) {
  return IsStringNumeric(value) ? BigInt(parseInt(value)) : IsNumber(value) ? BigInt(value | 0) : IsValueFalse(value) ? BigInt(0) : IsValueTrue(value) ? BigInt(1) : value;
}
function TryConvertString(value) {
  return IsValueToString(value) ? value.toString() : IsSymbol(value) && value.description !== undefined ? value.description.toString() : value;
}
function TryConvertNumber(value) {
  return IsStringNumeric(value) ? parseFloat(value) : IsValueTrue(value) ? 1 : IsValueFalse(value) ? 0 : value;
}
function TryConvertInteger(value) {
  return IsStringNumeric(value) ? parseInt(value) : IsNumber(value) ? value | 0 : IsValueTrue(value) ? 1 : IsValueFalse(value) ? 0 : value;
}
function TryConvertNull(value) {
  return IsString(value) && value.toLowerCase() === "null" ? null : value;
}
function TryConvertUndefined(value) {
  return IsString(value) && value === "undefined" ? undefined : value;
}
function TryConvertDate(value) {
  return IsDate(value) ? value : IsNumber(value) ? new Date(value) : IsValueTrue(value) ? new Date(1) : IsValueFalse(value) ? new Date(0) : IsStringNumeric(value) ? new Date(parseInt(value)) : IsTimeStringWithoutTimeZone(value) ? new Date(`1970-01-01T${value}.000Z`) : IsTimeStringWithTimeZone(value) ? new Date(`1970-01-01T${value}`) : IsDateTimeStringWithoutTimeZone(value) ? new Date(`${value}.000Z`) : IsDateTimeStringWithTimeZone(value) ? new Date(value) : IsDateString(value) ? new Date(`${value}T00:00:00.000Z`) : value;
}
function Default2(value) {
  return value;
}
function FromArray9(schema, references, value) {
  const elements = IsArray(value) ? value : [value];
  return elements.map((element) => Visit10(schema.items, references, element));
}
function FromBigInt5(schema, references, value) {
  return TryConvertBigInt(value);
}
function FromBoolean5(schema, references, value) {
  return TryConvertBoolean(value);
}
function FromDate5(schema, references, value) {
  return TryConvertDate(value);
}
function FromInteger5(schema, references, value) {
  return TryConvertInteger(value);
}
function FromIntersect9(schema, references, value) {
  return schema.allOf.reduce((value2, schema2) => Visit10(schema2, references, value2), value);
}
function FromLiteral6(schema, references, value) {
  return TryConvertLiteral(schema, value);
}
function FromNull5(schema, references, value) {
  return TryConvertNull(value);
}
function FromNumber5(schema, references, value) {
  return TryConvertNumber(value);
}
function FromObject7(schema, references, value) {
  const isConvertable = IsObject(value);
  if (!isConvertable)
    return value;
  const result = {};
  for (const key of Object.keys(value)) {
    result[key] = HasPropertyKey(schema.properties, key) ? Visit10(schema.properties[key], references, value[key]) : value[key];
  }
  return result;
}
function FromRecord7(schema, references, value) {
  const propertyKey = Object.getOwnPropertyNames(schema.patternProperties)[0];
  const property = schema.patternProperties[propertyKey];
  const result = {};
  for (const [propKey, propValue] of Object.entries(value)) {
    result[propKey] = Visit10(property, references, propValue);
  }
  return result;
}
function FromRef6(schema, references, value) {
  return Visit10(Deref(schema, references), references, value);
}
function FromString5(schema, references, value) {
  return TryConvertString(value);
}
function FromSymbol5(schema, references, value) {
  return IsString(value) || IsNumber(value) ? Symbol(value) : value;
}
function FromThis6(schema, references, value) {
  return Visit10(Deref(schema, references), references, value);
}
function FromTuple9(schema, references, value) {
  const isConvertable = IsArray(value) && !IsUndefined(schema.items);
  if (!isConvertable)
    return value;
  return value.map((value2, index) => {
    return index < schema.items.length ? Visit10(schema.items[index], references, value2) : value2;
  });
}
function FromUndefined5(schema, references, value) {
  return TryConvertUndefined(value);
}
function FromUnion11(schema, references, value) {
  for (const subschema of schema.anyOf) {
    const converted = Visit10(subschema, references, value);
    if (!Check(subschema, references, converted))
      continue;
    return converted;
  }
  return value;
}
function Visit10(schema, references, value) {
  const references_ = IsString(schema.$id) ? [...references, schema] : references;
  const schema_ = schema;
  switch (schema[Kind]) {
    case "Array":
      return FromArray9(schema_, references_, value);
    case "BigInt":
      return FromBigInt5(schema_, references_, value);
    case "Boolean":
      return FromBoolean5(schema_, references_, value);
    case "Date":
      return FromDate5(schema_, references_, value);
    case "Integer":
      return FromInteger5(schema_, references_, value);
    case "Intersect":
      return FromIntersect9(schema_, references_, value);
    case "Literal":
      return FromLiteral6(schema_, references_, value);
    case "Null":
      return FromNull5(schema_, references_, value);
    case "Number":
      return FromNumber5(schema_, references_, value);
    case "Object":
      return FromObject7(schema_, references_, value);
    case "Record":
      return FromRecord7(schema_, references_, value);
    case "Ref":
      return FromRef6(schema_, references_, value);
    case "String":
      return FromString5(schema_, references_, value);
    case "Symbol":
      return FromSymbol5(schema_, references_, value);
    case "This":
      return FromThis6(schema_, references_, value);
    case "Tuple":
      return FromTuple9(schema_, references_, value);
    case "Undefined":
      return FromUndefined5(schema_, references_, value);
    case "Union":
      return FromUnion11(schema_, references_, value);
    default:
      return Default2(value);
  }
}
function Convert(...args) {
  return args.length === 3 ? Visit10(args[0], args[1], args[2]) : Visit10(args[0], [], args[1]);
}
// node_modules/@sinclair/typebox/build/esm/value/default/default.mjs
function ValueOrDefault(schema, value) {
  return value === undefined && "default" in schema ? Clone2(schema.default) : value;
}
function IsCheckable2(schema) {
  return IsSchema2(schema) && schema[Kind] !== "Unsafe";
}
function IsDefaultSchema(value) {
  return IsSchema2(value) && "default" in value;
}
function FromArray10(schema, references, value) {
  const defaulted = ValueOrDefault(schema, value);
  if (!IsArray(defaulted))
    return defaulted;
  for (let i = 0;i < defaulted.length; i++) {
    defaulted[i] = Visit11(schema.items, references, defaulted[i]);
  }
  return defaulted;
}
function FromIntersect10(schema, references, value) {
  const defaulted = ValueOrDefault(schema, value);
  return schema.allOf.reduce((acc, schema2) => {
    const next = Visit11(schema2, references, defaulted);
    return IsObject(next) ? { ...acc, ...next } : next;
  }, {});
}
function FromObject8(schema, references, value) {
  const defaulted = ValueOrDefault(schema, value);
  if (!IsObject(defaulted))
    return defaulted;
  const additionalPropertiesSchema = schema.additionalProperties;
  const knownPropertyKeys = Object.getOwnPropertyNames(schema.properties);
  for (const key of knownPropertyKeys) {
    if (!IsDefaultSchema(schema.properties[key]))
      continue;
    defaulted[key] = Visit11(schema.properties[key], references, defaulted[key]);
  }
  if (!IsDefaultSchema(additionalPropertiesSchema))
    return defaulted;
  for (const key of Object.getOwnPropertyNames(defaulted)) {
    if (knownPropertyKeys.includes(key))
      continue;
    defaulted[key] = Visit11(additionalPropertiesSchema, references, defaulted[key]);
  }
  return defaulted;
}
function FromRecord8(schema, references, value) {
  const defaulted = ValueOrDefault(schema, value);
  if (!IsObject(defaulted))
    return defaulted;
  const additionalPropertiesSchema = schema.additionalProperties;
  const [propertyKeyPattern, propertySchema] = Object.entries(schema.patternProperties)[0];
  const knownPropertyKey = new RegExp(propertyKeyPattern);
  for (const key of Object.getOwnPropertyNames(defaulted)) {
    if (!(knownPropertyKey.test(key) && IsDefaultSchema(propertySchema)))
      continue;
    defaulted[key] = Visit11(propertySchema, references, defaulted[key]);
  }
  if (!IsDefaultSchema(additionalPropertiesSchema))
    return defaulted;
  for (const key of Object.getOwnPropertyNames(defaulted)) {
    if (knownPropertyKey.test(key))
      continue;
    defaulted[key] = Visit11(additionalPropertiesSchema, references, defaulted[key]);
  }
  return defaulted;
}
function FromRef7(schema, references, value) {
  return Visit11(Deref(schema, references), references, ValueOrDefault(schema, value));
}
function FromThis7(schema, references, value) {
  return Visit11(Deref(schema, references), references, value);
}
function FromTuple10(schema, references, value) {
  const defaulted = ValueOrDefault(schema, value);
  if (!IsArray(defaulted) || IsUndefined(schema.items))
    return defaulted;
  const [items, max] = [schema.items, Math.max(schema.items.length, defaulted.length)];
  for (let i = 0;i < max; i++) {
    if (i < items.length)
      defaulted[i] = Visit11(items[i], references, defaulted[i]);
  }
  return defaulted;
}
function FromUnion12(schema, references, value) {
  const defaulted = ValueOrDefault(schema, value);
  for (const inner of schema.anyOf) {
    const result = Visit11(inner, references, defaulted);
    if (IsCheckable2(inner) && Check(inner, result)) {
      return result;
    }
  }
  return defaulted;
}
function Visit11(schema, references, value) {
  const references_ = IsString(schema.$id) ? [...references, schema] : references;
  const schema_ = schema;
  switch (schema_[Kind]) {
    case "Array":
      return FromArray10(schema_, references_, value);
    case "Intersect":
      return FromIntersect10(schema_, references_, value);
    case "Object":
      return FromObject8(schema_, references_, value);
    case "Record":
      return FromRecord8(schema_, references_, value);
    case "Ref":
      return FromRef7(schema_, references_, value);
    case "This":
      return FromThis7(schema_, references_, value);
    case "Tuple":
      return FromTuple10(schema_, references_, value);
    case "Union":
      return FromUnion12(schema_, references_, value);
    default:
      return ValueOrDefault(schema_, value);
  }
}
function Default3(...args) {
  return args.length === 3 ? Visit11(args[0], args[1], args[2]) : Visit11(args[0], [], args[1]);
}
// node_modules/@sinclair/typebox/build/esm/value/pointer/pointer.mjs
var exports_pointer = {};
__export(exports_pointer, {
  ValuePointerRootSetError: () => ValuePointerRootSetError,
  ValuePointerRootDeleteError: () => ValuePointerRootDeleteError,
  Set: () => Set4,
  Has: () => Has3,
  Get: () => Get3,
  Format: () => Format,
  Delete: () => Delete3
});
class ValuePointerRootSetError extends TypeBoxError {
  constructor(value, path, update) {
    super("Cannot set root value");
    this.value = value;
    this.path = path;
    this.update = update;
  }
}

class ValuePointerRootDeleteError extends TypeBoxError {
  constructor(value, path) {
    super("Cannot delete root value");
    this.value = value;
    this.path = path;
  }
}
function Escape2(component) {
  return component.indexOf("~") === -1 ? component : component.replace(/~1/g, "/").replace(/~0/g, "~");
}
function* Format(pointer) {
  if (pointer === "")
    return;
  let [start, end] = [0, 0];
  for (let i = 0;i < pointer.length; i++) {
    const char = pointer.charAt(i);
    if (char === "/") {
      if (i === 0) {
        start = i + 1;
      } else {
        end = i;
        yield Escape2(pointer.slice(start, end));
        start = i + 1;
      }
    } else {
      end = i;
    }
  }
  yield Escape2(pointer.slice(start));
}
function Set4(value, pointer, update) {
  if (pointer === "")
    throw new ValuePointerRootSetError(value, pointer, update);
  let [owner, next, key] = [null, value, ""];
  for (const component of Format(pointer)) {
    if (next[component] === undefined)
      next[component] = {};
    owner = next;
    next = next[component];
    key = component;
  }
  owner[key] = update;
}
function Delete3(value, pointer) {
  if (pointer === "")
    throw new ValuePointerRootDeleteError(value, pointer);
  let [owner, next, key] = [null, value, ""];
  for (const component of Format(pointer)) {
    if (next[component] === undefined || next[component] === null)
      return;
    owner = next;
    next = next[component];
    key = component;
  }
  if (Array.isArray(owner)) {
    const index = parseInt(key);
    owner.splice(index, 1);
  } else {
    delete owner[key];
  }
}
function Has3(value, pointer) {
  if (pointer === "")
    return true;
  let [owner, next, key] = [null, value, ""];
  for (const component of Format(pointer)) {
    if (next[component] === undefined)
      return false;
    owner = next;
    next = next[component];
    key = component;
  }
  return Object.getOwnPropertyNames(owner).includes(key);
}
function Get3(value, pointer) {
  if (pointer === "")
    return value;
  let current = value;
  for (const component of Format(pointer)) {
    if (current[component] === undefined)
      return;
    current = current[component];
  }
  return current;
}
// node_modules/@sinclair/typebox/build/esm/value/delta/delta.mjs
var Insert = Object2({
  type: Literal("insert"),
  path: String2(),
  value: Unknown()
});
var Update = Object2({
  type: Literal("update"),
  path: String2(),
  value: Unknown()
});
var Delete4 = Object2({
  type: Literal("delete"),
  path: String2()
});
var Edit = Union([Insert, Update, Delete4]);

class ValueDeltaError extends TypeBoxError {
  constructor(value, message) {
    super(message);
    this.value = value;
  }
}

class ValueDeltaSymbolError extends ValueDeltaError {
  constructor(value) {
    super(value, "Cannot diff objects with symbol keys");
    this.value = value;
  }
}
function CreateUpdate(path, value) {
  return { type: "update", path, value };
}
function CreateInsert(path, value) {
  return { type: "insert", path, value };
}
function CreateDelete(path) {
  return { type: "delete", path };
}
function* ObjectType4(path, current, next) {
  if (!IsStandardObject(next))
    return yield CreateUpdate(path, next);
  const currentKeys = [...globalThis.Object.keys(current), ...globalThis.Object.getOwnPropertySymbols(current)];
  const nextKeys = [...globalThis.Object.keys(next), ...globalThis.Object.getOwnPropertySymbols(next)];
  for (const key of currentKeys) {
    if (IsSymbol(key))
      throw new ValueDeltaSymbolError(key);
    if (IsUndefined(next[key]) && nextKeys.includes(key))
      yield CreateUpdate(`${path}/${globalThis.String(key)}`, undefined);
  }
  for (const key of nextKeys) {
    if (IsUndefined(current[key]) || IsUndefined(next[key]))
      continue;
    if (IsSymbol(key))
      throw new ValueDeltaSymbolError(key);
    yield* Visit12(`${path}/${globalThis.String(key)}`, current[key], next[key]);
  }
  for (const key of nextKeys) {
    if (IsSymbol(key))
      throw new ValueDeltaSymbolError(key);
    if (IsUndefined(current[key]))
      yield CreateInsert(`${path}/${globalThis.String(key)}`, next[key]);
  }
  for (const key of currentKeys.reverse()) {
    if (IsSymbol(key))
      throw new ValueDeltaSymbolError(key);
    if (IsUndefined(next[key]) && !nextKeys.includes(key))
      yield CreateDelete(`${path}/${globalThis.String(key)}`);
  }
}
function* ArrayType4(path, current, next) {
  if (!IsArray(next))
    return yield CreateUpdate(path, next);
  for (let i = 0;i < Math.min(current.length, next.length); i++) {
    yield* Visit12(`${path}/${i}`, current[i], next[i]);
  }
  for (let i = 0;i < next.length; i++) {
    if (i < current.length)
      continue;
    yield CreateInsert(`${path}/${i}`, next[i]);
  }
  for (let i = current.length - 1;i >= 0; i--) {
    if (i < next.length)
      continue;
    yield CreateDelete(`${path}/${i}`);
  }
}
function* TypedArrayType2(path, current, next) {
  if (!IsTypedArray(next) || current.length !== next.length || globalThis.Object.getPrototypeOf(current).constructor.name !== globalThis.Object.getPrototypeOf(next).constructor.name)
    return yield CreateUpdate(path, next);
  for (let i = 0;i < Math.min(current.length, next.length); i++) {
    yield* Visit12(`${path}/${i}`, current[i], next[i]);
  }
}
function* ValueType2(path, current, next) {
  if (current === next)
    return;
  yield CreateUpdate(path, next);
}
function* Visit12(path, current, next) {
  if (IsStandardObject(current))
    return yield* ObjectType4(path, current, next);
  if (IsArray(current))
    return yield* ArrayType4(path, current, next);
  if (IsTypedArray(current))
    return yield* TypedArrayType2(path, current, next);
  if (IsValueType(current))
    return yield* ValueType2(path, current, next);
  throw new ValueDeltaError(current, "Unable to create diff edits for unknown value");
}
function Diff(current, next) {
  return [...Visit12("", current, next)];
}
function IsRootUpdate(edits) {
  return edits.length > 0 && edits[0].path === "" && edits[0].type === "update";
}
function IsIdentity(edits) {
  return edits.length === 0;
}
function Patch(current, edits) {
  if (IsRootUpdate(edits)) {
    return Clone2(edits[0].value);
  }
  if (IsIdentity(edits)) {
    return Clone2(current);
  }
  const clone2 = Clone2(current);
  for (const edit of edits) {
    switch (edit.type) {
      case "insert": {
        exports_pointer.Set(clone2, edit.path, edit.value);
        break;
      }
      case "update": {
        exports_pointer.Set(clone2, edit.path, edit.value);
        break;
      }
      case "delete": {
        exports_pointer.Delete(clone2, edit.path);
        break;
      }
    }
  }
  return clone2;
}
// node_modules/@sinclair/typebox/build/esm/value/equal/equal.mjs
function ObjectType5(left, right) {
  if (!IsStandardObject(right))
    return false;
  const leftKeys = [...Object.keys(left), ...Object.getOwnPropertySymbols(left)];
  const rightKeys = [...Object.keys(right), ...Object.getOwnPropertySymbols(right)];
  if (leftKeys.length !== rightKeys.length)
    return false;
  return leftKeys.every((key) => Equal(left[key], right[key]));
}
function DateType4(left, right) {
  return IsDate(right) && left.getTime() === right.getTime();
}
function ArrayType5(left, right) {
  if (!IsArray(right) || left.length !== right.length)
    return false;
  return left.every((value, index) => Equal(value, right[index]));
}
function TypedArrayType3(left, right) {
  if (!IsTypedArray(right) || left.length !== right.length || Object.getPrototypeOf(left).constructor.name !== Object.getPrototypeOf(right).constructor.name)
    return false;
  return left.every((value, index) => Equal(value, right[index]));
}
function ValueType3(left, right) {
  return left === right;
}
function Equal(left, right) {
  if (IsStandardObject(left))
    return ObjectType5(left, right);
  if (IsDate(left))
    return DateType4(left, right);
  if (IsTypedArray(left))
    return TypedArrayType3(left, right);
  if (IsArray(left))
    return ArrayType5(left, right);
  if (IsValueType(left))
    return ValueType3(left, right);
  throw new Error("ValueEquals: Unable to compare value");
}
// node_modules/@sinclair/typebox/build/esm/value/mutate/mutate.mjs
class ValueMutateError extends TypeBoxError {
  constructor(message) {
    super(message);
  }
}
function ObjectType6(root, path, current, next) {
  if (!IsStandardObject(current)) {
    exports_pointer.Set(root, path, Clone2(next));
  } else {
    const currentKeys = Object.getOwnPropertyNames(current);
    const nextKeys = Object.getOwnPropertyNames(next);
    for (const currentKey of currentKeys) {
      if (!nextKeys.includes(currentKey)) {
        delete current[currentKey];
      }
    }
    for (const nextKey of nextKeys) {
      if (!currentKeys.includes(nextKey)) {
        current[nextKey] = null;
      }
    }
    for (const nextKey of nextKeys) {
      Visit13(root, `${path}/${nextKey}`, current[nextKey], next[nextKey]);
    }
  }
}
function ArrayType6(root, path, current, next) {
  if (!IsArray(current)) {
    exports_pointer.Set(root, path, Clone2(next));
  } else {
    for (let index = 0;index < next.length; index++) {
      Visit13(root, `${path}/${index}`, current[index], next[index]);
    }
    current.splice(next.length);
  }
}
function TypedArrayType4(root, path, current, next) {
  if (IsTypedArray(current) && current.length === next.length) {
    for (let i = 0;i < current.length; i++) {
      current[i] = next[i];
    }
  } else {
    exports_pointer.Set(root, path, Clone2(next));
  }
}
function ValueType4(root, path, current, next) {
  if (current === next)
    return;
  exports_pointer.Set(root, path, next);
}
function Visit13(root, path, current, next) {
  if (IsArray(next))
    return ArrayType6(root, path, current, next);
  if (IsTypedArray(next))
    return TypedArrayType4(root, path, current, next);
  if (IsStandardObject(next))
    return ObjectType6(root, path, current, next);
  if (IsValueType(next))
    return ValueType4(root, path, current, next);
}
function IsNonMutableValue(value) {
  return IsTypedArray(value) || IsValueType(value);
}
function IsMismatchedValue(current, next) {
  return IsStandardObject(current) && IsArray(next) || IsArray(current) && IsStandardObject(next);
}
function Mutate(current, next) {
  if (IsNonMutableValue(current) || IsNonMutableValue(next))
    throw new ValueMutateError("Only object and array types can be mutated at the root level");
  if (IsMismatchedValue(current, next))
    throw new ValueMutateError("Cannot assign due type mismatch of assignable values");
  Visit13(current, "", current, next);
}
// node_modules/@sinclair/typebox/build/esm/value/transform/decode.mjs
class TransformDecodeCheckError extends TypeBoxError {
  constructor(schema, value, error2) {
    super(`Unable to decode value as it does not match the expected schema`);
    this.schema = schema;
    this.value = value;
    this.error = error2;
  }
}

class TransformDecodeError extends TypeBoxError {
  constructor(schema, path, value, error2) {
    super(error2 instanceof Error ? error2.message : "Unknown error");
    this.schema = schema;
    this.path = path;
    this.value = value;
    this.error = error2;
  }
}
function Default4(schema, path, value) {
  try {
    return IsTransform2(schema) ? schema[TransformKind].Decode(value) : value;
  } catch (error2) {
    throw new TransformDecodeError(schema, path, value, error2);
  }
}
function FromArray11(schema, references, path, value) {
  return IsArray(value) ? Default4(schema, path, value.map((value2, index) => Visit14(schema.items, references, `${path}/${index}`, value2))) : Default4(schema, path, value);
}
function FromIntersect11(schema, references, path, value) {
  if (!IsStandardObject(value) || IsValueType(value))
    return Default4(schema, path, value);
  const knownEntries = KeyOfPropertyEntries(schema);
  const knownKeys = knownEntries.map((entry) => entry[0]);
  const knownProperties = { ...value };
  for (const [knownKey, knownSchema] of knownEntries)
    if (knownKey in knownProperties) {
      knownProperties[knownKey] = Visit14(knownSchema, references, `${path}/${knownKey}`, knownProperties[knownKey]);
    }
  if (!IsTransform2(schema.unevaluatedProperties)) {
    return Default4(schema, path, knownProperties);
  }
  const unknownKeys = Object.getOwnPropertyNames(knownProperties);
  const unevaluatedProperties = schema.unevaluatedProperties;
  const unknownProperties = { ...knownProperties };
  for (const key of unknownKeys)
    if (!knownKeys.includes(key)) {
      unknownProperties[key] = Default4(unevaluatedProperties, `${path}/${key}`, unknownProperties[key]);
    }
  return Default4(schema, path, unknownProperties);
}
function FromNot5(schema, references, path, value) {
  return Default4(schema, path, Visit14(schema.not, references, path, value));
}
function FromObject9(schema, references, path, value) {
  if (!IsStandardObject(value))
    return Default4(schema, path, value);
  const knownKeys = KeyOfPropertyKeys(schema);
  const knownProperties = { ...value };
  for (const key of knownKeys)
    if (key in knownProperties) {
      knownProperties[key] = Visit14(schema.properties[key], references, `${path}/${key}`, knownProperties[key]);
    }
  if (!IsSchema2(schema.additionalProperties)) {
    return Default4(schema, path, knownProperties);
  }
  const unknownKeys = Object.getOwnPropertyNames(knownProperties);
  const additionalProperties = schema.additionalProperties;
  const unknownProperties = { ...knownProperties };
  for (const key of unknownKeys)
    if (!knownKeys.includes(key)) {
      unknownProperties[key] = Default4(additionalProperties, `${path}/${key}`, unknownProperties[key]);
    }
  return Default4(schema, path, unknownProperties);
}
function FromRecord9(schema, references, path, value) {
  if (!IsStandardObject(value))
    return Default4(schema, path, value);
  const pattern2 = Object.getOwnPropertyNames(schema.patternProperties)[0];
  const knownKeys = new RegExp(pattern2);
  const knownProperties = { ...value };
  for (const key of Object.getOwnPropertyNames(value))
    if (knownKeys.test(key)) {
      knownProperties[key] = Visit14(schema.patternProperties[pattern2], references, `${path}/${key}`, knownProperties[key]);
    }
  if (!IsSchema2(schema.additionalProperties)) {
    return Default4(schema, path, knownProperties);
  }
  const unknownKeys = Object.getOwnPropertyNames(knownProperties);
  const additionalProperties = schema.additionalProperties;
  const unknownProperties = { ...knownProperties };
  for (const key of unknownKeys)
    if (!knownKeys.test(key)) {
      unknownProperties[key] = Default4(additionalProperties, `${path}/${key}`, unknownProperties[key]);
    }
  return Default4(schema, path, unknownProperties);
}
function FromRef8(schema, references, path, value) {
  const target = Deref(schema, references);
  return Default4(schema, path, Visit14(target, references, path, value));
}
function FromThis8(schema, references, path, value) {
  const target = Deref(schema, references);
  return Default4(schema, path, Visit14(target, references, path, value));
}
function FromTuple11(schema, references, path, value) {
  return IsArray(value) && IsArray(schema.items) ? Default4(schema, path, schema.items.map((schema2, index) => Visit14(schema2, references, `${path}/${index}`, value[index]))) : Default4(schema, path, value);
}
function FromUnion13(schema, references, path, value) {
  for (const subschema of schema.anyOf) {
    if (!Check(subschema, references, value))
      continue;
    const decoded = Visit14(subschema, references, path, value);
    return Default4(schema, path, decoded);
  }
  return Default4(schema, path, value);
}
function Visit14(schema, references, path, value) {
  const references_ = typeof schema.$id === "string" ? [...references, schema] : references;
  const schema_ = schema;
  switch (schema[Kind]) {
    case "Array":
      return FromArray11(schema_, references_, path, value);
    case "Intersect":
      return FromIntersect11(schema_, references_, path, value);
    case "Not":
      return FromNot5(schema_, references_, path, value);
    case "Object":
      return FromObject9(schema_, references_, path, value);
    case "Record":
      return FromRecord9(schema_, references_, path, value);
    case "Ref":
      return FromRef8(schema_, references_, path, value);
    case "Symbol":
      return Default4(schema_, path, value);
    case "This":
      return FromThis8(schema_, references_, path, value);
    case "Tuple":
      return FromTuple11(schema_, references_, path, value);
    case "Union":
      return FromUnion13(schema_, references_, path, value);
    default:
      return Default4(schema_, path, value);
  }
}
function TransformDecode(schema, references, value) {
  return Visit14(schema, references, "", value);
}
// node_modules/@sinclair/typebox/build/esm/value/transform/encode.mjs
class TransformEncodeCheckError extends TypeBoxError {
  constructor(schema, value, error2) {
    super(`The encoded value does not match the expected schema`);
    this.schema = schema;
    this.value = value;
    this.error = error2;
  }
}

class TransformEncodeError extends TypeBoxError {
  constructor(schema, path, value, error2) {
    super(`${error2 instanceof Error ? error2.message : "Unknown error"}`);
    this.schema = schema;
    this.path = path;
    this.value = value;
    this.error = error2;
  }
}
function Default5(schema, path, value) {
  try {
    return IsTransform2(schema) ? schema[TransformKind].Encode(value) : value;
  } catch (error2) {
    throw new TransformEncodeError(schema, path, value, error2);
  }
}
function FromArray12(schema, references, path, value) {
  const defaulted = Default5(schema, path, value);
  return IsArray(defaulted) ? defaulted.map((value2, index) => Visit15(schema.items, references, `${path}/${index}`, value2)) : defaulted;
}
function FromIntersect12(schema, references, path, value) {
  const defaulted = Default5(schema, path, value);
  if (!IsStandardObject(value) || IsValueType(value))
    return defaulted;
  const knownEntries = KeyOfPropertyEntries(schema);
  const knownKeys = knownEntries.map((entry) => entry[0]);
  const knownProperties = { ...defaulted };
  for (const [knownKey, knownSchema] of knownEntries)
    if (knownKey in knownProperties) {
      knownProperties[knownKey] = Visit15(knownSchema, references, `${path}/${knownKey}`, knownProperties[knownKey]);
    }
  if (!IsTransform2(schema.unevaluatedProperties)) {
    return Default5(schema, path, knownProperties);
  }
  const unknownKeys = Object.getOwnPropertyNames(knownProperties);
  const unevaluatedProperties = schema.unevaluatedProperties;
  const properties = { ...knownProperties };
  for (const key of unknownKeys)
    if (!knownKeys.includes(key)) {
      properties[key] = Default5(unevaluatedProperties, `${path}/${key}`, properties[key]);
    }
  return properties;
}
function FromNot6(schema, references, path, value) {
  return Default5(schema.not, path, Default5(schema, path, value));
}
function FromObject10(schema, references, path, value) {
  const defaulted = Default5(schema, path, value);
  if (!IsStandardObject(defaulted))
    return defaulted;
  const knownKeys = KeyOfPropertyKeys(schema);
  const knownProperties = { ...defaulted };
  for (const key of knownKeys)
    if (key in knownProperties) {
      knownProperties[key] = Visit15(schema.properties[key], references, `${path}/${key}`, knownProperties[key]);
    }
  if (!IsSchema2(schema.additionalProperties)) {
    return knownProperties;
  }
  const unknownKeys = Object.getOwnPropertyNames(knownProperties);
  const additionalProperties = schema.additionalProperties;
  const properties = { ...knownProperties };
  for (const key of unknownKeys)
    if (!knownKeys.includes(key)) {
      properties[key] = Default5(additionalProperties, `${path}/${key}`, properties[key]);
    }
  return properties;
}
function FromRecord10(schema, references, path, value) {
  const defaulted = Default5(schema, path, value);
  if (!IsStandardObject(value))
    return defaulted;
  const pattern2 = Object.getOwnPropertyNames(schema.patternProperties)[0];
  const knownKeys = new RegExp(pattern2);
  const knownProperties = { ...defaulted };
  for (const key of Object.getOwnPropertyNames(value))
    if (knownKeys.test(key)) {
      knownProperties[key] = Visit15(schema.patternProperties[pattern2], references, `${path}/${key}`, knownProperties[key]);
    }
  if (!IsSchema2(schema.additionalProperties)) {
    return Default5(schema, path, knownProperties);
  }
  const unknownKeys = Object.getOwnPropertyNames(knownProperties);
  const additionalProperties = schema.additionalProperties;
  const properties = { ...knownProperties };
  for (const key of unknownKeys)
    if (!knownKeys.test(key)) {
      properties[key] = Default5(additionalProperties, `${path}/${key}`, properties[key]);
    }
  return properties;
}
function FromRef9(schema, references, path, value) {
  const target = Deref(schema, references);
  const resolved = Visit15(target, references, path, value);
  return Default5(schema, path, resolved);
}
function FromThis9(schema, references, path, value) {
  const target = Deref(schema, references);
  const resolved = Visit15(target, references, path, value);
  return Default5(schema, path, resolved);
}
function FromTuple12(schema, references, path, value) {
  const value1 = Default5(schema, path, value);
  return IsArray(schema.items) ? schema.items.map((schema2, index) => Visit15(schema2, references, `${path}/${index}`, value1[index])) : [];
}
function FromUnion14(schema, references, path, value) {
  for (const subschema of schema.anyOf) {
    if (!Check(subschema, references, value))
      continue;
    const value1 = Visit15(subschema, references, path, value);
    return Default5(schema, path, value1);
  }
  for (const subschema of schema.anyOf) {
    const value1 = Visit15(subschema, references, path, value);
    if (!Check(schema, references, value1))
      continue;
    return Default5(schema, path, value1);
  }
  return Default5(schema, path, value);
}
function Visit15(schema, references, path, value) {
  const references_ = typeof schema.$id === "string" ? [...references, schema] : references;
  const schema_ = schema;
  switch (schema[Kind]) {
    case "Array":
      return FromArray12(schema_, references_, path, value);
    case "Intersect":
      return FromIntersect12(schema_, references_, path, value);
    case "Not":
      return FromNot6(schema_, references_, path, value);
    case "Object":
      return FromObject10(schema_, references_, path, value);
    case "Record":
      return FromRecord10(schema_, references_, path, value);
    case "Ref":
      return FromRef9(schema_, references_, path, value);
    case "This":
      return FromThis9(schema_, references_, path, value);
    case "Tuple":
      return FromTuple12(schema_, references_, path, value);
    case "Union":
      return FromUnion14(schema_, references_, path, value);
    default:
      return Default5(schema_, path, value);
  }
}
function TransformEncode(schema, references, value) {
  return Visit15(schema, references, "", value);
}
// node_modules/@sinclair/typebox/build/esm/value/transform/has.mjs
function FromArray13(schema, references) {
  return IsTransform2(schema) || Visit16(schema.items, references);
}
function FromAsyncIterator5(schema, references) {
  return IsTransform2(schema) || Visit16(schema.items, references);
}
function FromConstructor6(schema, references) {
  return IsTransform2(schema) || Visit16(schema.returns, references) || schema.parameters.some((schema2) => Visit16(schema2, references));
}
function FromFunction5(schema, references) {
  return IsTransform2(schema) || Visit16(schema.returns, references) || schema.parameters.some((schema2) => Visit16(schema2, references));
}
function FromIntersect13(schema, references) {
  return IsTransform2(schema) || IsTransform2(schema.unevaluatedProperties) || schema.allOf.some((schema2) => Visit16(schema2, references));
}
function FromIterator5(schema, references) {
  return IsTransform2(schema) || Visit16(schema.items, references);
}
function FromNot7(schema, references) {
  return IsTransform2(schema) || Visit16(schema.not, references);
}
function FromObject11(schema, references) {
  return IsTransform2(schema) || Object.values(schema.properties).some((schema2) => Visit16(schema2, references)) || IsSchema2(schema.additionalProperties) && Visit16(schema.additionalProperties, references);
}
function FromPromise5(schema, references) {
  return IsTransform2(schema) || Visit16(schema.item, references);
}
function FromRecord11(schema, references) {
  const pattern2 = Object.getOwnPropertyNames(schema.patternProperties)[0];
  const property = schema.patternProperties[pattern2];
  return IsTransform2(schema) || Visit16(property, references) || IsSchema2(schema.additionalProperties) && IsTransform2(schema.additionalProperties);
}
function FromRef10(schema, references) {
  if (IsTransform2(schema))
    return true;
  return Visit16(Deref(schema, references), references);
}
function FromThis10(schema, references) {
  if (IsTransform2(schema))
    return true;
  return Visit16(Deref(schema, references), references);
}
function FromTuple13(schema, references) {
  return IsTransform2(schema) || !IsUndefined(schema.items) && schema.items.some((schema2) => Visit16(schema2, references));
}
function FromUnion15(schema, references) {
  return IsTransform2(schema) || schema.anyOf.some((schema2) => Visit16(schema2, references));
}
function Visit16(schema, references) {
  const references_ = IsString(schema.$id) ? [...references, schema] : references;
  const schema_ = schema;
  if (schema.$id && visited.has(schema.$id))
    return false;
  if (schema.$id)
    visited.add(schema.$id);
  switch (schema[Kind]) {
    case "Array":
      return FromArray13(schema_, references_);
    case "AsyncIterator":
      return FromAsyncIterator5(schema_, references_);
    case "Constructor":
      return FromConstructor6(schema_, references_);
    case "Function":
      return FromFunction5(schema_, references_);
    case "Intersect":
      return FromIntersect13(schema_, references_);
    case "Iterator":
      return FromIterator5(schema_, references_);
    case "Not":
      return FromNot7(schema_, references_);
    case "Object":
      return FromObject11(schema_, references_);
    case "Promise":
      return FromPromise5(schema_, references_);
    case "Record":
      return FromRecord11(schema_, references_);
    case "Ref":
      return FromRef10(schema_, references_);
    case "This":
      return FromThis10(schema_, references_);
    case "Tuple":
      return FromTuple13(schema_, references_);
    case "Union":
      return FromUnion15(schema_, references_);
    default:
      return IsTransform2(schema);
  }
}
var visited = new Set;
function HasTransform(schema, references) {
  visited.clear();
  return Visit16(schema, references);
}
// node_modules/@sinclair/typebox/build/esm/value/value/value.mjs
var exports_value2 = {};
__export(exports_value2, {
  Patch: () => Patch2,
  Mutate: () => Mutate2,
  Hash: () => Hash2,
  Errors: () => Errors2,
  Equal: () => Equal2,
  Encode: () => Encode,
  Diff: () => Diff2,
  Default: () => Default6,
  Decode: () => Decode,
  Create: () => Create3,
  Convert: () => Convert2,
  Clone: () => Clone3,
  Clean: () => Clean2,
  Check: () => Check2,
  Cast: () => Cast2
});
function Cast2(...args) {
  return Cast.apply(Cast, args);
}
function Create3(...args) {
  return Create2.apply(Create2, args);
}
function Check2(...args) {
  return Check.apply(Check, args);
}
function Clean2(...args) {
  return Clean.apply(Clean, args);
}
function Convert2(...args) {
  return Convert.apply(Convert, args);
}
function Clone3(value) {
  return Clone2(value);
}
function Decode(...args) {
  const [schema, references, value] = args.length === 3 ? [args[0], args[1], args[2]] : [args[0], [], args[1]];
  if (!Check2(schema, references, value))
    throw new TransformDecodeCheckError(schema, value, Errors2(schema, references, value).First());
  return HasTransform(schema, references) ? TransformDecode(schema, references, value) : value;
}
function Default6(...args) {
  return Default3.apply(Default3, args);
}
function Encode(...args) {
  const [schema, references, value] = args.length === 3 ? [args[0], args[1], args[2]] : [args[0], [], args[1]];
  const encoded = HasTransform(schema, references) ? TransformEncode(schema, references, value) : value;
  if (!Check2(schema, references, encoded))
    throw new TransformEncodeCheckError(schema, encoded, Errors2(schema, references, encoded).First());
  return encoded;
}
function Errors2(...args) {
  return Errors.apply(Errors, args);
}
function Equal2(left, right) {
  return Equal(left, right);
}
function Diff2(current, next) {
  return Diff(current, next);
}
function Hash2(value) {
  return Hash(value);
}
function Patch2(current, edits) {
  return Patch(current, edits);
}
function Mutate2(current, next) {
  Mutate(current, next);
}
// node_modules/@sinclair/typebox/build/esm/type/awaited/awaited.mjs
function FromRest4(T) {
  return T.map((L) => AwaitedResolve(L));
}
function FromIntersect14(T) {
  return Intersect(FromRest4(T));
}
function FromUnion16(T) {
  return Union(FromRest4(T));
}
function FromPromise6(T) {
  return AwaitedResolve(T);
}
function AwaitedResolve(T) {
  return IsIntersect(T) ? FromIntersect14(T.allOf) : IsUnion(T) ? FromUnion16(T.anyOf) : IsPromise2(T) ? FromPromise6(T.item) : T;
}
function Awaited(T, options = {}) {
  return CloneType(AwaitedResolve(T), options);
}
// node_modules/@sinclair/typebox/build/esm/type/composite/composite.mjs
function CompositeKeys(T) {
  const Acc = [];
  for (const L of T)
    Acc.push(...KeyOfPropertyKeys(L));
  return SetDistinct(Acc);
}
function FilterNever(T) {
  return T.filter((L) => !IsNever(L));
}
function CompositeProperty(T, K) {
  const Acc = [];
  for (const L of T)
    Acc.push(...IndexFromPropertyKeys(L, [K]));
  return FilterNever(Acc);
}
function CompositeProperties(T, K) {
  const Acc = {};
  for (const L of K) {
    Acc[L] = IntersectEvaluated(CompositeProperty(T, L));
  }
  return Acc;
}
function Composite(T, options = {}) {
  const K = CompositeKeys(T);
  const P = CompositeProperties(T, K);
  const R = Object2(P, options);
  return R;
}
// node_modules/@sinclair/typebox/build/esm/type/date/date.mjs
function Date2(options = {}) {
  return {
    ...options,
    [Kind]: "Date",
    type: "Date"
  };
}
// node_modules/@sinclair/typebox/build/esm/type/null/null.mjs
function Null(options = {}) {
  return {
    ...options,
    [Kind]: "Null",
    type: "null"
  };
}
// node_modules/@sinclair/typebox/build/esm/type/symbol/symbol.mjs
function Symbol2(options) {
  return { ...options, [Kind]: "Symbol", type: "symbol" };
}
// node_modules/@sinclair/typebox/build/esm/type/undefined/undefined.mjs
function Undefined(options = {}) {
  return { ...options, [Kind]: "Undefined", type: "undefined" };
}
// node_modules/@sinclair/typebox/build/esm/type/uint8array/uint8array.mjs
function Uint8Array2(options = {}) {
  return { ...options, [Kind]: "Uint8Array", type: "Uint8Array" };
}
// node_modules/@sinclair/typebox/build/esm/type/const/const.mjs
function FromArray14(T) {
  return T.map((L) => FromValue(L, false));
}
function FromProperties8(value2) {
  const Acc = {};
  for (const K of globalThis.Object.getOwnPropertyNames(value2))
    Acc[K] = Readonly(FromValue(value2[K], false));
  return Acc;
}
function ConditionalReadonly(T, root) {
  return root === true ? T : Readonly(T);
}
function FromValue(value2, root) {
  return IsAsyncIterator2(value2) ? ConditionalReadonly(Any(), root) : IsIterator2(value2) ? ConditionalReadonly(Any(), root) : IsArray2(value2) ? Readonly(Tuple(FromArray14(value2))) : IsUint8Array2(value2) ? Uint8Array2() : IsDate2(value2) ? Date2() : IsObject2(value2) ? ConditionalReadonly(Object2(FromProperties8(value2)), root) : IsFunction2(value2) ? ConditionalReadonly(Function2([], Unknown()), root) : IsUndefined2(value2) ? Undefined() : IsNull2(value2) ? Null() : IsSymbol2(value2) ? Symbol2() : IsBigInt2(value2) ? BigInt2() : IsNumber2(value2) ? Literal(value2) : IsBoolean2(value2) ? Literal(value2) : IsString2(value2) ? Literal(value2) : Object2({});
}
function Const(T, options = {}) {
  return CloneType(FromValue(T, true), options);
}
// node_modules/@sinclair/typebox/build/esm/type/constructor-parameters/constructor-parameters.mjs
function ConstructorParameters(schema, options = {}) {
  return Tuple(CloneRest(schema.parameters), { ...options });
}
// node_modules/@sinclair/typebox/build/esm/type/deref/deref.mjs
function FromRest5(schema, references) {
  return schema.map((schema2) => Deref2(schema2, references));
}
function FromProperties9(properties, references) {
  const Acc = {};
  for (const K of globalThis.Object.getOwnPropertyNames(properties)) {
    Acc[K] = Deref2(properties[K], references);
  }
  return Acc;
}
function FromConstructor7(schema, references) {
  schema.parameters = FromRest5(schema.parameters, references);
  schema.returns = Deref2(schema.returns, references);
  return schema;
}
function FromFunction6(schema, references) {
  schema.parameters = FromRest5(schema.parameters, references);
  schema.returns = Deref2(schema.returns, references);
  return schema;
}
function FromIntersect15(schema, references) {
  schema.allOf = FromRest5(schema.allOf, references);
  return schema;
}
function FromUnion17(schema, references) {
  schema.anyOf = FromRest5(schema.anyOf, references);
  return schema;
}
function FromTuple14(schema, references) {
  if (IsUndefined2(schema.items))
    return schema;
  schema.items = FromRest5(schema.items, references);
  return schema;
}
function FromArray15(schema, references) {
  schema.items = Deref2(schema.items, references);
  return schema;
}
function FromObject12(schema, references) {
  schema.properties = FromProperties9(schema.properties, references);
  return schema;
}
function FromPromise7(schema, references) {
  schema.item = Deref2(schema.item, references);
  return schema;
}
function FromAsyncIterator6(schema, references) {
  schema.items = Deref2(schema.items, references);
  return schema;
}
function FromIterator6(schema, references) {
  schema.items = Deref2(schema.items, references);
  return schema;
}
function FromRef11(schema, references) {
  const target = references.find((remote) => remote.$id === schema.$ref);
  if (target === undefined)
    throw Error(`Unable to dereference schema with \$id ${schema.$ref}`);
  const discard2 = Discard(target, ["$id"]);
  return Deref2(discard2, references);
}
function DerefResolve(schema, references) {
  return IsConstructor(schema) ? FromConstructor7(schema, references) : IsFunction3(schema) ? FromFunction6(schema, references) : IsIntersect(schema) ? FromIntersect15(schema, references) : IsUnion(schema) ? FromUnion17(schema, references) : IsTuple(schema) ? FromTuple14(schema, references) : IsArray3(schema) ? FromArray15(schema, references) : IsObject3(schema) ? FromObject12(schema, references) : IsPromise2(schema) ? FromPromise7(schema, references) : IsAsyncIterator3(schema) ? FromAsyncIterator6(schema, references) : IsIterator3(schema) ? FromIterator6(schema, references) : IsRef(schema) ? FromRef11(schema, references) : schema;
}
function Deref2(schema, references) {
  return DerefResolve(CloneType(schema), CloneRest(references));
}
// node_modules/@sinclair/typebox/build/esm/type/enum/enum.mjs
function Enum(item, options = {}) {
  if (IsUndefined2(item))
    throw new Error("Enum undefined or empty");
  const values1 = globalThis.Object.getOwnPropertyNames(item).filter((key) => isNaN(key)).map((key) => item[key]);
  const values2 = [...new Set(values1)];
  const anyOf = values2.map((value2) => Literal(value2));
  return Union(anyOf, { ...options, [Hint]: "Enum" });
}
// node_modules/@sinclair/typebox/build/esm/type/exclude/exclude-from-template-literal.mjs
function ExcludeFromTemplateLiteral(L, R) {
  return Exclude(TemplateLiteralToUnion(L), R);
}

// node_modules/@sinclair/typebox/build/esm/type/exclude/exclude.mjs
function ExcludeRest(L, R) {
  const excluded = L.filter((inner) => ExtendsCheck(inner, R) === ExtendsResult.False);
  return excluded.length === 1 ? excluded[0] : Union(excluded);
}
function Exclude(L, R, options = {}) {
  if (IsTemplateLiteral(L))
    return CloneType(ExcludeFromTemplateLiteral(L, R), options);
  if (IsMappedResult(L))
    return CloneType(ExcludeFromMappedResult(L, R), options);
  return CloneType(IsUnion(L) ? ExcludeRest(L.anyOf, R) : ExtendsCheck(L, R) !== ExtendsResult.False ? Never() : L, options);
}

// node_modules/@sinclair/typebox/build/esm/type/exclude/exclude-from-mapped-result.mjs
function FromProperties10(P, U) {
  const Acc = {};
  for (const K2 of globalThis.Object.getOwnPropertyNames(P))
    Acc[K2] = Exclude(P[K2], U);
  return Acc;
}
function FromMappedResult7(R, T) {
  return FromProperties10(R.properties, T);
}
function ExcludeFromMappedResult(R, T) {
  const P = FromMappedResult7(R, T);
  return MappedResult(P);
}
// node_modules/@sinclair/typebox/build/esm/type/extract/extract-from-template-literal.mjs
function ExtractFromTemplateLiteral(L, R) {
  return Extract(TemplateLiteralToUnion(L), R);
}

// node_modules/@sinclair/typebox/build/esm/type/extract/extract.mjs
function ExtractRest(L, R) {
  const extracted = L.filter((inner) => ExtendsCheck(inner, R) !== ExtendsResult.False);
  return extracted.length === 1 ? extracted[0] : Union(extracted);
}
function Extract(L, R, options = {}) {
  if (IsTemplateLiteral(L))
    return CloneType(ExtractFromTemplateLiteral(L, R), options);
  if (IsMappedResult(L))
    return CloneType(ExtractFromMappedResult(L, R), options);
  return CloneType(IsUnion(L) ? ExtractRest(L.anyOf, R) : ExtendsCheck(L, R) !== ExtendsResult.False ? L : Never(), options);
}

// node_modules/@sinclair/typebox/build/esm/type/extract/extract-from-mapped-result.mjs
function FromProperties11(P, T) {
  const Acc = {};
  for (const K2 of globalThis.Object.getOwnPropertyNames(P))
    Acc[K2] = Extract(P[K2], T);
  return Acc;
}
function FromMappedResult8(R, T) {
  return FromProperties11(R.properties, T);
}
function ExtractFromMappedResult(R, T) {
  const P = FromMappedResult8(R, T);
  return MappedResult(P);
}
// node_modules/@sinclair/typebox/build/esm/type/instance-type/instance-type.mjs
function InstanceType(schema, options = {}) {
  return CloneType(schema.returns, options);
}
// node_modules/@sinclair/typebox/build/esm/type/integer/integer.mjs
function Integer(options = {}) {
  return {
    ...options,
    [Kind]: "Integer",
    type: "integer"
  };
}
// node_modules/@sinclair/typebox/build/esm/type/intrinsic/intrinsic-from-mapped-key.mjs
function MappedIntrinsicPropertyKey(K, M, options) {
  return {
    [K]: Intrinsic(Literal(K), M, options)
  };
}
function MappedIntrinsicPropertyKeys(K, M, options) {
  return K.reduce((Acc, L) => {
    return { ...Acc, ...MappedIntrinsicPropertyKey(L, M, options) };
  }, {});
}
function MappedIntrinsicProperties(T, M, options) {
  return MappedIntrinsicPropertyKeys(T["keys"], M, options);
}
function IntrinsicFromMappedKey(T, M, options) {
  const P = MappedIntrinsicProperties(T, M, options);
  return MappedResult(P);
}

// node_modules/@sinclair/typebox/build/esm/type/intrinsic/intrinsic.mjs
function ApplyUncapitalize(value2) {
  const [first, rest] = [value2.slice(0, 1), value2.slice(1)];
  return [first.toLowerCase(), rest].join("");
}
function ApplyCapitalize(value2) {
  const [first, rest] = [value2.slice(0, 1), value2.slice(1)];
  return [first.toUpperCase(), rest].join("");
}
function ApplyUppercase(value2) {
  return value2.toUpperCase();
}
function ApplyLowercase(value2) {
  return value2.toLowerCase();
}
function FromTemplateLiteral6(schema, mode, options) {
  const expression = TemplateLiteralParseExact(schema.pattern);
  const finite2 = IsTemplateLiteralExpressionFinite(expression);
  if (!finite2)
    return { ...schema, pattern: FromLiteralValue(schema.pattern, mode) };
  const strings = [...TemplateLiteralExpressionGenerate(expression)];
  const literals = strings.map((value2) => Literal(value2));
  const mapped2 = FromRest6(literals, mode);
  const union3 = Union(mapped2);
  return TemplateLiteral([union3], options);
}
function FromLiteralValue(value2, mode) {
  return typeof value2 === "string" ? mode === "Uncapitalize" ? ApplyUncapitalize(value2) : mode === "Capitalize" ? ApplyCapitalize(value2) : mode === "Uppercase" ? ApplyUppercase(value2) : mode === "Lowercase" ? ApplyLowercase(value2) : value2 : value2.toString();
}
function FromRest6(T, M) {
  return T.map((L) => Intrinsic(L, M));
}
function Intrinsic(schema, mode, options = {}) {
  return IsMappedKey(schema) ? IntrinsicFromMappedKey(schema, mode, options) : IsTemplateLiteral(schema) ? FromTemplateLiteral6(schema, mode, schema) : IsUnion(schema) ? Union(FromRest6(schema.anyOf, mode), options) : IsLiteral(schema) ? Literal(FromLiteralValue(schema.const, mode), options) : schema;
}

// node_modules/@sinclair/typebox/build/esm/type/intrinsic/capitalize.mjs
function Capitalize(T, options = {}) {
  return Intrinsic(T, "Capitalize", options);
}
// node_modules/@sinclair/typebox/build/esm/type/intrinsic/lowercase.mjs
function Lowercase(T, options = {}) {
  return Intrinsic(T, "Lowercase", options);
}
// node_modules/@sinclair/typebox/build/esm/type/intrinsic/uncapitalize.mjs
function Uncapitalize(T, options = {}) {
  return Intrinsic(T, "Uncapitalize", options);
}
// node_modules/@sinclair/typebox/build/esm/type/intrinsic/uppercase.mjs
function Uppercase(T, options = {}) {
  return Intrinsic(T, "Uppercase", options);
}
// node_modules/@sinclair/typebox/build/esm/type/not/not.mjs
function Not2(schema, options) {
  return {
    ...options,
    [Kind]: "Not",
    not: CloneType(schema)
  };
}
// node_modules/@sinclair/typebox/build/esm/type/omit/omit-from-mapped-result.mjs
function FromProperties12(P, K, options) {
  const Acc = {};
  for (const K2 of globalThis.Object.getOwnPropertyNames(P))
    Acc[K2] = Omit(P[K2], K, options);
  return Acc;
}
function FromMappedResult9(R, K, options) {
  return FromProperties12(R.properties, K, options);
}
function OmitFromMappedResult(R, K, options) {
  const P = FromMappedResult9(R, K, options);
  return MappedResult(P);
}

// node_modules/@sinclair/typebox/build/esm/type/omit/omit.mjs
function FromIntersect16(T, K) {
  return T.map((T2) => OmitResolve(T2, K));
}
function FromUnion18(T, K) {
  return T.map((T2) => OmitResolve(T2, K));
}
function FromProperty2(T, K) {
  const { [K]: _, ...R } = T;
  return R;
}
function FromProperties13(T, K) {
  return K.reduce((T2, K2) => FromProperty2(T2, K2), T);
}
function OmitResolve(T, K) {
  return IsIntersect(T) ? Intersect(FromIntersect16(T.allOf, K)) : IsUnion(T) ? Union(FromUnion18(T.anyOf, K)) : IsObject3(T) ? Object2(FromProperties13(T.properties, K)) : Object2({});
}
function Omit(T, K, options = {}) {
  if (IsMappedKey(K))
    return OmitFromMappedKey(T, K, options);
  if (IsMappedResult(T))
    return OmitFromMappedResult(T, K, options);
  const I = IsSchema(K) ? IndexPropertyKeys(K) : K;
  const D = Discard(T, [TransformKind, "$id", "required"]);
  const R = CloneType(OmitResolve(T, I), options);
  return { ...D, ...R };
}

// node_modules/@sinclair/typebox/build/esm/type/omit/omit-from-mapped-key.mjs
function FromPropertyKey2(T, K, options) {
  return {
    [K]: Omit(T, [K], options)
  };
}
function FromPropertyKeys2(T, K, options) {
  return K.reduce((Acc, LK) => {
    return { ...Acc, ...FromPropertyKey2(T, LK, options) };
  }, {});
}
function FromMappedKey3(T, K, options) {
  return FromPropertyKeys2(T, K.keys, options);
}
function OmitFromMappedKey(T, K, options) {
  const P = FromMappedKey3(T, K, options);
  return MappedResult(P);
}
// node_modules/@sinclair/typebox/build/esm/type/parameters/parameters.mjs
function Parameters(schema, options = {}) {
  return Tuple(CloneRest(schema.parameters), { ...options });
}
// node_modules/@sinclair/typebox/build/esm/type/partial/partial.mjs
function FromRest7(T) {
  return T.map((L) => PartialResolve(L));
}
function FromProperties14(T) {
  const Acc = {};
  for (const K of globalThis.Object.getOwnPropertyNames(T))
    Acc[K] = Optional(T[K]);
  return Acc;
}
function PartialResolve(T) {
  return IsIntersect(T) ? Intersect(FromRest7(T.allOf)) : IsUnion(T) ? Union(FromRest7(T.anyOf)) : IsObject3(T) ? Object2(FromProperties14(T.properties)) : Object2({});
}
function Partial(T, options = {}) {
  if (IsMappedResult(T))
    return PartialFromMappedResult(T, options);
  const D = Discard(T, [TransformKind, "$id", "required"]);
  const R = CloneType(PartialResolve(T), options);
  return { ...D, ...R };
}

// node_modules/@sinclair/typebox/build/esm/type/partial/partial-from-mapped-result.mjs
function FromProperties15(K, options) {
  const Acc = {};
  for (const K2 of globalThis.Object.getOwnPropertyNames(K))
    Acc[K2] = Partial(K[K2], options);
  return Acc;
}
function FromMappedResult10(R, options) {
  return FromProperties15(R.properties, options);
}
function PartialFromMappedResult(R, options) {
  const P = FromMappedResult10(R, options);
  return MappedResult(P);
}
// node_modules/@sinclair/typebox/build/esm/type/pick/pick-from-mapped-result.mjs
function FromProperties16(P, K, options) {
  const Acc = {};
  for (const K2 of globalThis.Object.getOwnPropertyNames(P))
    Acc[K2] = Pick(P[K2], K, options);
  return Acc;
}
function FromMappedResult11(R, K, options) {
  return FromProperties16(R.properties, K, options);
}
function PickFromMappedResult(R, K, options) {
  const P = FromMappedResult11(R, K, options);
  return MappedResult(P);
}

// node_modules/@sinclair/typebox/build/esm/type/pick/pick.mjs
function FromIntersect17(T, K) {
  return T.map((T2) => PickResolve(T2, K));
}
function FromUnion19(T, K) {
  return T.map((T2) => PickResolve(T2, K));
}
function FromProperties17(T, K) {
  const Acc = {};
  for (const K2 of K)
    if (K2 in T)
      Acc[K2] = T[K2];
  return Acc;
}
function PickResolve(T, K) {
  return IsIntersect(T) ? Intersect(FromIntersect17(T.allOf, K)) : IsUnion(T) ? Union(FromUnion19(T.anyOf, K)) : IsObject3(T) ? Object2(FromProperties17(T.properties, K)) : Object2({});
}
function Pick(T, K, options = {}) {
  if (IsMappedKey(K))
    return PickFromMappedKey(T, K, options);
  if (IsMappedResult(T))
    return PickFromMappedResult(T, K, options);
  const I = IsSchema(K) ? IndexPropertyKeys(K) : K;
  const D = Discard(T, [TransformKind, "$id", "required"]);
  const R = CloneType(PickResolve(T, I), options);
  return { ...D, ...R };
}

// node_modules/@sinclair/typebox/build/esm/type/pick/pick-from-mapped-key.mjs
function FromPropertyKey3(T, K, options) {
  return {
    [K]: Pick(T, [K], options)
  };
}
function FromPropertyKeys3(T, K, options) {
  return K.reduce((Acc, LK) => {
    return { ...Acc, ...FromPropertyKey3(T, LK, options) };
  }, {});
}
function FromMappedKey4(T, K, options) {
  return FromPropertyKeys3(T, K.keys, options);
}
function PickFromMappedKey(T, K, options) {
  const P = FromMappedKey4(T, K, options);
  return MappedResult(P);
}
// node_modules/@sinclair/typebox/build/esm/type/readonly-optional/readonly-optional.mjs
function ReadonlyOptional(schema) {
  return Readonly(Optional(schema));
}
// node_modules/@sinclair/typebox/build/esm/type/record/record.mjs
function RecordCreateFromPattern(pattern2, T, options) {
  return {
    ...options,
    [Kind]: "Record",
    type: "object",
    patternProperties: { [pattern2]: CloneType(T) }
  };
}
function RecordCreateFromKeys(K, T, options) {
  const Acc = {};
  for (const K2 of K)
    Acc[K2] = CloneType(T);
  return Object2(Acc, { ...options, [Hint]: "Record" });
}
function FromTemplateLiteralKey(K, T, options) {
  return IsTemplateLiteralFinite(K) ? RecordCreateFromKeys(IndexPropertyKeys(K), T, options) : RecordCreateFromPattern(K.pattern, T, options);
}
function FromUnionKey(K, T, options) {
  return RecordCreateFromKeys(IndexPropertyKeys(Union(K)), T, options);
}
function FromLiteralKey(K, T, options) {
  return RecordCreateFromKeys([K.toString()], T, options);
}
function FromRegExpKey(K, T, options) {
  return RecordCreateFromPattern(K.source, T, options);
}
function FromStringKey(K, T, options) {
  const pattern2 = IsUndefined2(K.pattern) ? PatternStringExact : K.pattern;
  return RecordCreateFromPattern(pattern2, T, options);
}
function FromIntegerKey(_, T, options) {
  return RecordCreateFromPattern(PatternNumberExact, T, options);
}
function FromNumberKey(_, T, options) {
  return RecordCreateFromPattern(PatternNumberExact, T, options);
}
function Record(K, T, options = {}) {
  return IsUnion(K) ? FromUnionKey(K.anyOf, T, options) : IsTemplateLiteral(K) ? FromTemplateLiteralKey(K, T, options) : IsLiteral(K) ? FromLiteralKey(K.const, T, options) : IsInteger2(K) ? FromIntegerKey(K, T, options) : IsNumber3(K) ? FromNumberKey(K, T, options) : IsRegExp2(K) ? FromRegExpKey(K, T, options) : IsString3(K) ? FromStringKey(K, T, options) : Never(options);
}
// node_modules/@sinclair/typebox/build/esm/type/recursive/recursive.mjs
var Ordinal = 0;
function Recursive(callback, options = {}) {
  if (IsUndefined2(options.$id))
    options.$id = `T${Ordinal++}`;
  const thisType = callback({ [Kind]: "This", $ref: `${options.$id}` });
  thisType.$id = options.$id;
  return CloneType({ ...options, [Hint]: "Recursive", ...thisType });
}
// node_modules/@sinclair/typebox/build/esm/type/ref/ref.mjs
function Ref(unresolved, options = {}) {
  if (IsString2(unresolved))
    return { ...options, [Kind]: "Ref", $ref: unresolved };
  if (IsUndefined2(unresolved.$id))
    throw new Error("Reference target type must specify an $id");
  return {
    ...options,
    [Kind]: "Ref",
    $ref: unresolved.$id
  };
}
// node_modules/@sinclair/typebox/build/esm/type/regexp/regexp.mjs
function RegExp2(unresolved, options = {}) {
  const expr = IsString2(unresolved) ? new globalThis.RegExp(unresolved) : unresolved;
  return { ...options, [Kind]: "RegExp", type: "RegExp", source: expr.source, flags: expr.flags };
}
// node_modules/@sinclair/typebox/build/esm/type/required/required.mjs
function FromRest8(T) {
  return T.map((L) => RequiredResolve(L));
}
function FromProperties18(T) {
  const Acc = {};
  for (const K of globalThis.Object.getOwnPropertyNames(T))
    Acc[K] = Discard(T[K], [OptionalKind]);
  return Acc;
}
function RequiredResolve(T) {
  return IsIntersect(T) ? Intersect(FromRest8(T.allOf)) : IsUnion(T) ? Union(FromRest8(T.anyOf)) : IsObject3(T) ? Object2(FromProperties18(T.properties)) : Object2({});
}
function Required(T, options = {}) {
  if (IsMappedResult(T)) {
    return RequiredFromMappedResult(T, options);
  } else {
    const D = Discard(T, [TransformKind, "$id", "required"]);
    const R = CloneType(RequiredResolve(T), options);
    return { ...D, ...R };
  }
}

// node_modules/@sinclair/typebox/build/esm/type/required/required-from-mapped-result.mjs
function FromProperties19(P, options) {
  const Acc = {};
  for (const K2 of globalThis.Object.getOwnPropertyNames(P))
    Acc[K2] = Required(P[K2], options);
  return Acc;
}
function FromMappedResult12(R, options) {
  return FromProperties19(R.properties, options);
}
function RequiredFromMappedResult(R, options) {
  const P = FromMappedResult12(R, options);
  return MappedResult(P);
}
// node_modules/@sinclair/typebox/build/esm/type/rest/rest.mjs
function RestResolve(T) {
  return IsIntersect(T) ? CloneRest(T.allOf) : IsUnion(T) ? CloneRest(T.anyOf) : IsTuple(T) ? CloneRest(T.items ?? []) : [];
}
function Rest(T) {
  return CloneRest(RestResolve(T));
}
// node_modules/@sinclair/typebox/build/esm/type/return-type/return-type.mjs
function ReturnType(schema, options = {}) {
  return CloneType(schema.returns, options);
}
// node_modules/@sinclair/typebox/build/esm/type/strict/strict.mjs
function Strict(schema2) {
  return JSON.parse(JSON.stringify(schema2));
}
// node_modules/@sinclair/typebox/build/esm/type/transform/transform.mjs
class TransformDecodeBuilder {
  constructor(schema2) {
    this.schema = schema2;
  }
  Decode(decode2) {
    return new TransformEncodeBuilder(this.schema, decode2);
  }
}

class TransformEncodeBuilder {
  constructor(schema2, decode2) {
    this.schema = schema2;
    this.decode = decode2;
  }
  EncodeTransform(encode2, schema2) {
    const Encode2 = (value2) => schema2[TransformKind].Encode(encode2(value2));
    const Decode2 = (value2) => this.decode(schema2[TransformKind].Decode(value2));
    const Codec = { Encode: Encode2, Decode: Decode2 };
    return { ...schema2, [TransformKind]: Codec };
  }
  EncodeSchema(encode2, schema2) {
    const Codec = { Decode: this.decode, Encode: encode2 };
    return { ...schema2, [TransformKind]: Codec };
  }
  Encode(encode2) {
    const schema2 = CloneType(this.schema);
    return IsTransform(schema2) ? this.EncodeTransform(encode2, schema2) : this.EncodeSchema(encode2, schema2);
  }
}
function Transform(schema2) {
  return new TransformDecodeBuilder(schema2);
}
// node_modules/@sinclair/typebox/build/esm/type/void/void.mjs
function Void(options = {}) {
  return {
    ...options,
    [Kind]: "Void",
    type: "void"
  };
}
// node_modules/@sinclair/typebox/build/esm/type/type/type.mjs
var exports_type3 = {};
__export(exports_type3, {
  Void: () => Void,
  Uppercase: () => Uppercase,
  Unsafe: () => Unsafe,
  Unknown: () => Unknown,
  Union: () => Union,
  Undefined: () => Undefined,
  Uncapitalize: () => Uncapitalize,
  Uint8Array: () => Uint8Array2,
  Tuple: () => Tuple,
  Transform: () => Transform,
  TemplateLiteral: () => TemplateLiteral,
  Symbol: () => Symbol2,
  String: () => String2,
  Strict: () => Strict,
  ReturnType: () => ReturnType,
  Rest: () => Rest,
  Required: () => Required,
  RegExp: () => RegExp2,
  Ref: () => Ref,
  Recursive: () => Recursive,
  Record: () => Record,
  ReadonlyOptional: () => ReadonlyOptional,
  Readonly: () => Readonly,
  Promise: () => Promise2,
  Pick: () => Pick,
  Partial: () => Partial,
  Parameters: () => Parameters,
  Optional: () => Optional,
  Omit: () => Omit,
  Object: () => Object2,
  Number: () => Number2,
  Null: () => Null,
  Not: () => Not2,
  Never: () => Never,
  Mapped: () => Mapped,
  Lowercase: () => Lowercase,
  Literal: () => Literal,
  KeyOf: () => KeyOf,
  Iterator: () => Iterator,
  Intersect: () => Intersect,
  Integer: () => Integer,
  InstanceType: () => InstanceType,
  Index: () => Index,
  Function: () => Function2,
  Extract: () => Extract,
  Extends: () => Extends,
  Exclude: () => Exclude,
  Enum: () => Enum,
  Deref: () => Deref2,
  Date: () => Date2,
  ConstructorParameters: () => ConstructorParameters,
  Constructor: () => Constructor,
  Const: () => Const,
  Composite: () => Composite,
  Capitalize: () => Capitalize,
  Boolean: () => Boolean2,
  BigInt: () => BigInt2,
  Awaited: () => Awaited,
  AsyncIterator: () => AsyncIterator,
  Array: () => Array2,
  Any: () => Any
});

// node_modules/@sinclair/typebox/build/esm/type/type/index.mjs
var Type = exports_type3;
// node_modules/@sinclair/typebox/build/esm/compiler/compiler.mjs
class TypeCheck {
  constructor(schema3, references, checkFunc, code) {
    this.schema = schema3;
    this.references = references;
    this.checkFunc = checkFunc;
    this.code = code;
    this.hasTransform = HasTransform(schema3, references);
  }
  Code() {
    return this.code;
  }
  Errors(value2) {
    return Errors(this.schema, this.references, value2);
  }
  Check(value2) {
    return this.checkFunc(value2);
  }
  Decode(value2) {
    if (!this.checkFunc(value2))
      throw new TransformDecodeCheckError(this.schema, value2, this.Errors(value2).First());
    return this.hasTransform ? TransformDecode(this.schema, this.references, value2) : value2;
  }
  Encode(value2) {
    const encoded = this.hasTransform ? TransformEncode(this.schema, this.references, value2) : value2;
    if (!this.checkFunc(encoded))
      throw new TransformEncodeCheckError(this.schema, value2, this.Errors(value2).First());
    return encoded;
  }
}
var Character;
(function(Character2) {
  function DollarSign(code) {
    return code === 36;
  }
  Character2.DollarSign = DollarSign;
  function IsUnderscore(code) {
    return code === 95;
  }
  Character2.IsUnderscore = IsUnderscore;
  function IsAlpha(code) {
    return code >= 65 && code <= 90 || code >= 97 && code <= 122;
  }
  Character2.IsAlpha = IsAlpha;
  function IsNumeric(code) {
    return code >= 48 && code <= 57;
  }
  Character2.IsNumeric = IsNumeric;
})(Character || (Character = {}));
var MemberExpression;
(function(MemberExpression2) {
  function IsFirstCharacterNumeric(value2) {
    if (value2.length === 0)
      return false;
    return Character.IsNumeric(value2.charCodeAt(0));
  }
  function IsAccessor(value2) {
    if (IsFirstCharacterNumeric(value2))
      return false;
    for (let i = 0;i < value2.length; i++) {
      const code = value2.charCodeAt(i);
      const check3 = Character.IsAlpha(code) || Character.IsNumeric(code) || Character.DollarSign(code) || Character.IsUnderscore(code);
      if (!check3)
        return false;
    }
    return true;
  }
  function EscapeHyphen(key) {
    return key.replace(/'/g, "\\'");
  }
  function Encode2(object3, key) {
    return IsAccessor(key) ? `${object3}.${key}` : `${object3}['${EscapeHyphen(key)}']`;
  }
  MemberExpression2.Encode = Encode2;
})(MemberExpression || (MemberExpression = {}));
var Identifier;
(function(Identifier2) {
  function Encode2($id) {
    const buffer = [];
    for (let i = 0;i < $id.length; i++) {
      const code = $id.charCodeAt(i);
      if (Character.IsNumeric(code) || Character.IsAlpha(code)) {
        buffer.push($id.charAt(i));
      } else {
        buffer.push(`_${code}_`);
      }
    }
    return buffer.join("").replace(/__/g, "_");
  }
  Identifier2.Encode = Encode2;
})(Identifier || (Identifier = {}));
var LiteralString;
(function(LiteralString2) {
  function Escape3(content) {
    return content.replace(/'/g, "\\'");
  }
  LiteralString2.Escape = Escape3;
})(LiteralString || (LiteralString = {}));

class TypeCompilerUnknownTypeError extends TypeBoxError {
  constructor(schema3) {
    super("Unknown type");
    this.schema = schema3;
  }
}

class TypeCompilerTypeGuardError extends TypeBoxError {
  constructor(schema3) {
    super("Preflight validation check failed to guard for the given schema");
    this.schema = schema3;
  }
}
var Policy;
(function(Policy2) {
  function IsExactOptionalProperty(value2, key, expression) {
    return TypeSystemPolicy.ExactOptionalPropertyTypes ? `('${key}' in ${value2} ? ${expression} : true)` : `(${MemberExpression.Encode(value2, key)} !== undefined ? ${expression} : true)`;
  }
  Policy2.IsExactOptionalProperty = IsExactOptionalProperty;
  function IsObjectLike(value2) {
    return !TypeSystemPolicy.AllowArrayObject ? `(typeof ${value2} === 'object' && ${value2} !== null && !Array.isArray(${value2}))` : `(typeof ${value2} === 'object' && ${value2} !== null)`;
  }
  Policy2.IsObjectLike = IsObjectLike;
  function IsRecordLike(value2) {
    return !TypeSystemPolicy.AllowArrayObject ? `(typeof ${value2} === 'object' && ${value2} !== null && !Array.isArray(${value2}) && !(${value2} instanceof Date) && !(${value2} instanceof Uint8Array))` : `(typeof ${value2} === 'object' && ${value2} !== null && !(${value2} instanceof Date) && !(${value2} instanceof Uint8Array))`;
  }
  Policy2.IsRecordLike = IsRecordLike;
  function IsNumberLike(value2) {
    return TypeSystemPolicy.AllowNaN ? `typeof ${value2} === 'number'` : `Number.isFinite(${value2})`;
  }
  Policy2.IsNumberLike = IsNumberLike;
  function IsVoidLike(value2) {
    return TypeSystemPolicy.AllowNullVoid ? `(${value2} === undefined || ${value2} === null)` : `${value2} === undefined`;
  }
  Policy2.IsVoidLike = IsVoidLike;
})(Policy || (Policy = {}));
var TypeCompiler;
(function(TypeCompiler2) {
  function IsAnyOrUnknown2(schema3) {
    return schema3[Kind] === "Any" || schema3[Kind] === "Unknown";
  }
  function* FromAny5(schema3, references, value2) {
    yield "true";
  }
  function* FromArray16(schema3, references, value2) {
    yield `Array.isArray(${value2})`;
    const [parameter, accumulator] = [CreateParameter("value", "any"), CreateParameter("acc", "number")];
    if (IsNumber(schema3.maxItems))
      yield `${value2}.length <= ${schema3.maxItems}`;
    if (IsNumber(schema3.minItems))
      yield `${value2}.length >= ${schema3.minItems}`;
    const elementExpression = CreateExpression(schema3.items, references, "value");
    yield `${value2}.every((${parameter}) => ${elementExpression})`;
    if (IsSchema2(schema3.contains) || IsNumber(schema3.minContains) || IsNumber(schema3.maxContains)) {
      const containsSchema = IsSchema2(schema3.contains) ? schema3.contains : Never();
      const checkExpression = CreateExpression(containsSchema, references, "value");
      const checkMinContains = IsNumber(schema3.minContains) ? [`(count >= ${schema3.minContains})`] : [];
      const checkMaxContains = IsNumber(schema3.maxContains) ? [`(count <= ${schema3.maxContains})`] : [];
      const checkCount = `const count = value.reduce((${accumulator}, ${parameter}) => ${checkExpression} ? acc + 1 : acc, 0)`;
      const check3 = [`(count > 0)`, ...checkMinContains, ...checkMaxContains].join(" && ");
      yield `((${parameter}) => { ${checkCount}; return ${check3}})(${value2})`;
    }
    if (schema3.uniqueItems === true) {
      const check3 = `const hashed = hash(element); if(set.has(hashed)) { return false } else { set.add(hashed) } } return true`;
      const block = `const set = new Set(); for(const element of value) { ${check3} }`;
      yield `((${parameter}) => { ${block} )(${value2})`;
    }
  }
  function* FromAsyncIterator7(schema3, references, value2) {
    yield `(typeof value === 'object' && Symbol.asyncIterator in ${value2})`;
  }
  function* FromBigInt6(schema3, references, value2) {
    yield `(typeof ${value2} === 'bigint')`;
    if (IsBigInt(schema3.exclusiveMaximum))
      yield `${value2} < BigInt(${schema3.exclusiveMaximum})`;
    if (IsBigInt(schema3.exclusiveMinimum))
      yield `${value2} > BigInt(${schema3.exclusiveMinimum})`;
    if (IsBigInt(schema3.maximum))
      yield `${value2} <= BigInt(${schema3.maximum})`;
    if (IsBigInt(schema3.minimum))
      yield `${value2} >= BigInt(${schema3.minimum})`;
    if (IsBigInt(schema3.multipleOf))
      yield `(${value2} % BigInt(${schema3.multipleOf})) === 0`;
  }
  function* FromBoolean6(schema3, references, value2) {
    yield `(typeof ${value2} === 'boolean')`;
  }
  function* FromConstructor8(schema3, references, value2) {
    yield* Visit17(schema3.returns, references, `${value2}.prototype`);
  }
  function* FromDate6(schema3, references, value2) {
    yield `(${value2} instanceof Date) && Number.isFinite(${value2}.getTime())`;
    if (IsNumber(schema3.exclusiveMaximumTimestamp))
      yield `${value2}.getTime() < ${schema3.exclusiveMaximumTimestamp}`;
    if (IsNumber(schema3.exclusiveMinimumTimestamp))
      yield `${value2}.getTime() > ${schema3.exclusiveMinimumTimestamp}`;
    if (IsNumber(schema3.maximumTimestamp))
      yield `${value2}.getTime() <= ${schema3.maximumTimestamp}`;
    if (IsNumber(schema3.minimumTimestamp))
      yield `${value2}.getTime() >= ${schema3.minimumTimestamp}`;
    if (IsNumber(schema3.multipleOfTimestamp))
      yield `(${value2}.getTime() % ${schema3.multipleOfTimestamp}) === 0`;
  }
  function* FromFunction7(schema3, references, value2) {
    yield `(typeof ${value2} === 'function')`;
  }
  function* FromInteger6(schema3, references, value2) {
    yield `Number.isInteger(${value2})`;
    if (IsNumber(schema3.exclusiveMaximum))
      yield `${value2} < ${schema3.exclusiveMaximum}`;
    if (IsNumber(schema3.exclusiveMinimum))
      yield `${value2} > ${schema3.exclusiveMinimum}`;
    if (IsNumber(schema3.maximum))
      yield `${value2} <= ${schema3.maximum}`;
    if (IsNumber(schema3.minimum))
      yield `${value2} >= ${schema3.minimum}`;
    if (IsNumber(schema3.multipleOf))
      yield `(${value2} % ${schema3.multipleOf}) === 0`;
  }
  function* FromIntersect18(schema3, references, value2) {
    const check1 = schema3.allOf.map((schema4) => CreateExpression(schema4, references, value2)).join(" && ");
    if (schema3.unevaluatedProperties === false) {
      const keyCheck = CreateVariable(`${new RegExp(KeyOfPattern(schema3))};`);
      const check22 = `Object.getOwnPropertyNames(${value2}).every(key => ${keyCheck}.test(key))`;
      yield `(${check1} && ${check22})`;
    } else if (IsSchema2(schema3.unevaluatedProperties)) {
      const keyCheck = CreateVariable(`${new RegExp(KeyOfPattern(schema3))};`);
      const check22 = `Object.getOwnPropertyNames(${value2}).every(key => ${keyCheck}.test(key) || ${CreateExpression(schema3.unevaluatedProperties, references, `${value2}[key]`)})`;
      yield `(${check1} && ${check22})`;
    } else {
      yield `(${check1})`;
    }
  }
  function* FromIterator7(schema3, references, value2) {
    yield `(typeof value === 'object' && Symbol.iterator in ${value2})`;
  }
  function* FromLiteral7(schema3, references, value2) {
    if (typeof schema3.const === "number" || typeof schema3.const === "boolean") {
      yield `(${value2} === ${schema3.const})`;
    } else {
      yield `(${value2} === '${LiteralString.Escape(schema3.const)}')`;
    }
  }
  function* FromNever6(schema3, references, value2) {
    yield `false`;
  }
  function* FromNot8(schema3, references, value2) {
    const expression = CreateExpression(schema3.not, references, value2);
    yield `(!${expression})`;
  }
  function* FromNull6(schema3, references, value2) {
    yield `(${value2} === null)`;
  }
  function* FromNumber6(schema3, references, value2) {
    yield Policy.IsNumberLike(value2);
    if (IsNumber(schema3.exclusiveMaximum))
      yield `${value2} < ${schema3.exclusiveMaximum}`;
    if (IsNumber(schema3.exclusiveMinimum))
      yield `${value2} > ${schema3.exclusiveMinimum}`;
    if (IsNumber(schema3.maximum))
      yield `${value2} <= ${schema3.maximum}`;
    if (IsNumber(schema3.minimum))
      yield `${value2} >= ${schema3.minimum}`;
    if (IsNumber(schema3.multipleOf))
      yield `(${value2} % ${schema3.multipleOf}) === 0`;
  }
  function* FromObject13(schema3, references, value2) {
    yield Policy.IsObjectLike(value2);
    if (IsNumber(schema3.minProperties))
      yield `Object.getOwnPropertyNames(${value2}).length >= ${schema3.minProperties}`;
    if (IsNumber(schema3.maxProperties))
      yield `Object.getOwnPropertyNames(${value2}).length <= ${schema3.maxProperties}`;
    const knownKeys = Object.getOwnPropertyNames(schema3.properties);
    for (const knownKey of knownKeys) {
      const memberExpression = MemberExpression.Encode(value2, knownKey);
      const property = schema3.properties[knownKey];
      if (schema3.required && schema3.required.includes(knownKey)) {
        yield* Visit17(property, references, memberExpression);
        if (ExtendsUndefinedCheck(property) || IsAnyOrUnknown2(property))
          yield `('${knownKey}' in ${value2})`;
      } else {
        const expression = CreateExpression(property, references, memberExpression);
        yield Policy.IsExactOptionalProperty(value2, knownKey, expression);
      }
    }
    if (schema3.additionalProperties === false) {
      if (schema3.required && schema3.required.length === knownKeys.length) {
        yield `Object.getOwnPropertyNames(${value2}).length === ${knownKeys.length}`;
      } else {
        const keys = `[${knownKeys.map((key) => `'${key}'`).join(", ")}]`;
        yield `Object.getOwnPropertyNames(${value2}).every(key => ${keys}.includes(key))`;
      }
    }
    if (typeof schema3.additionalProperties === "object") {
      const expression = CreateExpression(schema3.additionalProperties, references, `${value2}[key]`);
      const keys = `[${knownKeys.map((key) => `'${key}'`).join(", ")}]`;
      yield `(Object.getOwnPropertyNames(${value2}).every(key => ${keys}.includes(key) || ${expression}))`;
    }
  }
  function* FromPromise8(schema3, references, value2) {
    yield `(typeof value === 'object' && typeof ${value2}.then === 'function')`;
  }
  function* FromRecord12(schema3, references, value2) {
    yield Policy.IsRecordLike(value2);
    if (IsNumber(schema3.minProperties))
      yield `Object.getOwnPropertyNames(${value2}).length >= ${schema3.minProperties}`;
    if (IsNumber(schema3.maxProperties))
      yield `Object.getOwnPropertyNames(${value2}).length <= ${schema3.maxProperties}`;
    const [patternKey, patternSchema] = Object.entries(schema3.patternProperties)[0];
    const variable = CreateVariable(`${new RegExp(patternKey)}`);
    const check1 = CreateExpression(patternSchema, references, "value");
    const check22 = IsSchema2(schema3.additionalProperties) ? CreateExpression(schema3.additionalProperties, references, value2) : schema3.additionalProperties === false ? "false" : "true";
    const expression = `(${variable}.test(key) ? ${check1} : ${check22})`;
    yield `(Object.entries(${value2}).every(([key, value]) => ${expression}))`;
  }
  function* FromRef12(schema3, references, value2) {
    const target = Deref(schema3, references);
    if (state.functions.has(schema3.$ref))
      return yield `${CreateFunctionName(schema3.$ref)}(${value2})`;
    yield* Visit17(target, references, value2);
  }
  function* FromRegExp5(schema3, references, value2) {
    const variable = CreateVariable(`${new RegExp(schema3.source, schema3.flags)};`);
    yield `(typeof ${value2} === 'string')`;
    if (IsNumber(schema3.maxLength))
      yield `${value2}.length <= ${schema3.maxLength}`;
    if (IsNumber(schema3.minLength))
      yield `${value2}.length >= ${schema3.minLength}`;
    yield `${variable}.test(${value2})`;
  }
  function* FromString6(schema3, references, value2) {
    yield `(typeof ${value2} === 'string')`;
    if (IsNumber(schema3.maxLength))
      yield `${value2}.length <= ${schema3.maxLength}`;
    if (IsNumber(schema3.minLength))
      yield `${value2}.length >= ${schema3.minLength}`;
    if (schema3.pattern !== undefined) {
      const variable = CreateVariable(`${new RegExp(schema3.pattern)};`);
      yield `${variable}.test(${value2})`;
    }
    if (schema3.format !== undefined) {
      yield `format('${schema3.format}', ${value2})`;
    }
  }
  function* FromSymbol6(schema3, references, value2) {
    yield `(typeof ${value2} === 'symbol')`;
  }
  function* FromTemplateLiteral7(schema3, references, value2) {
    yield `(typeof ${value2} === 'string')`;
    const variable = CreateVariable(`${new RegExp(schema3.pattern)};`);
    yield `${variable}.test(${value2})`;
  }
  function* FromThis11(schema3, references, value2) {
    yield `${CreateFunctionName(schema3.$ref)}(${value2})`;
  }
  function* FromTuple15(schema3, references, value2) {
    yield `Array.isArray(${value2})`;
    if (schema3.items === undefined)
      return yield `${value2}.length === 0`;
    yield `(${value2}.length === ${schema3.maxItems})`;
    for (let i = 0;i < schema3.items.length; i++) {
      const expression = CreateExpression(schema3.items[i], references, `${value2}[${i}]`);
      yield `${expression}`;
    }
  }
  function* FromUndefined6(schema3, references, value2) {
    yield `${value2} === undefined`;
  }
  function* FromUnion20(schema3, references, value2) {
    const expressions = schema3.anyOf.map((schema4) => CreateExpression(schema4, references, value2));
    yield `(${expressions.join(" || ")})`;
  }
  function* FromUint8Array5(schema3, references, value2) {
    yield `${value2} instanceof Uint8Array`;
    if (IsNumber(schema3.maxByteLength))
      yield `(${value2}.length <= ${schema3.maxByteLength})`;
    if (IsNumber(schema3.minByteLength))
      yield `(${value2}.length >= ${schema3.minByteLength})`;
  }
  function* FromUnknown5(schema3, references, value2) {
    yield "true";
  }
  function* FromVoid5(schema3, references, value2) {
    yield Policy.IsVoidLike(value2);
  }
  function* FromKind4(schema3, references, value2) {
    const instance = state.instances.size;
    state.instances.set(instance, schema3);
    yield `kind('${schema3[Kind]}', ${instance}, ${value2})`;
  }
  function* Visit17(schema3, references, value2, useHoisting = true) {
    const references_ = IsString(schema3.$id) ? [...references, schema3] : references;
    const schema_ = schema3;
    if (useHoisting && IsString(schema3.$id)) {
      const functionName = CreateFunctionName(schema3.$id);
      if (state.functions.has(functionName)) {
        return yield `${functionName}(${value2})`;
      } else {
        const functionCode = CreateFunction(functionName, schema3, references, "value", false);
        state.functions.set(functionName, functionCode);
        return yield `${functionName}(${value2})`;
      }
    }
    switch (schema_[Kind]) {
      case "Any":
        return yield* FromAny5(schema_, references_, value2);
      case "Array":
        return yield* FromArray16(schema_, references_, value2);
      case "AsyncIterator":
        return yield* FromAsyncIterator7(schema_, references_, value2);
      case "BigInt":
        return yield* FromBigInt6(schema_, references_, value2);
      case "Boolean":
        return yield* FromBoolean6(schema_, references_, value2);
      case "Constructor":
        return yield* FromConstructor8(schema_, references_, value2);
      case "Date":
        return yield* FromDate6(schema_, references_, value2);
      case "Function":
        return yield* FromFunction7(schema_, references_, value2);
      case "Integer":
        return yield* FromInteger6(schema_, references_, value2);
      case "Intersect":
        return yield* FromIntersect18(schema_, references_, value2);
      case "Iterator":
        return yield* FromIterator7(schema_, references_, value2);
      case "Literal":
        return yield* FromLiteral7(schema_, references_, value2);
      case "Never":
        return yield* FromNever6(schema_, references_, value2);
      case "Not":
        return yield* FromNot8(schema_, references_, value2);
      case "Null":
        return yield* FromNull6(schema_, references_, value2);
      case "Number":
        return yield* FromNumber6(schema_, references_, value2);
      case "Object":
        return yield* FromObject13(schema_, references_, value2);
      case "Promise":
        return yield* FromPromise8(schema_, references_, value2);
      case "Record":
        return yield* FromRecord12(schema_, references_, value2);
      case "Ref":
        return yield* FromRef12(schema_, references_, value2);
      case "RegExp":
        return yield* FromRegExp5(schema_, references_, value2);
      case "String":
        return yield* FromString6(schema_, references_, value2);
      case "Symbol":
        return yield* FromSymbol6(schema_, references_, value2);
      case "TemplateLiteral":
        return yield* FromTemplateLiteral7(schema_, references_, value2);
      case "This":
        return yield* FromThis11(schema_, references_, value2);
      case "Tuple":
        return yield* FromTuple15(schema_, references_, value2);
      case "Undefined":
        return yield* FromUndefined6(schema_, references_, value2);
      case "Union":
        return yield* FromUnion20(schema_, references_, value2);
      case "Uint8Array":
        return yield* FromUint8Array5(schema_, references_, value2);
      case "Unknown":
        return yield* FromUnknown5(schema_, references_, value2);
      case "Void":
        return yield* FromVoid5(schema_, references_, value2);
      default:
        if (!exports_type.Has(schema_[Kind]))
          throw new TypeCompilerUnknownTypeError(schema3);
        return yield* FromKind4(schema_, references_, value2);
    }
  }
  const state = {
    language: "javascript",
    functions: new Map,
    variables: new Map,
    instances: new Map
  };
  function CreateExpression(schema3, references, value2, useHoisting = true) {
    return `(${[...Visit17(schema3, references, value2, useHoisting)].join(" && ")})`;
  }
  function CreateFunctionName($id) {
    return `check_${Identifier.Encode($id)}`;
  }
  function CreateVariable(expression) {
    const variableName = `local_${state.variables.size}`;
    state.variables.set(variableName, `const ${variableName} = ${expression}`);
    return variableName;
  }
  function CreateFunction(name, schema3, references, value2, useHoisting = true) {
    const [newline, pad] = ["\n", (length) => "".padStart(length, " ")];
    const parameter = CreateParameter("value", "any");
    const returns = CreateReturns("boolean");
    const expression = [...Visit17(schema3, references, value2, useHoisting)].map((expression2) => `${pad(4)}${expression2}`).join(` &&${newline}`);
    return `function ${name}(${parameter})${returns} {${newline}${pad(2)}return (${newline}${expression}${newline}${pad(2)})\n}`;
  }
  function CreateParameter(name, type3) {
    const annotation = state.language === "typescript" ? `: ${type3}` : "";
    return `${name}${annotation}`;
  }
  function CreateReturns(type3) {
    return state.language === "typescript" ? `: ${type3}` : "";
  }
  function Build(schema3, references, options) {
    const functionCode = CreateFunction("check", schema3, references, "value");
    const parameter = CreateParameter("value", "any");
    const returns = CreateReturns("boolean");
    const functions = [...state.functions.values()];
    const variables = [...state.variables.values()];
    const checkFunction = IsString(schema3.$id) ? `return function check(${parameter})${returns} {\n  return ${CreateFunctionName(schema3.$id)}(value)\n}` : `return ${functionCode}`;
    return [...variables, ...functions, checkFunction].join("\n");
  }
  function Code(...args) {
    const defaults = { language: "javascript" };
    const [schema3, references, options] = args.length === 2 && IsArray(args[1]) ? [args[0], args[1], defaults] : args.length === 2 && !IsArray(args[1]) ? [args[0], [], args[1]] : args.length === 3 ? [args[0], args[1], args[2]] : args.length === 1 ? [args[0], [], defaults] : [null, [], defaults];
    state.language = options.language;
    state.variables.clear();
    state.functions.clear();
    state.instances.clear();
    if (!IsSchema2(schema3))
      throw new TypeCompilerTypeGuardError(schema3);
    for (const schema4 of references)
      if (!IsSchema2(schema4))
        throw new TypeCompilerTypeGuardError(schema4);
    return Build(schema3, references, options);
  }
  TypeCompiler2.Code = Code;
  function Compile(schema3, references = []) {
    const generatedCode = Code(schema3, references, { language: "javascript" });
    const compiledFunction = globalThis.Function("kind", "format", "hash", generatedCode);
    const instances = new Map(state.instances);
    function typeRegistryFunction(kind, instance, value2) {
      if (!exports_type.Has(kind) || !instances.has(instance))
        return false;
      const checkFunc = exports_type.Get(kind);
      const schema4 = instances.get(instance);
      return checkFunc(schema4, value2);
    }
    function formatRegistryFunction(format, value2) {
      if (!exports_format.Has(format))
        return false;
      const checkFunc = exports_format.Get(format);
      return checkFunc(value2);
    }
    function hashFunction(value2) {
      return Hash(value2);
    }
    const checkFunction = compiledFunction(typeRegistryFunction, formatRegistryFunction, hashFunction);
    return new TypeCheck(schema3, references, checkFunction, generatedCode);
  }
  TypeCompiler2.Compile = Compile;
})(TypeCompiler || (TypeCompiler = {}));
// node_modules/cookie/index.js
/*!
 * cookie
 * Copyright(c) 2012-2014 Roman Shtylman
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */
var $parse = parse2;
var $serialize = serialize;
var __toString = Object.prototype.toString;
var fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
function parse2(str, options) {
  if (typeof str !== "string") {
    throw new TypeError("argument str must be a string");
  }
  var obj = {};
  var opt = options || {};
  var dec = opt.decode || decode2;
  var index = 0;
  while (index < str.length) {
    var eqIdx = str.indexOf("=", index);
    if (eqIdx === -1) {
      break;
    }
    var endIdx = str.indexOf(";", index);
    if (endIdx === -1) {
      endIdx = str.length;
    } else if (endIdx < eqIdx) {
      index = str.lastIndexOf(";", eqIdx - 1) + 1;
      continue;
    }
    var key = str.slice(index, eqIdx).trim();
    if (obj[key] === undefined) {
      var val = str.slice(eqIdx + 1, endIdx).trim();
      if (val.charCodeAt(0) === 34) {
        val = val.slice(1, -1);
      }
      obj[key] = tryDecode(val, dec);
    }
    index = endIdx + 1;
  }
  return obj;
}
function serialize(name, val, options) {
  var opt = options || {};
  var enc = opt.encode || encode2;
  if (typeof enc !== "function") {
    throw new TypeError("option encode is invalid");
  }
  if (!fieldContentRegExp.test(name)) {
    throw new TypeError("argument name is invalid");
  }
  var value2 = enc(val);
  if (value2 && !fieldContentRegExp.test(value2)) {
    throw new TypeError("argument val is invalid");
  }
  var str = name + "=" + value2;
  if (opt.maxAge != null) {
    var maxAge = opt.maxAge - 0;
    if (isNaN(maxAge) || !isFinite(maxAge)) {
      throw new TypeError("option maxAge is invalid");
    }
    str += "; Max-Age=" + Math.floor(maxAge);
  }
  if (opt.domain) {
    if (!fieldContentRegExp.test(opt.domain)) {
      throw new TypeError("option domain is invalid");
    }
    str += "; Domain=" + opt.domain;
  }
  if (opt.path) {
    if (!fieldContentRegExp.test(opt.path)) {
      throw new TypeError("option path is invalid");
    }
    str += "; Path=" + opt.path;
  }
  if (opt.expires) {
    var expires = opt.expires;
    if (!isDate(expires) || isNaN(expires.valueOf())) {
      throw new TypeError("option expires is invalid");
    }
    str += "; Expires=" + expires.toUTCString();
  }
  if (opt.httpOnly) {
    str += "; HttpOnly";
  }
  if (opt.secure) {
    str += "; Secure";
  }
  if (opt.partitioned) {
    str += "; Partitioned";
  }
  if (opt.priority) {
    var priority = typeof opt.priority === "string" ? opt.priority.toLowerCase() : opt.priority;
    switch (priority) {
      case "low":
        str += "; Priority=Low";
        break;
      case "medium":
        str += "; Priority=Medium";
        break;
      case "high":
        str += "; Priority=High";
        break;
      default:
        throw new TypeError("option priority is invalid");
    }
  }
  if (opt.sameSite) {
    var sameSite = typeof opt.sameSite === "string" ? opt.sameSite.toLowerCase() : opt.sameSite;
    switch (sameSite) {
      case true:
        str += "; SameSite=Strict";
        break;
      case "lax":
        str += "; SameSite=Lax";
        break;
      case "strict":
        str += "; SameSite=Strict";
        break;
      case "none":
        str += "; SameSite=None";
        break;
      default:
        throw new TypeError("option sameSite is invalid");
    }
  }
  return str;
}
function decode2(str) {
  return str.indexOf("%") !== -1 ? decodeURIComponent(str) : str;
}
function encode2(val) {
  return encodeURIComponent(val);
}
function isDate(val) {
  return __toString.call(val) === "[object Date]" || val instanceof Date;
}
function tryDecode(str, decode3) {
  try {
    return decode3(str);
  } catch (e) {
    return str;
  }
}

// node_modules/elysia/dist/index.mjs
var import_fast_querystring = __toESM(require_lib(), 1);
var import_fast_decode_uri_component = __toESM(require_fast_decode_uri_component(), 1);
var import_fast_querystring2 = __toESM(require_lib(), 1);
var resolver = () => {
  let resolve;
  const promise3 = new Promise((r) => {
    resolve = r;
  });
  return [promise3, resolve];
};
var createSignal = () => {
  const [start, resolveStart] = resolver();
  const [end, resolveEnd] = resolver();
  const children = [];
  const resolvers = [];
  return {
    signal: start,
    consume: (trace) => {
      switch (trace.type) {
        case "begin":
          if (trace.unit && children.length === 0)
            for (let i = 0;i < trace.unit; i++) {
              const [start2, resolveStart2] = resolver();
              const [end2, resolveEnd2] = resolver();
              children.push(start2);
              resolvers.push([
                (trace2) => {
                  resolveStart2({
                    children: [],
                    end: end2,
                    name: trace2.name ?? "",
                    skip: false,
                    time: trace2.time
                  });
                },
                (time) => {
                  resolveEnd2(time);
                }
              ]);
            }
          resolveStart({
            children,
            end,
            name: trace.name ?? "",
            skip: false,
            time: trace.time
          });
          break;
        case "end":
          resolveEnd(trace.time);
          break;
      }
    },
    consumeChild(trace) {
      switch (trace.type) {
        case "begin":
          if (!resolvers[0])
            return;
          const [resolveStart2] = resolvers[0];
          resolveStart2({
            children: [],
            end,
            name: trace.name ?? "",
            skip: false,
            time: trace.time
          });
          break;
        case "end":
          const child = resolvers.shift();
          if (!child)
            return;
          child[1](trace.time);
      }
    },
    resolve() {
      resolveStart({
        children: [],
        end: new Promise((resolve) => resolve(0)),
        name: "",
        skip: true,
        time: 0
      });
      for (const [resolveStart2, resolveEnd2] of resolvers) {
        resolveStart2({
          children: [],
          end: new Promise((resolve) => resolve(0)),
          name: "",
          skip: true,
          time: 0
        });
        resolveEnd2(0);
      }
      resolveEnd(0);
    }
  };
};
var createTraceListener = (getReporter, totalListener, handler) => {
  return async function trace(trace) {
    if (trace.event !== "request" || trace.type !== "begin")
      return;
    const id = trace.id;
    const reporter = getReporter();
    const request = createSignal();
    const parse22 = createSignal();
    const transform4 = createSignal();
    const beforeHandle = createSignal();
    const handle = createSignal();
    const afterHandle = createSignal();
    const error22 = createSignal();
    const response = createSignal();
    request.consume(trace);
    const reducer = (event) => {
      if (event.id === id)
        switch (event.event) {
          case "request":
            request.consume(event);
            break;
          case "request.unit":
            request.consumeChild(event);
            break;
          case "parse":
            parse22.consume(event);
            break;
          case "parse.unit":
            parse22.consumeChild(event);
            break;
          case "transform":
            transform4.consume(event);
            break;
          case "transform.unit":
            transform4.consumeChild(event);
            break;
          case "beforeHandle":
            beforeHandle.consume(event);
            break;
          case "beforeHandle.unit":
            beforeHandle.consumeChild(event);
            break;
          case "handle":
            handle.consume(event);
            break;
          case "afterHandle":
            afterHandle.consume(event);
            break;
          case "afterHandle.unit":
            afterHandle.consumeChild(event);
            break;
          case "error":
            error22.consume(event);
            break;
          case "error.unit":
            error22.consumeChild(event);
            break;
          case "response":
            if (event.type === "begin") {
              request.resolve();
              parse22.resolve();
              transform4.resolve();
              beforeHandle.resolve();
              handle.resolve();
              afterHandle.resolve();
              error22.resolve();
            } else
              reporter.off("event", reducer);
            response.consume(event);
            break;
          case "response.unit":
            response.consumeChild(event);
            break;
          case "exit":
            request.resolve();
            parse22.resolve();
            transform4.resolve();
            beforeHandle.resolve();
            handle.resolve();
            afterHandle.resolve();
            error22.resolve();
            break;
        }
    };
    reporter.on("event", reducer);
    await handler({
      id,
      context: trace.ctx,
      set: trace.ctx?.set,
      store: trace.ctx?.store,
      time: trace.time,
      request: request.signal,
      parse: parse22.signal,
      transform: transform4.signal,
      beforeHandle: beforeHandle.signal,
      handle: handle.signal,
      afterHandle: afterHandle.signal,
      error: error22.signal,
      response: response.signal
    });
    reporter.emit(`res${id}.${totalListener}`, undefined);
  };
};
var Cookie = class {
  constructor(_value, property = {}) {
    this._value = _value;
    this.property = property;
  }
  get() {
    return this._value;
  }
  get value() {
    return this._value;
  }
  set value(value2) {
    if (typeof value2 === "object") {
      if (JSON.stringify(this.value) === JSON.stringify(value2))
        return;
    } else if (this.value === value2)
      return;
    this._value = value2;
    this.sync();
  }
  add(config) {
    const updated = Object.assign(this.property, typeof config === "function" ? config(Object.assign(this.property, this.value)) : config);
    if ("value" in updated) {
      this._value = updated.value;
      delete updated.value;
    }
    this.property = updated;
    return this.sync();
  }
  set(config) {
    const updated = typeof config === "function" ? config(Object.assign(this.property, this.value)) : config;
    if ("value" in updated) {
      this._value = updated.value;
      delete updated.value;
    }
    this.property = updated;
    return this.sync();
  }
  remove(options) {
    if (this.value === undefined)
      return;
    this.set({
      domain: options?.domain,
      expires: /* @__PURE__ */ new Date(0),
      maxAge: 0,
      path: options?.path,
      sameSite: options?.sameSite,
      secure: options?.secure,
      value: ""
    });
  }
  get domain() {
    return this.property.domain;
  }
  set domain(value2) {
    if (this.property.domain === value2)
      return;
    this.property.domain = value2;
    this.sync();
  }
  get expires() {
    return this.property.expires;
  }
  set expires(value2) {
    if (this.property.expires?.getTime() === value2?.getTime())
      return;
    this.property.expires = value2;
    this.sync();
  }
  get httpOnly() {
    return this.property.httpOnly;
  }
  set httpOnly(value2) {
    if (this.property.domain === value2)
      return;
    this.property.httpOnly = value2;
    this.sync();
  }
  get maxAge() {
    return this.property.maxAge;
  }
  set maxAge(value2) {
    if (this.property.maxAge === value2)
      return;
    this.property.maxAge = value2;
    this.sync();
  }
  get path() {
    return this.property.path;
  }
  set path(value2) {
    if (this.property.path === value2)
      return;
    this.property.path = value2;
    this.sync();
  }
  get priority() {
    return this.property.priority;
  }
  set priority(value2) {
    if (this.property.priority === value2)
      return;
    this.property.priority = value2;
    this.sync();
  }
  get sameSite() {
    return this.property.sameSite;
  }
  set sameSite(value2) {
    if (this.property.sameSite === value2)
      return;
    this.property.sameSite = value2;
    this.sync();
  }
  get secure() {
    return this.property.secure;
  }
  set secure(value2) {
    if (this.property.secure === value2)
      return;
    this.property.secure = value2;
    this.sync();
  }
  toString() {
    return typeof this.value === "object" ? JSON.stringify(this.value) : this.value?.toString() ?? "";
  }
  sync() {
    if (!this.name || !this.setter)
      return this;
    if (!this.setter.cookie)
      this.setter.cookie = {
        [this.name]: Object.assign(this.property, {
          value: this.toString()
        })
      };
    else
      this.setter.cookie[this.name] = Object.assign(this.property, {
        value: this.toString()
      });
    return this;
  }
};
var createCookieJar = (initial, set2, properties) => new Proxy(initial, {
  get(target, key) {
    if (key in target)
      return target[key];
    const cookie = new Cookie(undefined, properties ? { ...properties } : undefined);
    cookie.setter = set2;
    cookie.name = key;
    return cookie;
  },
  set(target, key, value2) {
    if (!(value2 instanceof Cookie))
      return false;
    if (!set2.cookie)
      set2.cookie = {};
    value2.setter = set2;
    value2.name = key;
    value2.sync();
    target[key] = value2;
    return true;
  }
});
var parseCookie = async (set2, cookieString, {
  secret,
  sign,
  ...properties
} = {}) => {
  if (!cookieString)
    return createCookieJar({}, set2, properties);
  const jar = {};
  const isStringKey = typeof secret === "string";
  if (sign && sign !== true && !Array.isArray(sign))
    sign = [sign];
  const cookieKeys = Object.keys($parse(cookieString));
  for (let i = 0;i < cookieKeys.length; i++) {
    const key = cookieKeys[i];
    let value2 = $parse(cookieString)[key];
    if (sign === true || sign?.includes(key)) {
      if (!secret)
        throw new Error("No secret is provided to cookie plugin");
      if (isStringKey) {
        value2 = await unsignCookie(value2, secret);
        if (value2 === false)
          throw new InvalidCookieSignature(key);
      } else {
        let fail = true;
        for (let i2 = 0;i2 < secret.length; i2++) {
          const temp = await unsignCookie(value2, secret[i2]);
          if (temp !== false) {
            value2 = temp;
            fail = false;
            break;
          }
        }
        if (fail)
          throw new InvalidCookieSignature(key);
      }
    }
    if (value2 === undefined)
      continue;
    const start = value2.charCodeAt(0);
    if (start === 123 || start === 91)
      try {
        const cookie2 = new Cookie(JSON.parse(value2));
        cookie2.setter = set2;
        cookie2.name = key;
        jar[key] = cookie2;
        continue;
      } catch {
      }
    if (isNumericString(value2))
      value2 = +value2;
    else if (value2 === "true")
      value2 = true;
    else if (value2 === "false")
      value2 = false;
    const cookie = new Cookie(value2, properties);
    cookie.setter = set2;
    cookie.name = key;
    jar[key] = cookie;
  }
  return createCookieJar(jar, set2);
};
var hasHeaderShorthand = "toJSON" in new Headers;
var isNotEmpty = (obj) => {
  for (const x in obj)
    return true;
  return false;
};
var handleFile = (response, set2) => {
  const size = response.size;
  if (size && set2 && set2.status !== 206 && set2.status !== 304 && set2.status !== 412 && set2.status !== 416 || !set2 && size) {
    if (set2) {
      if (set2.headers instanceof Headers) {
        if (hasHeaderShorthand)
          set2.headers = set2.headers.toJSON();
        else
          for (const [key, value2] of set2.headers.entries())
            if (key in set2.headers)
              set2.headers[key] = value2;
      }
      return new Response(response, {
        status: set2.status,
        headers: Object.assign({
          "accept-ranges": "bytes",
          "content-range": `bytes 0-${size - 1}/${size}`
        }, set2.headers)
      });
    }
    return new Response(response, {
      headers: {
        "accept-ranges": "bytes",
        "content-range": `bytes 0-${size - 1}/${size}`
      }
    });
  }
  return new Response(response);
};
var parseSetCookies = (headers, setCookie) => {
  if (!headers || !Array.isArray(setCookie))
    return headers;
  headers.delete("Set-Cookie");
  for (let i = 0;i < setCookie.length; i++) {
    const index = setCookie[i].indexOf("=");
    headers.append("Set-Cookie", `${setCookie[i].slice(0, index)}=${setCookie[i].slice(index + 1)}`);
  }
  return headers;
};
var cookieToHeader = (cookies) => {
  if (!cookies || typeof cookies !== "object" || !isNotEmpty(cookies))
    return;
  const set2 = [];
  for (const [key, property] of Object.entries(cookies)) {
    if (!key || !property)
      continue;
    if (Array.isArray(property.value)) {
      for (let i = 0;i < property.value.length; i++) {
        let value2 = property.value[i];
        if (value2 === undefined || value2 === null)
          continue;
        if (typeof value2 === "object")
          value2 = JSON.stringify(value2);
        set2.push($serialize(key, value2, property));
      }
    } else {
      let value2 = property.value;
      if (value2 === undefined || value2 === null)
        continue;
      if (typeof value2 === "object")
        value2 = JSON.stringify(value2);
      set2.push($serialize(key, property.value, property));
    }
  }
  if (set2.length === 0)
    return;
  if (set2.length === 1)
    return set2[0];
  return set2;
};
var mapResponse = (response, set2) => {
  if (response?.[response.$passthrough])
    response = response[response.$passthrough];
  if (response?.[ELYSIA_RESPONSE]) {
    set2.status = response[ELYSIA_RESPONSE];
    response = response.response;
  }
  if (isNotEmpty(set2.headers) || set2.status !== 200 || set2.redirect || set2.cookie) {
    if (typeof set2.status === "string")
      set2.status = StatusMap[set2.status];
    if (set2.redirect) {
      set2.headers.Location = set2.redirect;
      if (!set2.status || set2.status < 300 || set2.status >= 400)
        set2.status = 302;
    }
    if (set2.cookie && isNotEmpty(set2.cookie))
      set2.headers["Set-Cookie"] = cookieToHeader(set2.cookie);
    if (set2.headers["Set-Cookie"] && Array.isArray(set2.headers["Set-Cookie"]))
      set2.headers = parseSetCookies(new Headers(set2.headers), set2.headers["Set-Cookie"]);
    switch (response?.constructor?.name) {
      case "String":
        return new Response(response, set2);
      case "Blob":
        return handleFile(response, set2);
      case "Object":
      case "Array":
        return Response.json(response, set2);
      case "ReadableStream":
        if (!set2.headers["content-type"]?.startsWith("text/event-stream"))
          set2.headers["content-type"] = "text/event-stream; charset=utf-8";
        return new Response(response, set2);
      case undefined:
        if (!response)
          return new Response("", set2);
        return Response.json(response, set2);
      case "Response":
        const inherits = { ...set2.headers };
        if (hasHeaderShorthand)
          set2.headers = response.headers.toJSON();
        else
          for (const [key, value2] of response.headers.entries())
            if (key in set2.headers)
              set2.headers[key] = value2;
        for (const key in inherits)
          response.headers.append(key, inherits[key]);
        return response;
      case "Error":
        return errorToResponse(response, set2);
      case "Promise":
        return response.then((x) => mapResponse(x, set2));
      case "Function":
        return mapResponse(response(), set2);
      case "Number":
      case "Boolean":
        return new Response(response.toString(), set2);
      case "Cookie":
        if (response instanceof Cookie)
          return new Response(response.value, set2);
        return new Response(response?.toString(), set2);
      default:
        if (response instanceof Response) {
          const inherits2 = { ...set2.headers };
          if (hasHeaderShorthand)
            set2.headers = response.headers.toJSON();
          else
            for (const [key, value2] of response.headers.entries())
              if (key in set2.headers)
                set2.headers[key] = value2;
          for (const key in inherits2)
            response.headers.append(key, inherits2[key]);
          return response;
        }
        if (response instanceof Promise)
          return response.then((x) => mapResponse(x, set2));
        if (response instanceof Error)
          return errorToResponse(response, set2);
        const r = JSON.stringify(response);
        if (r.charCodeAt(0) === 123) {
          if (!set2.headers["Content-Type"])
            set2.headers["Content-Type"] = "application/json";
          return new Response(JSON.stringify(response), set2);
        }
        return new Response(r, set2);
    }
  } else
    switch (response?.constructor?.name) {
      case "String":
        return new Response(response);
      case "Blob":
        return handleFile(response, set2);
      case "Object":
      case "Array":
        return new Response(JSON.stringify(response), {
          headers: {
            "content-type": "application/json"
          }
        });
      case "ReadableStream":
        return new Response(response, {
          headers: {
            "Content-Type": "text/event-stream; charset=utf-8"
          }
        });
      case undefined:
        if (!response)
          return new Response("");
        return new Response(JSON.stringify(response), {
          headers: {
            "content-type": "application/json"
          }
        });
      case "Response":
        return response;
      case "Error":
        return errorToResponse(response, set2);
      case "Promise":
        return response.then((x) => {
          const r2 = mapCompactResponse(x);
          if (r2 !== undefined)
            return r2;
          return new Response("");
        });
      case "Function":
        return mapCompactResponse(response());
      case "Number":
      case "Boolean":
        return new Response(response.toString());
      case "Cookie":
        if (response instanceof Cookie)
          return new Response(response.value, set2);
        return new Response(response?.toString(), set2);
      default:
        if (response instanceof Response)
          return new Response(response.body, {
            headers: {
              "Content-Type": "application/json"
            }
          });
        if (response instanceof Promise)
          return response.then((x) => mapResponse(x, set2));
        if (response instanceof Error)
          return errorToResponse(response, set2);
        const r = JSON.stringify(response);
        if (r.charCodeAt(0) === 123)
          return new Response(JSON.stringify(response), {
            headers: {
              "Content-Type": "application/json"
            }
          });
        return new Response(r);
    }
};
var mapEarlyResponse = (response, set2) => {
  if (response === undefined || response === null)
    return;
  if (response?.$passthrough)
    response = response[response.$passthrough];
  if (response?.[ELYSIA_RESPONSE]) {
    set2.status = response[ELYSIA_RESPONSE];
    response = response.response;
  }
  if (isNotEmpty(set2.headers) || set2.status !== 200 || set2.redirect || set2.cookie) {
    if (typeof set2.status === "string")
      set2.status = StatusMap[set2.status];
    if (set2.redirect) {
      set2.headers.Location = set2.redirect;
      if (!set2.status || set2.status < 300 || set2.status >= 400)
        set2.status = 302;
    }
    if (set2.cookie && isNotEmpty(set2.cookie))
      set2.headers["Set-Cookie"] = cookieToHeader(set2.cookie);
    if (set2.headers["Set-Cookie"] && Array.isArray(set2.headers["Set-Cookie"]))
      set2.headers = parseSetCookies(new Headers(set2.headers), set2.headers["Set-Cookie"]);
    switch (response?.constructor?.name) {
      case "String":
        return new Response(response, set2);
      case "Blob":
        return handleFile(response, set2);
      case "Object":
      case "Array":
        return Response.json(response, set2);
      case "ReadableStream":
        if (!set2.headers["content-type"]?.startsWith("text/event-stream"))
          set2.headers["content-type"] = "text/event-stream; charset=utf-8";
        return new Response(response, set2);
      case undefined:
        if (!response)
          return;
        return Response.json(response, set2);
      case "Response":
        const inherits = Object.assign({}, set2.headers);
        if (hasHeaderShorthand)
          set2.headers = response.headers.toJSON();
        else
          for (const [key, value2] of response.headers.entries())
            if (!(key in set2.headers))
              set2.headers[key] = value2;
        for (const key in inherits)
          response.headers.append(key, inherits[key]);
        if (response.status !== set2.status)
          set2.status = response.status;
        return response;
      case "Promise":
        return response.then((x) => {
          const r2 = mapEarlyResponse(x, set2);
          if (r2 !== undefined)
            return r2;
          return;
        });
      case "Error":
        return errorToResponse(response, set2);
      case "Function":
        return mapEarlyResponse(response(), set2);
      case "Number":
      case "Boolean":
        return new Response(response.toString(), set2);
      case "Cookie":
        if (response instanceof Cookie)
          return new Response(response.value, set2);
        return new Response(response?.toString(), set2);
      default:
        if (response instanceof Response) {
          const inherits2 = { ...set2.headers };
          if (hasHeaderShorthand)
            set2.headers = response.headers.toJSON();
          else
            for (const [key, value2] of response.headers.entries())
              if (key in set2.headers)
                set2.headers[key] = value2;
          for (const key in inherits2)
            response.headers.append(key, inherits2[key]);
          return response;
        }
        if (response instanceof Promise)
          return response.then((x) => mapEarlyResponse(x, set2));
        if (response instanceof Error)
          return errorToResponse(response, set2);
        const r = JSON.stringify(response);
        if (r.charCodeAt(0) === 123) {
          if (!set2.headers["Content-Type"])
            set2.headers["Content-Type"] = "application/json";
          return new Response(JSON.stringify(response), set2);
        }
        return new Response(r, set2);
    }
  } else
    switch (response?.constructor?.name) {
      case "String":
        return new Response(response);
      case "Blob":
        return handleFile(response, set2);
      case "Object":
      case "Array":
        return new Response(JSON.stringify(response), {
          headers: {
            "content-type": "application/json"
          }
        });
      case "ReadableStream":
        return new Response(response, {
          headers: {
            "Content-Type": "text/event-stream; charset=utf-8"
          }
        });
      case undefined:
        if (!response)
          return new Response("");
        return new Response(JSON.stringify(response), {
          headers: {
            "content-type": "application/json"
          }
        });
      case "Response":
        return response;
      case "Promise":
        return response.then((x) => {
          const r2 = mapEarlyResponse(x, set2);
          if (r2 !== undefined)
            return r2;
          return;
        });
      case "Error":
        return errorToResponse(response, set2);
      case "Function":
        return mapCompactResponse(response());
      case "Number":
      case "Boolean":
        return new Response(response.toString());
      case "Cookie":
        if (response instanceof Cookie)
          return new Response(response.value, set2);
        return new Response(response?.toString(), set2);
      default:
        if (response instanceof Response)
          return new Response(response.body, {
            headers: {
              "Content-Type": "application/json"
            }
          });
        if (response instanceof Promise)
          return response.then((x) => mapEarlyResponse(x, set2));
        if (response instanceof Error)
          return errorToResponse(response, set2);
        const r = JSON.stringify(response);
        if (r.charCodeAt(0) === 123)
          return new Response(JSON.stringify(response), {
            headers: {
              "Content-Type": "application/json"
            }
          });
        return new Response(r);
    }
};
var mapCompactResponse = (response) => {
  if (response?.$passthrough)
    response = response[response.$passthrough];
  if (response?.[ELYSIA_RESPONSE])
    return mapResponse(response.response, {
      status: response[ELYSIA_RESPONSE],
      headers: {}
    });
  switch (response?.constructor?.name) {
    case "String":
      return new Response(response);
    case "Blob":
      return handleFile(response);
    case "Object":
    case "Array":
      return new Response(JSON.stringify(response), {
        headers: {
          "content-type": "application/json"
        }
      });
    case "ReadableStream":
      return new Response(response, {
        headers: {
          "Content-Type": "text/event-stream; charset=utf-8"
        }
      });
    case undefined:
      if (!response)
        return new Response("");
      return new Response(JSON.stringify(response), {
        headers: {
          "content-type": "application/json"
        }
      });
    case "Response":
      return response;
    case "Error":
      return errorToResponse(response);
    case "Promise":
      return response.then(mapCompactResponse);
    case "Function":
      return mapCompactResponse(response());
    case "Number":
    case "Boolean":
      return new Response(response.toString());
    default:
      if (response instanceof Response)
        return new Response(response.body, {
          headers: {
            "Content-Type": "application/json"
          }
        });
      if (response instanceof Promise)
        return response.then(mapCompactResponse);
      if (response instanceof Error)
        return errorToResponse(response);
      const r = JSON.stringify(response);
      if (r.charCodeAt(0) === 123)
        return new Response(JSON.stringify(response), {
          headers: {
            "Content-Type": "application/json"
          }
        });
      return new Response(r);
  }
};
var errorToResponse = (error22, set2) => new Response(JSON.stringify({
  name: error22?.name,
  message: error22?.message,
  cause: error22?.cause
}), {
  status: set2?.status !== 200 ? set2?.status ?? 500 : 500,
  headers: set2?.headers
});
var isObject = (item) => item && typeof item === "object" && !Array.isArray(item);
var replaceUrlPath = (url, pathname) => {
  const urlObject = new URL(url);
  urlObject.pathname = pathname;
  return urlObject.toString();
};
var isClass = (v) => typeof v === "function" && /^\s*class\s+/.test(v.toString()) || v.toString().startsWith("[object ") || isNotEmpty(Object.getPrototypeOf(v));
var mergeDeep = (target, source, {
  skipKeys
} = {}) => {
  if (isObject(target) && isObject(source))
    for (const [key, value2] of Object.entries(source)) {
      if (skipKeys?.includes(key))
        continue;
      if (!isObject(value2)) {
        target[key] = value2;
        continue;
      }
      if (!(key in target)) {
        target[key] = value2;
        continue;
      }
      if (isClass(value2)) {
        target[key] = value2;
        continue;
      }
      target[key] = mergeDeep(target[key], value2);
    }
  return target;
};
var mergeCookie = (target, source) => mergeDeep(target, source, {
  skipKeys: ["properties"]
});
var mergeObjectArray = (a, b) => {
  if (!a)
    return [];
  const array3 = [...Array.isArray(a) ? a : [a]];
  const checksums = [];
  for (const item of array3) {
    if (item.$elysiaChecksum)
      checksums.push(item.$elysiaChecksum);
  }
  for (const item of Array.isArray(b) ? b : [b]) {
    if (!checksums.includes(item?.$elysiaChecksum)) {
      array3.push(item);
    }
  }
  return array3;
};
var primitiveHooks = [
  "start",
  "request",
  "parse",
  "transform",
  "resolve",
  "beforeHandle",
  "afterHandle",
  "onResponse",
  "mapResponse",
  "trace",
  "error",
  "stop",
  "body",
  "headers",
  "params",
  "query",
  "response",
  "type",
  "detail"
];
var mergeHook = (a, b) => {
  return {
    ...a,
    ...b,
    body: b?.body ?? a?.body,
    headers: b?.headers ?? a?.headers,
    params: b?.params ?? a?.params,
    query: b?.query ?? a?.query,
    response: b?.response ?? a?.response,
    type: a?.type || b?.type,
    detail: mergeDeep(b?.detail ?? {}, a?.detail ?? {}),
    parse: mergeObjectArray(a?.parse ?? [], b?.parse ?? []),
    transform: mergeObjectArray(a?.transform ?? [], b?.transform ?? []),
    beforeHandle: mergeObjectArray(a?.beforeHandle ?? [], b?.beforeHandle ?? []),
    afterHandle: mergeObjectArray(a?.afterHandle ?? [], b?.afterHandle ?? []),
    onResponse: mergeObjectArray(a?.onResponse ?? [], b?.onResponse ?? []),
    mapResponse: mergeObjectArray(a?.mapResponse ?? [], b?.mapResponse ?? []),
    trace: mergeObjectArray(a?.trace ?? [], b?.trace ?? []),
    error: mergeObjectArray(a?.error ?? [], b?.error ?? [])
  };
};
var getSchemaValidator = (s, {
  models = {},
  additionalProperties = false,
  dynamic = false
}) => {
  if (!s)
    return;
  if (typeof s === "string" && !(s in models))
    return;
  const schema3 = typeof s === "string" ? models[s] : s;
  if (schema3.type === "object" && "additionalProperties" in schema3 === false)
    schema3.additionalProperties = additionalProperties;
  if (dynamic)
    return {
      schema: schema3,
      references: "",
      checkFunc: () => {
      },
      code: "",
      Check: (value2) => exports_value2.Check(schema3, value2),
      Errors: (value2) => exports_value2.Errors(schema3, value2),
      Code: () => ""
    };
  return TypeCompiler.Compile(schema3, Object.values(models));
};
var getResponseSchemaValidator = (s, {
  models = {},
  additionalProperties = false,
  dynamic = false
}) => {
  if (!s)
    return;
  if (typeof s === "string" && !(s in models))
    return;
  const maybeSchemaOrRecord = typeof s === "string" ? models[s] : s;
  const compile = (schema3, references) => {
    if (dynamic)
      return {
        schema: schema3,
        references: "",
        checkFunc: () => {
        },
        code: "",
        Check: (value2) => exports_value2.Check(schema3, value2),
        Errors: (value2) => exports_value2.Errors(schema3, value2),
        Code: () => ""
      };
    return TypeCompiler.Compile(schema3, references);
  };
  if (Kind in maybeSchemaOrRecord) {
    if ("additionalProperties" in maybeSchemaOrRecord === false)
      maybeSchemaOrRecord.additionalProperties = additionalProperties;
    return {
      200: compile(maybeSchemaOrRecord, Object.values(models))
    };
  }
  const record3 = {};
  Object.keys(maybeSchemaOrRecord).forEach((status) => {
    const maybeNameOrSchema = maybeSchemaOrRecord[+status];
    if (typeof maybeNameOrSchema === "string") {
      if (maybeNameOrSchema in models) {
        const schema3 = models[maybeNameOrSchema];
        schema3.type === "object" && "additionalProperties" in schema3;
        record3[+status] = Kind in schema3 ? compile(schema3, Object.values(models)) : schema3;
      }
      return;
    }
    if (maybeNameOrSchema.type === "object" && "additionalProperties" in maybeNameOrSchema === false)
      maybeNameOrSchema.additionalProperties = additionalProperties;
    record3[+status] = Kind in maybeNameOrSchema ? compile(maybeNameOrSchema, Object.values(models)) : maybeNameOrSchema;
  });
  return record3;
};
var isBun = typeof Bun !== "undefined";
var hasHash = isBun && typeof Bun.hash === "function";
var checksum = (s) => {
  if (hasHash)
    return Bun.hash(s);
  let h = 9;
  for (let i = 0;i < s.length; )
    h = Math.imul(h ^ s.charCodeAt(i++), 9 ** 9);
  return h = h ^ h >>> 9;
};
var mergeLifeCycle = (a, b, checksum2) => {
  const injectChecksum = (x) => {
    if (checksum2 && !x.$elysiaChecksum)
      x.$elysiaChecksum = checksum2;
    return x;
  };
  return {
    ...a,
    ...b,
    start: mergeObjectArray(a.start, ("start" in b ? b.start ?? [] : []).map(injectChecksum)),
    request: mergeObjectArray(a.request, ("request" in b ? b.request ?? [] : []).map(injectChecksum)),
    parse: mergeObjectArray(a.parse, "parse" in b ? b?.parse ?? [] : []).map(injectChecksum),
    transform: mergeObjectArray(a.transform, (b?.transform ?? []).map(injectChecksum)),
    beforeHandle: mergeObjectArray(a.beforeHandle, (b?.beforeHandle ?? []).map(injectChecksum)),
    afterHandle: mergeObjectArray(a.afterHandle, (b?.afterHandle ?? []).map(injectChecksum)),
    mapResponse: mergeObjectArray(a.mapResponse, (b?.mapResponse ?? []).map(injectChecksum)),
    onResponse: mergeObjectArray(a.onResponse, (b?.onResponse ?? []).map(injectChecksum)),
    trace: a.trace,
    error: mergeObjectArray(a.error, (b?.error ?? []).map(injectChecksum)),
    stop: mergeObjectArray(a.stop, ("stop" in b ? b.stop ?? [] : []).map(injectChecksum))
  };
};
var asGlobal = (fn, inject = true) => {
  if (!fn)
    return fn;
  if (typeof fn === "function") {
    if (inject)
      fn.$elysiaHookType = "global";
    else
      fn.$elysiaHookType = undefined;
    return fn;
  }
  return fn.map((x) => {
    if (inject)
      x.$elysiaHookType = "global";
    else
      x.$elysiaHookType = undefined;
    return x;
  });
};
var filterGlobal = (fn) => {
  if (!fn)
    return fn;
  if (typeof fn === "function") {
    return fn.$elysiaHookType === "global" ? fn : undefined;
  }
  return fn.filter((x) => x.$elysiaHookType === "global");
};
var filterGlobalHook = (hook) => {
  return {
    ...hook,
    type: hook?.type,
    detail: hook?.detail,
    parse: filterGlobal(hook?.parse),
    transform: filterGlobal(hook?.transform),
    beforeHandle: filterGlobal(hook?.beforeHandle),
    afterHandle: filterGlobal(hook?.afterHandle),
    onResponse: filterGlobal(hook?.onResponse),
    error: filterGlobal(hook?.error)
  };
};
var StatusMap = {
  Continue: 100,
  "Switching Protocols": 101,
  Processing: 102,
  "Early Hints": 103,
  OK: 200,
  Created: 201,
  Accepted: 202,
  "Non-Authoritative Information": 203,
  "No Content": 204,
  "Reset Content": 205,
  "Partial Content": 206,
  "Multi-Status": 207,
  "Already Reported": 208,
  "Multiple Choices": 300,
  "Moved Permanently": 301,
  Found: 302,
  "See Other": 303,
  "Not Modified": 304,
  "Temporary Redirect": 307,
  "Permanent Redirect": 308,
  "Bad Request": 400,
  Unauthorized: 401,
  "Payment Required": 402,
  Forbidden: 403,
  "Not Found": 404,
  "Method Not Allowed": 405,
  "Not Acceptable": 406,
  "Proxy Authentication Required": 407,
  "Request Timeout": 408,
  Conflict: 409,
  Gone: 410,
  "Length Required": 411,
  "Precondition Failed": 412,
  "Payload Too Large": 413,
  "URI Too Long": 414,
  "Unsupported Media Type": 415,
  "Range Not Satisfiable": 416,
  "Expectation Failed": 417,
  "I'm a teapot": 418,
  "Misdirected Request": 421,
  "Unprocessable Content": 422,
  Locked: 423,
  "Failed Dependency": 424,
  "Too Early": 425,
  "Upgrade Required": 426,
  "Precondition Required": 428,
  "Too Many Requests": 429,
  "Request Header Fields Too Large": 431,
  "Unavailable For Legal Reasons": 451,
  "Internal Server Error": 500,
  "Not Implemented": 501,
  "Bad Gateway": 502,
  "Service Unavailable": 503,
  "Gateway Timeout": 504,
  "HTTP Version Not Supported": 505,
  "Variant Also Negotiates": 506,
  "Insufficient Storage": 507,
  "Loop Detected": 508,
  "Not Extended": 510,
  "Network Authentication Required": 511
};
var signCookie = async (val, secret) => {
  if (typeof val !== "string")
    throw new TypeError("Cookie value must be provided as a string.");
  if (secret === null)
    throw new TypeError("Secret key must be provided.");
  const encoder = new TextEncoder;
  const secretKey = await crypto.subtle.importKey("raw", encoder.encode(secret), { name: "HMAC", hash: "SHA-256" }, false, ["sign"]);
  const hmacBuffer = await crypto.subtle.sign("HMAC", secretKey, encoder.encode(val));
  const hmacArray = Array.from(new Uint8Array(hmacBuffer));
  const digest = btoa(String.fromCharCode(...hmacArray));
  return `${val}.${digest.replace(/=+$/, "")}`;
};
var unsignCookie = async (input, secret) => {
  if (typeof input !== "string")
    throw new TypeError("Signed cookie string must be provided.");
  if (secret === null)
    throw new TypeError("Secret key must be provided.");
  const tentativeValue = input.slice(0, input.lastIndexOf("."));
  const expectedInput = await signCookie(tentativeValue, secret);
  return expectedInput === input ? tentativeValue : false;
};
var traceBackMacro = (extension, property, hooks = property) => {
  for (const [key, value2] of Object.entries(property ?? {})) {
    if (primitiveHooks.includes(key) || !(key in extension))
      continue;
    if (typeof extension[key] === "function") {
      extension[key](value2);
    } else if (typeof extension[key] === "object")
      traceBackMacro(extension[key], value2, hooks);
  }
};
var isNumericString = (message) => {
  if (message.length < 16)
    return message.trim().length !== 0 && !Number.isNaN(Number(message));
  if (message.length === 16) {
    const numVal = Number(message);
    if (numVal.toString() === message)
      return message.trim().length !== 0 && !Number.isNaN(numVal);
  }
  return false;
};
var env = typeof Bun !== "undefined" ? Bun.env : typeof process !== "undefined" ? process?.env : undefined;
var ERROR_CODE = Symbol("ElysiaErrorCode");
var ELYSIA_RESPONSE = Symbol("ElysiaResponse");
var isProduction = (env?.NODE_ENV ?? env?.ENV) === "production";
var InternalServerError = class extends Error {
  constructor(message) {
    super(message ?? "INTERNAL_SERVER_ERROR");
    this.code = "INTERNAL_SERVER_ERROR";
    this.status = 500;
  }
};
var NotFoundError = class extends Error {
  constructor(message) {
    super(message ?? "NOT_FOUND");
    this.code = "NOT_FOUND";
    this.status = 404;
  }
};
var InvalidCookieSignature = class extends Error {
  constructor(key, message) {
    super(message ?? `"${key}" has invalid cookie signature`);
    this.key = key;
    this.code = "INVALID_COOKIE_SIGNATURE";
    this.status = 400;
  }
};
var ValidationError = class _ValidationError extends Error {
  constructor(type3, validator, value2) {
    const error22 = isProduction ? undefined : ("Errors" in validator) ? validator.Errors(value2).First() : exports_value2.Errors(validator, value2).First();
    const customError = error22?.schema.error ? typeof error22.schema.error === "function" ? error22.schema.error(type3, validator, value2) : error22.schema.error : undefined;
    const accessor = error22?.path?.slice(1) || "root";
    let message = "";
    if (customError) {
      message = typeof customError === "object" ? JSON.stringify(customError) : customError + "";
    } else if (isProduction) {
      message = JSON.stringify({
        type: type3,
        message: error22?.message
      });
    } else {
      message = JSON.stringify({
        type: type3,
        at: accessor,
        message: error22?.message,
        expected: exports_value2.Create(validator.schema),
        found: value2,
        errors: [...validator.Errors(value2)]
      }, null, 2);
    }
    super(message);
    this.type = type3;
    this.validator = validator;
    this.value = value2;
    this.code = "VALIDATION";
    this.status = 400;
    Object.setPrototypeOf(this, _ValidationError.prototype);
  }
  get all() {
    return [...this.validator.Errors(this.value)];
  }
  static simplifyModel(validator) {
    const model = "schema" in validator ? validator.schema : validator;
    try {
      return exports_value2.Create(model);
    } catch {
      return model;
    }
  }
  get model() {
    return _ValidationError.simplifyModel(this.validator);
  }
  toResponse(headers) {
    return new Response(this.message, {
      status: 400,
      headers
    });
  }
};
var websocket = {
  open(ws) {
    ws.data.open?.(ws);
  },
  message(ws, message) {
    ws.data.message?.(ws, message);
  },
  drain(ws) {
    ws.data.drain?.(ws);
  },
  close(ws, code, reason) {
    ws.data.close?.(ws, code, reason);
  }
};
var ElysiaWS = class {
  constructor(raw, data) {
    this.raw = raw;
    this.data = data;
    this.validator = raw.data.validator;
    if (raw.data.id) {
      this.id = raw.data.id;
    } else {
      const array3 = new Uint32Array(1);
      crypto.getRandomValues(array3);
      this.id = array3[0].toString();
    }
  }
  get id() {
    return this.raw.data.id;
  }
  set id(newID) {
    this.raw.data.id = newID;
  }
  get publish() {
    return (topic, data = undefined, compress) => {
      if (this.validator?.Check(data) === false)
        throw new ValidationError("message", this.validator, data);
      if (typeof data === "object")
        data = JSON.stringify(data);
      this.raw.publish(topic, data, compress);
      return this;
    };
  }
  get send() {
    return (data) => {
      if (this.validator?.Check(data) === false)
        throw new ValidationError("message", this.validator, data);
      if (Buffer.isBuffer(data)) {
        this.raw.send(data);
        return this;
      }
      if (typeof data === "object")
        data = JSON.stringify(data);
      this.raw.send(data);
      return this;
    };
  }
  get subscribe() {
    return (room) => {
      this.raw.subscribe(room);
      return this;
    };
  }
  get unsubscribe() {
    return (room) => {
      this.raw.unsubscribe(room);
      return this;
    };
  }
  get cork() {
    return (callback) => {
      this.raw.cork(callback);
      return this;
    };
  }
  get close() {
    return () => {
      this.raw.close();
      return this;
    };
  }
  get terminate() {
    return this.raw.terminate.bind(this.raw);
  }
  get isSubscribed() {
    return this.raw.isSubscribed.bind(this.raw);
  }
  get remoteAddress() {
    return this.raw.remoteAddress;
  }
};
var headersHasToJSON = new Headers().toJSON;
var findAliases = new RegExp(` (\\w+) = context`, "g");
var requestId = { value: 0 };
var createReport = ({
  hasTrace,
  hasTraceSet = false,
  addFn,
  condition = {}
}) => {
  if (hasTrace) {
    addFn(`
const reporter = getReporter()
`);
    return (event, {
      name,
      attribute = "",
      unit = 0
    } = {}) => {
      const dotIndex = event.indexOf(".");
      const isGroup = dotIndex === -1;
      if (event !== "request" && event !== "response" && !condition[isGroup ? event : event.slice(0, dotIndex)])
        return () => {
          if (hasTraceSet && event === "afterHandle")
            addFn(`
await traceDone
`);
        };
      if (isGroup)
        name ||= event;
      else
        name ||= "anonymous";
      addFn("\n" + `reporter.emit('event', {
					id,
					event: '${event}',
					type: 'begin',
					name: '${name}',
					time: performance.now(),
					${isGroup ? `unit: ${unit},` : ""}
					${attribute}
				})`.replace(/(\t| |\n)/g, "") + "\n");
      let handled = false;
      return () => {
        if (handled)
          return;
        handled = true;
        addFn("\n" + `reporter.emit('event', {
							id,
							event: '${event}',
							type: 'end',
							time: performance.now()
						})`.replace(/(\t| |\n)/g, "") + "\n");
        if (hasTraceSet && event === "afterHandle")
          addFn(`
await traceDone
`);
      };
    };
  } else {
    return () => () => {
    };
  }
};
var hasReturn = (fnLiteral) => {
  const parenthesisEnd = fnLiteral.indexOf(")");
  if (fnLiteral.charCodeAt(parenthesisEnd + 2) === 61 && fnLiteral.charCodeAt(parenthesisEnd + 5) !== 123) {
    return true;
  }
  return fnLiteral.includes("return");
};
var composeValidationFactory = (hasErrorHandler, {
  injectResponse = ""
} = {}) => ({
  composeValidation: (type3, value2 = `c.${type3}`) => hasErrorHandler ? `c.set.status = 400; throw new ValidationError(
'${type3}',
${type3},
${value2}
)` : `c.set.status = 400; return new ValidationError(
	'${type3}',
	${type3},
	${value2}
).toResponse(c.set.headers)`,
  composeResponseValidation: (name = "r") => {
    const returnError = hasErrorHandler ? `throw new ValidationError(
'response',
response[c.set.status],
${name}
)` : `return new ValidationError(
'response',
response[c.set.status],
${name}
).toResponse(c.set.headers)`;
    return `
${injectResponse}
		if(!(${name} instanceof Response) && response[c.set.status]?.Check(${name}) === false) {
	if(!(response instanceof Error))
		${returnError}
}
`;
  }
});
var isFnUse = (keyword, fnLiteral) => {
  if (fnLiteral.startsWith("[object "))
    return false;
  fnLiteral = fnLiteral.trimStart();
  fnLiteral = fnLiteral.replaceAll(/^async /g, "");
  if (/^(\w+)\(/g.test(fnLiteral))
    fnLiteral = fnLiteral.slice(fnLiteral.indexOf("("));
  const argument = fnLiteral.charCodeAt(0) === 40 || fnLiteral.startsWith("function") ? fnLiteral.slice(fnLiteral.indexOf("(") + 1, fnLiteral.indexOf(")")) : fnLiteral.slice(0, fnLiteral.indexOf("=") - 1);
  if (argument === "")
    return false;
  const restIndex = argument.charCodeAt(0) === 123 ? argument.indexOf("...") : -1;
  if (argument.charCodeAt(0) === 123) {
    if (argument.includes(keyword))
      return true;
    if (restIndex === -1)
      return false;
  }
  if (fnLiteral.match(new RegExp(`${argument}(.${keyword}|\\["${keyword}"\\])`))) {
    return true;
  }
  const restAlias = restIndex !== -1 ? argument.slice(restIndex + 3, argument.indexOf(" ", restIndex + 3)) : undefined;
  if (fnLiteral.match(new RegExp(`${restAlias}(.${keyword}|\\["${keyword}"\\])`)))
    return true;
  const aliases = [argument];
  if (restAlias)
    aliases.push(restAlias);
  for (const found of fnLiteral.matchAll(findAliases))
    aliases.push(found[1]);
  const destructuringRegex = new RegExp(`{.*?} = (${aliases.join("|")})`, "g");
  for (const [params] of fnLiteral.matchAll(destructuringRegex))
    if (params.includes(`{ ${keyword}`) || params.includes(`, ${keyword}`))
      return true;
  return false;
};
var isContextPassToFunction = (fnLiteral) => {
  fnLiteral = fnLiteral.trimStart();
  if (fnLiteral.startsWith("[object"))
    return false;
  fnLiteral = fnLiteral.replaceAll(/^async /g, "");
  if (/^(\w+)\(/g.test(fnLiteral))
    fnLiteral = fnLiteral.slice(fnLiteral.indexOf("("));
  const argument = fnLiteral.charCodeAt(0) === 40 || fnLiteral.startsWith("function") ? fnLiteral.slice(fnLiteral.indexOf("(") + 1, fnLiteral.indexOf(")")) : fnLiteral.slice(0, fnLiteral.indexOf("=") - 1);
  if (argument === "")
    return false;
  const restIndex = argument.charCodeAt(0) === 123 ? argument.indexOf("...") : -1;
  const restAlias = restIndex !== -1 ? argument.slice(restIndex + 3, argument.indexOf(" ", restIndex + 3)) : undefined;
  const aliases = [argument];
  if (restAlias)
    aliases.push(restAlias);
  for (const found of fnLiteral.matchAll(findAliases))
    aliases.push(found[1]);
  for (const alias of aliases)
    if (new RegExp(`\\b\\w+\\([^)]*\\b${alias}\\b[^)]*\\)`).test(fnLiteral))
      return true;
  const destructuringRegex = new RegExp(`{.*?} = (${aliases.join("|")})`, "g");
  for (const [renamed] of fnLiteral.matchAll(destructuringRegex))
    if (new RegExp(`\\b\\w+\\([^)]*\\b${renamed}\\b[^)]*\\)`).test(fnLiteral))
      return true;
  return false;
};
var KindSymbol = Symbol.for("TypeBox.Kind");
var hasType = (type3, schema3) => {
  if (!schema3)
    return;
  if (KindSymbol in schema3 && schema3[KindSymbol] === type3)
    return true;
  if (schema3.type === "object") {
    const properties = schema3.properties;
    for (const key of Object.keys(properties)) {
      const property = properties[key];
      if (property.type === "object") {
        if (hasType(type3, property))
          return true;
      } else if (property.anyOf) {
        for (let i = 0;i < property.anyOf.length; i++)
          if (hasType(type3, property.anyOf[i]))
            return true;
      }
      if (KindSymbol in property && property[KindSymbol] === type3)
        return true;
    }
    return false;
  }
  return schema3.properties && KindSymbol in schema3.properties && schema3.properties[KindSymbol] === type3;
};
var hasProperty = (expectedProperty, schema3) => {
  if (!schema3)
    return;
  if (schema3.type === "object") {
    const properties = schema3.properties;
    if (!properties)
      return false;
    for (const key of Object.keys(properties)) {
      const property = properties[key];
      if (expectedProperty in property)
        return true;
      if (property.type === "object") {
        if (hasProperty(expectedProperty, property))
          return true;
      } else if (property.anyOf) {
        for (let i = 0;i < property.anyOf.length; i++) {
          if (hasProperty(expectedProperty, property.anyOf[i]))
            return true;
        }
      }
    }
    return false;
  }
  return expectedProperty in schema3;
};
var TransformSymbol = Symbol.for("TypeBox.Transform");
var hasTransform = (schema3) => {
  if (!schema3)
    return;
  if (schema3.type === "object" && schema3.properties) {
    const properties = schema3.properties;
    for (const key of Object.keys(properties)) {
      const property = properties[key];
      if (property.type === "object") {
        if (hasTransform(property))
          return true;
      } else if (property.anyOf) {
        for (let i = 0;i < property.anyOf.length; i++)
          if (hasTransform(property.anyOf[i]))
            return true;
      }
      const hasTransformSymbol = TransformSymbol in property;
      if (hasTransformSymbol)
        return true;
    }
    return false;
  }
  return TransformSymbol in schema3 || schema3.properties && TransformSymbol in schema3.properties;
};
var getUnionedType = (validator) => {
  if (!validator)
    return;
  const schema3 = validator?.schema;
  if (schema3 && "anyOf" in schema3) {
    let foundDifference = false;
    const type3 = schema3.anyOf[0].type;
    for (const validator2 of schema3.anyOf) {
      if (validator2.type !== type3) {
        foundDifference = true;
        break;
      }
    }
    if (!foundDifference)
      return type3;
  }
  return validator.schema?.type;
};
var matchFnReturn = /(?:return|=>) \S+\(/g;
var isAsync = (fn) => {
  if (fn.constructor.name === "AsyncFunction")
    return true;
  const literal3 = fn.toString();
  if (literal3.includes("=> response.clone("))
    return false;
  return !!literal3.match(matchFnReturn);
};
var getDestructureQuery = (fn) => {
  if (!fn.includes("query: {") || fn.includes("query,") || fn.includes("query }"))
    return false;
  const start = fn.indexOf("query: {");
  fn = fn.slice(start + 9);
  fn = fn.slice(0, fn.indexOf("}"));
  return fn.split(",").map((x) => {
    const indexOf = x.indexOf(":");
    if (indexOf === -1)
      return x.trim();
    return x.slice(0, indexOf).trim();
  });
};
var composeHandler = ({
  path,
  method,
  hooks,
  validator,
  handler,
  handleError,
  definitions,
  schema: schema3,
  onRequest,
  config,
  getReporter,
  setHeader
}) => {
  const hasErrorHandler = config.forceErrorEncapsulation || hooks.error.length > 0 || typeof Bun === "undefined" || hooks.onResponse.length > 0 || !!hooks.trace.length;
  const isHandleFn = typeof handler === "function";
  const handle = isHandleFn ? `handler(c)` : `handler`;
  const handleResponse = hooks.onResponse.length ? `
;(async () => {${hooks.onResponse.map((_, i) => `await res${i}(c)`).join(";")}})();
` : "";
  const traceLiteral = hooks.trace.map((x) => x.toString());
  let hasUnknownContext = false;
  if (isHandleFn && isContextPassToFunction(handler.toString()))
    hasUnknownContext = true;
  if (!hasUnknownContext)
    for (const [key, value2] of Object.entries(hooks)) {
      if (!Array.isArray(value2) || !value2.length || ![
        "parse",
        "transform",
        "beforeHandle",
        "afterHandle",
        "onResponse"
      ].includes(key))
        continue;
      for (const handle2 of value2) {
        if (typeof handle2 !== "function")
          continue;
        if (isContextPassToFunction(handle2.toString())) {
          hasUnknownContext = true;
          break;
        }
      }
      if (hasUnknownContext)
        break;
    }
  const traceConditions = {
    parse: traceLiteral.some((x) => isFnUse("parse", x)),
    transform: traceLiteral.some((x) => isFnUse("transform", x)),
    handle: traceLiteral.some((x) => isFnUse("handle", x)),
    beforeHandle: traceLiteral.some((x) => isFnUse("beforeHandle", x)),
    afterHandle: traceLiteral.some((x) => isFnUse("afterHandle", x)),
    error: hasErrorHandler || traceLiteral.some((x) => isFnUse("error", x))
  };
  const hasTrace = hooks.trace.length > 0;
  let fnLiteral = "";
  const lifeCycleLiteral = validator || method !== "GET" && method !== "HEAD" ? [
    handler,
    ...hooks.transform,
    ...hooks.beforeHandle,
    ...hooks.afterHandle,
    ...hooks.mapResponse
  ].map((x) => typeof x === "function" ? x.toString() : `${x}`) : [];
  const hasBody = method !== "GET" && method !== "HEAD" && (hasUnknownContext || hooks.type !== "none" && (!!validator.body || !!hooks.type || lifeCycleLiteral.some((fn) => isFnUse("body", fn))));
  const hasHeaders = hasUnknownContext || validator.headers || lifeCycleLiteral.some((fn) => isFnUse("headers", fn)) || setHeader && Object.keys(setHeader).length;
  const hasCookie = hasUnknownContext || !!validator.cookie || lifeCycleLiteral.some((fn) => isFnUse("cookie", fn));
  const cookieMeta = validator?.cookie?.schema;
  let encodeCookie = "";
  if (cookieMeta?.sign) {
    if (!cookieMeta.secrets)
      throw new Error(`t.Cookie required secret which is not set in (${method}) ${path}.`);
    const secret = !cookieMeta.secrets ? undefined : typeof cookieMeta.secrets === "string" ? cookieMeta.secrets : cookieMeta.secrets[0];
    encodeCookie += `const _setCookie = c.set.cookie
		if(_setCookie) {`;
    if (cookieMeta.sign === true) {
      encodeCookie += `for(const [key, cookie] of Object.entries(_setCookie)) {
				c.set.cookie[key].value = await signCookie(cookie.value, '${secret}')
			}`;
    } else
      for (const name of cookieMeta.sign) {
        encodeCookie += `if(_setCookie['${name}']?.value) { c.set.cookie['${name}'].value = await signCookie(_setCookie['${name}'].value, '${secret}') }
`;
      }
    encodeCookie += "}\n";
  }
  const { composeValidation, composeResponseValidation } = composeValidationFactory(hasErrorHandler);
  if (hasHeaders) {
    fnLiteral += headersHasToJSON ? `c.headers = c.request.headers.toJSON()
` : `c.headers = {}
                for (const [key, value] of c.request.headers.entries())
					c.headers[key] = value
				`;
  }
  if (hasCookie) {
    const get = (name, defaultValue) => {
      const value2 = cookieMeta?.[name] ?? defaultValue;
      if (!value2)
        return typeof defaultValue === "string" ? `${name}: "${defaultValue}",` : `${name}: ${defaultValue},`;
      if (typeof value2 === "string")
        return `${name}: '${value2}',`;
      if (value2 instanceof Date)
        return `${name}: new Date(${value2.getTime()}),`;
      return `${name}: ${value2},`;
    };
    const options = cookieMeta ? `{
			secret: ${cookieMeta.secrets !== undefined ? typeof cookieMeta.secrets === "string" ? `'${cookieMeta.secrets}'` : "[" + cookieMeta.secrets.reduce((a, b) => a + `'${b}',`, "") + "]" : "undefined"},
			sign: ${cookieMeta.sign === true ? true : cookieMeta.sign !== undefined ? "[" + cookieMeta.sign.reduce((a, b) => a + `'${b}',`, "") + "]" : "undefined"},
			${get("domain")}
			${get("expires")}
			${get("httpOnly")}
			${get("maxAge")}
			${get("path", "/")}
			${get("priority")}
			${get("sameSite")}
			${get("secure")}
		}` : "undefined";
    if (hasHeaders)
      fnLiteral += `
c.cookie = await parseCookie(c.set, c.headers.cookie, ${options})
`;
    else
      fnLiteral += `
c.cookie = await parseCookie(c.set, c.request.headers.get('cookie'), ${options})
`;
  }
  const hasQuery = hasUnknownContext || validator.query || lifeCycleLiteral.some((fn) => isFnUse("query", fn));
  if (hasQuery) {
    let destructured = [];
    let referenceFullQuery = false;
    if (validator.query && validator.query.schema.type === "object") {
      destructured = Object.keys(validator.query.schema.properties);
    } else
      for (const event of lifeCycleLiteral) {
        const queries = getDestructureQuery(event);
        if (!queries) {
          referenceFullQuery = true;
          continue;
        }
        for (const query of queries)
          if (destructured.indexOf(query) === -1)
            destructured.push(query);
      }
    if (!referenceFullQuery && destructured.length) {
      fnLiteral += `
			let requestUrl = c.request.url.slice(c.qi + 1)
			if(requestUrl.includes('+')) requestUrl = requestUrl.replaceAll('+', ' ')

			if(c.qi !== -1) {	
				const url = decodeURIComponent(requestUrl)
				let memory = 0

				${destructured.map((name, index) => `
						memory = url.indexOf('${name}=')

						const a${index} = memory === -1 ? undefined : url.slice(memory = memory + ${name.length + 1}, (memory = url.indexOf('&', memory)) === -1 ? undefined : memory)`).join("\n")}

				c.query = {
					${destructured.map((name, index) => `'${name}': a${index}`).join(", ")}
				}
			} else {
				c.query = {}
			}`;
    } else {
      fnLiteral += `c.query = c.qi !== -1 ? parseQuery(decodeURIComponent(c.request.url.slice(c.qi + 1))) : {}`;
    }
  }
  const traceLiterals = hooks.trace.map((x) => x.toString());
  const hasTraceSet = traceLiterals.some((fn) => isFnUse("set", fn) || isContextPassToFunction(fn));
  hasUnknownContext || hooks.trace.some((fn) => isFnUse("set", fn.toString()));
  const hasSet = setHeader && Object.keys(setHeader).length || hasTraceSet || hasCookie || lifeCycleLiteral.some((fn) => isFnUse("set", fn)) || onRequest.some((fn) => isFnUse("set", fn.toString()));
  if (hasTrace)
    fnLiteral += "\nconst id = c.$$requestId\n";
  const report = createReport({
    hasTrace,
    hasTraceSet,
    condition: traceConditions,
    addFn: (word) => {
      fnLiteral += word;
    }
  });
  fnLiteral += hasErrorHandler ? "\n try {\n" : "";
  if (hasTraceSet) {
    fnLiteral += `
const traceDone = Promise.all([`;
    for (let i = 0;i < hooks.trace.length; i++) {
      fnLiteral += `new Promise(r => { reporter.once(\`res\${id}.${i}\`, r) }),`;
    }
    fnLiteral += `])
`;
  }
  const isAsyncHandler = typeof handler === "function" && isAsync(handler);
  const maybeAsync = hasCookie || hasBody || hasTraceSet || isAsyncHandler || !!hooks.mapResponse.length || hooks.parse.length > 0 || hooks.afterHandle.some(isAsync) || hooks.beforeHandle.some(isAsync) || hooks.transform.some(isAsync);
  const endParse = report("parse", {
    unit: hooks.parse.length
  });
  if (hasBody) {
    const type3 = getUnionedType(validator?.body);
    if (hooks.type && !Array.isArray(hooks.type)) {
      if (hooks.type) {
        switch (hooks.type) {
          case "json":
          case "application/json":
            fnLiteral += `c.body = await c.request.json()
`;
            break;
          case "text":
          case "text/plain":
            fnLiteral += `c.body = await c.request.text()
`;
            break;
          case "urlencoded":
          case "application/x-www-form-urlencoded":
            fnLiteral += `c.body = parseQuery(await c.request.text())
`;
            break;
          case "arrayBuffer":
          case "application/octet-stream":
            fnLiteral += `c.body = await c.request.arrayBuffer()
`;
            break;
          case "formdata":
          case "multipart/form-data":
            fnLiteral += `c.body = {}

						const form = await c.request.formData()
						for (const key of form.keys()) {
							if (c.body[key])
								continue

							const value = form.getAll(key)
							if (value.length === 1)
								c.body[key] = value[0]
							else c.body[key] = value
						}
`;
            break;
        }
      }
      if (hooks.parse.length)
        fnLiteral += "}}";
    } else {
      const getAotParser = () => {
        if (hooks.parse.length && type3 && !Array.isArray(hooks.type)) {
          const schema22 = validator?.body?.schema;
          switch (type3) {
            case "object":
              if (hasType("File", schema22) || hasType("Files", schema22))
                return `c.body = {}

								const form = await c.request.formData()
								for (const key of form.keys()) {
									if (c.body[key])
										continue

									const value = form.getAll(key)
									if (value.length === 1)
										c.body[key] = value[0]
									else c.body[key] = value
								}`;
              break;
            default:
              break;
          }
        }
      };
      const aotParse = getAotParser();
      if (aotParse)
        fnLiteral += aotParse;
      else {
        fnLiteral += "\n";
        fnLiteral += hasHeaders ? `let contentType = c.headers['content-type']` : `let contentType = c.request.headers.get('content-type')`;
        fnLiteral += `
				if (contentType) {
					const index = contentType.indexOf(';')
					if (index !== -1) contentType = contentType.substring(0, index)
`;
        if (hooks.parse.length) {
          fnLiteral += `let used = false
`;
          const endReport = report("parse", {
            unit: hooks.parse.length
          });
          for (let i = 0;i < hooks.parse.length; i++) {
            const endUnit = report("parse.unit", {
              name: hooks.parse[i].name
            });
            const name = `bo${i}`;
            if (i !== 0)
              fnLiteral += `if(!used) {
`;
            fnLiteral += `let ${name} = parse[${i}](c, contentType)
`;
            fnLiteral += `if(${name} instanceof Promise) ${name} = await ${name}
`;
            fnLiteral += `if(${name} !== undefined) { c.body = ${name}; used = true }
`;
            endUnit();
            if (i !== 0)
              fnLiteral += `}`;
          }
          endReport();
        }
        if (hooks.parse.length)
          fnLiteral += `if (!used)`;
        fnLiteral += `
				switch (contentType) {
					case 'application/json':
						c.body = await c.request.json()
						break

					case 'text/plain':
						c.body = await c.request.text()
						break

					case 'application/x-www-form-urlencoded':
						c.body = parseQuery(await c.request.text())
						break

					case 'application/octet-stream':
						c.body = await c.request.arrayBuffer();
						break

					case 'multipart/form-data':
						c.body = {}

						const form = await c.request.formData()
						for (const key of form.keys()) {
							if (c.body[key])
								continue

							const value = form.getAll(key)
							if (value.length === 1)
								c.body[key] = value[0]
							else c.body[key] = value
						}

						break
					}
`;
        fnLiteral += "}\n";
      }
    }
    fnLiteral += "\n";
  }
  endParse();
  if (hooks?.transform) {
    const endTransform = report("transform", {
      unit: hooks.transform.length
    });
    for (let i = 0;i < hooks.transform.length; i++) {
      const transform4 = hooks.transform[i];
      const endUnit = report("transform.unit", {
        name: transform4.name
      });
      if (transform4.$elysia === "derive")
        fnLiteral += isAsync(transform4) ? `Object.assign(c, await transform[${i}](c));` : `Object.assign(c, transform[${i}](c));`;
      else
        fnLiteral += isAsync(transform4) ? `await transform[${i}](c);` : `transform[${i}](c);`;
      endUnit();
    }
    endTransform();
  }
  if (validator) {
    fnLiteral += "\n";
    if (validator.headers) {
      if (hasProperty("default", validator.headers.params))
        for (const [key, value2] of Object.entries(exports_value2.Default(validator.headers.schema, {}))) {
          const parsed = typeof value2 === "object" ? JSON.stringify(value2) : `'${value2}'`;
          if (parsed)
            fnLiteral += `c.headers['${key}'] ??= ${parsed}
`;
        }
      fnLiteral += `if(headers.Check(c.headers) === false) {
				${composeValidation("headers")}
			}`;
      if (hasTransform(validator.headers.schema))
        fnLiteral += `
c.headers = headers.Decode(c.headers)
`;
    }
    if (validator.params) {
      if (hasProperty("default", validator.params.schema))
        for (const [key, value2] of Object.entries(exports_value2.Default(validator.params.schema, {}))) {
          const parsed = typeof value2 === "object" ? JSON.stringify(value2) : `'${value2}'`;
          if (parsed)
            fnLiteral += `c.params['${key}'] ??= ${parsed}
`;
        }
      fnLiteral += `if(params.Check(c.params) === false) {
				${composeValidation("params")}
			}`;
      if (hasTransform(validator.params.schema))
        fnLiteral += `
c.params = params.Decode(c.params)
`;
    }
    if (validator.query) {
      if (hasProperty("default", validator.query.schema))
        for (const [key, value2] of Object.entries(exports_value2.Default(validator.query.schema, {}))) {
          const parsed = typeof value2 === "object" ? JSON.stringify(value2) : `'${value2}'`;
          if (parsed)
            fnLiteral += `c.query['${key}'] ??= ${parsed}
`;
        }
      fnLiteral += `if(query.Check(c.query) === false) {
				${composeValidation("query")}
			}`;
      if (hasTransform(validator.query.schema))
        fnLiteral += `
c.query = query.Decode(Object.assign({}, c.query))
`;
    }
    if (validator.body) {
      if (hasProperty("default", validator.body.schema))
        fnLiteral += `if(body.Check(c.body) === false) {
    				c.body = Object.assign(${JSON.stringify(exports_value2.Default(validator.body.schema, null) ?? {})}, c.body)

    				if(body.Check(c.query) === false) {
        				${composeValidation("body")}
     			}
            }`;
      else
        fnLiteral += `if(body.Check(c.body) === false) {
			${composeValidation("body")}
		}`;
      if (hasTransform(validator.body.schema))
        fnLiteral += `
c.body = body.Decode(c.body)
`;
    }
    if (isNotEmpty(validator.cookie?.schema.properties ?? {})) {
      fnLiteral += `const cookieValue = {}
    			for(const [key, value] of Object.entries(c.cookie))
    				cookieValue[key] = value.value
`;
      if (hasProperty("default", validator.cookie.schema))
        for (const [key, value2] of Object.entries(exports_value2.Default(validator.cookie.schema, {}))) {
          fnLiteral += `cookieValue['${key}'] = ${typeof value2 === "object" ? JSON.stringify(value2) : value2}
`;
        }
      fnLiteral += `if(cookie.Check(cookieValue) === false) {
				${composeValidation("cookie", "cookieValue")}
			}`;
      if (hasTransform(validator.cookie.schema))
        fnLiteral += `
c.cookie = params.Decode(c.cookie)
`;
    }
  }
  if (hooks?.beforeHandle) {
    const endBeforeHandle = report("beforeHandle", {
      unit: hooks.beforeHandle.length
    });
    for (let i = 0;i < hooks.beforeHandle.length; i++) {
      const beforeHandle = hooks.beforeHandle[i];
      const endUnit = report("beforeHandle.unit", {
        name: beforeHandle.name
      });
      const returning = hasReturn(beforeHandle.toString());
      if (beforeHandle.$elysia === "resolve") {
        fnLiteral += isAsync(beforeHandle) ? `Object.assign(c, await beforeHandle[${i}](c));` : `Object.assign(c, beforeHandle[${i}](c));`;
      } else if (!returning) {
        fnLiteral += isAsync(beforeHandle) ? `await beforeHandle[${i}](c);
` : `beforeHandle[${i}](c);
`;
        endUnit();
      } else {
        fnLiteral += isAsync(beforeHandle) ? `be = await beforeHandle[${i}](c);
` : `be = beforeHandle[${i}](c);
`;
        endUnit();
        fnLiteral += `if(be !== undefined) {
`;
        const endAfterHandle = report("afterHandle", {
          unit: hooks.transform.length
        });
        if (hooks.afterHandle) {
          report("handle", {
            name: isHandleFn ? handler.name : undefined
          })();
          for (let i2 = 0;i2 < hooks.afterHandle.length; i2++) {
            const returning2 = hasReturn(hooks.afterHandle[i2].toString());
            const endUnit2 = report("afterHandle.unit", {
              name: hooks.afterHandle[i2].name
            });
            fnLiteral += `c.response = be
`;
            if (!returning2) {
              fnLiteral += isAsync(hooks.afterHandle[i2]) ? `await afterHandle[${i2}](c, be)
` : `afterHandle[${i2}](c, be)
`;
            } else {
              fnLiteral += isAsync(hooks.afterHandle[i2]) ? `af = await afterHandle[${i2}](c)
` : `af = afterHandle[${i2}](c)
`;
              fnLiteral += `if(af !== undefined) { c.response = be = af }
`;
            }
            endUnit2();
          }
        }
        endAfterHandle();
        if (validator.response)
          fnLiteral += composeResponseValidation("be");
        if (hooks.mapResponse.length) {
          fnLiteral += `c.response = be`;
          for (let i2 = 0;i2 < hooks.mapResponse.length; i2++) {
            fnLiteral += `
if(mr === undefined) {
							mr = onMapResponse[${i2}](c)
							if(mr instanceof Promise) mr = await mr
							if(mr !== undefined) c.response = mr
						}
`;
          }
        }
        fnLiteral += encodeCookie;
        fnLiteral += `return mapEarlyResponse(be, c.set)}
`;
      }
    }
    endBeforeHandle();
  }
  if (hooks?.afterHandle.length) {
    const endHandle = report("handle", {
      name: isHandleFn ? handler.name : undefined
    });
    if (hooks.afterHandle.length)
      fnLiteral += isAsyncHandler ? `let r = c.response = await ${handle};
` : `let r = c.response = ${handle};
`;
    else
      fnLiteral += isAsyncHandler ? `let r = await ${handle};
` : `let r = ${handle};
`;
    endHandle();
    const endAfterHandle = report("afterHandle", {
      unit: hooks.afterHandle.length
    });
    for (let i = 0;i < hooks.afterHandle.length; i++) {
      const returning = hasReturn(hooks.afterHandle[i].toString());
      const endUnit = report("afterHandle.unit", {
        name: hooks.afterHandle[i].name
      });
      if (!returning) {
        fnLiteral += isAsync(hooks.afterHandle[i]) ? `await afterHandle[${i}](c)
` : `afterHandle[${i}](c)
`;
        endUnit();
      } else {
        fnLiteral += isAsync(hooks.afterHandle[i]) ? `af = await afterHandle[${i}](c)
` : `af = afterHandle[${i}](c)
`;
        endUnit();
        if (validator.response) {
          fnLiteral += `if(af !== undefined) {`;
          endAfterHandle();
          fnLiteral += composeResponseValidation("af");
          fnLiteral += `c.response = af }`;
        } else {
          fnLiteral += `if(af !== undefined) {`;
          endAfterHandle();
          fnLiteral += `c.response = af}
`;
        }
      }
    }
    endAfterHandle();
    fnLiteral += `r = c.response
`;
    if (validator.response)
      fnLiteral += composeResponseValidation();
    fnLiteral += encodeCookie;
    if (hooks.mapResponse.length) {
      for (let i = 0;i < hooks.mapResponse.length; i++) {
        fnLiteral += `
mr = onMapResponse[${i}](c)
				if(mr instanceof Promise) mr = await mr
				if(mr !== undefined) c.response = mr
`;
      }
    }
    if (hasSet)
      fnLiteral += `return mapResponse(r, c.set)
`;
    else
      fnLiteral += `return mapCompactResponse(r)
`;
  } else {
    const endHandle = report("handle", {
      name: isHandleFn ? handler.name : undefined
    });
    if (validator.response || hooks.mapResponse.length) {
      fnLiteral += isAsyncHandler ? `let r = await ${handle};
` : `let r = ${handle};
`;
      endHandle();
      if (validator.response)
        fnLiteral += composeResponseValidation();
      report("afterHandle")();
      if (hooks.mapResponse.length) {
        fnLiteral += "c.response = r";
        for (let i = 0;i < hooks.mapResponse.length; i++) {
          fnLiteral += `
if(mr === undefined) { 
						mr = onMapResponse[${i}](c)
						if(mr instanceof Promise) mr = await mr
    					if(mr !== undefined) r = c.response = mr
					}
`;
        }
      }
      fnLiteral += encodeCookie;
      if (handler instanceof Response)
        fnLiteral += `return ${handle}.clone()
`;
      else if (hasSet)
        fnLiteral += `return mapResponse(r, c.set)
`;
      else
        fnLiteral += `return mapCompactResponse(r)
`;
    } else {
      if (traceConditions.handle || hasCookie) {
        fnLiteral += isAsyncHandler ? `let r = await ${handle};
` : `let r = ${handle};
`;
        endHandle();
        report("afterHandle")();
        if (hooks.mapResponse.length) {
          fnLiteral += "c.response = r";
          for (let i = 0;i < hooks.mapResponse.length; i++) {
            fnLiteral += `
if(mr === undefined) {
							mr = onMapResponse[${i}](c)
							if(mr instanceof Promise) mr = await mr
    						if(mr !== undefined) r = c.response = mr
						}
`;
          }
        }
        fnLiteral += encodeCookie;
        if (hasSet)
          fnLiteral += `return mapResponse(r, c.set)
`;
        else
          fnLiteral += `return mapCompactResponse(r)
`;
      } else {
        endHandle();
        const handled = isAsyncHandler ? `await ${handle}` : handle;
        report("afterHandle")();
        if (handler instanceof Response)
          fnLiteral += `return ${handle}.clone()
`;
        else if (hasSet)
          fnLiteral += `return mapResponse(${handled}, c.set)
`;
        else
          fnLiteral += `return mapCompactResponse(${handled})
`;
      }
    }
  }
  if (hasErrorHandler || handleResponse) {
    fnLiteral += `
} catch(error) {`;
    if (!maybeAsync)
      fnLiteral += `return (async () => {`;
    fnLiteral += `const set = c.set

		if (!set.status || set.status < 300) set.status = error?.status || 500
	`;
    const endError = report("error", {
      unit: hooks.error.length
    });
    if (hooks.error.length) {
      fnLiteral += `
				c.error = error
				c.code = error.code ?? error[ERROR_CODE] ?? "UNKNOWN"
			`;
      for (let i = 0;i < hooks.error.length; i++) {
        const name = `er${i}`;
        const endUnit = report("error.unit", {
          name: hooks.error[i].name
        });
        fnLiteral += `
let ${name} = handleErrors[${i}](c)
`;
        if (isAsync(hooks.error[i]))
          fnLiteral += `if (${name} instanceof Promise) ${name} = await ${name}
`;
        endUnit();
        fnLiteral += `${name} = mapEarlyResponse(${name}, set)
`;
        fnLiteral += `if (${name}) {`;
        fnLiteral += `return ${name} }
`;
      }
    }
    endError();
    fnLiteral += `return handleError(c, error)

`;
    if (!maybeAsync)
      fnLiteral += "})()";
    fnLiteral += "}";
    if (handleResponse || hasTrace) {
      fnLiteral += ` finally { `;
      const endResponse = report("response", {
        unit: hooks.onResponse.length
      });
      fnLiteral += handleResponse;
      endResponse();
      fnLiteral += `}`;
    }
  }
  fnLiteral = `const {
		handler,
		handleError,
		hooks: {
			transform,
			resolve,
			beforeHandle,
			afterHandle,
			mapResponse: onMapResponse,
			parse,
			error: handleErrors,
			onResponse
		},
		validator: {
			body,
			headers,
			params,
			query,
			response,
			cookie
		},
		utils: {
			mapResponse,
			mapCompactResponse,
			mapEarlyResponse,
			parseQuery
		},
		error: {
			NotFoundError,
			ValidationError,
			InternalServerError
		},
		schema,
		definitions,
		ERROR_CODE,
		getReporter,
		requestId,
		parseCookie,
		signCookie,
		decodeURIComponent
	} = hooks

	${hooks.onResponse.length ? `const ${hooks.onResponse.map((x, i) => `res${i} = onResponse[${i}]`).join(",")}` : ""}

	return ${maybeAsync ? "async" : ""} function handle(c) {
		${hooks.beforeHandle.length ? "let be" : ""}
		${hooks.afterHandle.length ? "let af" : ""}
		${hooks.mapResponse.length ? "let mr" : ""}

		${schema3 && definitions ? "c.schema = schema; c.defs = definitions;" : ""}
		${fnLiteral}
	}`;
  const createHandler = Function("hooks", fnLiteral);
  return createHandler({
    handler,
    hooks,
    validator,
    handleError,
    utils: {
      mapResponse,
      mapCompactResponse,
      mapEarlyResponse,
      parseQuery: import_fast_querystring.parse
    },
    error: {
      NotFoundError,
      ValidationError,
      InternalServerError
    },
    schema: schema3,
    definitions,
    ERROR_CODE,
    getReporter,
    requestId,
    parseCookie,
    signCookie,
    decodeURIComponent: import_fast_decode_uri_component.default
  });
};
var composeGeneralHandler = (app) => {
  let decoratorsLiteral = "";
  let fnLiteral = "";
  for (const key of Object.keys(app.decorators))
    decoratorsLiteral += `,${key}: app.decorators.${key}`;
  const { router, staticRouter } = app;
  const hasTrace = app.event.trace.length > 0;
  const findDynamicRoute = `
	const route = router.find(request.method, path) ${router.root.ALL ? '?? router.find("ALL", path)' : ""}
	if (route === null)
		return ${app.event.error.length ? `app.handleError(ctx, notFound)` : app.event.request.length ? `new Response(error404Message, {
					status: ctx.set.status === 200 ? 404 : ctx.set.status,
					headers: ctx.set.headers
				})` : `error404.clone()`}

	ctx.params = route.params

	return route.store(ctx)`;
  let switchMap = ``;
  for (const [path, { code, all }] of Object.entries(staticRouter.map))
    switchMap += `case '${path}':
switch(request.method) {
${code}
${all ?? `default: break map`}}

`;
  const maybeAsync = app.event.request.some(isAsync);
  fnLiteral += `const {
		app,
		app: { store, router, staticRouter, wsRouter },
		mapEarlyResponse,
		NotFoundError,
		requestId,
		getReporter,
		handleError
	} = data

	const notFound = new NotFoundError()

	${app.event.request.length ? `const onRequest = app.event.request` : ""}
	${staticRouter.variables}
	${app.event.error.length ? "" : `
	const error404Message = notFound.message.toString()
	const error404 = new Response(error404Message, { status: 404 });
	`}

	return ${maybeAsync ? "async" : ""} function map(request) {
`;
  if (app.event.request.length)
    fnLiteral += `let re`;
  const traceLiteral = app.event.trace.map((x) => x.toString());
  const report = createReport({
    hasTrace,
    hasTraceSet: app.event.trace.some((fn) => {
      const literal3 = fn.toString();
      return isFnUse("set", literal3) || isContextPassToFunction(literal3);
    }),
    condition: {
      request: traceLiteral.some((x) => isFnUse("request", x) || isContextPassToFunction(x))
    },
    addFn: (word) => {
      fnLiteral += word;
    }
  });
  if (app.event.request.length) {
    fnLiteral += `
			${hasTrace ? "const id = +requestId.value++" : ""}

			const ctx = {
				request,
				store,
				set: {
					headers: ${Object.keys(app.setHeaders ?? {}).length ? "Object.assign({}, app.setHeaders)" : "{}"},
					status: 200
				}
				${hasTrace ? ",$$requestId: +id" : ""}
				${decoratorsLiteral}
			}
		`;
    const endReport = report("request", {
      attribute: "ctx",
      unit: app.event.request.length
    });
    fnLiteral += `
 try {
`;
    for (let i = 0;i < app.event.request.length; i++) {
      const fn = app.event.request[i];
      const withReturn = hasReturn(fn.toString());
      const maybeAsync2 = isAsync(fn);
      const endUnit = report("request.unit", {
        name: app.event.request[i].name
      });
      if (withReturn) {
        fnLiteral += `re = mapEarlyResponse(
					${maybeAsync2 ? "await" : ""} onRequest[${i}](ctx),
					ctx.set
				)
`;
        endUnit();
        if (withReturn)
          fnLiteral += `if(re !== undefined) return re
`;
      } else {
        fnLiteral += `${maybeAsync2 ? "await" : ""} onRequest[${i}](ctx)
`;
        endUnit();
      }
    }
    fnLiteral += `} catch (error) {
			return app.handleError(ctx, error)
		}`;
    endReport();
    fnLiteral += `
		const url = request.url
		const s = url.indexOf('/', 11)
		const qi = ctx.qi = url.indexOf('?', s + 1)
		const path = ctx.path = url.substring(s, qi === -1 ? undefined : qi)`;
  } else {
    fnLiteral += `
		const url = request.url
		const s = url.indexOf('/', 11)
		const qi = url.indexOf('?', s + 1)
		const path = url.substring(s, qi === -1 ? undefined : qi)
		${hasTrace ? "const id = +requestId.value++" : ""}
		const ctx = {
			request,
			store,
			qi,
			path,
			set: {
				headers: ${Object.keys(app.setHeaders ?? {}).length ? "Object.assign({}, app.setHeaders)" : "{}"},
				status: 200
			}
			${hasTrace ? ",$$requestId: id" : ""}
			${decoratorsLiteral}
		}`;
    report("request", {
      unit: app.event.request.length,
      attribute: traceLiteral.some((x) => isFnUse("context", x)) || traceLiteral.some((x) => isFnUse("store", x)) || traceLiteral.some((x) => isFnUse("set", x)) ? "ctx" : ""
    })();
  }
  const wsPaths = app.wsPaths;
  const wsRouter = app.wsRouter;
  if (Object.keys(wsPaths).length || wsRouter.history.length) {
    fnLiteral += `
			if(request.method === 'GET') {
				switch(path) {`;
    for (const [path, index] of Object.entries(wsPaths)) {
      fnLiteral += `
					case '${path}':
						if(request.headers.get('upgrade') === 'websocket')
							return st${index}(ctx)

						break`;
    }
    fnLiteral += `
				default:
					if(request.headers.get('upgrade') === 'websocket') {
						const route = wsRouter.find('ws', path)

						if(route) {
							ctx.params = route.params

							return route.store(ctx)
						}
					}

					break
			}
		}
`;
  }
  fnLiteral += `
		map: switch(path) {
			${switchMap}

			default:
				break
		}

		${findDynamicRoute}
	}`;
  const handleError = composeErrorHandler(app);
  app.handleError = handleError;
  return Function("data", fnLiteral)({
    app,
    mapEarlyResponse,
    NotFoundError,
    getReporter: () => app.reporter,
    requestId,
    handleError
  });
};
var composeErrorHandler = (app) => {
  let fnLiteral = `const {
		app: { event: { error: onError, onResponse: res } },
		mapResponse,
		ERROR_CODE,
		ELYSIA_RESPONSE
	} = inject

	return ${app.event.error.find(isAsync) ? "async" : ""} function(context, error) {
		let r

		const { set } = context

		context.code = error.code
		context.error = error

		if(error[ELYSIA_RESPONSE]) {
			error.status = error[ELYSIA_RESPONSE]
			error.message = error.response
		}
`;
  for (let i = 0;i < app.event.error.length; i++) {
    const handler = app.event.error[i];
    const response = `${isAsync(handler) ? "await " : ""}onError[${i}](context)`;
    if (hasReturn(handler.toString()))
      fnLiteral += `r = ${response}; if(r !== undefined) {
				if(r instanceof Response) return r

				if(r[ELYSIA_RESPONSE]) {
					error.status = error[ELYSIA_RESPONSE]
					error.message = error.response
				}
		
				if(set.status === 200) set.status = error.status
				return mapResponse(r, set)
			}
`;
    else
      fnLiteral += response + "\n";
  }
  fnLiteral += `if(error.constructor.name === "ValidationError" || error.constructor.name === "TransformDecodeError") {
		set.status = error.status ?? 400
		return new Response(
			error.message,
			{ headers: set.headers, status: set.status }
		)
	} else {
		if(error.code && typeof error.status === "number")
			return new Response(
				error.message,
				{ headers: set.headers, status: error.status }
			)

		return mapResponse(error, set)
	}
}`;
  return Function("inject", fnLiteral)({
    app,
    mapResponse,
    ERROR_CODE,
    ELYSIA_RESPONSE
  });
};
var createDynamicHandler = (app) => async (request) => {
  const set2 = {
    cookie: {},
    status: 200,
    headers: {}
  };
  let context;
  if (app.decorators) {
    context = app.decorators;
    context.request = request;
    context.set = set2;
    context.store = app.store;
  } else {
    context = {
      set: set2,
      store: app.store,
      request
    };
  }
  const url = request.url, s = url.indexOf("/", 11), q = url.indexOf("?", s + 1), path = q === -1 ? url.substring(s) : url.substring(s, q);
  try {
    for (let i = 0;i < app.event.request.length; i++) {
      const onRequest = app.event.request[i];
      let response2 = onRequest(context);
      if (response2 instanceof Promise)
        response2 = await response2;
      response2 = mapEarlyResponse(response2, set2);
      if (response2)
        return response2;
    }
    const handler = app.dynamicRouter.find(request.method, path) ?? app.dynamicRouter.find("ALL", path);
    if (!handler)
      throw new NotFoundError;
    const { handle, hooks, validator, content } = handler.store;
    let body;
    if (request.method !== "GET" && request.method !== "HEAD") {
      if (content) {
        switch (content) {
          case "application/json":
            body = await request.json();
            break;
          case "text/plain":
            body = await request.text();
            break;
          case "application/x-www-form-urlencoded":
            body = import_fast_querystring2.parse(await request.text());
            break;
          case "application/octet-stream":
            body = await request.arrayBuffer();
            break;
          case "multipart/form-data":
            body = {};
            const form = await request.formData();
            for (const key of form.keys()) {
              if (body[key])
                continue;
              const value2 = form.getAll(key);
              if (value2.length === 1)
                body[key] = value2[0];
              else
                body[key] = value2;
            }
            break;
        }
      } else {
        let contentType = request.headers.get("content-type");
        if (contentType) {
          const index = contentType.indexOf(";");
          if (index !== -1)
            contentType = contentType.slice(0, index);
          for (let i = 0;i < hooks.parse.length; i++) {
            let temp = hooks.parse[i](context, contentType);
            if (temp instanceof Promise)
              temp = await temp;
            if (temp) {
              body = temp;
              break;
            }
          }
          if (body === undefined) {
            switch (contentType) {
              case "application/json":
                body = await request.json();
                break;
              case "text/plain":
                body = await request.text();
                break;
              case "application/x-www-form-urlencoded":
                body = import_fast_querystring2.parse(await request.text());
                break;
              case "application/octet-stream":
                body = await request.arrayBuffer();
                break;
              case "multipart/form-data":
                body = {};
                const form = await request.formData();
                for (const key of form.keys()) {
                  if (body[key])
                    continue;
                  const value2 = form.getAll(key);
                  if (value2.length === 1)
                    body[key] = value2[0];
                  else
                    body[key] = value2;
                }
                break;
            }
          }
        }
      }
    }
    context.body = body;
    context.params = handler?.params || undefined;
    context.query = q === -1 ? {} : import_fast_querystring2.parse(url.substring(q + 1));
    context.headers = {};
    for (const [key, value2] of request.headers.entries())
      context.headers[key] = value2;
    const cookieMeta = validator?.cookie?.schema;
    context.cookie = await parseCookie(context.set, context.headers.cookie, cookieMeta ? {
      secret: cookieMeta.secrets !== undefined ? typeof cookieMeta.secrets === "string" ? cookieMeta.secrets : cookieMeta.secrets.join(",") : undefined,
      sign: cookieMeta.sign === true ? true : cookieMeta.sign !== undefined ? typeof cookieMeta.sign === "string" ? cookieMeta.sign : cookieMeta.sign.join(",") : undefined
    } : undefined);
    for (let i = 0;i < hooks.transform.length; i++) {
      const operation = hooks.transform[i](context);
      if (hooks.transform[i].$elysia === "derive") {
        if (operation instanceof Promise)
          Object.assign(context, await operation);
        else
          Object.assign(context, operation);
      } else if (operation instanceof Promise)
        await operation;
    }
    if (validator) {
      if (validator.headers) {
        const _header = {};
        for (const key in request.headers)
          _header[key] = request.headers.get(key);
        if (validator.headers.Check(_header) === false)
          throw new ValidationError("header", validator.headers, _header);
      }
      if (validator.params?.Check(context.params) === false)
        throw new ValidationError("params", validator.params, context.params);
      if (validator.query?.Check(context.query) === false)
        throw new ValidationError("query", validator.query, context.query);
      if (validator.cookie) {
        const cookieValue = {};
        for (const [key, value2] of Object.entries(context.cookie))
          cookieValue[key] = value2.value;
        if (validator.cookie?.Check(cookieValue) === false)
          throw new ValidationError("cookie", validator.cookie, cookieValue);
      }
      if (validator.body?.Check(body) === false)
        throw new ValidationError("body", validator.body, body);
    }
    for (let i = 0;i < hooks.beforeHandle.length; i++) {
      let response2 = hooks.beforeHandle[i](context);
      if (response2 instanceof Promise)
        response2 = await response2;
      if (response2 !== undefined) {
        context.response = response2;
        for (let i2 = 0;i2 < hooks.afterHandle.length; i2++) {
          let newResponse = hooks.afterHandle[i2](context);
          if (newResponse instanceof Promise)
            newResponse = await newResponse;
          if (newResponse)
            response2 = newResponse;
        }
        const result = mapEarlyResponse(response2, context.set);
        if (result)
          return result;
      }
    }
    let response = handle(context);
    if (response instanceof Promise)
      response = await response;
    if (!hooks.afterHandle.length) {
      const responseValidator = validator?.response?.[response.status];
      if (responseValidator?.Check(response) === false)
        throw new ValidationError("response", responseValidator, response);
    } else {
      context.response = response;
      for (let i = 0;i < hooks.afterHandle.length; i++) {
        let newResponse = hooks.afterHandle[i](context);
        if (newResponse instanceof Promise)
          newResponse = await newResponse;
        const result = mapEarlyResponse(newResponse, context.set);
        if (result !== undefined) {
          const responseValidator = validator?.response?.[response.status];
          if (responseValidator?.Check(result) === false)
            throw new ValidationError("response", responseValidator, result);
          return result;
        }
      }
    }
    if (context.set.cookie && cookieMeta?.sign) {
      const secret = !cookieMeta.secrets ? undefined : typeof cookieMeta.secrets === "string" ? cookieMeta.secrets : cookieMeta.secrets[0];
      if (cookieMeta.sign === true)
        for (const [key, cookie] of Object.entries(context.set.cookie))
          context.set.cookie[key].value = await signCookie(cookie.value, "${secret}");
      else
        for (const name of cookieMeta.sign) {
          if (!(name in cookieMeta.properties))
            continue;
          if (context.set.cookie[name]?.value) {
            context.set.cookie[name].value = await signCookie(context.set.cookie[name].value, secret);
          }
        }
    }
    return mapResponse(response, context.set);
  } catch (error22) {
    if (error22.status)
      set2.status = error22.status;
    return app.handleError(context, error22);
  } finally {
    for (const onResponse of app.event.onResponse)
      await onResponse(context);
  }
};
var createDynamicErrorHandler = (app) => async (context, error22) => {
  const errorContext = Object.assign(context, { error: error22, code: error22.code });
  errorContext.set = context.set;
  for (let i = 0;i < app.event.error.length; i++) {
    let response = app.event.error[i](errorContext);
    if (response instanceof Promise)
      response = await response;
    if (response !== undefined && response !== null)
      return mapResponse(response, context.set);
  }
  return new Response(typeof error22.cause === "string" ? error22.cause : error22.message, {
    headers: context.set.headers,
    status: error22.status ?? 500
  });
};
var t = Object.assign({}, Type);
try {
  TypeSystem.Format("email", (value2) => /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(value2));
  TypeSystem.Format("uuid", (value2) => /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(value2));
  TypeSystem.Format("date", (value2) => !Number.isNaN(new Date(value2).getTime()));
  TypeSystem.Format("date-time", (value2) => !Number.isNaN(new Date(value2).getTime()));
} catch {
}
var parseFileUnit = (size) => {
  if (typeof size === "string")
    switch (size.slice(-1)) {
      case "k":
        return +size.slice(0, size.length - 1) * 1024;
      case "m":
        return +size.slice(0, size.length - 1) * 1048576;
      default:
        return +size;
    }
  return size;
};
var validateFile = (options, value2) => {
  if (!(value2 instanceof Blob))
    return false;
  if (options.minSize && value2.size < parseFileUnit(options.minSize))
    return false;
  if (options.maxSize && value2.size > parseFileUnit(options.maxSize))
    return false;
  if (options.extension)
    if (typeof options.extension === "string") {
      if (!value2.type.startsWith(options.extension))
        return false;
    } else {
      for (let i = 0;i < options.extension.length; i++)
        if (value2.type.startsWith(options.extension[i]))
          return true;
      return false;
    }
  return true;
};
var Files = TypeSystem.Type("Files", (options, value2) => {
  if (!Array.isArray(value2))
    return validateFile(options, value2);
  if (options.minItems && value2.length < options.minItems)
    return false;
  if (options.maxItems && value2.length > options.maxItems)
    return false;
  for (let i = 0;i < value2.length; i++)
    if (!validateFile(options, value2[i]))
      return false;
  return true;
});
exports_format.Set("numeric", (value2) => !!value2 && !isNaN(+value2));
exports_format.Set("boolean", (value2) => value2 === "true" || value2 === "false");
exports_format.Set("ObjectString", (value2) => {
  let start = value2.charCodeAt(0);
  if (start === 9 || start === 10 || start === 32)
    start = value2.trimStart().charCodeAt(0);
  if (start !== 123 && start !== 91)
    return false;
  try {
    JSON.parse(value2);
    return true;
  } catch {
    return false;
  }
});
var ElysiaType = {
  Numeric: (property) => {
    const schema3 = Type.Number(property);
    return t.Transform(t.Union([
      t.String({
        format: "numeric",
        default: 0
      }),
      t.Number(property)
    ], property)).Decode((value2) => {
      const number3 = +value2;
      if (isNaN(number3))
        return value2;
      if (property && !exports_value2.Check(schema3, number3))
        throw new ValidationError("property", schema3, number3);
      return number3;
    }).Encode((value2) => value2);
  },
  BooleanString: (property) => {
    const schema3 = Type.Boolean(property);
    return t.Transform(t.Union([
      t.String({
        format: "boolean",
        default: false
      }),
      t.Boolean(property)
    ], property)).Decode((value2) => {
      if (typeof value2 === "string")
        return value2 === "true";
      if (property && !exports_value2.Check(schema3, value2))
        throw new ValidationError("property", schema3, value2);
      return value2;
    }).Encode((value2) => value2);
  },
  ObjectString: (properties, options) => t.Transform(t.Union([
    t.String({
      format: "ObjectString",
      default: ""
    }),
    t.Object(properties, options)
  ], options)).Decode((value2) => {
    if (typeof value2 === "string")
      try {
        return JSON.parse(value2);
      } catch {
        return value2;
      }
    return value2;
  }).Encode((value2) => JSON.stringify(value2)),
  File: TypeSystem.Type("File", validateFile),
  Files: (options = {}) => t.Transform(t.Union([Files(options)])).Decode((value2) => {
    if (Array.isArray(value2))
      return value2;
    return [value2];
  }).Encode((value2) => value2),
  Nullable: (schema3) => t.Union([t.Null(), schema3]),
  MaybeEmpty: (schema3) => t.Union([t.Null(), t.Undefined(), schema3]),
  Cookie: (properties, options) => t.Object(properties, options)
};
t.BooleanString = ElysiaType.BooleanString;
t.ObjectString = ElysiaType.ObjectString;
t.Numeric = ElysiaType.Numeric;
t.File = (arg = {}) => ElysiaType.File({
  default: "File",
  ...arg,
  extension: arg?.type,
  type: "string",
  format: "binary"
});
t.Files = (arg = {}) => ElysiaType.Files({
  ...arg,
  elysiaMeta: "Files",
  default: "Files",
  extension: arg?.type,
  type: "array",
  items: {
    ...arg,
    default: "Files",
    type: "string",
    format: "binary"
  }
});
t.Nullable = (schema3) => ElysiaType.Nullable(schema3);
t.MaybeEmpty = ElysiaType.MaybeEmpty;
t.Cookie = ElysiaType.Cookie;
var Elysia = class _Elysia {
  constructor(config) {
    this.dependencies = {};
    this.store = {};
    this.decorators = {};
    this.definitions = {
      type: {},
      error: {}
    };
    this.schema = {};
    this.macros = [];
    this.event = {
      start: [],
      request: [],
      parse: [],
      transform: [],
      beforeHandle: [],
      afterHandle: [],
      mapResponse: [],
      onResponse: [],
      trace: [],
      error: [],
      stop: []
    };
    this.reporter = new eventemitter3_default;
    this.server = null;
    this.validator = null;
    this.router = new Memoirist;
    this.wsRouter = new Memoirist;
    this.routes = [];
    this.staticRouter = {
      handlers: [],
      variables: "",
      map: {},
      all: ""
    };
    this.wsPaths = {};
    this.dynamicRouter = new Memoirist;
    this.lazyLoadModules = [];
    this.path = "";
    this.stack = undefined;
    this.handle = async (request) => this.fetch(request);
    this.fetch = (request) => {
      if (false)
        ;
      return (this.fetch = this.config.aot ? composeGeneralHandler(this) : createDynamicHandler(this))(request);
    };
    this.handleError = async (context, error22) => (this.handleError = this.config.aot ? composeErrorHandler(this) : createDynamicErrorHandler(this))(context, error22);
    this.outerErrorHandler = (error22) => new Response(error22.message || error22.name || "Error", {
      status: error22?.status ?? 500
    });
    this.listen = (options, callback) => {
      if (typeof Bun === "undefined")
        throw new Error(".listen() is designed to run on Bun only. If you are running Elysia in other environment please use a dedicated plugin or export the handler via Elysia.fetch");
      this.compile();
      if (typeof options === "string") {
        options = +options.trim();
        if (Number.isNaN(options))
          throw new Error("Port must be a numeric value");
      }
      const fetch2 = this.fetch;
      const serve = typeof options === "object" ? {
        development: !isProduction,
        reusePort: true,
        ...this.config.serve || {},
        ...options || {},
        websocket: {
          ...this.config.websocket || {},
          ...websocket || {}
        },
        fetch: fetch2,
        error: this.outerErrorHandler
      } : {
        development: !isProduction,
        reusePort: true,
        ...this.config.serve || {},
        websocket: {
          ...this.config.websocket || {},
          ...websocket || {}
        },
        port: options,
        fetch: fetch2,
        error: this.outerErrorHandler
      };
      this.server = Bun?.serve(serve);
      if (this.event.start.length)
        for (let i = 0;i < this.event.start.length; i++)
          this.event.start[i](this);
      if (callback)
        callback(this.server);
      process.on("beforeExit", () => {
        for (let i = 0;i < this.event.stop.length; i++)
          this.event.stop[i](this);
      });
      Promise.all(this.lazyLoadModules).then(() => {
        Bun?.gc(false);
      });
      return this;
    };
    this.stop = async () => {
      if (!this.server)
        throw new Error("Elysia isn't running. Call `app.listen` to start the server.");
      this.server.stop();
      if (this.event.stop.length)
        for (let i = 0;i < this.event.stop.length; i++)
          this.event.stop[i](this);
    };
    this.config = {
      forceErrorEncapsulation: true,
      prefix: "",
      aot: true,
      strictPath: false,
      scoped: false,
      cookie: {},
      analytic: false,
      ...config || {},
      seed: config?.seed === undefined ? "" : config?.seed
    };
    if (config?.analytic && (config?.name || config?.seed !== undefined))
      this.stack = new Error().stack;
  }
  getServer() {
    return this.server;
  }
  add(method, paths, handle, localHook, { allowMeta = false, skipPrefix = false } = {
    allowMeta: false,
    skipPrefix: false
  }) {
    if (typeof paths === "string")
      paths = [paths];
    for (let path of paths) {
      path = path === "" ? path : path.charCodeAt(0) === 47 ? path : `/${path}`;
      if (this.config.prefix && !skipPrefix && !this.config.scoped)
        path = this.config.prefix + path;
      if (localHook?.type)
        switch (localHook.type) {
          case "text":
            localHook.type = "text/plain";
            break;
          case "json":
            localHook.type = "application/json";
            break;
          case "formdata":
            localHook.type = "multipart/form-data";
            break;
          case "urlencoded":
            localHook.type = "application/x-www-form-urlencoded";
            break;
          case "arrayBuffer":
            localHook.type = "application/octet-stream";
            break;
          default:
            break;
        }
      const models = this.definitions.type;
      let cookieValidator = getSchemaValidator(localHook?.cookie ?? this.validator?.cookie, {
        dynamic: !this.config.aot,
        models,
        additionalProperties: true
      });
      if (isNotEmpty(this.config.cookie ?? {})) {
        if (cookieValidator) {
          cookieValidator.schema = mergeCookie(cookieValidator.schema, this.config.cookie ?? {});
        } else {
          cookieValidator = getSchemaValidator(t.Cookie({}, this.config.cookie), {
            dynamic: !this.config.aot,
            models,
            additionalProperties: true
          });
        }
      }
      const validator = {
        body: getSchemaValidator(localHook?.body ?? this.validator?.body, {
          dynamic: !this.config.aot,
          models
        }),
        headers: getSchemaValidator(localHook?.headers ?? this.validator?.headers, {
          dynamic: !this.config.aot,
          models,
          additionalProperties: true
        }),
        params: getSchemaValidator(localHook?.params ?? this.validator?.params, {
          dynamic: !this.config.aot,
          models
        }),
        query: getSchemaValidator(localHook?.query ?? this.validator?.query, {
          dynamic: !this.config.aot,
          models
        }),
        cookie: cookieValidator,
        response: getResponseSchemaValidator(localHook?.response ?? this.validator?.response, {
          dynamic: !this.config.aot,
          models
        })
      };
      const globalHook = this.event;
      const loosePath = path.endsWith("/") ? path.slice(0, path.length - 1) : path + "/";
      if (this.macros.length) {
        const createManager = (stackName) => (type3, fn) => {
          if (typeof type3 === "function" || Array.isArray(type3)) {
            if (!localHook[stackName])
              localHook[stackName] = [];
            if (typeof localHook[stackName] === "function")
              localHook[stackName] = [localHook[stackName]];
            if (Array.isArray(type3))
              localHook[stackName] = localHook[stackName].concat(type3);
            else
              localHook[stackName].push(type3);
            return;
          }
          const { insert = "after", stack = "local" } = type3;
          if (stack === "global") {
            if (!Array.isArray(fn)) {
              if (insert === "before") {
                globalHook[stackName].unshift(fn);
              } else {
                globalHook[stackName].push(fn);
              }
            } else {
              if (insert === "before") {
                globalHook[stackName] = fn.concat(globalHook[stackName]);
              } else {
                globalHook[stackName] = globalHook[stackName].concat(fn);
              }
            }
            return;
          } else {
            if (!localHook[stackName])
              localHook[stackName] = [];
            if (typeof localHook[stackName] === "function")
              localHook[stackName] = [localHook[stackName]];
            if (!Array.isArray(fn)) {
              if (insert === "before") {
                localHook[stackName].unshift(fn);
              } else {
                localHook[stackName].push(fn);
              }
            } else {
              if (insert === "before") {
                localHook[stackName] = fn.concat(localHook[stackName]);
              } else {
                localHook[stackName] = localHook[stackName].concat(fn);
              }
            }
            return;
          }
        };
        const manager = {
          events: {
            global: globalHook,
            local: localHook
          },
          onParse: createManager("parse"),
          onTransform: createManager("transform"),
          onBeforeHandle: createManager("beforeHandle"),
          onAfterHandle: createManager("afterHandle"),
          onResponse: createManager("onResponse"),
          onError: createManager("error")
        };
        for (const macro of this.macros)
          traceBackMacro(macro(manager), localHook);
      }
      const hooks = mergeHook(globalHook, localHook);
      const isFn = typeof handle === "function";
      if (this.config.aot === false) {
        this.dynamicRouter.add(method, path, {
          validator,
          hooks,
          content: localHook?.type,
          handle
        });
        if (this.config.strictPath === false) {
          this.dynamicRouter.add(method, loosePath, {
            validator,
            hooks,
            content: localHook?.type,
            handle
          });
        }
        this.routes.push({
          method,
          path,
          composed: null,
          handler: handle,
          hooks
        });
        return;
      }
      const mainHandler = composeHandler({
        path,
        method,
        hooks,
        validator,
        handler: handle,
        handleError: this.handleError,
        onRequest: this.event.request,
        config: this.config,
        definitions: allowMeta ? this.definitions.type : undefined,
        schema: allowMeta ? this.schema : undefined,
        getReporter: () => this.reporter,
        setHeader: this.setHeaders
      });
      if (!isFn) {
        const context = Object.assign({
          headers: {},
          query: {},
          params: {},
          body: undefined,
          request: new Request(`http://localhost${path}`),
          store: this.store,
          path,
          set: {
            headers: this.setHeaders ?? {},
            status: 200
          }
        }, this.decorators);
        let response;
        for (const onRequest of Object.values(hooks.request)) {
          try {
            const inner = mapEarlyResponse(onRequest(context), context.set);
            if (inner !== undefined) {
              response = inner;
              break;
            }
          } catch (error22) {
            response = this.handleError(context, error22);
            break;
          }
        }
        if (response)
          mainHandler.response = response;
        else {
          try {
            mainHandler.response = mainHandler(context);
          } catch (error22) {
            mainHandler.response = this.handleError(context, error22);
          }
        }
      }
      const existingRouteIndex = this.routes.findIndex((route) => route.path === path && route.method === method);
      if (existingRouteIndex !== -1) {
        this.routes.splice(existingRouteIndex, 1);
      }
      this.routes.push({
        method,
        path,
        composed: mainHandler,
        handler: handle,
        hooks
      });
      if (method === "$INTERNALWS") {
        const loose = this.config.strictPath ? undefined : path.endsWith("/") ? path.slice(0, path.length - 1) : path + "/";
        if (path.indexOf(":") === -1 && path.indexOf("*") === -1) {
          const index = this.staticRouter.handlers.length;
          this.staticRouter.handlers.push(mainHandler);
          if (mainHandler.response instanceof Response)
            this.staticRouter.variables += `const st${index} = staticRouter.handlers[${index}].response
`;
          else
            this.staticRouter.variables += `const st${index} = staticRouter.handlers[${index}]
`;
          this.wsPaths[path] = index;
          if (loose)
            this.wsPaths[loose] = index;
        } else {
          this.wsRouter.add("ws", path, mainHandler);
          if (loose)
            this.wsRouter.add("ws", loose, mainHandler);
        }
        return;
      }
      if (path.indexOf(":") === -1 && path.indexOf("*") === -1) {
        const index = this.staticRouter.handlers.length;
        this.staticRouter.handlers.push(mainHandler);
        if (mainHandler.response instanceof Response)
          this.staticRouter.variables += `const st${index} = staticRouter.handlers[${index}].response
`;
        else
          this.staticRouter.variables += `const st${index} = staticRouter.handlers[${index}]
`;
        if (!this.staticRouter.map[path])
          this.staticRouter.map[path] = {
            code: ""
          };
        if (method === "ALL")
          this.staticRouter.map[path].all = `default: return st${index}(ctx)
`;
        else {
          if (mainHandler.response instanceof Response)
            this.staticRouter.map[path].code = `case '${method}': return st${index}.clone()
${this.staticRouter.map[path].code}`;
          else
            this.staticRouter.map[path].code = `case '${method}': return st${index}(ctx)
${this.staticRouter.map[path].code}`;
        }
        if (!this.config.strictPath) {
          if (!this.staticRouter.map[loosePath])
            this.staticRouter.map[loosePath] = {
              code: ""
            };
          if (method === "ALL")
            this.staticRouter.map[loosePath].all = `default: return st${index}(ctx)
`;
          else {
            if (mainHandler.response instanceof Response)
              this.staticRouter.map[loosePath].code = `case '${method}': return st${index}.clone()
${this.staticRouter.map[loosePath].code}`;
            else
              this.staticRouter.map[loosePath].code = `case '${method}': return st${index}(ctx)
${this.staticRouter.map[loosePath].code}`;
          }
        }
      } else {
        this.router.add(method, path, mainHandler);
        if (!this.config.strictPath)
          this.router.add(method, path.endsWith("/") ? path.slice(0, path.length - 1) : path + "/", mainHandler);
      }
    }
  }
  headers(header) {
    if (!header)
      return this;
    if (!this.setHeaders)
      this.setHeaders = {};
    this.setHeaders = mergeDeep(this.setHeaders, header);
    return this;
  }
  onStart(handler) {
    this.on("start", handler);
    return this;
  }
  onRequest(handler) {
    this.on("request", handler);
    return this;
  }
  onParse(parser) {
    this.on("parse", parser);
    return this;
  }
  onTransform(handler) {
    this.on("transform", handler);
    return this;
  }
  resolve(resolver2) {
    resolver2.$elysia = "resolve";
    return this.onBeforeHandle(resolver2);
  }
  onBeforeHandle(handler) {
    this.on("beforeHandle", handler);
    return this;
  }
  onAfterHandle(handler) {
    this.on("afterHandle", handler);
    return this;
  }
  mapResponse(handler) {
    this.on("mapResponse", handler);
    return this;
  }
  onResponse(handler) {
    this.on("response", handler);
    return this;
  }
  trace(handler) {
    this.reporter.on("event", createTraceListener(() => this.reporter, this.event.trace.length, handler));
    this.on("trace", handler);
    return this;
  }
  error(name, error22) {
    switch (typeof name) {
      case "string":
        error22.prototype[ERROR_CODE] = name;
        this.definitions.error[name] = error22;
        return this;
      case "function":
        this.definitions.error = name(this.definitions.error);
        return this;
    }
    for (const [code, error3] of Object.entries(name)) {
      error3.prototype[ERROR_CODE] = code;
      this.definitions.error[code] = error3;
    }
    return this;
  }
  onError(handler) {
    this.on("error", handler);
    return this;
  }
  onStop(handler) {
    this.on("stop", handler);
    return this;
  }
  on(type3, handlers) {
    for (let handler of Array.isArray(handlers) ? handlers : [handlers]) {
      handler = asGlobal(handler);
      switch (type3) {
        case "start":
          this.event.start.push(handler);
          break;
        case "request":
          this.event.request.push(handler);
          break;
        case "parse":
          this.event.parse.splice(this.event.parse.length - 1, 0, handler);
          break;
        case "transform":
          this.event.transform.push(handler);
          break;
        case "beforeHandle":
          this.event.beforeHandle.push(handler);
          break;
        case "afterHandle":
          this.event.afterHandle.push(handler);
          break;
        case "mapResponse":
          this.event.mapResponse.push(handler);
          break;
        case "response":
          this.event.onResponse.push(handler);
          break;
        case "trace":
          this.event.trace.push(handler);
          break;
        case "error":
          this.event.error.push(handler);
          break;
        case "stop":
          this.event.stop.push(handler);
          break;
      }
    }
    return this;
  }
  group(prefix, schemaOrRun, run) {
    const instance = new _Elysia({
      ...this.config || {},
      prefix: ""
    });
    instance.store = this.store;
    instance.definitions = this.definitions;
    instance.getServer = () => this.server;
    const isSchema = typeof schemaOrRun === "object";
    const sandbox = (isSchema ? run : schemaOrRun)(instance);
    this.decorators = mergeDeep(this.decorators, instance.decorators);
    if (sandbox.event.request.length)
      this.event.request = [
        ...this.event.request || [],
        ...sandbox.event.request || []
      ];
    if (sandbox.event.onResponse.length)
      this.event.onResponse = [
        ...this.event.onResponse || [],
        ...sandbox.event.onResponse || []
      ];
    this.model(sandbox.definitions.type);
    Object.values(instance.routes).forEach(({ method, path, handler, hooks }) => {
      path = (isSchema ? "" : this.config.prefix) + prefix + path;
      if (isSchema) {
        const hook = schemaOrRun;
        const localHook = hooks;
        this.add(method, path, handler, mergeHook(hook, {
          ...localHook || {},
          error: !localHook.error ? sandbox.event.error : Array.isArray(localHook.error) ? [
            ...localHook.error || {},
            ...sandbox.event.error || {}
          ] : [
            localHook.error,
            ...sandbox.event.error || {}
          ]
        }));
      } else {
        this.add(method, path, handler, mergeHook(hooks, {
          error: sandbox.event.error
        }), {
          skipPrefix: true
        });
      }
    });
    return this;
  }
  guard(hook, run) {
    if (!run) {
      this.event = mergeLifeCycle(this.event, hook);
      this.validator = {
        body: hook.body,
        headers: hook.headers,
        params: hook.params,
        query: hook.query,
        response: hook.response
      };
      return this;
    }
    const instance = new _Elysia({
      ...this.config || {},
      prefix: ""
    });
    instance.store = this.store;
    instance.definitions = this.definitions;
    const sandbox = run(instance);
    this.decorators = mergeDeep(this.decorators, instance.decorators);
    if (sandbox.event.request.length)
      this.event.request = [
        ...this.event.request || [],
        ...sandbox.event.request || []
      ];
    if (sandbox.event.onResponse.length)
      this.event.onResponse = [
        ...this.event.onResponse || [],
        ...sandbox.event.onResponse || []
      ];
    this.model(sandbox.definitions.type);
    Object.values(instance.routes).forEach(({ method, path, handler, hooks: localHook }) => {
      this.add(method, path, handler, mergeHook(hook, {
        ...localHook || {},
        error: !localHook.error ? sandbox.event.error : Array.isArray(localHook.error) ? [
          ...localHook.error || {},
          ...sandbox.event.error || []
        ] : [localHook.error, ...sandbox.event.error || []]
      }));
    });
    return this;
  }
  use(plugin) {
    if (plugin instanceof Promise) {
      this.lazyLoadModules.push(plugin.then((plugin2) => {
        if (typeof plugin2 === "function") {
          return plugin2(this);
        }
        if (typeof plugin2.default === "function")
          return plugin2.default(this);
        return this._use(plugin2);
      }).then((x) => x.compile()));
      return this;
    } else
      return this._use(plugin);
    return this;
  }
  _use(plugin) {
    if (typeof plugin === "function") {
      const instance = plugin(this);
      if (instance instanceof Promise) {
        this.lazyLoadModules.push(instance.then((plugin2) => {
          if (plugin2 instanceof _Elysia) {
            this.compile();
            for (const {
              method,
              path,
              handler,
              hooks
            } of Object.values(plugin2.routes)) {
              this.add(method, path, handler, mergeHook(hooks, {
                error: plugin2.event.error
              }));
            }
            return plugin2;
          }
          if (typeof plugin2 === "function")
            return plugin2(this);
          if (typeof plugin2.default === "function")
            return plugin2.default(this);
          return this._use(plugin2);
        }).then((x) => x.compile()));
        return this;
      }
      return instance;
    }
    const { name, seed } = plugin.config;
    plugin.getServer = () => this.getServer();
    this.headers(plugin.setHeaders);
    const isScoped = plugin.config.scoped;
    if (isScoped) {
      if (name) {
        if (!(name in this.dependencies))
          this.dependencies[name] = [];
        const current = seed !== undefined ? checksum(name + JSON.stringify(seed)) : 0;
        if (this.dependencies[name].some(({ checksum: checksum2 }) => current === checksum2))
          return this;
        this.dependencies[name].push(!this.config?.analytic ? {
          name: plugin.config.name,
          seed: plugin.config.seed,
          checksum: current,
          dependencies: plugin.dependencies
        } : {
          name: plugin.config.name,
          seed: plugin.config.seed,
          checksum: current,
          dependencies: plugin.dependencies,
          stack: plugin.stack,
          routes: plugin.routes,
          decorators: plugin.decorators,
          store: plugin.store,
          type: plugin.definitions.type,
          error: plugin.definitions.error,
          derive: plugin.event.transform.filter((x) => x.$elysia === "derive").map((x) => ({
            fn: x.toString(),
            stack: new Error().stack ?? ""
          })),
          resolve: plugin.event.transform.filter((x) => x.$elysia === "derive").map((x) => ({
            fn: x.toString(),
            stack: new Error().stack ?? ""
          }))
        });
      }
      plugin.model(this.definitions.type);
      plugin.error(this.definitions.error);
      plugin.macros = [...this.macros || [], ...plugin.macros || []];
      plugin.onRequest((context) => {
        Object.assign(context, this.decorators);
        Object.assign(context.store, this.store);
      });
      if (plugin.event.trace.length)
        plugin.event.trace.push(...plugin.event.trace);
      if (isScoped && !plugin.config.prefix)
        console.warn("When using scoped plugins it is recommended to use a prefix, else routing may not work correctly for the second scoped instance");
      if (plugin.event.error.length)
        plugin.event.error.push(...this.event.error);
      if (plugin.config.aot)
        plugin.compile();
      let instance;
      if (isScoped && plugin.config.prefix) {
        instance = this.mount(plugin.config.prefix + "/", plugin.fetch);
        for (const route of plugin.routes)
          this.routes.push({
            ...route,
            path: `${plugin.config.prefix}${route.path}`,
            hooks: mergeHook(route.hooks, {
              error: this.event.error
            })
          });
      } else {
        instance = this.mount(plugin.fetch);
        if (instance.routes.length)
          this.routes.push(...instance.routes);
      }
      return this;
    } else {
      plugin.reporter = this.reporter;
      for (const trace of plugin.event.trace)
        this.trace(trace);
      if (name) {
        if (!(name in this.dependencies))
          this.dependencies[name] = [];
        const current = seed !== undefined ? checksum(name + JSON.stringify(seed)) : 0;
        if (!this.dependencies[name].some(({ checksum: checksum2 }) => current === checksum2))
          this.macros.push(...plugin.macros || []);
        const macroHashes = [];
        for (let i = 0;i < this.macros.length; i++) {
          const macro = this.macros[i];
          if (macroHashes.includes(macro.$elysiaChecksum)) {
            this.macros.splice(i, 1);
            i--;
          }
          macroHashes.push(macro.$elysiaChecksum);
        }
      }
    }
    this.decorate(plugin.decorators);
    this.state(plugin.store);
    this.model(plugin.definitions.type);
    this.error(plugin.definitions.error);
    for (const { method, path, handler, hooks } of Object.values(plugin.routes)) {
      this.add(method, path, handler, mergeHook(hooks, {
        error: plugin.event.error
      }));
    }
    if (!isScoped)
      if (name) {
        if (!(name in this.dependencies))
          this.dependencies[name] = [];
        const current = seed !== undefined ? checksum(name + JSON.stringify(seed)) : 0;
        if (this.dependencies[name].some(({ checksum: checksum2 }) => current === checksum2))
          return this;
        this.dependencies[name].push(!this.config?.analytic ? {
          name: plugin.config.name,
          seed: plugin.config.seed,
          checksum: current,
          dependencies: plugin.dependencies
        } : {
          name: plugin.config.name,
          seed: plugin.config.seed,
          checksum: current,
          dependencies: plugin.dependencies,
          stack: plugin.stack,
          routes: plugin.routes,
          decorators: plugin.decorators,
          store: plugin.store,
          type: plugin.definitions.type,
          error: plugin.definitions.error,
          derive: plugin.event.transform.filter((x) => x?.$elysia === "derive").map((x) => ({
            fn: x.toString(),
            stack: new Error().stack ?? ""
          })),
          resolve: plugin.event.transform.filter((x) => x?.$elysia === "resolve").map((x) => ({
            fn: x.toString(),
            stack: new Error().stack ?? ""
          }))
        });
        this.event = mergeLifeCycle(this.event, filterGlobalHook(plugin.event), current);
      } else {
        this.event = mergeLifeCycle(this.event, filterGlobalHook(plugin.event));
      }
    return this;
  }
  macro(macro) {
    macro.$elysiaChecksum = checksum(JSON.stringify({
      name: this.config.name,
      seed: this.config.seed,
      content: macro.toString()
    }));
    this.macros.push(macro);
    return this;
  }
  mount(path, handle) {
    if (path instanceof _Elysia || typeof path === "function" || path.length === 0 || path === "/") {
      const run = typeof path === "function" ? path : path instanceof _Elysia ? path.compile().fetch : handle instanceof _Elysia ? handle.compile().fetch : handle;
      const handler2 = async ({ request, path: path2 }) => run(new Request(replaceUrlPath(request.url, path2 || "/"), request));
      this.all("/", handler2, {
        type: "none"
      });
      this.all("/*", handler2, {
        type: "none"
      });
      return this;
    }
    const length = path.length;
    if (handle instanceof _Elysia)
      handle = handle.compile().fetch;
    const handler = async ({ request, path: path2 }) => handle(new Request(replaceUrlPath(request.url, path2.slice(length) || "/"), request));
    this.all(path, handler, {
      type: "none"
    });
    this.all(path + (path.endsWith("/") ? "*" : "/*"), handler, {
      type: "none"
    });
    return this;
  }
  get(path, handler, hook) {
    this.add("GET", path, handler, hook);
    return this;
  }
  post(path, handler, hook) {
    this.add("POST", path, handler, hook);
    return this;
  }
  put(path, handler, hook) {
    this.add("PUT", path, handler, hook);
    return this;
  }
  patch(path, handler, hook) {
    this.add("PATCH", path, handler, hook);
    return this;
  }
  delete(path, handler, hook) {
    this.add("DELETE", path, handler, hook);
    return this;
  }
  options(path, handler, hook) {
    this.add("OPTIONS", path, handler, hook);
    return this;
  }
  all(path, handler, hook) {
    this.add("ALL", path, handler, hook);
    return this;
  }
  head(path, handler, hook) {
    this.add("HEAD", path, handler, hook);
    return this;
  }
  connect(path, handler, hook) {
    this.add("CONNECT", path, handler, hook);
    return this;
  }
  ws(path, options) {
    const transform4 = options.transformMessage ? Array.isArray(options.transformMessage) ? options.transformMessage : [options.transformMessage] : undefined;
    let server = null;
    const validateMessage = getSchemaValidator(options?.body, {
      models: this.definitions.type
    });
    const validateResponse = getSchemaValidator(options?.response, {
      models: this.definitions.type
    });
    const parseMessage = (message) => {
      if (typeof message === "string") {
        const start = message?.charCodeAt(0);
        if (start === 47 || start === 123)
          try {
            message = JSON.parse(message);
          } catch {
          }
        else if (isNumericString(message))
          message = +message;
      }
      if (transform4?.length)
        for (let i = 0;i < transform4.length; i++) {
          const temp = transform4[i](message);
          if (temp !== undefined)
            message = temp;
        }
      return message;
    };
    this.route("$INTERNALWS", path, (context) => {
      const { set: set2, path: path2, qi, headers, query, params } = context;
      if (server === null)
        server = this.getServer();
      if (server?.upgrade(context.request, {
        headers: typeof options.upgrade === "function" ? options.upgrade(context) : options.upgrade,
        data: {
          validator: validateResponse,
          open(ws) {
            options.open?.(new ElysiaWS(ws, context));
          },
          message: (ws, msg) => {
            const message = parseMessage(msg);
            if (validateMessage?.Check(message) === false)
              return void ws.send(new ValidationError("message", validateMessage, message).message);
            options.message?.(new ElysiaWS(ws, context), message);
          },
          drain(ws) {
            options.drain?.(new ElysiaWS(ws, context));
          },
          close(ws, code, reason) {
            options.close?.(new ElysiaWS(ws, context), code, reason);
          }
        }
      }))
        return;
      set2.status = 400;
      return "Expected a websocket connection";
    }, {
      beforeHandle: options.beforeHandle,
      transform: options.transform,
      headers: options.headers,
      params: options.params,
      query: options.query
    });
    return this;
  }
  route(method, path, handler, {
    config,
    ...hook
  } = {
    config: {
      allowMeta: false
    }
  }) {
    this.add(method, path, handler, hook, config);
    return this;
  }
  state(name, value2) {
    switch (typeof name) {
      case "object":
        this.store = mergeDeep(this.store, name);
        return this;
      case "function":
        this.store = name(this.store);
        return this;
    }
    if (!(name in this.store)) {
      this.store[name] = value2;
    }
    return this;
  }
  decorate(name, value2) {
    switch (typeof name) {
      case "object":
        this.decorators = mergeDeep(this.decorators, name);
        return this;
      case "function":
        this.decorators = name(this.decorators);
        return this;
    }
    if (!(name in this.decorators))
      this.decorators[name] = value2;
    return this;
  }
  derive(transform4) {
    transform4.$elysia = "derive";
    return this.onTransform(transform4);
  }
  model(name, model) {
    switch (typeof name) {
      case "object":
        Object.entries(name).forEach(([key, value2]) => {
          if (!(key in this.definitions.type))
            this.definitions.type[key] = value2;
        });
        return this;
      case "function":
        this.definitions.type = name(this.definitions.type);
        return this;
    }
    this.definitions.type[name] = model;
    return this;
  }
  mapDerive(mapper) {
    mapper.$elysia = "derive";
    return this.onTransform(mapper);
  }
  affix(base, type3, word) {
    if (word === "")
      return this;
    const delimieter = ["_", "-", " "];
    const capitalize2 = (word2) => word2[0].toUpperCase() + word2.slice(1);
    const joinKey = base === "prefix" ? (prefix, word2) => delimieter.includes(prefix.at(-1) ?? "") ? prefix + word2 : prefix + capitalize2(word2) : delimieter.includes(word.at(-1) ?? "") ? (suffix, word2) => word2 + suffix : (suffix, word2) => word2 + capitalize2(suffix);
    const remap = (type22) => {
      const store = {};
      switch (type22) {
        case "decorator":
          for (const key in this.decorators)
            store[joinKey(word, key)] = this.decorators[key];
          this.decorators = store;
          break;
        case "state":
          for (const key in this.store)
            store[joinKey(word, key)] = this.store[key];
          this.store = store;
          break;
        case "model":
          for (const key in this.definitions.type)
            store[joinKey(word, key)] = this.definitions.type[key];
          this.definitions.type = store;
          break;
        case "error":
          for (const key in this.definitions.error)
            store[joinKey(word, key)] = this.definitions.error[key];
          this.definitions.error = store;
          break;
      }
    };
    const types = Array.isArray(type3) ? type3 : [type3];
    for (const type22 of types.some((x) => x === "all") ? ["decorator", "state", "model", "error"] : types)
      remap(type22);
    return this;
  }
  prefix(type3, word) {
    return this.affix("prefix", type3, word);
  }
  suffix(type3, word) {
    return this.affix("suffix", type3, word);
  }
  compile() {
    this.fetch = this.config.aot ? composeGeneralHandler(this) : createDynamicHandler(this);
    if (typeof this.server?.reload === "function")
      this.server.reload({
        ...this.server || {},
        fetch: this.fetch
      });
    return this;
  }
  get modules() {
    return Promise.all(this.lazyLoadModules);
  }
};

// node_modules/@elysiajs/swagger/dist/swagger/index.js
var SwaggerUIRender = (info, version, theme, stringifiedSwaggerOptions, autoDarkMode) => `<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>${info.title}</title>
    <meta
        name="description"
        content="${info.description}"
    />
    <meta
        name="og:description"
        content="${info.description}"
    />
    ${autoDarkMode && typeof theme === "string" ? `
    <style>
        @media (prefers-color-scheme: dark) {
            body {
                background-color: #222;
                color: #faf9a;
            }
            .swagger-ui {
                filter: invert(92%) hue-rotate(180deg);
            }

            .swagger-ui .microlight {
                filter: invert(100%) hue-rotate(180deg);
            }
        }
    </style>` : ""}
    ${typeof theme === "string" ? `<link rel="stylesheet" href="${theme}" />` : `<link rel="stylesheet" media="(prefers-color-scheme: light)" href="${theme.light}" />
<link rel="stylesheet" media="(prefers-color-scheme: dark)" href="${theme.dark}" />`}
</head>
<body>
    <div id="swagger-ui"></div>
    <script src="https://unpkg.com/swagger-ui-dist@${version}/swagger-ui-bundle.js" crossorigin></script>
    <script>
        window.onload = () => {
            window.ui = SwaggerUIBundle(${stringifiedSwaggerOptions});
        };
    </script>
</body>
</html>`;

// node_modules/@elysiajs/swagger/dist/scalar/theme.js
var theme_default = `
/* basic theme */
.light-mode {
  --theme-color-1: #2a2f45;
  --theme-color-2: #757575;
  --theme-color-3: #8e8e8e;
  --theme-color-accent: #f06292;

  --theme-background-1: #fff;
  --theme-background-2: #f6f6f6;
  --theme-background-3: #e7e7e7;
  --theme-background-accent: #f062921f;

  --theme-border-color: rgba(0, 0, 0, 0.1);
}
.dark-mode {
  --theme-color-1: rgba(255, 255, 255, 0.9);
  --theme-color-2: rgba(156, 163, 175, 1);
  --theme-color-3: rgba(255, 255, 255, 0.44);
  --theme-color-accent: #f06292;

  --theme-background-1: #111728;
  --theme-background-2: #1e293b;
  --theme-background-3: #334155;
  --theme-background-accent: #f062921f;

  --theme-border-color: rgba(255, 255, 255, 0.1);
}
/* Document Sidebar */
.light-mode .sidebar,
.dark-mode .sidebar {
  --sidebar-background-1: var(--theme-background-1);
  --sidebar-item-hover-color: currentColor;
  --sidebar-item-hover-background: var(--theme-background-2);
  --sidebar-item-active-background: var(--theme-background-accent);
  --sidebar-border-color: transparent;
  --sidebar-color-1: var(--theme-color-1);
  --sidebar-color-2: var(--theme-color-2);
  --sidebar-color-active: var(--theme-color-accent);
  --sidebar-search-background: transparent;
  --sidebar-search-border-color: var(--theme-border-color);
  --sidebar-search--color: var(--theme-color-3);
}
/* Document header only shows on mobile*/
.dark-mode .t-doc__header,
.light-mode .t-doc__header {
  --header-background-1: rgba(255, 255, 255, 0.85);
  --header-border-color: transparent;
  --header-color-1: var(--theme-color-1);
  --header-color-2: var(--theme-color-2);
  --header-background-toggle: var(--theme-color-3);
  --header-call-to-action-color: var(--theme-color-accent);
}

.dark-mode .t-doc__header {
  --header-background-1: rgba(17, 23, 40, 0.75);
}

/* advanced */
.light-mode {
  --theme-button-1: rgb(49 53 56);
  --theme-button-1-color: #fff;
  --theme-button-1-hover: rgb(28 31 33);

  --theme-color-green: #069061;
  --theme-color-red: #ef0006;
  --theme-color-yellow: #edbe20;
  --theme-color-blue: #0082d0;
  --theme-color-orange: #fb892c;
  --theme-color-purple: #5203d1;

  --theme-scrollbar-color: rgba(0, 0, 0, 0.18);
  --theme-scrollbar-color-active: rgba(0, 0, 0, 0.36);
}
.dark-mode {
  --theme-button-1: #f6f6f6;
  --theme-button-1-color: #000;
  --theme-button-1-hover: #e7e7e7;

  --theme-color-green: #a3ffa9;
  --theme-color-red: #ffa3a3;
  --theme-color-yellow: #fffca3;
  --theme-color-blue: #a5d6ff;
  --theme-color-orange: #e2ae83;
  --theme-color-purple: #d2a8ff;

  --theme-scrollbar-color: rgba(255, 255, 255, 0.24);
  --theme-scrollbar-color-active: rgba(255, 255, 255, 0.48);
}
/* Elysia Specific */
.scalar-api-client__send-request-button,
.show-api-client-button {
  background: #3c82f6 !important;
}
.show-api-client-button:before {
  display: none;
}

.sidebar-search:hover {
  transition: all 0.15s ease-in-out;
  --sidebar-search-border-color: var(--theme-color-accent) !important;
  color: var(--sidebar-color-1) !important;
}
.scalar-api-client__container .sidebar {
  --sidebar-border-color: var(--theme-border-color);
}
@media (min-width: 1150px) {
  .section-container:has( ~ .footer):before,
  .tag-section-container:before {
    content: "";
    position: absolute;
    top: -5px;
    left: 0;
    width: 100%;
    height: 10px;
    background: linear-gradient(90deg, var(--theme-background-1) 3%,transparent 10%);
  }
}
.section-flare {
  position: absolute;
  width: 100vw;
  height: 300px;
  --stripes: repeating-linear-gradient(
    100deg,
    #fff 0%,
    #fff 7%,
    transparent 10%,
    transparent 12%,
    #fff 16%
  );
  --stripesDark: repeating-linear-gradient(
    100deg,
    #000 0%,
    #000 7%,
    transparent 10%,
    transparent 12%,
    #000 16%
  );
  --rainbow: repeating-linear-gradient(
    100deg,
    #60a5fa 10%,
    #e879f9 16%,
    #5eead4 22%,
    #60a5fa 30%
  );
  background-image: var(--stripes), var(--rainbow);
  background-size: 300%, 200%;
  background-position: 50% 50%, 50% 50%;
  filter: invert(100%);
  -webkit-mask-image: radial-gradient(
    ellipse at 100% 0%,
    black 40%,
    transparent 70%
  );
  mask-image: radial-gradient(ellipse at 100% 0%, black 40%, transparent 70%);
  pointer-events: none;
  opacity: 0.15;
}
.dark-mode .section-flare {
  background-image: var(--stripesDark), var(--rainbow);
  filter: opacity(50%) saturate(200%);
  opacity: 0.25;
}
.section-flare:after {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-image: var(--stripes), var(--rainbow);
  background-size: 200%, 100%;
  background-attachment: fixed;
  mix-blend-mode: difference;
}
.dark-mode .section-flare:after {
  background-image: var(--stripesDark), var(--rainbow);
}
@keyframes headerbackground {
  from {
    background: transparent;
    backdrop-filter: none;
  }
  to {
    background: var(--header-background-1);
    backdrop-filter: blur(12px);
  }
}
.light-mode .t-doc__header,
.dark-mode .t-doc__header {
  animation: headerbackground forwards;
  animation-timeline: scroll();
  animation-range: 0px 200px;
  --header-border-color: transparent;
}
`;

// node_modules/@elysiajs/swagger/dist/scalar/index.js
var ScalarRender = (version, config, cdn) => `<!doctype html>
<html>
  <head>
    <title>API Reference</title>
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1" />
    <style>
      body {
        margin: 0;
      }
    </style>
    <style>
      ${config.customCss ?? theme_default}
    </style>
  </head>
  <body>
    <script
      id="api-reference"
      data-url="${config.spec?.url}"
      data-configuration='${JSON.stringify(config)}'
    >
    </script>
    <script src="${cdn ? cdn : `https://cdn.jsdelivr.net/npm/@scalar/api-reference@${version}/dist/browser/standalone.min.js`}"></script>
  </body>
</html>`;

// node_modules/@elysiajs/swagger/dist/utils.js
var import_lodash = __toESM(require_lodash(), 1);
var toOpenAPIPath = (path) => path.split("/").map((x) => x.startsWith(":") ? `{${x.slice(1, x.length)}}` : x).join("/");
var mapProperties = (name, schema3, models) => {
  if (schema3 === undefined)
    return [];
  if (typeof schema3 === "string")
    if (schema3 in models)
      schema3 = models[schema3];
    else
      throw new Error(`Can't find model ${schema3}`);
  return Object.entries(schema3?.properties ?? []).map(([key, value2]) => {
    const { type: valueType = undefined, ...rest3 } = value2;
    return {
      ...rest3,
      schema: { type: valueType },
      in: name,
      name: key,
      required: schema3.required?.includes(key) ?? false
    };
  });
};
var mapTypesResponse = (types, schema3) => {
  if (typeof schema3 === "object" && ["void", "undefined", "null"].includes(schema3.type))
    return;
  const responses = {};
  for (const type3 of types)
    responses[type3] = {
      schema: typeof schema3 === "string" ? {
        $ref: `#/components/schemas/${schema3}`
      } : { ...schema3 }
    };
  return responses;
};
var capitalize2 = (word) => word.charAt(0).toUpperCase() + word.slice(1);
var generateOperationId = (method, paths) => {
  let operationId = method.toLowerCase();
  if (paths === "/")
    return operationId + "Index";
  for (const path of paths.split("/")) {
    if (path.charCodeAt(0) === 123) {
      operationId += "By" + capitalize2(path.slice(1, -1));
    } else {
      operationId += capitalize2(path);
    }
  }
  return operationId;
};
var registerSchemaPath = ({ schema: schema3, path, method, hook, models }) => {
  if (hook)
    hook = import_lodash.default(hook);
  const contentType = hook?.type ?? [
    "application/json",
    "multipart/form-data",
    "text/plain"
  ];
  path = toOpenAPIPath(path);
  const contentTypes = typeof contentType === "string" ? [contentType] : contentType ?? ["application/json"];
  const bodySchema = hook?.body;
  const paramsSchema = hook?.params;
  const headerSchema = hook?.headers;
  const querySchema = hook?.query;
  let responseSchema = hook?.response;
  if (typeof responseSchema === "object") {
    if (Kind in responseSchema) {
      const { type: type3, properties, required: required3, additionalProperties, ...rest3 } = responseSchema;
      responseSchema = {
        "200": {
          ...rest3,
          description: rest3.description,
          content: mapTypesResponse(contentTypes, type3 === "object" || type3 === "array" ? {
            type: type3,
            properties,
            items: responseSchema.items,
            required: required3
          } : responseSchema)
        }
      };
    } else {
      Object.entries(responseSchema).forEach(([key, value2]) => {
        if (typeof value2 === "string") {
          if (!models[value2])
            return;
          const { type: type3, properties, required: required3, additionalProperties: _, ...rest3 } = models[value2];
          responseSchema[key] = {
            ...rest3,
            description: rest3.description,
            content: mapTypesResponse(contentTypes, value2)
          };
        } else {
          const { type: type3, properties, required: required3, additionalProperties, ...rest3 } = value2;
          responseSchema[key] = {
            ...rest3,
            description: rest3.description,
            content: mapTypesResponse(contentTypes, rest3.type === "object" || rest3.type === "array" ? {
              type: rest3.type,
              properties,
              items: value2.items,
              required: required3
            } : value2)
          };
        }
      });
    }
  } else if (typeof responseSchema === "string") {
    if (!(responseSchema in models))
      return;
    const { type: type3, properties, required: required3, additionalProperties: _, ...rest3 } = models[responseSchema];
    responseSchema = {
      "200": {
        ...rest3,
        content: mapTypesResponse(contentTypes, responseSchema)
      }
    };
  }
  const parameters3 = [
    ...mapProperties("header", headerSchema, models),
    ...mapProperties("path", paramsSchema, models),
    ...mapProperties("query", querySchema, models)
  ];
  schema3[path] = {
    ...schema3[path] ? schema3[path] : {},
    [method.toLowerCase()]: {
      ...headerSchema || paramsSchema || querySchema || bodySchema ? { parameters: parameters3 } : {},
      ...responseSchema ? {
        responses: responseSchema
      } : {},
      operationId: hook?.detail?.operationId ?? generateOperationId(method, path),
      ...hook?.detail,
      ...bodySchema ? {
        requestBody: {
          content: mapTypesResponse(contentTypes, typeof bodySchema === "string" ? {
            $ref: `#/components/schemas/${bodySchema}`
          } : bodySchema)
        }
      } : null
    }
  };
};
var filterPaths = (paths, { excludeStaticFile = true, exclude: exclude3 = [] }) => {
  const newPaths = {};
  for (const [key, value2] of Object.entries(paths))
    if (!exclude3.some((x) => {
      if (typeof x === "string")
        return key === x;
      return x.test(key);
    }) && !key.includes("/swagger") && !key.includes("*") && (excludeStaticFile ? !key.includes(".") : true)) {
      Object.keys(value2).forEach((method) => {
        const schema3 = value2[method];
        if (key.includes("{")) {
          if (!schema3.parameters)
            schema3.parameters = [];
          schema3.parameters = [
            ...key.split("/").filter((x) => x.startsWith("{") && !schema3.parameters.find((params) => params.in === "path" && params.name === x.slice(1, x.length - 1))).map((x) => ({
              schema: { type: "string" },
              in: "path",
              name: x.slice(1, x.length - 1),
              required: true
            })),
            ...schema3.parameters
          ];
        }
        if (!schema3.responses)
          schema3.responses = {
            200: {}
          };
      });
      newPaths[key] = value2;
    }
  return newPaths;
};

// node_modules/@elysiajs/swagger/dist/index.js
var swagger = ({ provider = "scalar", scalarVersion = "latest", scalarCDN = "", scalarConfig = {}, documentation = {}, version = "5.9.0", excludeStaticFile = true, path = "/swagger", exclude: exclude3 = [], swaggerOptions = {}, theme = `https://unpkg.com/swagger-ui-dist@${version}/swagger-ui.css`, autoDarkMode = true, excludeMethods = ["OPTIONS"] } = {
  provider: "scalar",
  scalarVersion: "latest",
  scalarCDN: "",
  scalarConfig: {},
  documentation: {},
  version: "5.9.0",
  excludeStaticFile: true,
  path: "/swagger",
  exclude: [],
  swaggerOptions: {},
  autoDarkMode: true,
  excludeMethods: ["OPTIONS"]
}) => (app) => {
  const schema3 = {};
  let totalRoutes = 0;
  if (!version)
    version = `https://unpkg.com/swagger-ui-dist@${version}/swagger-ui.css`;
  const info = {
    title: "Elysia Documentation",
    description: "Development documentation",
    version: "0.0.0",
    ...documentation.info
  };
  const relativePath = path.startsWith("/") ? path.slice(1) : path;
  app.get(path, (() => {
    const combinedSwaggerOptions = {
      url: `${relativePath}/json`,
      dom_id: "#swagger-ui",
      ...swaggerOptions
    };
    const stringifiedSwaggerOptions = JSON.stringify(combinedSwaggerOptions, (key, value2) => {
      if (typeof value2 == "function")
        return;
      return value2;
    });
    const scalarConfiguration = {
      spec: {
        ...scalarConfig.spec,
        url: `${relativePath}/json`
      },
      ...scalarConfig
    };
    return new Response(provider === "swagger-ui" ? SwaggerUIRender(info, version, theme, stringifiedSwaggerOptions, autoDarkMode) : ScalarRender(scalarVersion, scalarConfiguration, scalarCDN), {
      headers: {
        "content-type": "text/html; charset=utf8"
      }
    });
  })()).get(`${path}/json`, () => {
    const routes = app.routes;
    if (routes.length !== totalRoutes) {
      totalRoutes = routes.length;
      routes.forEach((route) => {
        if (excludeMethods.includes(route.method))
          return;
        registerSchemaPath({
          schema: schema3,
          hook: route.hooks,
          method: route.method,
          path: route.path,
          models: app.definitions?.type,
          contentType: route.hooks.type
        });
      });
    }
    return {
      openapi: "3.0.3",
      ...{
        ...documentation,
        info: {
          title: "Elysia Documentation",
          description: "Development documentation",
          version: "0.0.0",
          ...documentation.info
        }
      },
      paths: filterPaths(schema3, {
        excludeStaticFile,
        exclude: Array.isArray(exclude3) ? exclude3 : [exclude3]
      }),
      components: {
        ...documentation.components,
        schemas: {
          ...app.definitions?.type,
          ...documentation.components?.schemas
        }
      }
    };
  });
  return app;
};

// src/config/database.config.ts
var import_mongoose = __toESM(require_browser_umd(), 1);
var connectDB = async () => {
  try {
    await import_mongoose.default.connect(process.env.MONGODB_URI || "");
    console.log("MongoDB Connected...");
  } catch (err) {
    console.error("Failed to connect to MongoDB", err);
    process.exit(1);
  }
};

// src/middlewares/discord.middleware.ts
class DiscordLogger {
  webhookUrl;
  constructor(webhookUrl) {
    this.webhookUrl = webhookUrl;
  }
  async sendToDiscord(message) {
    try {
      await fetch(this.webhookUrl, {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify(message)
      });
    } catch (error3) {
      console.error("Failed to send log to Discord:", error3);
    }
  }
  async logError(error3, request) {
    let errorTitle = "Application Error";
    let errorColor = 16711680;
    let errorDescription = error3.message || "Unknown error occurred";
    let fields = [];
    const timestamp = new Date().toISOString();
    if (request) {
      fields.push({
        name: "Request Details",
        value: `Method: ${request.method}\nPath: ${request.path}\nIP: ${request.ip}`
      });
    }
    if (error3.code === 11000) {
      errorTitle = "Duplicate Key Error";
      errorDescription = `Duplicate entry found for ${JSON.stringify(error3.keyValue)}`;
    } else if (error3.name === "ValidationError") {
      errorTitle = "Validation Error";
      errorDescription = Object.values(error3.errors).map((err) => err.message).join("\n");
    } else if (error3.name === "CastError") {
      errorTitle = "Invalid ID Error";
      errorDescription = "Invalid ID format provided";
    }
    if (error3.stack) {
      fields.push({
        name: "Stack Trace",
        value: `\`\`\`${error3.stack.substring(0, 1000)}\`\`\``
      });
    }
    const webhookMessage = {
      embeds: [{
        title: errorTitle,
        description: errorDescription,
        color: errorColor,
        fields,
        timestamp
      }]
    };
    await this.sendToDiscord(webhookMessage);
  }
  async logInfo(message, data) {
    const webhookMessage = {
      embeds: [{
        title: "Info Log",
        description: message,
        color: 65280,
        fields: data ? [
          {
            name: "Additional Data",
            value: `\`\`\`json\n${JSON.stringify(data, null, 2)}\`\`\``
          }
        ] : undefined,
        timestamp: new Date().toISOString()
      }]
    };
    await this.sendToDiscord(webhookMessage);
  }
}

// src/middlewares/error.middleware.ts
var discordLogger = new DiscordLogger(process.env.DISCORD_WEBHOOK_URL || "");

class AppError extends Error {
  statusCode;
  constructor(statusCode, message) {
    super(message);
    this.statusCode = statusCode;
    this.name = "AppError";
  }
}
var errorHandler = new Elysia().onError(async ({ code, error: error3, set: set2, request }) => {
  console.error(`Error: ${error3.message}`);
  await discordLogger.logError(error3, {
    method: request.method,
    path: request.url,
    ip: request.headers.get("x-forwarded-for") || request.headers.get("x-real-ip")
  });
  if (error3 instanceof AppError) {
    set2.status = error3.statusCode;
    return {
      success: false,
      error: error3.message,
      stack: error3.stack
    };
  }
  if ("code" in error3 && typeof error3.code === "number" && error3.code === 11000) {
    set2.status = 400;
    return {
      success: false,
      error: "Duplicate field value entered"
    };
  }
  if (error3.name === "ValidationError") {
    set2.status = 400;
    const errors2 = Object.values(error3.errors).map((err) => err.message);
    return {
      success: false,
      error: errors2
    };
  }
  if (error3.name === "CastError") {
    set2.status = 400;
    return {
      success: false,
      error: "Resource not found"
    };
  }
  set2.status = 500;
  return {
    success: false,
    error: "Internal server error",
    stack: error3.stack
  };
});

// src/middlewares/logger.middleware.ts
var requestLogger = new Elysia().derive(async ({ request, body, query, params }) => {
  const webhook = process.env.DISCORD_WEBHOOK_URL;
  if (!webhook) {
    console.error("Discord webhook URL not configured");
    return;
  }
  const logToDiscord = async (data) => {
    try {
      const response = await fetch(webhook, {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify(data)
      });
      if (!response.ok) {
        console.error("Failed to send to Discord:", await response.text());
      }
    } catch (error3) {
      console.error("Error sending to Discord:", error3);
    }
  };
  const url = new URL(request.url);
  const requestData = {
    method: request.method,
    path: url.pathname,
    query: query || {},
    params: params || {},
    body: body || {},
    timestamp: new Date().toISOString()
  };
  const message = {
    embeds: [{
      title: `\uD83D\uDD0D New Request: ${requestData.method} ${requestData.path}`,
      color: 65280,
      fields: [
        {
          name: "Request Details",
          value: `Method: ${requestData.method}\nPath: ${requestData.path}\nTimestamp: ${requestData.timestamp}`
        },
        {
          name: "Request Data",
          value: "```json\n" + JSON.stringify({
            query: requestData.query,
            params: requestData.params,
            body: requestData.body
          }, null, 2).slice(0, 1000) + "\n```"
        }
      ],
      timestamp: new Date().toISOString()
    }]
  };
  await logToDiscord(message);
  return {
    logResponse: async (statusCode, responseData) => {
      const responseMessage = {
        embeds: [{
          title: `\u2705 Response: ${requestData.method} ${requestData.path}`,
          color: statusCode >= 400 ? 16711680 : 65280,
          fields: [
            {
              name: "Response Details",
              value: `Status Code: ${statusCode}\nPath: ${requestData.path}\nMethod: ${requestData.method}`
            },
            {
              name: "Response Data",
              value: "```json\n" + JSON.stringify(responseData, null, 2).slice(0, 1000) + "\n```"
            }
          ],
          timestamp: new Date().toISOString()
        }]
      };
      await logToDiscord(responseMessage);
    }
  };
});

// src/models/information.model.ts
var import_mongoose2 = __toESM(require_browser_umd(), 1);
var informationSchema = new import_mongoose2.default.Schema({
  distance: {
    type: Number,
    required: true
  },
  level: {
    type: Number,
    required: true
  },
  temperature: {
    type: String,
    required: true
  },
  createdAt: {
    type: Date,
    default: Date.now
  }
});
var Information = import_mongoose2.default.model("Information", informationSchema);

// src/models/logger.model.ts
var import_mongoose3 = __toESM(require_browser_umd(), 1);
var loggerSchema = new import_mongoose3.default.Schema({
  action: {
    type: String,
    required: true,
    enum: ["create", "update", "delete"]
  },
  informationId: {
    type: import_mongoose3.default.Schema.Types.ObjectId,
    required: true,
    ref: "Information"
  },
  previousData: {
    type: import_mongoose3.default.Schema.Types.Mixed,
    default: null
  },
  newData: {
    type: import_mongoose3.default.Schema.Types.Mixed,
    default: null
  },
  timestamp: {
    type: Date,
    default: Date.now
  },
  description: {
    type: String,
    required: true
  }
});
var Logger = import_mongoose3.default.model("Logger", loggerSchema);

// src/controllers/information.controller.ts
var informationController = {
  getAllInformation: async () => {
    const information = await Information.find().sort({ createdAt: -1 });
    if (!information) {
      throw new AppError(404, "No information found");
    }
    return { status: 200, data: information };
  },
  getInformationById: async ({ params }) => {
    const information = await Information.findById(params.id);
    if (!information) {
      throw new AppError(404, "Information not found");
    }
    return { status: 200, data: information };
  },
  createInformation: async ({ body }) => {
    const latestInformation = await Information.findOne().sort({ createdAt: -1 });
    if (!latestInformation) {
      const information = await Information.create({
        ...body,
        createdAt: new Date
      });
      await Logger.create({
        action: "create",
        informationId: information._id,
        description: "New information created",
        newData: information
      });
      return { status: 201, data: information };
    }
    const timeDifference = (new Date().getTime() - latestInformation.createdAt.getTime()) / (1000 * 60);
    if (timeDifference < 10) {
      const updatedInformation = await Information.findByIdAndUpdate(latestInformation._id, {
        ...body,
        updatedAt: new Date
      }, {
        new: true,
        runValidators: true
      });
      if (!updatedInformation) {
        throw new AppError(500, "Failed to update information");
      }
      await Logger.create({
        action: "update",
        informationId: updatedInformation._id,
        description: "Information updated (within 10 minutes)",
        oldData: latestInformation,
        newData: updatedInformation
      });
      return {
        status: 200,
        data: updatedInformation,
        message: "Information updated (within 10 minutes)"
      };
    }
    const newInformation = await Information.create({
      ...body,
      createdAt: new Date
    });
    await Logger.create({
      action: "create",
      informationId: newInformation._id,
      description: "New information created (after 10 minutes)",
      newData: newInformation
    });
    return {
      status: 201,
      data: newInformation,
      message: "New information created (after 10 minutes)"
    };
  },
  updateInformation: async ({ params, body }) => {
    const information = await Information.findByIdAndUpdate(params.id, {
      ...body,
      updatedAt: new Date
    }, {
      new: true,
      runValidators: true
    });
    if (!information) {
      throw new AppError(404, "Information not found");
    }
    await Logger.create({
      action: "update",
      informationId: information._id,
      description: "Information updated",
      oldData: information,
      newData: body
    });
    return { status: 200, data: information };
  },
  deleteInformation: async ({ params }) => {
    const information = await Information.findByIdAndDelete(params.id);
    if (!information) {
      throw new AppError(404, "Information not found");
    }
    await Logger.create({
      action: "delete",
      informationId: information._id,
      description: "Information deleted",
      oldData: information
    });
    return { status: 200, message: "Information deleted successfully" };
  }
};

// src/middlewares/validation.middleware.ts
var validateRequest = new Elysia().model({
  "user.create": t.Object({
    name: t.String({
      minLength: 2,
      maxLength: 50,
      error: "Name must be between 2 and 50 characters"
    }),
    email: t.String({
      format: "email",
      error: "Invalid email format"
    }),
    age: t.Number({
      minimum: 0,
      maximum: 120,
      error: "Age must be between 0 and 120"
    })
  }),
  "user.update": t.Object({
    name: t.Optional(t.String({
      minLength: 2,
      maxLength: 50
    })),
    email: t.Optional(t.String({
      format: "email"
    })),
    age: t.Optional(t.Number({
      minimum: 0,
      maximum: 120
    }))
  }),
  "information.update": t.Object({
    distance: t.Optional(t.Number({
      minimum: 0,
      maximum: 500
    })),
    level: t.Optional(t.Number({
      minimum: 0,
      maximum: 100
    })),
    temperature: t.Optional(t.String({
      minLength: 2,
      maxLength: 50
    })),
    timestamp: t.Optional(t.Date())
  }),
  "information.create": t.Object({
    distance: t.Number({
      minimum: 0,
      maximum: 500,
      error: "Distance must be between 0 and 500"
    }),
    level: t.Number({
      minimum: 0,
      maximum: 100,
      error: "Level must be between 0 and 100"
    }),
    temperature: t.String({
      minLength: 2,
      maxLength: 50,
      error: "Temperature must be between 2 and 50 characters"
    })
  })
});

// src/routes/information.route.ts
var informationRoutes = new Elysia({ prefix: "/api/information" }).use(validateRequest).get("/", async ({ request }) => {
  const response = await informationController.getAllInformation();
  return response;
}).get("/:id", async ({ request, params }) => {
  const response = await informationController.getInformationById({ params });
  return response;
}).post("/", async ({ request, body }) => {
  const response = await informationController.createInformation({ body });
  return response;
}, { body: "information.create" });

// src/controllers/logger.controller.ts
var loggerController = {
  getAllLogs: async () => {
    const logs = await Logger.find().sort({ timestamp: -1 }).populate("informationId", "title description");
    if (!logs.length) {
      throw new AppError(404, "No logs found");
    }
    return { status: 200, data: logs };
  },
  getLogByInformationId: async ({ params }) => {
    const logs = await Logger.find({ informationId: params.id }).sort({ timestamp: -1 }).populate("informationId", "title description");
    if (!logs.length) {
      throw new AppError(404, "No logs found for this information");
    }
    return { status: 200, data: logs };
  },
  getLogById: async ({ params }) => {
    const log = await Logger.findById(params.id).populate("informationId", "title description");
    if (!log) {
      throw new AppError(404, "Log not found");
    }
    return { status: 200, data: log };
  }
};

// src/routes/logger.route.ts
var loggerRoutes = new Elysia({ prefix: "/api/logs" }).use(validateRequest).get("/", async ({ request }) => {
  const response = await loggerController.getAllLogs();
  return response;
}).get("/:id", async ({ request, params }) => {
  const response = await loggerController.getLogByInformationId({ params });
  return response;
}).get("/log/:id", async ({ request, params }) => {
  const response = await loggerController.getLogById({ params });
  return response;
});

// src/index.ts
if (!process.env.DISCORD_WEBHOOK_URL) {
  console.error("DISCORD_WEBHOOK_URL is required!");
  process.exit(1);
}
var logger = new DiscordLogger(process.env.DISCORD_WEBHOOK_URL || "");
connectDB();
var app = new Elysia().use(swagger({
  documentation: {
    info: {
      title: "Elysia CRUD API",
      version: "1.0.0"
    },
    tags: [{ name: "users", description: "User operations" }]
  }
})).use(requestLogger).use(errorHandler).use(loggerRoutes).use(informationRoutes).use(new Elysia({ prefix: "/api" }).get("/", async () => {
  return {
    success: true,
    message: "Welcome to Elysia API"
  };
})).listen(3000);
logger.logInfo("Server started", {
  port: 3000,
  environment: "development"
});
console.log(`\uD83E\uDD8A Elysia server is running at ${app.server?.hostname}:${app.server?.port}`);
export {
  logger
};
